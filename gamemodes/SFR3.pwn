
/*

	Legacy Freeroam
			  						  
*/

/* INCLUDES */

#include <a_samp>
#include <a_http>
#include <YSI-Includes\YSI\y_iterate>
#include <streamer>
#include <sscanf2>
#include <zcmd>
//#include <dns>

#undef	MAX_PLAYERS
#define MAX_PLAYERS				(200)
#define	MAX_PING				(750)

new DB:Database, DB_Query[1800];

#define SERVER_VERSION	"4.2" 
#define HOSTNAME		"LEGACY FREEROAM [MY] "SERVER_VERSION""
#define GAMEMODETEXT	"Freeroam"
#define LANGUAGE		"English"
#define SERVER_WEB		"https://discord.me/projectlegacy"
#define SERVER_NAME		"Legacy Freeroam "SERVER_VERSION""
#define VERSION_DATE	"1/April/2023"
#define VERSION_DATE_1	"1.01.23"

#define ORANGE						"CC9900"
#define GREY						"999999"

#define COLOR_1		"B0E66A"
#define COLOR_2		"CCCCCC"
#define COLOR_3		"FF7A45"
#define COLOR_4		"CC9900"
#define COLOR_5		"99CC00"
#define COLOR_6		"CC0000"
#define COLOR_7		"C6D855"
#define COLOR_8		"FFCC00"
#define COLOR_9		"90C3D4"
#define COLOR_10	"90D496"
#define COLOR_11	"999999"
#define COLOR_12	"CCFF00"
#define COLOR_13	"996600"
#define COLOR_14	"FFFC33"
#define COLOR_15	"999900"

#define FR_VEHICLES_RESPAWN_TIME	(600) //10 minutos
#define MAX_TIMERS_PER_PLAYER		(20)
#define SPECIAL_ACTION_PISSING 		(68)
#define NECESSARY_TIME_REGISTER		(120) //900s = 15 minutos
#define MAX_HOUSES_PER_PLAYER		(5)
#define MAX_VEHICLES_PER_PLAYER		(5)
#define HidePlayerDialog(%1)		ShowPlayerDialog(%1, -1, 0, " ", " ", " ", " ")

#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define RELEASED(%0) \
	(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))

	
#define MAX_RESULTS	10
enum yt_result
{
	videoID[11 + 1],
	yt_title[100 + 1]
};

new YouTube[MAX_RESULTS][yt_result],
	playerdialog_video[MAX_PLAYERS][MAX_RESULTS][yt_result];
	
	
new FREEROAM_TIME = 12, FREEROAM_MINUTE;
enum 
{
	FREEROAM_VW,
	DM_VW = 10,
	FALL_VW = 20,
	ZOMBIE_WORLD = 30,
	GANGWAR_VW = 35,
	TDM_VW = 40,
	SHOOTER_VW = 45,
	RACE_VW = 47,
	NO_VW = 999
};

enum
{
	M_NONE,
	M_FREEROAM,
	M_GANGWAR,
	M_DERBY,
	M_DM,
	M_EVENT,
	M_FALL,
	M_ZOMBIE,
	M_DUEL,
	M_TDM,
	M_SHOOTER,
	M_RACE
};

enum
{
	GAME_FREEROAM,
	GAME_DEATHMATCH,
	GAME_DERBY,
	GAME_GANGWARS,
	GAME_FALL,
	GAME_ZOMBIE,
	GAME_TDM,
	GAME_SHOOTER,
	GAME_RACE,
	
	
	GAME_EVENT,
	GAME_DUEL
};

enum
{
	ADMIN_LEVEL_NOLEVEL,
	ADMIN_LEVEL_SAY,
	ADMIN_LEVEL_KICK,
	ADMIN_LEVEL_BAN,
	ADMIN_LEVEL_LEADER,
	ADMIN_LEVEL_OWNER
};

adminLevel(level)
{
	new rank[24];
	switch(level)
	{
		case ADMIN_LEVEL_NOLEVEL: rank = "Normal User";
		case ADMIN_LEVEL_SAY: rank = "Assistant";
		case ADMIN_LEVEL_KICK: rank = "Staff";
		case ADMIN_LEVEL_BAN: rank = "Admin";
		case ADMIN_LEVEL_LEADER: rank = "Leader";
		case ADMIN_LEVEL_OWNER: rank = "Owner";
		default: format(rank, 24, "undefined (%d)", level);
	}
	return rank;
}

/* FerrisWheel */
new Ferriswheel_Base,
	gWheelTransAlternate,
	Float:gCurrentTargetYAngle,
	Float:FERRIS_SPEED = 0.01;


/* DUEL SYSTEM */

enum DUEL_LIST_INFO
{
	DUEL_LIST_NAME[24],
	DUEL_LIST_INTERIOR,
	Float:DUEL_LIST_X1,
	Float:DUEL_LIST_Y1,
	Float:DUEL_LIST_Z1,
	Float:DUEL_LIST_A1,
	Float:DUEL_LIST_X2,
	Float:DUEL_LIST_Y2,
	Float:DUEL_LIST_Z2,
	Float:DUEL_LIST_A2
};

new DUEL_LIST[][DUEL_LIST_INFO] =
{
	{"Riot Sand", 1, 1406.687011, -1.380011, 1000.921447, 130.106964, 1366.083007, -41.842506, 1000.920837, 313.721954},
	{"Skate Park", 0, 1907.971801, -1389.462768, 10.359375, 143.218124, 1885.880859, -1420.873168, 10.359375, 323.363098},
	{"Green Park", 0, 1190.767822, -2037.349975, 69.007812, 88.697654, 1164.321044, -2036.833374, 69.007812, 266.986022},
	{"Truck Factory", 0, 2208.915771, -2233.619873, 13.546875, 136.301254, 2183.568603, -2260.392578, 13.403044, 224.325332},
	{"Store", 0, 2164.102539, -2259.749267, 13.302728, 46.976974, 2149.769775, -2257.705810, 13.298824, 134.687698},
	{"Tierra", 0, 2600.537597, -962.422424, 80.960769, 82.383934, 2556.715820, -958.507690, 82.725616, 253.442108},
	{"Troncos", 0, -721.113342, -106.681732, 68.623428, 210.538436, -760.210205, -115.279617, 65.782470, 209.261734},
	{"Hospital San Fierro", 0, -2629.350341, 488.203369, 47.976562, 35.986820, -2644.882080, 566.606811, 48.653717, 184.171539},
	{"Ship San Fierro", 0, -2418.597900, 1529.007446, 31.859375, 270.965637, -2395.993408, 1550.305664, 31.859375, 182.628234},
	{"Desert Bridge", 0, -1056.065917, 2145.097167, 87.330474, 11.546472, -1076.770751, 2244.878906, 88.148185, 191.064834},
	{"Desert Mountain", 0, -772.500488, 2422.735595, 157.087417, 92.700714, -809.594787, 2430.783447, 156.977294, 232.112014},
	{"Skycraper Los Santos", 0, 1556.243896, -1353.716308, 329.460937, 89.277290, 1532.405273, -1353.191528, 329.453460, 269.277282},
	{"Cemeteri Los Santos", 0, 874.418090, -1102.001708, 24.296875, 270.072326, 914.437316, -1102.443725, 24.296875, 89.903953},
	{"Dock Los Santos", 0, 356.433563, -2026.769042, 7.835937, 270.049011, 377.114685, -2054.631835, 8.015625, 4.966488},
	{"Ship Los Santos", 0, 2838.428466, -2341.207275, 19.205837, 179.494857, 2830.331787, -2331.291992, 12.042411, 269.132232},
	{"Puente 2 Los Santos", 0, 2912.093505, -1594.575683, 13.493452, 253.802215, 2827.592529, -1583.745971, 14.060934, 72.693862}
};

enum DUEL_WEAPONS_INFO
{
	WEAPON_PACKNAME[64],
	WEAPON_ID1, WEAPON_AMMO1,
	WEAPON_ID2, WEAPON_AMMO2,
	WEAPON_ID3, WEAPON_AMMO3,
	WEAPON_ID4, WEAPON_AMMO4,
	WEAPON_ID5, WEAPON_AMMO5
};

new DUEL_WEAPONS[][DUEL_WEAPONS_INFO] =
{
	{"Fast Weapon (MP5, M4)", 29, 500,  31, 500,  0, 0,  0, 0,  0, 0},
	{"Slow Weapon (9mm, Combat Shotgun, Ak-47)", 22, 500,  27, 500,  30, 500,  0, 0,  0, 0},
	{"Strong WEapon (Desert Eagle, Sawnoff Shotgun, TEC-9)", 24, 500,  26, 500,  32, 500,  0, 0,  0, 0},
	{"Starter Pack (9mm, Cuchillo)", 22, 15,  4, 1,  0, 0,  0, 0,  0, 0},
	{"Advanced Pack (Granada, 9mm silenciada, Country Rifle)", 16, 10,  23, 500,  33, 100,  0, 0,  0, 0},
	{"Unarmed", 0, 0,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Chainsaw", 9, 1,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Pala", 9, 1,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Bate", 5, 1,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Katana", 8, 1,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Cuchillo", 4, 1,  0, 0,  0, 0,  0, 0,  0, 0},
	{"9mm", 22, 500,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Granadas", 16, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Cocktail Molotov", 18, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Desert Eagle", 24, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Escopeta", 25, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Escopeta recortada", 26, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Escopeta de combate", 27, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Micro SMG/Uzi", 28, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"MP5", 29, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Ak-47", 30, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"M4", 31, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Tec-9", 32, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Sniper Rifle", 34, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Lanzacohetes", 35, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Lanzacohetes avanzado", 36, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Lanzallamas", 37, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Spraycan", 41, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Extintor", 42, 200,  0, 0,  0, 0,  0, 0,  0, 0},
	{"Camera", 43, 200,  0, 0,  0, 0,  0, 0,  0, 0}
};

enum DUEL_INFO
{
	DL_RUNNING,
	DL_DUEL_LIST_ID,
	DL_DUEL_WEAPON_ID,
	DL_PLAYER_ONE,
	DL_PLAYER_TWO,
	DL_BET,
	DL_WORLD
};

new DLI[MAX_PLAYERS][DUEL_INFO];

/* DUEL SYSTEM */

new Vehiclescons[][] =
{
	{400, 80000, 70},
	{401, 33000, 30},
	{402, 90000, 80},
	{404, 30000, 25},
	{405, 50000, 45},
	{410, 25000, 20},
	{411, 100000, 120},
	{412, 45000, 50},
	{413, 50000, 50},
	{415, 95000, 90},
	{418, 47000, 40},
	{417, 60000, 55},
	{421, 55000, 50},
	{422, 35000, 30},
	{426, 50000, 55},
	{429, 75000, 70},
	{436, 30000, 30},
	{439, 55000, 45},
	{440, 60000, 55},
	{444, 200000, 500},
	{445, 40000, 35},
	{448, 10000, 10},
	{451, 140000, 250},
	{458, 28000, 25},
	{461, 20000, 25},
	{462, 12000, 10},
	{463, 17000, 20},
	{466, 35000, 30},
	{467, 40000, 35},
	{468, 18000, 15},
	{471, 20000, 20},
	{474, 35000, 30},
	{475, 40000, 40},
	{477, 98000, 95},
	{478, 25000, 20},
	{479, 45000, 45},
	{480, 50000, 50},
	{481, 8000, 10},
	{482, 60000, 65},
	{483, 50000, 50},
	{487, 500000, 1500},
	{489, 85000, 80},
	{491, 40000, 35},
	{492, 50000, 45},
	{494, 100000, 2000},
	{495, 100000, 2000},
	{496, 55000, 55},
	{498, 60000, 65},
	{499, 70000, 70},
	{500, 65000, 60},
	{506, 180000, 3000},
	{507, 55000, 50},
	{509, 8000, 10},
	{510, 9000, 12},
	{516, 48000, 45},
	{517, 65000, 70},
	{518, 60000, 55},
	{521, 25000, 25},
	{522, 28000, 25},
	{526, 50000, 50},
	{527, 40000, 35},
	{529, 45000, 45},
	{533, 70000, 65},
	{534, 70000 ,70},
	{535, 75000, 75},
	{536, 50000, 55},
	{540, 55000, 60},
	{541, 105000, 800},
	{542, 35000, 30},
	{543, 48000, 45},
	{545, 70000, 75},
	{546, 45000, 40},
	{547, 55000, 55},
	{549, 30000, 20},
	{550, 70000, 65},
	{554, 50000, 40},
	{554, 100000, 800},
	{555, 60000, 60},
	{556, 250000, 2500},
	{558, 45000, 45},
	{559, 90000, 150},
	{560, 100000, 250},
	{561, 40000, 40},
	{562, 90000, 200},
	{565, 80000, 100},
	{566, 70000, 70},
	{567, 65000, 70},
	{575, 50000, 45},
	{576, 50000, 50},
	{579, 80000, 100},
	{580, 50000, 50},
	{581, 16000, 20},
	{585, 45000, 40},
	{587, 60000, 60},
	{589, 65000, 70},
	{600, 50000, 45},
	{602, 65000, 60},
	{603, 75000, 70}
};

new LSR_TUNING_NEONS[][][] =
{
	{"No", 0},
	{"Red", 5000},
	{"Blue", 5000},
	{"Green", 5000},
	{"Yellow", 5000},
	{"Pink", 5000},
	{"White", 5000}
};

new VEHICLE_NEON[MAX_VEHICLES][2],
	VEHICLE_SIREN[MAX_VEHICLES];

#define RED_NEON    18647
#define BLUE_NEON   18648
#define GREEN_NEON  18649
#define YELLOW_NEON 18650
#define PINK_NEON   18651
#define WHITE_NEON  18652

new Float:var_siren[][] =
{
	{0.000000, -0.239959, 0.840003}, //400
	{0.000000, -0.451003, 0.779128}, //401
	{0.000000, -0.640151, 0.743813}, //402
	{0.002196, -0.610167, 2.134906}, //403
	{0.000000, -0.404036, 0.957668}, //404
	{0.000000, -0.399825, 0.755366}, //405
	{0.000000, 4.363051, 1.106600}, //406
	{0.0, 0.0, 0.0}, //407
	{0.000000, 2.672179, 1.082697}, //408
	{0.000000, -0.379745, 0.850350}, //409
	{0.000000, -0.391234, 0.904406}, //410
	{0.000000, -0.139739, 0.702440}, //411
	{0.000000, -0.298339, 0.689697}, //412
	{0.000000, 0.576857, 1.100018}, //413
	{0.000000, 0.580260, 2.359991}, //414
	{0.000000, -0.515640, 0.639225}, //415
	{0.0, 0.0, 0.0}, //416
	{0.0, 0.0, 0.0}, //417
	{0.000000, 0.120346, 1.020164}, //418
	{0.000000, -0.569732, 0.688498}, //419
	{0.000000, 0.160324, 0.813396}, //420
	{0.000000, -0.259734, 0.713948}, //421
	{0.000000, 0.048354, 0.795632}, //422
	{0.000000, 1.267974, 1.440829}, //423
	{0.000000, -0.155807, 0.919970}, //424
	{0.0, 0.0, 0.0}, //425
	{0.000000, -0.339691, 0.841637}, //426
	{0.0, 0.0, 0.0}, //427
	{0.000000, 0.790328, 1.379987}, //428
	{0.000000, -1.289626, 0.532239}, //429
	{0.0, 0.0, 0.0}, //430
	{0.000000, 4.650404, 2.145888}, //431
	{0.0, 0.0, 0.0}, //432
	{0.000000, 1.270385, 1.694254}, //433
	{0.000000, -0.363357, 0.751703}, //434
	{0.0, 0.0, 0.0}, //435
	{0.000000, -0.489104, 0.873771}, //436
	{0.000000, 4.200393, 2.039987}, //437
	{0.000000, 0.457305, 0.787222}, //438
	{0.000000, -0.499664, 0.740000}, //439
	{0.000000, 0.458938, 1.224267}, //440
	{0.0, 0.0, 0.0}, //441
	{0.000000, -0.027053, 0.921773}, //442
	{0.0, 0.0, 0.0}, //443
	{0.000000, -0.039535, 1.689272}, //444
	{0.000000, -0.369598, 0.822878}, //445
	{0.0, 0.0, 0.0}, //446
	{0.0, 0.0, 0.0}, //447
	{0.0, 0.0, 0.0}, //448
	{0.0, 0.0, 0.0}, //449
	{0.0, 0.0, 0.0}, //450
	{0.000000, -0.563934, 0.598007}, //451
	{0.0, 0.0, 0.0}, //452
	{0.0, 0.0, 0.0}, //453
	{0.0, 0.0, 0.0}, //454
	{0.000000, 1.170364, 1.669468}, //455
	{0.000000, 1.338011, 1.232071}, //456
	{0.000000, 0.020232, 1.285405}, //457
	{0.000000, -0.300094, 0.724538}, //458
	{0.000000, 0.344740, 1.135262}, //459
	{0.0, 0.0, 0.0}, //460
	{0.0, 0.0, 0.0}, //461
	{0.0, 0.0, 0.0}, //462
	{0.0, 0.0, 0.0}, //463
	{0.0, 0.0, 0.0}, //464
	{0.0, 0.0, 0.0}, //465
	{0.000000, -0.219420, 0.887385}, //466
	{0.000000, -0.219299, 0.836098}, //467
	{0.0, 0.0, 0.0}, //468
	{0.0, 0.0, 0.0}, //469
	{0.000000, -0.223663, 1.074869}, //470
	{0.0, 0.0, 0.0}, //471
	{0.0, 0.0, 0.0}, //472
	{0.0, 0.0, 0.0}, //473
	{0.000000, -0.480055, 0.810613}, //474
	{0.000000, -0.283782, 0.715839}, //475
	{0.0, 0.0, 0.0}, //476
	{0.000000, -0.483092, 0.711534}, //477
	{0.000000, 0.280028, 0.888418}, //478
	{0.000000, -0.404540, 0.969071}, //479
	{0.000000, -0.993179, 0.657739}, //480
	{0.0, 0.0, 0.0}, //481
	{0.000000, 0.546904, 0.930019}, //482
	{0.000000, 1.468016, 0.992730}, //483
	{0.0, 0.0, 0.0}, //484
	{0.0, 0.0, 0.0}, //485
	{0.000000, -0.322447, 2.239214}, //486
	{0.0, 0.0, 0.0}, //487
	{0.0, 0.0, 0.0}, //488
	{0.000000, -0.321455, 1.089980}, //489
	{0.000000, 0.182022, 1.089980}, //490
	{0.000000, -0.669601, 0.726724}, //491
	{0.000000, -0.369460, 0.855154}, //492
	{0.0, 0.0, 0.0}, //493
	{0.000000, -0.570174, 0.713196}, //494
	{-0.000609, -0.455642, 0.999161}, //495
	{0.000000, -0.478942, 0.832798}, //496
	{0.0, 0.0, 0.0}, //497
	{0.000000, 0.750473, 2.129985}, //498
	{0.000000, 0.205672, 1.950901}, //499
	{0.000000, -0.247374, 0.964847}, //500
	{0.0, 0.0, 0.0}, //501
	{0.000000, -0.233595, 0.761187}, //502
	{0.000000, -0.478668, 0.783775}, //503
	{0.000000, -0.129256, 0.893329}, //504
	{0.000000, -0.131285, 1.089984}, //505
	{0.000000, -0.449584, 0.576864}, //506
	{0.000000, -0.452086, 0.803644}, //507
	{0.000000, 1.279814, 1.678074}, //508
	{0.0, 0.0, 0.0}, //509
	{0.0, 0.0, 0.0}, //510
	{0.0, 0.0, 0.0}, //511
	{0.0, 0.0, 0.0}, //512
	{0.0, 0.0, 0.0}, //513
	{0.000000, -0.300415, 1.520339}, //514
	{0.0000, -0.2500, 1.4203}, //515
	{0.000000, -0.279280, 0.804795}, //516
	{0.000000, -0.279662, 0.796788}, //517
	{0.001707, -0.279875, 0.736166}, //518
	{0.0, 0.0, 0.0}, //519
	{0.0, 0.0, 0.0}, //520
	{0.0, 0.0, 0.0}, //521
	{0.0, 0.0, 0.0}, //522
	{0.0, 0.0, 0.0}, //523
	{0.048094, 1.473175, 0.906041}, //524
	{0.0, 0.0, 0.0}, //525
	{0.000000, -0.409483, 0.643119}, //526
	{0.000000, -0.138977, 0.868055}, //527
	{0.000000, -0.138885, 1.069983}, //528
	{0.000000, -0.143279, 0.898598}, //529
	{0.000000, -0.214660, 1.518231}, //530
	{0.000000, -1.121642, 0.456609}, //531
	{0.0, 0.0, 0.0}, //532
	{0.0, 0.0, 0.0}, //533
	{0.000000, -0.247161, 0.616352}, //534
	{0.000000, -0.252882, 0.812080}, //535
	{0.0, 0.0, 0.0}, //536
	{0.0, 0.0, 0.0}, //537
	{0.0, 0.0, 0.0}, //538
	{0.0, 0.0, 0.0}, //539
	{0.000000, -0.252211, 0.687619}, //540
	{-0.000243, -0.254485, 0.636897}, //541
	{0.000000, -0.379974, 0.820002}, //542
	{0.000000, 0.090788, 0.878934}, //543
	{0.000000, 2.420042, 1.448989}, //544
	{0.000000, -0.569899, 0.780000}, //545
	{0.000000, -0.569685, 0.818283}, //546
	{0.000000, -0.347609, 0.889823}, //547
	{0.0, 0.0, 0.0}, //548
	{0.000487, -0.088577, 0.716690}, //549
	{0.000000, -0.314269, 0.713304}, //550
	{0.000000, -0.390868, 0.921875}, //551
	{0.000000, 0.657974, 1.293419}, //552
	{0.0, 0.0, 0.0}, //553
	{0.000000, -0.029890, 1.011299}, //554
	{0.001219, -0.389221, 0.563951}, //555
	{0.000000, 0.150039, 1.661839}, //556
	{0.000000, 0.030090, 1.657943}, //557
	{0.000000, -0.493133, 0.850821}, //558
	{0.000000, -0.489912, 0.716486}, //559
	{0.000000, -0.212188, 0.831607}, //560
	{-0.000121, -0.208998, 0.832014}, //561
	{0.000000, -0.133818, 0.765760}, //562
	{0.0, 0.0, 0.0}, //563
	{0.0, 0.0, 0.0}, //564
	{0.000000, -0.385268, 0.642476}, //565
	{0.000000, -0.376311, 0.859454}, //566
	{0.0, 0.0, 0.0}, //567
	{0.000000, -0.270660, 0.754558}, //568
	{0.0, 0.0, 0.0}, //569
	{0.0, 0.0, 0.0}, //570
	{0.0, 0.0, 0.0}, //571
	{0.0, 0.0, 0.0}, //572
	{0.000000, 2.321563, 1.539306}, //573
	{0.0, 0.0, 0.0}, //574
	{0.0, 0.0, 0.0}, //575
	{0.000000, -0.117233, 0.903282}, //576
	{0.0, 0.0, 0.0}, //577
	{0.002318, 3.280502, 1.383170}, //578
	{0.000487, -0.436035, 1.238031}, //579
	{0.000975, -0.269805, 1.019207}, //580
	{0.0, 0.0, 0.0}, //581
	{0.000000, 0.489531, 1.145408}, //582
	{0.000000, -0.755843, 1.566974}, //583
	{0.0, 0.0, 0.0}, //584
	{0.000000, -0.414214, 1.007261}, //585
	{0.0, 0.0, 0.0}, //586
	{0.000000, -0.634185, 0.725695}, //587
	{0.0, 0.0, 0.0}, //588
	{0.000000, -0.409835, 1.054774}, //589
	{0.0, 0.0, 0.0}, //590
	{0.0, 0.0, 0.0}, //591
	{0.0, 0.0, 0.0}, //592
	{0.0, 0.0, 0.0}, //593
	{0.0, 0.0, 0.0}, //594
	{0.0, 0.0, 0.0}, //595
	{0.0, 0.0, 0.0}, //596
	{0.0, 0.0, 0.0}, //597
	{0.0, 0.0, 0.0}, //598
	{0.0, 0.0, 0.0}, //599
	{0.000000, -0.139541, 0.762252}, //600
	{0.0, 0.0, 0.0}, //601
	{0.000000, -0.493423, 0.703468}, //602
	{0.000000, -0.490188, 0.689213}, //603
	{0.000000, -0.229660, 0.861217}, //604
	{0.000000, -0.007583, 0.878809}, //605
	{0.0, 0.0, 0.0}, //606
	{0.0, 0.0, 0.0}, //607
	{0.0, 0.0, 0.0}, //608
	{0.000000, 0.850233, 2.125411}, //609
	{0.0, 0.0, 0.0}, //610
	{0.0, 0.0, 0.0} //611
};

new Float:g_anltv_VehicleData[212][] = {
	{-0.924999, 0.009999, -0.674999},
	{-0.979999, 0.074999, -0.489999},
	{-1.034999, -0.029999, -0.579999},
	{-0.884999, 1.834998, -1.099999},
	{-0.839999, -0.064999, -0.419999},
	{-0.914999, 0.000000, -0.534999},
	{-1.129999, 0.354999, -1.219999},
	{-1.214999, 0.125000, -0.759999},
	{-0.664999, 0.709999, -0.889999},
	{-0.914999, -0.294999, -0.474999},
	{-0.879999, 0.000000, -0.389999},
	{-0.969999, 0.004999, -0.559999},
	{-0.994999, -0.154999, -0.569999},
	{-0.919999, -0.069999, -0.719999},
	{-0.759999, -0.469999, -0.524999},
	{-0.949999, -0.009999, -0.524999},
	{-1.259999, -0.604999, -0.664999},
	{-2.255004, 0.859999, -0.124999},
	{-1.004999, 0.089999, -0.829999},
	{-0.934999, -0.009999, -0.584999},
	{-0.954999, -0.009999, -0.444999},
	{-0.929999, -0.029999, -0.589999},
	{-0.889999, 0.009999, -0.609999},
	{-0.999999, 0.164999, -0.714999},
	{-0.739999, 0.039999, -0.234999},
	{-0.639999, 2.475009, -0.789999},
	{-0.969999, 0.000000, -0.464999},
	{-1.124999, -0.714999, -0.734999},
	{-1.124999, 0.054999, -0.759999},
	{-0.844999, 0.004999, -0.474999},
	{0.0, 0.0, 0.0},
	{-1.304998, 2.300005, -0.714999},
	{0.0, 0.0, 0.0},
	{-0.579999, 0.994999, -0.874999},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{-0.859999, -0.024999, -0.489999},
	{-1.314998, 2.245003, -0.724999},
	{-0.969999, -0.034999, -0.674999},
	{-0.884999, 0.034999, -0.644999},
	{-0.914999, -0.045000, -0.899999},
	{0.0, 0.0, 0.0},
	{-1.004999, -0.074999, -0.604999},
	{-0.809999, 2.770015, -1.174999},
	{-1.064999, 0.000000, 0.135000},
	{-0.949999, 0.000000, -0.519999},
	{0.0, 0.0, 0.0},
	{-1.004999, 0.259999, -0.769999},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{-0.984999, -0.194999, -0.519999},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{-0.579999, 0.979999, -0.859999},
	{-0.764999, -0.179999, -0.464999},
	{0.0, 0.0, 0.0},
	{-0.959999, -0.039999, -0.594999},
	{-0.919999, -0.069999, -0.719999},
	{-1.399998, 0.554999, -1.819998},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{-0.989999, -0.064999, -0.489999},
	{-0.989999, -0.044999, -0.484999},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{-1.119999, -0.149999, -0.359999},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{-0.994999, -0.064999, -0.544999},
	{-0.904999, -0.054999, -0.549999},
	{0.0, 0.0, 0.0},
	{-0.979999, 0.019999, -0.514999},
	{-0.804999, 0.064999, -0.519999},
	{-0.854999, 0.090000, -0.454999},
	{-0.879999, 0.000000, -0.489999},
	{0.0, 0.0, 0.0},
	{-0.989999, 0.000000, -0.759999},
	{-0.834999, -0.149999, -0.744999},
	{0.0, 0.0, 0.0},
	{-0.629999, 0.164999, -0.374999},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{-1.019999, 0.110000, -0.679999},
	{-1.054999, 0.125000, -0.604999},
	{-0.874999, -0.009999, -0.569999},
	{-0.909999, 0.000000, -0.459999},
	{0.0, 0.0, 0.0},
	{-0.909999, -0.199999, -0.639999},
	{-1.024999, 0.184999, -0.809999},
	{-0.854999, 0.029999, -0.469999},
	{0.0, 0.0, 0.0},
	{-1.149999, 0.269999, -0.654999},
	{-0.969999, -1.404998, -0.199999},
	{-0.969999, 0.189999, -0.574999},
	{0.0, 0.0, 0.0},
	{-0.909999, 0.029999, -0.639999},
	{-0.909999, -0.184999, -0.639999},
	{-0.989999, -0.059999, -0.494999},
	{-1.019999, 0.110000, -0.679999},
	{-0.904999, -0.249999, -0.509999},
	{-1.084999, -0.024999, -0.589999},
	{-1.334998, -0.424999, -0.979999},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{-0.969999, 1.669998, -1.174999},
	{-1.454998, 0.439999, -1.854998},
	{-0.989999, 0.024999, -0.584999},
	{-0.959999, 0.004999, -0.554999},
	{-1.049999, 0.110000, -0.439999},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{-0.689999, 1.489998, -1.319998},
	{-1.054999, 0.499999, -0.329999},
	{-0.899999, 0.000000, -0.564999},
	{-0.944999, 0.154999, -0.419999},
	{-0.924999, 0.059999, -0.529999},
	{-0.934999, -0.110000, -0.429999},
	{0.0, 0.0, 0.0},
	{-0.144999, 0.314999, -0.444999},
	{0.0, 0.0, 0.0},
	{-0.924999, -0.034999, -0.479999},
	{-0.984999, 0.164999, -0.564999},
	{-1.069999, -0.034999, -0.569999},
	{-0.954999, -0.019999, -0.579999},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{-1.004999, -0.049999, -0.019999},
	{-1.024999, -0.090000, -0.639999},
	{-0.904999, 0.000000, -0.414999},
	{-0.894999, 0.014999, -0.539999},
	{-0.904999, 0.009999, -0.409999},
	{-1.089999, 0.000000, -0.709999},
	{-0.939999, -0.029999, -0.564999},
	{-1.039999, -0.100000, -0.474999},
	{-0.884999, 0.059999, -0.479999},
	{-1.769998, 1.484998, -1.774998},
	{-0.949999, 0.105000, -0.439999},
	{-1.089999, -0.059999, -0.554999},
	{-0.964999, 0.004999, -0.564999},
	{-1.034999, 0.749999, -0.254999},
	{0.0, 0.0, 0.0},
	{-1.109999, 0.009999, -0.534999},
	{-0.754999, 0.000000, -0.464999},
	{-1.119999, 0.000000, 0.184999},
	{-1.129999, 0.044999, 0.074999},
	{-0.894999, -0.089999, -0.374999},
	{-0.964999, 0.000000, -0.444999},
	{-1.004999, 0.054999, -0.414999},
	{-0.919999, 0.130000, -0.574999},
	{-0.909999, 0.120000, -0.404999},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{-0.824999, 0.000000, -0.414999},
	{-0.989999, -0.049999, -0.479999},
	{-1.089999, 0.309999, -0.609999},
	{-0.334999, 0.100000, -0.374999},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{-0.924999, 0.004999, -0.334999},
	{-1.019999, -0.140000, -0.419999},
	{0.0, 0.0, 0.0},
	{-1.429998, -0.649999, -0.879999},
	{-1.014999, 0.000000, -0.484999},
	{-1.089999, 0.014999, -0.474999},
	{0.0, 0.0, 0.0},
	{-0.984999, -0.194999, -0.709999},
	{-0.674999, 0.259999, 0.130000},
	{0.0, 0.0, 0.0},
	{-1.019999, -0.009999, -0.354999},
	{0.0, 0.0, 0.0},
	{-1.009999, -0.064999, -0.534999},
	{-1.374998, 0.000000, -0.664999},
	{-0.909999, 0.000000, -0.359999},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{-0.974999, 0.000000, -0.469999},
	{-0.969999, 0.000000, -0.464999},
	{-1.004999, -0.014999, -0.414999},
	{-1.019999, 0.115000, -0.684999},
	{-0.959999, 0.204999, -0.499999},
	{0.0, 0.0, 0.0},
	{-1.024999, 0.000000, -0.549999},
	{-0.954999, 0.034999, -0.629999},
	{-0.989999, -0.064999, -0.489999},
	{-0.904999, 0.009999, -0.409999},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{-1.149999, 0.269999, -0.654999},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0}
};

enum 
{
	TP_TYPE_CITY,
	TP_TYPE_STUNTS,
	TP_TYPE_DM,
	TP_TYPE_JUMP,
	TP_TYPE_PARKOUR,
	TP_TYPE_BASEJUMP,
	TP_TYPE_DRIFT,
	TP_TYPE_INTERIOR,
	TP_TYPE_OTHER,
	TP_TYPE_CARTUNING
};

enum TP_INFO
{
	TP_Type,
	TP_Name[24],
	TP_Command[24],
	Float:TP_X,
	Float:TP_Y,
	Float:TP_Z,
	Float:TP_Angle, 
	TP_Interior,
	TP_VirtualWorld,
	TP_Freeze,
	TP_AllowCarTP,
	TP_CarModelid
};

new TI[][TP_INFO] = {
	
	{TP_TYPE_CITY, "Los Santos", "/ls", 288.515350, -1782.124755, 4.480312, 180.0, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_CITY, "San Fierro", "/sf", -1984.807861, 260.942871, 35.223373, 0.0, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_CITY, "Las Venturas", "/lv", 2020.138427, 1545.115722, 10.893072, 270.0, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_CITY, "Libert City", "/lc", -743.484863, 502.881072, 1372.125000, 250.0, 1, FREEROAM_VW, false, true, 0},
	{TP_TYPE_CITY, "Angel Pine", "/ap", -2099.60, -2516.60, 30.57, 0.0, 0, FREEROAM_VW, false, true, 0},
	{TP_TYPE_CITY, "Dillimore", "/dill", 699.35, -453.97, 16.34, 180.0, 0, FREEROAM_VW, false, true, 0},
	{TP_TYPE_CITY, "Fort Carson", "/fc", 159.65, 1179.54, 15.04, 180.0, 0, FREEROAM_VW, false, true, 0},
	{TP_TYPE_CITY, "Palomino Creek", "/palc", 2282.71, 28.71, 26.48, 270.0, 0, FREEROAM_VW, false, true, 0},
	
	{TP_TYPE_STUNTS, "Airport Las Venturas", "/lva", 1628.870727, 1191.078002, 10.860000, 40.733715, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_STUNTS, "Airport Abandoned", "/aa", 374.283721, 2536.765869, 16.769062, 180.0, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_STUNTS, "Airport San Fierro", "/sfa", -1117.064208, -201.420608, 14.620312, 68.210289, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_STUNTS, "Tube Zone 1", "/tb1", 1411.325317, 2773.905029, 10.929991, 63.076362, 0, FREEROAM_VW, false, false, 415},
	{TP_TYPE_STUNTS, "Tube Zone 2", "/tb2", -2078.941406, 1415.736938, 7.100666, 359.132507, 0, FREEROAM_VW, false, true, 411},
	{TP_TYPE_STUNTS, "Tube Zone 3", "/tb3", -2824.066650, 1306.986938, 7.101562, 46.759529, 0, FREEROAM_VW, false, true, 415},
	{TP_TYPE_STUNTS, "Tube Zone 4", "/tb4", -3290.503662, 573.468566, 2.023799, 91.903327, 0, FREEROAM_VW, true, true, 411},
	{TP_TYPE_STUNTS, "Chilliad", "/chill", -2318.737060, -1640.964599, 483.703125, 260.0, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_STUNTS, "Stunt Zone 1", "/sz1", 232.002059, 2480.479492, 117.770401, 90.0, 0, FREEROAM_VW, true, true, 0},
	{TP_TYPE_STUNTS, "Tube 1", "/tb5", -2260.253417, 552.051330, 35.019851, 180.0, 0, FREEROAM_VW, false, true, 502},
	{TP_TYPE_STUNTS, "Tunel", "/tn1", -1267.518188, -476.779968, 14.148437, 130.0, 0, FREEROAM_VW, false, true, 596},
	{TP_TYPE_STUNTS, "Espiral LV", "/espiral", 1806.269287, 853.021179, 220.462646, 0.0, 0, FREEROAM_VW, true, true, 411},
	{TP_TYPE_STUNTS, "Cannon", "/cannon", 1978.150756, 1893.191650, 121.742698, 210.0, 0, FREEROAM_VW, false, true, 411},
	{TP_TYPE_STUNTS, "Chilliad Coaster", "/cc",  -2252.754394, -1713.224853, 479.730102, 210.0, 0, FREEROAM_VW, false, true, 411},
	{TP_TYPE_STUNTS, "Half Pipe", "/hp", 2879.899902, -320.858123, 6.535143, 269.434783, 0, FREEROAM_VW, true, true, 434},
	{TP_TYPE_STUNTS, "Helix", "/helix", 2157.532958, 2191.067138, 282.207763, 181.836700, 0, FREEROAM_VW, true, true, 411},
	{TP_TYPE_STUNTS, "Loop 1", "/loop1", -1245.699218, 1674.432495, 1114.468383, 183.516372, 0, FREEROAM_VW, true, true, 411},
	{TP_TYPE_STUNTS, "Loop 2", "/loop2", 1431.955444, 2708.113769, 740.973510, 179.488311, 0, FREEROAM_VW, true, true, 545},
	{TP_TYPE_STUNTS, "Pipe", "/pipe", 258.770660, 2912.594482, 5.261434, 8.375567, 0, FREEROAM_VW, false, true, 411},
	{TP_TYPE_STUNTS, "Roller Coaster 1", "/rc1", 836.790100, -2062.316650, 12.594264, 180.527877, 0, FREEROAM_VW, false, true, 411},
	{TP_TYPE_STUNTS, "Roller Coaster 2", "/rc2", -1943.592041, -1028.531982, 53.076862, 1.289753, 0, FREEROAM_VW, false, true, 411},
	{TP_TYPE_STUNTS, "Water Coaster 1", "/wc1", -1936.023437, -1678.903320, 834.037841, 358.363037, 0, 2, true, true, 411},
	{TP_TYPE_STUNTS, "Water Coaster 2", "/wc2", 3157.702880, 2821.431152, 791.800842, 180.813995, 0, FREEROAM_VW, true, true, 451},
	{TP_TYPE_STUNTS, "Disco Road", "/dr", 1027.107177, -349.684783, 74.218116, 179.999984, 0, FREEROAM_VW, false, true, 407},
	
	{TP_TYPE_DM, "DM No Escape", "/dm1", -2051.905029, -188.292617, 35.320312, 178.987396, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_DM, "DM 2", "/dm2", -1626.186157, 113.150215, -11.163350, 314.662048, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_DM, "DM 3", "/dm3", -1464.047119, 390.071258, 7.187500, 269.228363, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_DM, "DM Farm", "/dm4", -47.609905, 29.813682, 3.117187, 340.018951, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_DM, "DM Ship", "/dm5", -2312.087158, 1546.786010, 18.773437, 89.663513, 0, FREEROAM_VW, false, false, 0},

	{TP_TYPE_PARKOUR, "Parkour 1", "/pk1", 1364.500732, -1897.699340, 435.792663, 270.0, 0, FREEROAM_VW, true, false, 0},
	{TP_TYPE_PARKOUR, "Parkour 2", "/pk2", -3950.0, 1548.0, 4.8, 0.0, 0, FREEROAM_VW, true, false, 0},
	{TP_TYPE_PARKOUR, "Pakour Hay", "/pkh", -1765.789306, 845.476318, 24.734375, 359.684722, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_PARKOUR, "Quad Parkour", "/quadpk", 2939.246337, -2051.402099, 3.029521, 271.947845, 0, FREEROAM_VW, false, true, 471},
	{TP_TYPE_PARKOUR, "Sanchez Parkour", "/sanchezpk", -1019.164245, -1043.438964, 128.885971, 31.209333, 0, FREEROAM_VW, false, true, 468},
	{TP_TYPE_PARKOUR, "Monster Parkour", "/monsterpk", -1465.259399, 1143.566284, 7.561144, 269.471801, 0, FREEROAM_VW, false, true, 556},
	{TP_TYPE_PARKOUR, "BMX Parkour", "/bmxpk", -1922.949218, 457.161804, 56.313117, 270.419311, 0, FREEROAM_VW, false, true, 481},
	{TP_TYPE_PARKOUR, "Bike Parkour1", "/bikepk1", -2232.587402, 945.976074, 96.694290, 358.154235, 0, FREEROAM_VW, false, true, 522},
	{TP_TYPE_PARKOUR, "Bike Parkour2", "/bikepk2", -2298.494384, 534.393920, 44.301013, 87.531791, 0, FREEROAM_VW, false, true, 522},
	{TP_TYPE_PARKOUR, "Bike Parkour3", "/bikepk3", 2720.255126, -2558.420654, 24.060861, 179.312744, 0, FREEROAM_VW, false, true, 522},

	{TP_TYPE_BASEJUMP, "Leap 1", "/leap1", 1544.6682,-1352.3226,329.4760,1.4250, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_BASEJUMP, "Leap 2", "/leap2", -1753.5562,885.7960,295.8750,355.8117, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_BASEJUMP, "Leap 3", "/leap3", 2280.2200,1647.7861,107.9293,268.0593, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_BASEJUMP, "Leap 4", "/leap4", -2504.1787,-707.2554,279.7344,222.7380, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_BASEJUMP, "Leap 5", "/leap5", 1483.2292,-1791.0811,156.7533,277.0705, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_BASEJUMP, "Leap 6", "/leap6", 1665.5255,-1218.5864,233.3750,359.8122, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_BASEJUMP, "Leap 7", "/leap7", -1790.8602,567.4060,332.8019,300.6803, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_BASEJUMP, "Leap 8", "/leap8", -2661.9463,1595.2345,225.7578,267.6448, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_BASEJUMP, "Leap 9", "/leap9", -2873.2102,2710.7180,275.0045,97.0161, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_BASEJUMP, "Leap 10", "/leap10", 2059.8523,2435.1951,165.6172,90.9790, 0, FREEROAM_VW, false, false, 0},

	{TP_TYPE_JUMP, "Ramp 1", "/ramp1", 12.713602, 1135.036621, 223.395004, 0.0, 0, FREEROAM_VW, true, true, 411},
	{TP_TYPE_JUMP, "Ramp 2", "/ramp2", 1477.568725, 1081.478759, 93.300598, 359.928680, 0, FREEROAM_VW, true, true, 415},

	{TP_TYPE_DRIFT, "Drift Desert", "/drift1", -303.952728, 1521.712524, 75.359375, 180.0, 0, FREEROAM_VW, false, true, 502},
	{TP_TYPE_DRIFT, "Drift City", "/drift2", 3043.980224, 2324.111816, 3.976562, 270.0, 0, FREEROAM_VW, true, true, 494},

	{TP_TYPE_INTERIOR, "Horror House", "/horror", 2324.511718, -1148.254150, 1050.710083, 359.469177, 12, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "24/7 1", "/2471", -25.884498,-185.868988,1003.546875,359.9107, 17, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "24/7 2", "/2472", 6.091179,-29.271898,1003.549438,359.0000, 10, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Shamal", "/shamal", 1.808619,32.384357,1199.593750,178.0534, 1, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Andromada", "/andromada", 315.9612,985.2897,1958.8451,359.2753, 9, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Ammunation 1", "/ammu1", 286.1490,-40.6444,1001.5156,359.0000, 1, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Ammunation 2", "/ammu2", 285.6192,-83.9430,1001.5156,358.0968, 4, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Ammunation 3", "/ammu3", 297.1149,-109.9273,1001.5156,2.1439, 6, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Ammunation 4", "/ammu4", 315.5149,-141.9979,999.6016,356.5060, 7, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Ammunation 5", "/ammu5", 316.3767,-167.7873,999.5938,1.7206, 6, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Jefferson motel", "/jeff", 2216.7175,-1150.6587,1025.7969,270.2154, 15, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Betting shop", "/bshop", 832.3688,7.7683,1004.1797,87.7159, 3, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Sex shop", "/sexshop", -99.9126,-23.5478,1000.7188,1.6808, 3, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Fabrica de carne", "/fabrica", 961.5553,2108.2913,1011.0303,89.0896, 1, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Zero RC", "/zero", -2239.1545,137.1248,1035.4141,265.6268, 6, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Base Caligula", "/caligula", 2170.7393,1618.5087,999.9766,269.1960, 1, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Oficina de Woozie", "/woozie", -2158.5613,641.7729,1052.3750,87.4610, 1, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Binco", "/binco", 207.9070,-109.1246,1005.1328,4.6377, 15, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Didier sachs", "/ds", 204.2467,-167.2685,1000.5234,358.7444, 14, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Prolaps", "/prolaps", 206.8026,-139.3262,1003.5078,2.8411, 3, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "SubUrban", "/suburban", 203.7780,-48.4924,1001.8047,357.0000, 1, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Victim", "/victim", 224.9722,-8.2584,1002.2109,86.7175, 5, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Zip", "/zip", 162.0087,-94.4686,1001.8047,357.8640, 18, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Club", "/club", 493.3910,-22.7228,1000.6797,357.0000, 17, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Bar", "/bar", 502.3339,-70.6352,998.7578,183.2399, 11, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Lil' probe inn", "/lilprobe", -227.6724,1400.8525,27.7656,274.7772, 18, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Burger Shot", "/bshot", 364.8258,-73.9592,1001.5078,303.7720, 10, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Cluckin' bell", "/cbell", 365.0607,-10.6917,1001.8516,358.5104, 9, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Well stacked pizza", "/wpizza", 371.4449,-132.4595,1001.4922,357.7650, 5, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Sherman dam", "/sherman", -942.5675,1847.6465,5.0051,357.1110, 17, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Planning dept", "/pdept", 385.8102,173.9722,1008.3828,94.7137, 3, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Area 51", "/area51", 206.4965,1868.2484,13.1406,267.5949, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Los Santos Gym", "/lsgym", 771.6628,-3.3456,1000.7281,0.7912, 5, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "San Fierro Gym", "/sfgym", 774.2140,-48.9243,1000.5859,0.0000, 6, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Las Venturas Gym", "/lvgym", 773.5800,-77.0967,1000.6550,0.0000, 7, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Madd Doggs mansion", "/madd", 1266.5347,-781.1734,1091.9063,269.8514, 5, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Fabrica de Crack", "/fcrack", 2543.0801,-1304.2384,1025.0743,180.0612, 2, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Club de strip", "/strip", 1211.6385,-12.8283,1000.9219,0.5169, 2, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Pleasure domes", "/pdomes", -2637.9487,1406.0510,906.4609,89.3124, 3, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Liberty City", "/liberty", -795.1964,496.4371,1376.1953,1.7276, 1, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Coronel Furhberger", "/coronel", 2807.4583,-1172.8979,1025.5703,356.6788, 8, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Crack den", "/crackden", 318.5342,1116.9688,1083.8828,357.5443, 5, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Warehouse", "/wharehouse", 1294.1707,4.7496,1001.0116,181.8583, 18, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "RC Battlefield", "/rcbattle", -976.7442,1061.2205,1345.6719,92.9710, 10, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "San Fierro PD", "/sfpd", 246.1727,109.4176,1003.2188,357.8047, 10, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Las Venturas PD", "/lvpd", 288.7500,168.8866,1007.1719,356.5684, 3, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Escuela de conduccion", "/escuela", -2030.0032,-107.1861,1035.1719,178.4843, 3, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "Banco", "/banco", 2307.6255,-15.3803,26.7496,271.2197, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_INTERIOR, "LS Atruim", "/lsatruim", 1702.7667,-1667.5981,20.2188,268.8958, 18, FREEROAM_VW, false, false, 0},
	
	{TP_TYPE_OTHER, "Karaoke", "/karaoke", 1873.945312, -1411.067016, 13.570312, 0.0, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_OTHER, "Isla", "/isla", -1635.827026, -3213.378173, 5.294773, 151.393493, 0, FREEROAM_VW, true, true, 0},
	{TP_TYPE_OTHER, "Piramide", "/piramide", 2323.638427, 1283.214843, 97.579040, 90.0, 0, FREEROAM_VW, false, false, 0},
	{TP_TYPE_OTHER, "Globo aerostatico", "/globo", 2049.517822, 1136.628051, 69.417266, 0.0, 0, FREEROAM_VW, true, false, 0},
	{TP_TYPE_OTHER, "Karts 1", "/karts1", 1321.396972, 2123.011230, 10.299494, 359.757720, 0, FREEROAM_VW, false, false, 571},
	{TP_TYPE_OTHER, "Karts 2", "/karts2", 2421.215820, 1934.071411, 5.299487, 270.558746, 0, FREEROAM_VW, false, false, 571},
	{TP_TYPE_OTHER, "Karts 3", "/karts3", -1337.310424, 377.729400, 43.159145, 90.162170, 0, FREEROAM_VW, true, false, 571},
	{TP_TYPE_OTHER, "Karts 4", "/karts4", 1646.289062, 913.919982, 10.676133, 360.0, 0, FREEROAM_VW, true, false, 571},
	{TP_TYPE_OTHER, "Toreno", "/toreno", -676.306030, 922.596435, 12.123167, 83.106559, 0, FREEROAM_VW, false, true, 0},
	{TP_TYPE_OTHER, "Tenis", "/tenis", 753.312011, -1212.003906, 13.546875, 187.737518, 0, FREEROAM_VW, false, true, 0},
	{TP_TYPE_OTHER, "Cemetery", "/cemetery", 837.984191, -1101.969116, 24.303991, 269.831726, 0, FREEROAM_VW, false, true, 0},
	{TP_TYPE_OTHER, "Puente SF", "/puentesf", -2625.978515, 1393.064086, 7.101562, 268.868530, 0, FREEROAM_VW, false, true, 0},
	{TP_TYPE_OTHER, "cardealer", "/cardealer", 1641.738769, 1796.203002, 10.820312, 270.0, 0, FREEROAM_VW, false, true, 0},

	{TP_TYPE_CARTUNING, "Wheel Arch Angles SF", "/waa", -2692.2336,213.1314,4.0526,91.5529, 0, FREEROAM_VW, false, true, 0},
	{TP_TYPE_CARTUNING, "Transfender SF", "/transf", -1946.5612,234.1954,33.6482,269.8928, 0, FREEROAM_VW, false, true, 0},
	{TP_TYPE_CARTUNING, "Transfender LV", "/tranlv", 2387.8518,1025.6975,10.6270,1.7751, 0, FREEROAM_VW, false, true, 0},
	{TP_TYPE_CARTUNING, "Transfender LS", "/tranls", 1041.2853,-1052.2833,31.5089,0.4850, 0, FREEROAM_VW, false, true, 0}
	
};

enum
{
	DIALOG_LOGIN,
	DIALOG_REGISTER,
	DIALOG_TELEPORTS,
	DIALOG_TELEPORTS_LIST,
	DIALOG_MUSIC,
	DIALOG_RADIO,
	DIALOG_VEHICLES,
	DIALOG_WEAPONS = DIALOG_VEHICLES+15,
	DIALOG_ITEMS = DIALOG_WEAPONS+10,
	DIALOG_ANIMS,
	DIALOG_HELP1,
	DIALOG_HELP2,
	DIALOG_HELP3,
	DIALOG_COMMANDS,
	DIALOG_CREDITS,
	DIALOG_SELECT_GANG_TEAM,
	DIALOG_SELECT_MODE,
	DIALOG_EVENT,
	DIALOG_TOPS = DIALOG_EVENT+10,
	DIALOG_STATS,
	DIALOG_SONG,
	DIALOG_ACMDS,
	DIALOG_FIGHTSTYLE,
	DIALOG_HOUSE_MANAGE,
	DIALOG_VEHICLECONTROL,
	DIALOG_PERSONAL_VEHICLES,
	DIALOG_SELECT_ZOMBIE_TEAM,
	DIALOG_AUX,
	DIALOG_CHATCOLOR,
	DIALOG_VIPINFO,
	DIALOG_PLATE,
	DIALOG_CREW_MANAGE,
	DIALOG_CREW_MEMBERS,
	DIALOG_CREW_EDIT_MEMBERS,
	DIALOG_CREW_EDIT_MEMBER,
	DIALOG_CREW_EDIT_COLOR,
	DIALOG_SELECT_COLOR,
	DIALOG_SOCIAL_MUSIC,
	DIALOG_SOCIAL_ADD,
	DIALOG_SOCIAL_MY = DIALOG_SOCIAL_ADD + 3,
	DIALOG_SOCIAL_BEST = DIALOG_SOCIAL_MY + 2,
	DIALOG_SOCIAL_ADD_AUTO,
	DIALOG_SOCIAL_MY_BEST,
	DIALOG_SOCIAL_SEARCH_YT,
	DIALOG_MUSIC_RESULTS,
	DIALOG_ADMINS,
	DIALOG_EDIT_ADMIN,
	DIALOG_EDIT_PLAYERNAME,
	DIALOG_NPASS,
	DIALOG_DUEL = DIALOG_NPASS + 2,
	DIALOG_DUEL_WEAPONS,
	DIALOG_NEW_DUEL,
	//DIALOG_DNS
	DIALOG_USER_PANEL,
	DIALOG_SELECT_TDM_TEAM,
	DIALOG_RULES
};

// DIALOGS
new DIALOG_ACMDS_String[2000],
	DIALOG_CREDITS_String[600],
	DIALOG_COMMANDS_String[1700],
	DIALOG_HELP1_String[1200],
	DIALOG_HELP2_String[1400],
	DIALOG_HELP3_String[600],
	DIALOG_ANIMS_String[1000],
	DIALOG_ITEMS_String[1100],
	DIALOG_VIPINFO_String[2000],
	DIALOG_SELECT_COLOR_String[4200],
	DIALOG_TOPS_String[1280],
	DIALOG_SOCIAL_String[1200],
	DIALOG_ADMINS_String[1800],
	DIALOG_DUEL_String[400],
	DIALOG_DUEL_WEAPONS_String[800],
	DIALOG_RULES_String[500];


//CREW SYSTEM

#define MAX_CREWS				(1000)

enum
{
	RANK_NOOB,
	RANK_ADVANCED,
	RANK_PROFESSIONAL,
	RANK_LEADER,
	RANK_FOUNDER
};

enum CINFO
{
	C_VALID,
	C_ID,
	C_NAME[10],
	C_MEMBERS,
	C_COLOR
};

new CI[MAX_CREWS][CINFO], Total_Crews,
	Crew_Ranks[][] =
	{
		"New",
		"Advanced",
		"Professional",
		"Leader",
		"Founder"
	}
;


enum
{
	DB_GET_ID,
	DB_GET_IP,
	DB_GET_NAME,
	DB_GET_PASS,
	DB_GET_DATREG,
	DB_GET_BANNED,
	DB_GET_TEMPBAN,
	DB_GET_MOD,
	DB_GET_KILLS,
	DB_GET_DEATHS,
	DB_GET_MONEY, 
	DB_GET_SCORE,
	DB_GET_FIGHTSTYLE,
	DB_GET_HOUSES,
	DB_GET_VEHICLES,
	DB_GET_VIP,
	DB_GET_VIPTIME,
	DB_GET_CHATCOLOR,
	DB_GET_CREW_ID,
	DB_GET_CREW_RANK,
	DB_GET_COLOR,
	DB_GET_PMS,
	DB_GET_SKIN,
	DB_GET_CONNECTED,
	DB_GET_PLAYERID,
	DB_GET_IGNOREDL,
	DB_GET_IGNORE_MUSIC,
	DB_GET_IGNORE_SOUNDS,
	DB_GET_IGNORE_TPTD,
	DB_GET_IGNORE_LSRTD,
	DB_GET_LCONNECTION
};

enum P_INFO
{
	P_BOT,
	P_ID,
	P_IP[16],
	P_USEREXIT,
	P_LOGGED,
	P_SELECTING_MODE_TD,
	P_USER_CONNECTED_TICKCOUNT,
	P_NAME[MAX_PLAYER_NAME],
	P_PASS,
	P_STATUS,
	P_DATEREG,
	P_BANNED,
	P_TEMPBAN,
	P_MOD,
	P_GODMODE,
	Float:P_HEALTH,
	P_DIALOG_TP[sizeof(TI)],
	P_TIMERS[MAX_TIMERS_PER_PLAYER],
	P_KILLS,
	P_DEATHS,
	P_MONEY,
	P_WINMONEY,
	P_LOSEMONEY,
	P_SCORE,
	P_WINSCORE,
	P_LOSESCORE,
	P_FIGHTSTYLE,
	P_GAMEMODE,
	P_FRVEHICLE,
	P_JOINED_EVENT,
	P_EVENT_POSGET,
	P_ANTIFLOOD_TICKCOUNT,
	P_ANTIFLOOD_REPORT,
	P_HOUSES,
	P_VEHICLES,
	P_VIP,
	P_CHATCOLOR,
	P_VIPTIME,
	P_DERBY_VEHICLEID, 
	P_DERBY_POSITION,
	P_DERBY_STATUS,
	P_DERBY_SPECTATEPLAYER,
	P_CHECKAFK,
	P_JOINDERBY,
	P_FALL_STATUS,
	P_TEMPHOUSE_INDEX,
	P_HOUSEICONS[MAX_HOUSES_PER_PLAYER],
	P_TEMP_VID,
	P_VEHICLES_MODEL[MAX_VEHICLES_PER_PLAYER],
	P_VEHICLES_SQL_ID[MAX_VEHICLES_PER_PLAYER],
	P_VEHICLES_VEH_ID[MAX_VEHICLES_PER_PLAYER],
	P_SHOPCAR,
	P_SHOPCARINDEX,
	P_DESMADRE,
	P_SELECTING_ZOMBIE_TEAM,
	P_ZOMBIE_TEAM,
	P_INFECTED,
	P_HESOYAM_TIME,
	Text3D:P_VIP_LABEL,
	P_TUNING_MENU,
	P_TUNING_PAGE,
	P_SPAWN_PROTECTION,
	P_ANTICARTROLL_TIME,
	P_CREW_ID, P_CREW_SLOT, P_CREW_RANK, P_CREW_DIALOG_PID[23], P_CREW_PLAYER_SELECTED,
	P_CREW_INVITED, P_CREW_INVITE_TIME, Text3D:P_CREW_LABEL, P_CREW_DIALOG_PAGE,
	P_DIALOG_PAGE, P_TOP_CLOSE,
	P_MUSIC_TITLE[32], P_MUSIC_URL[128], P_MUSIC_TYPE, P_MUSIC_ID[13], P_MUSIC_PAGE, P_MUSIC_SELECTED, P_MUSIC_ANTIFLOOD, P_MUSIC_YTSEARCH_AF,
	P_COLOR, P_SAVED_SKIN, P_ADMINS_DIALOG[23], P_ADMIN_SELECTED,
	P_PLAYER_SELECTED, P_PLAYER_SELECTED_NAME[24],
	P_DUEL_ID, P_DUEL_PET_TIME,
	P_INFO_SERVER,	
	P_PMS, P_IGNORE_DUELS, P_IGNORE_MUSIC, P_IGNORE_SOUNDS, P_IGNORE_TPTD, P_IGNORE_LSRTD,
	//P_DNS[45]
	P_SELECT_MODE_PAGE, P_TEM_TEAM,
	PlayerText:PTD_MESSAGE_TD,
	P_SHOOTER_VEHICLEID, P_SHOOTER_POSITION, P_SHOOTER_STATUS, P_SHOOTER_FIRETIME, P_SHOOTER_JUMP, P_SHOOTER_SPECTATEPLAYER,
	P_RACE_VEHICLEID, P_RACE_POSITION, P_RACE_STATUS, P_RACE_SPECTATEPLAYER, P_RACE_CPCOUNT, P_RACE_VOTED
};

new PI[MAX_PLAYERS][P_INFO],
	PlayerText:PTD_RACE[MAX_PLAYERS][3];

enum 
{
	TUNING_NEONS,
	TUNING_LIGHT,
	TUNING_PAINT,
	TUNING_PLATE
};

new Random_Weapons[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 32, 30, 31, 33, 34};					
new FreeRoam_Skins[] = 
{
	60,
	55,
	45,
	44,
	29,
	27,
	26,
	23,
	22,
	21,
	56,
	266,
	267,
	268,
	269,
	271,
	272,
	280,
	281,
	282,
	283,
	285,
	286,
	287,
	254,
	255,
	256,
	257,
	258,
	259,
	260,
	261,
	262,
	263,
	264,
	274,
	275,
	276,
	1,
	2,
	290,
	291,
	292,
	293,
	294,
	295,
	296,
	297,
	298
};

new VehicleNames[][] = {
{"Landstalker"},{"Bravura"},{"Buffalo"},{"Linerunner"},{"Perrenial"},{"Sentinel"},{"Dumper"},
{"Firetruck"},{"Trashmaster"},{"Stretch"},{"Manana"},{"Infernus"},{"Voodoo"},{"Pony"},{"Mule"},
{"Cheetah"},{"Ambulance"},{"Leviathan"},{"Moonbeam"},{"Esperanto"},{"Taxi"},{"Washington"},
{"Bobcat"},{"Mr Whoopee"},{"BF Injection"},{"Hunter"},{"Premier"},{"Enforcer"},{"Securicar"},
{"Banshee"},{"Predator"},{"Bus"},{"Rhino"},{"Barracks"},{"Hotknife"},{"Trailer 1"},{"Previon"},
{"Coach"},{"Cabbie"},{"Stallion"},{"Rumpo"},{"RC Bandit"},{"Romero"},{"Packer"},{"Monster"},
{"Admiral"},{"Squalo"},{"Seasparrow"},{"Pizzaboy"},{"Tram"},{"Trailer 2"},{"Turismo"},
{"Speeder"},{"Reefer"},{"Tropic"},{"Flatbed"},{"Yankee"},{"Caddy"},{"Solair"},{"Berkley's RC Van"},
{"Skimmer"},{"PCJ-600"},{"Faggio"},{"Freeway"},{"RC Baron"},{"RC Raider"},{"Glendale"},{"Oceanic"},
{"Sanchez"},{"Sparrow"},{"Patriot"},{"Quad"},{"Coastguard"},{"Dinghy"},{"Hermes"},{"Sabre"},
{"Rustler"},{"ZR-350"},{"Walton"},{"Regina"},{"Comet"},{"BMX"},{"Burrito"},{"Camper"},{"Marquis"},
{"Baggage"},{"Dozer"},{"Maverick"},{"News Chopper"},{"Rancher"},{"FBI Rancher"},{"Virgo"},{"Greenwood"},
{"Jetmax"},{"Hotring"},{"Sandking"},{"Blista Compact"},{"Police Maverick"},{"Boxville"},{"Benson"},
{"Mesa"},{"RC Goblin"},{"Hotring Racer A"},{"Hotring Racer B"},{"Bloodring Banger"},{"Rancher"},
{"LEGACY GT"},{"Elegant"},{"Journey"},{"Bike"},{"Mountain Bike"},{"Beagle"},{"Cropdust"},{"Stunt"},
{"Tanker"}, {"Roadtrain"},{"Nebula"},{"Majestic"},{"Buccaneer"},{"Shamal"},{"Hydra"},{"FCR-900"},
{"NRG-500"},{"HPV1000"},{"Cement Truck"},{"Tow Truck"},{"Fortune"},{"Cadrona"},{"FBI Truck"},
{"Willard"},{"Forklift"},{"Tractor"},{"Combine"},{"Feltzer"},{"Remington"},{"Slamvan"},
{"Blade"},{"Freight"},{"Streak"},{"Vortex"},{"Vincent"},{"Bullet"},{"Clover"},{"Sadler"},
{"Firetruck LA"},{"Hustler"},{"Intruder"},{"Primo"},{"Cargobob"},{"Tampa"},{"Sunrise"},{"Merit"},
{"Utility"},{"Nevada"},{"Yosemite"},{"Windsor"},{"Monster A"},{"Monster B"},{"Uranus"},{"Jester"},
{"Sultan"},{"Stratum"},{"Elegy"},{"Raindance"},{"RC Tiger"},{"Flash"},{"Tahoma"},{"Savanna"},
{"Bandito"},{"Freight Flat"},{"Streak Carriage"},{"Kart"},{"Mower"},{"Duneride"},{"Sweeper"},
{"Broadway"},{"Tornado"},{"AT-400"},{"DFT-30"},{"Huntley"},{"Stafford"},{"BF-400"},{"Newsvan"},
{"Tug"},{"Trailer 3"},{"Emperor"},{"Wayfarer"},{"Euros"},{"Hotdog"},{"Club"},{"Freight Carriage"},
{"Trailer 3"},{"Andromada"},{"Dodo"},{"RC Cam"},{"Launch"},{"Police Car (LSPD)"},{"Police Car (SFPD)"},
{"Police Car (LVPD)"},{"Police Ranger"},{"Picador"},{"S.W.A.T. Van"},{"Alpha"},{"Phoenix"},{"Glendale"},
{"Sadler"},{"Luggage Trailer A"},{"Luggage Trailer B"},{"Stair Trailer"},{"Boxville"},{"Farm Plow"},
{"Utility Trailer"}};


enum
{
	S_NONE,
	S_CONNECTED,
	S_CLASS,
	S_DEAD,
	S_SPAWNED,
};

enum
{
	TEAM_GROVE,
	TEAM_BALLAS,
	TEAM_POLICE
};

new TEAM_SKINS[][] =
{
	{105, 106, 107, 270},
	{102, 103, 104, 28},
	{284, 300, 301, 306}
};

new Float:TEAM_SPAWNS[][][] =
{
	/*GROVE STREET*/
	{	
		{2512.040771, -1667.074707, 13.568134, 82.094100},
		{2499.001708, -1683.875244, 13.398897, 9.400088},
		{2469.619384, -1678.464965, 13.507812, 308.612854},
		{2460.800781, -1651.716064, 13.448091, 176.988235}		
	},
	
	/*BALLAS*/
	{
		{2644.751464, -2011.922241, 13.554687, 0.0},
		{2653.886962, -1998.142822, 13.554687, 180.0},
		{2669.437988, -2012.944824, 13.554687, 0.0},
		{2688.628662, -1994.753540, 13.547199, 180.0}
	},
	
	/*POLICE*/
	{
		{1541.0643, -1669.1321, 13.5981, 0.0},
		{1566.4711, -1619.9673, 13.6969, 0.0},
		{1537.1361, -1613.5082, 13.6969, 0.0},
		{1573.8649, -1634.8484, 13.6969, 0.0}
	}
};

new TEAM_WEAPONS[][] =
{
	{22, 28, 18},
	{22, 28, 4},
	{22, 30, 3}
};

new TEAM_COLORS[] =
{
	0x00CC33FF,
	0x993399FF,
	0x0066FFFF
};

new Float:PlayerSpawnPosition_FR_LV[][] =
{
	{2020.138427, 1545.115722, 10.893072, 270.000000}, //lv
	{288.515350, -1782.124755, 4.480312, 180.000015}, //ls
	{-1984.625732, 261.254882, 35.223373, 358.819152}, //sf
	{-2318.737060, -1640.964599, 483.703125, 260.000000}, //chill
	{1628.870727, 1191.078002, 10.860000, 40.733707}, //lva
	{-1117.064208, -201.420608, 14.620312, 68.210281}, //sfa
	{374.283721, 2536.765869, 16.769062, 180.0} //aa
};
new PlayerSpawnPosition_Areas[sizeof(PlayerSpawnPosition_FR_LV)];

new RandomColors[] =
{
	0xFFFFFFFF,
	0x000000FF,
    0x99CC00FF,
    0xFF9900FF,
	0x6699CCFF,
	0x0099FFFF,
	0xCCCC99FF,
	
	0xFF8C13FF,0xC715FFFF,0x20B2AAFF,0xDC143CFF,0x6495EDFF,0xf0e68cFF,0x778899FF,0xFF1493FF,0xF4A460FF,
	0xEE82EEFF,0xFFD720FF,0x8b4513FF,0x4949A0FF,0x148b8bFF,0x14ff7fFF,0x556b2fFF,0x0FD9FAFF,0x10DC29FF,
	0x534081FF,0x0495CDFF,0xEF6CE8FF,0xBD34DAFF,0x247C1BFF,0x0C8E5DFF,0x635B03FF,0xCB7ED3FF,0x65ADEBFF,
	0x5C1ACCFF,0xF2F853FF,0x11F891FF,0x7B39AAFF,0x53EB10FF,0x54137DFF,0x275222FF,0xF09F5BFF,0x3D0A4FFF,
	0x22F767FF,0xD63034FF,0x9A6980FF,0xDFB935FF,0x3793FAFF,0x90239DFF,0xE9AB2FFF,0xAF2FF3FF,0x057F94FF,
	0xB98519FF,0x388EEAFF,0x028151FF,0xA55043FF,0x0DE018FF,0x93AB1CFF,0x95BAF0FF,0x369976FF,0x18F71FFF,
	0x4B8987FF,0x491B9EFF,0x829DC7FF,0xBCE635FF,0xCEA6DFFF,0x20D4ADFF,0x2D74FDFF,0x3C1C0DFF,0x12D6D4FF,
	0x48C000FF,0x2A51E2FF,0xE3AC12FF,0xFC42A8FF,0x2FC827FF,0x1A30BFFF,0xB740C2FF,0x42ACF5FF,0x2FD9DEFF,
	0xFAFB71FF,0x05D1CDFF,0xC471BDFF,0x94436EFF,0xC1F7ECFF,0xCE79EEFF,0xBD1EF2FF,0x93B7E4FF,0x3214AAFF,
	0x184D3BFF,0xAE4B99FF,0x7E49D7FF,0x4C436EFF,0xFA24CCFF,0xCE76BEFF,0xA04E0AFF,0x9F945CFF,0xDCDE3DFF,
	0x10C9C5FF,0x70524DFF,0x0BE472FF,0x8A2CD7FF,0x6152C2FF,0xCF72A9FF,0xE59338FF,0xEEDC2DFF,0xD8C762FF,
	0xD8C762FF,0xFF8C13FF,0xC715FFFF,0x20B2AAFF,0xDC143CFF,0x6495EDFF,0xf0e68cFF,0x778899FF,0xFF1493FF,
	0xF4A460FF,0xEE82EEFF,0xFFD720FF,0x8b4513FF,0x4949A0FF,0x148b8bFF,0x14ff7fFF,0x556b2fFF,0x0FD9FAFF,
	0x10DC29FF,0x534081FF,0x0495CDFF,0xEF6CE8FF,0xBD34DAFF,0x247C1BFF,0x0C8E5DFF,0x635B03FF,0xCB7ED3FF,
	0x65ADEBFF,0x5C1ACCFF,0xF2F853FF,0x11F891FF,0x7B39AAFF,0x53EB10FF,0x54137DFF,0x275222FF,0xF09F5BFF,
	0x3D0A4FFF,0x22F767FF,0xD63034FF,0x9A6980FF,0xDFB935FF,0x3793FAFF,0x90239DFF,0xE9AB2FFF,0xAF2FF3FF,
	0x057F94FF,0xB98519FF,0x388EEAFF,0x028151FF,0xA55043FF,0x0DE018FF,0x93AB1CFF,0x95BAF0FF,0x369976FF,
	0x18F71FFF,0x4B8987FF,0x491B9EFF,0x829DC7FF,0xBCE635FF,0xCEA6DFFF,0x20D4ADFF,0x2D74FDFF,0x3C1C0DFF,
	0x12D6D4FF,0x48C000FF,0x2A51E2FF,0xE3AC12FF,0xFC42A8FF,0x2FC827FF,0x1A30BFFF,0xB740C2FF,0x42ACF5FF,
	0x2FD9DEFF,0xFAFB71FF,0x05D1CDFF,0xC471BDFF,0x94436EFF,0xC1F7ECFF,0xCE79EEFF,0xBD1EF2FF,0x93B7E4FF,
	0x3214AAFF,0x184D3BFF,0xAE4B99FF,0x7E49D7FF,0x4C436EFF,0xFA24CCFF,0xCE76BEFF,0xA04E0AFF,0x9F945CFF,
	0xDCDE3DFF,0x10C9C5FF,0x70524DFF,0x0BE472FF,0x8A2CD7FF,0x6152C2FF,0xCF72A9FF,0xE59338FF,0xEEDC2DFF,
	0xD8C762FF,0xD8C762FF
};

new Float:Random_Desmadre_Spawn[][] = 
{
	{1406.687011, -1.380011, 1000.921447, 130.106964}, //daethmatch1
	{1366.083007, -41.842506, 1000.920837, 313.721954}, //daethmatch2
	{1363.560791, -1.339079, 1000.921875, 223.167770}, //daethmatch3
	{1414.358276, -43.151893, 1000.922058, 46.156135}, //daethmatch4
	{1414.038330, -29.632303, 1000.925048, 89.083198}, //daethmatch5
	{1363.077148, -24.345876, 1000.921875, 270.481506}, //daethmatch6
	{1389.484375, 0.114360, 1000.912353, 172.407272}, //daethmatch7
	{1389.924926, -44.993949, 1000.922607, 354.768981} //daethmatch8
};

new RandomMusic[][][] =
{
	{"Legacy Freeroam 3", ""}
};

new Radios[][][] = 
{
	{"SomaFM", ""}
};

new
	TOTAL_PLAYERS,
	TOTAL_PLAYERS_FR,
	TOTAL_PLAYERS_GANG,
	TOTAL_PLAYERS_DM,
	TOTAL_PLAYERS_DUEL,
	
	LS_Gang_GangZone, 
	
	Desmadre_Area,
	Minecraft_Area,
	
	PORTAL_PICKUP[9],
	
	GROVE_STREET_HEALTH_PICKUP,
	GROVE_STREET_WEAPON_PICKUP[3],
	
	BALLAS_HEALTH_PICKUP,
	BALLAS_WEAPON_PICKUP[3],
	
	POLICE_HEALTH_PICKUP,
	POLICE_WEAPON_PICKUP[3],
	
	Text:TD_MUSIC_YT[2],
	Text:TD_LSR_SERVER_INFO, 
	Text:TD_LSR_WEB_INFO,
	Text:TD_LSR_HUD[4],
	Text:TD_LSR_TPINFO[2], TPINFO_Timer, VEHICLES_PLAYER[MAX_VEHICLES],
	Text:TD_LSR_EVENTINFO[2],
	PlayerText:PTD_LSR_KICKED[MAX_PLAYERS][5],
	Text:TD_LSR_SELECTMODE[34],
	Text:TD_LSR_SMODE_PAGE[2],
	Text:TD_CarShop[5], PlayerText:PTD_CarShop[MAX_PLAYERS][3],
	
	Text:TD_LSR_ZOMBIE_EDITION[6], Text:TD_LSR_ZOMBIE_INFECTED,
	
	Text:TD_LSR_TUNING[3], PlayerText:PTD_LSR_TUNING[MAX_PLAYERS][28],
	
	Object_String[512],
	
	Text:TD_WELCOME[4],
	COUNTDOWN_COUNTER, COUNTDOWN_STARTED, COUNTDOWN_TIME
	;

new RandomGameTextColors[][] =
{
	"~p~~h~",
	"~r~~h~",
	"~g~~h~",
	"~b~~h~",
	"~y~~h~",
	"~w~~h~"
};

forward Countdown();

#define TD_COUNTER_FR		16
#define TD_COUNTER_GANG		17
#define TD_COUNTER_DERBY	18
#define TD_COUNTER_DM		19
#define TD_COUNTER_FALL		20
#define TD_COUNTER_ZOMBIE	22
#define TD_COUNTER_LSR		24
#define TD_COUNTER_TDM		26
#define TD_COUNTER_SHOOTER	29
#define TD_COUNTER_RACES	32

//RACE SYSTEM

#define MAX_RACES			(100)
#define MAX_RACE_CP			(100)

enum
{
	RACE_CLOSED,
	RACE_WAIT,
	RACE_RUNNING
};

enum RCINFO
{
	R_ID,
	R_NAME[24],
	R_INT,
	R_WEATHER[2],
	R_MODELID,
	R_FREEZE,
	Float:R_ANGLE,
	R_COLLISIONS,
	R_TOTAL_CP,
	R_PLAYERS,
	R_RUNNING_PLAYERS,
	R_STATUS,
	R_TICKCOUNT,
	R_COUNTDOWN_COUNTER,
	R_COUNTDOWN_TIMER,
	R_MESSAGE_TIMER,
	R_MAX_PRIZE,
	R_TIMEOUT_COUNTER,
	R_TIMEOUT_TIMER,
	R_NEXT_RACE_TIMER,
	R_COLLISION_VOTES[2]
};

enum CPINFO
{
	R_CP_VEHS_COUNTER,
	R_CP_TYPE,
	Float:R_CP_POS[3],
	Float:R_CP_SIZE
};

new RC[RCINFO],
	RACE_CP[MAX_RACE_CP][CPINFO],
	RACE_Names[MAX_RACES][24],
	RC_SPAWN_POSITION_USED[MAX_PLAYERS],
	Float:RC_SPAWN_POSITIONS[MAX_PLAYERS][4],
	Text:TD_RACE[9], Text:TD_RACEMessage, Text:TD_RACE_Collisions[4],
	TOTAL_RACES;

forward RaceCountdown();

//SHOOTER SYSTEM

enum 
{
	SHOOTER_CLOSED,
	SHOOTER_RUNNING,
	SHOOTER_WAIT
};

#define MAX_SHOOTERS     	(100)

enum SHOOTERINFO
{
	S_ID,
	S_NAME[24],
	S_INT,
	S_WEATHER[2],
	
	S_CENTER_OBJECTID,
	S_CENTER_MODELID,
	Float:S_CENTER_POS[6],
	
	S_VEH_MODELID,
	S_FREEZE,
	S_STATUS,
	//S_TIME,
	//S_TIMETIMER,
	S_PLAYERS,
	S_RUNNING_PLAYERS,
	S_COUNTDOWN_COUNTER,
	S_COUNTDOWN_TIMER,
	
	S_FIREWORKS_TIMER,
	S_FIREWORKS,
	
	S_TICKCOUNT,
	S_TIMEOUT_COUNTER,
	S_TIMEOUT_TIMER,
	S_MAX_PRIZE,
	S_WINNER,
	S_NEXT_SHOOTER_TIMER,
	S_MESSAGE_TIMER
};

new ST[SHOOTERINFO],
	
	ST_SPAWN_POSITION_USED[MAX_PLAYERS],
	Float:ST_SPAWN_POSITIONS[MAX_PLAYERS][4],
	Text:TD_SHOOTER[9], Text:TD_ShooterMessage,
	SHOOTER_Names[MAX_SHOOTERS][24],
	TOTAL_SHOOTER;
	
forward ShooterCountdown();

//TDM SYSTEM

enum 
{
	TDM_CLOSED,
	TDM_RUNNING
};

#define MAX_TDMS     		(100)
#define TDM_NEXT_ROUND_TIME	(300) // 1 minutos

enum TDMINFO
{
	T_ID,
	T_NAME[24],
	T_INT,
	T_WEATHER[2],
	T_FREEZE,
	T_STATUS,
	T_TIME,
	T_TIMETIMER,
	T_OBJECTIVE,
	T_COUNTER[2],
	T_PLAYERS,
	T_TeamPLAYERS[2],
	T_NEXTTDM_TIMER
	
};

new TDMI[TDMINFO],
	TDM_WEP[13][2],
	Float:TDM_SP[2][10][4],
	Text:TD_TDM[16],
	
	TDM_Names[MAX_TDMS][24],
	TOTAL_TDM;
	
forward TDMCounterBack();

new TDM_TeamColors[] =
{
	0xC7160CAA,
	0xCEC920AA
};

//DM SYSTEM

#define MAX_DM_SP   		(10)
#define MAX_DMS     		(100)
#define DM_NEXT_ROUND_TIME	(180) // 3 minutos

enum 
{
	DM_CLOSED,
	DM_RUNNING
};

new
	Text:TD_DM[6],
	DM_ID,
	DM_STATUS,
	DM_TIME,
	DM_TIMETIMER,
	DM_INT,
	DM_FREEZE,
	DM_WEP[13][2],
	DM_Name[24],
	Float:DM_SP[MAX_DM_SP][4],
	DM_Names[MAX_DMS][24],
	DM_TWEATHER[2],
	Total_DM;

	
//new BANNED_DNS[10][45];
//EVENT SYSTEM

new WEATHERS[][] = {
	"EXTRASUNNY_LA",
	"SUNNY_LA",
	"EXTRASUNNY_SMOG_LA",
	"SUNNY_SMOG_LA",
	"CLOUDY_LA",
	"SUNNY_SF",
	"EXTRASUNNY_SF",
	"CLOUDY_SF",
	"RAINY_SF",
	"FOGGY_SF",
	"SUNNY_VEGAS",
	"EXTRASUNNY_VEGAS (heat waves)",
	"CLOUDY_VEGAS",
	"EXTRASUNNY_COUNTRYSIDE",
	"SUNNY_COUNTRYSIDE",
	"CLOUDY_COUNTRYSIDE",
	"RAINY_COUNTRYSIDE",
	"EXTRASUNNY_DESERT",
	"SUNNY_DESERT",
	"SANDSTORM_DESERT",
	"UNDERWATER (greenish, foggy)"
};

enum 
{
	EVENT_CLOSED,
	EVENT_JOINING,
	EVENT_RUNNING
};

new
	TOTAL_PLAYERS_EVENT,
	EVENT_NAME[24],
	EVENT_STATUS = EVENT_CLOSED,
	Float:EVENT_POS[4],
	EVENT_INT,
	EVENT_VIRUALWORLD = FREEROAM_VW,
	EVENT_TIME = 12,
	EVENT_WEATHER,
	EVENT_WEP[5],
	EVENT_VEHICLE,
	EVENT_FREEZE;

	
//DERBY SYSTEM
#define MAX_DERBY_PLAYERS		(20)
#define	MAX_DERBYS				(100)
#define	NO_WINNER				(-1)

enum
{
	DERBY_CLOSED,
	DERBY_RUNNING,
	DERBY_WAIT
};

enum
{
	PD_NORMAL,
	PD_DEAD,
	PD_SPECTATE
};

enum DINFO
{
	D_PLAYERS,
	D_RUNNINGPLAYERS,
	D_WINNER,
	D_STATUS,
	
	D_ID,
	D_NAME[24],
	D_WEATHER,
	D_HOUR,
	D_VEHICLE,
	Float:D_ZPOS,
	
	D_TICKCOUNT,
	D_COUNTDOWN_COUNTER,
	D_COUNTDOWN_TIMER,
	D_NEXTDSTATUS_TIMER,
	D_TIMEOUT_COUNTER,
	D_TIMEOUT_TIMER,
	D_MAX_PRIZE
	
};

new DI[DINFO], Float:DERBY_SPAWN[MAX_DERBY_PLAYERS][4], DERBY_SLOT_USED[MAX_DERBY_PLAYERS], Text:TD_DERBY[9], Text:TD_DerbyMessage,
	TOTAL_DERBYS, File_String[512], DERBY_FILENAMES[MAX_DERBYS][24];
	
forward NextDerbyStatus();
forward DerbyCountdown();
forward DerbyTimeOutCountdown();
forward CheckPlayerPause(playerid);

//FALL SYSTEM
#define	MAX_FALLS			(50)
#define	MAX_FALL_OBJECTS	(500)

enum
{
	FALL_CLOSED,
	FALL_RUNNING,
	FALL_WAIT
};

enum FINFO
{
	F_PLAYERS,
	F_RUNNINGPLAYERS,
	F_WINNER,
	F_STATUS,
	
	F_ID,
	//F_OBJECTS,
	F_NAME[24],
	F_WEATHER,
	F_HOUR,
	Float:F_DEAD_CAM[6],
	Float:F_ZPOS,
	
	F_TICKCOUNT,
	F_COUNTDOWN_COUNTER,
	F_COUNTDOWN_TIMER,
	F_NEXTFSTATUS_TIMER,
	F_TIMEOUT_COUNTER,
	F_TIMEOUT_TIMER,
	F_MAX_PRIZE
	
};

new FI[FINFO], FALL_OBJECTID[MAX_FALL_OBJECTS], FALL_SMOKE_OBJECTID[MAX_FALL_OBJECTS],/* FALL_OBJECT_VALID[MAX_FALL_OBJECTS],*/ Text:TD_FALL[9], Text:TD_FallMessage,
	TOTAL_FALLS, FALL_FILENAMES[MAX_FALLS][24], Iterator:FALL_OBJECTS<MAX_FALL_OBJECTS>;
	
forward NextFallStatus();
forward FallCountdown();
forward FallTimeOutCountdown();


//HOUSE SYSTEM
#define MAX_HOUSES						(500)
#define MAX_HOUSES_PER_NORMAL_PLAYER	(2)
#define MAX_HOUSE_DAYS					(7)

enum HINFO
{
	H_VALID,
	H_ID,
	H_PRICE[2],
	H_OWNERID,
	H_OWNER[24],
	H_SOLD,
	Float:H_extPos[4],
	Float:H_intPos[4],
	H_INTERIOR,
	H_FREEZE,
	Text3D:H_LABEL,
	H_WORLD,
	H_PICKUP,
	H_OPENED
};

new HI[MAX_HOUSES][HINFO], HOUSES_LOADED, HOUSES_SOLD;


//VEHICLE SYSTEM
#define MAX_VEHICLES_PER_NORMAL_PLAYER	(2)

enum VINFO
{
	V_VALID,
	V_ID,
	V_OWNERID,
	V_OWNER[24],
	V_KEY,
	V_MODELID,
	V_LOCKED,
	V_NEON,
	V_SIREN,
	V_PLATE[32],
	V_COLOR[2],
	V_PAINTJOB,
	V_MOD[17]
};

new VI[MAX_VEHICLES][VINFO];

new spoiler[20][0] = {
	{1000},
	{1001},
	{1002},
	{1003},
	{1014},
	{1015},
	{1016},
	{1023},
	{1058},
	{1060},
	{1049},
	{1050},
	{1138},
	{1139},
	{1146},
	{1147},
	{1158},
	{1162},
	{1163},
	{1164}
};

new nitro[3][0] = {
    {1008},
    {1009},
    {1010}
};

new fbumper[23][0] = {
    {1117},
    {1152},
    {1153},
    {1155},
    {1157},
    {1160},
    {1165},
    {1167},
    {1169},
    {1170},
    {1171},
    {1172},
    {1173},
    {1174},
    {1175},
    {1179},
    {1181},
    {1182},
    {1185},
    {1188},
    {1189},
    {1192},
    {1193}
};

new rbumper[22][0] = {
    {1140},
    {1141},
    {1148},
    {1149},
    {1150},
    {1151},
    {1154},
    {1156},
    {1159},
    {1161},
    {1166},
    {1168},
    {1176},
    {1177},
    {1178},
    {1180},
    {1183},
    {1184},
    {1186},
    {1187},
    {1190},
    {1191}
};

new exhaust[28][0] = {
    {1018},
    {1019},
    {1020},
    {1021},
    {1022},
    {1028},
    {1029},
    {1037},
    {1043},
    {1044},
    {1045},
    {1046},
    {1059},
    {1064},
    {1065},
    {1066},
    {1089},
    {1092},
    {1104},
    {1105},
    {1113},
    {1114},
    {1126},
    {1127},
    {1129},
    {1132},
    {1135},
    {1136}
};

new bventr[2][0] = {
    {1142},
    {1144}
};

new bventl[2][0] = {
    {1143},
    {1145}
};

new bscoop[4][0] = {
	{1004},
	{1005},
	{1011},
	{1012}
};

new rscoop[17][0] = {
    {1006},
    {1032},
    {1033},
    {1035},
    {1038},
    {1053},
    {1054},
    {1055},
    {1061},
    {1067},
    {1068},
    {1088},
    {1091},
    {1103},
    {1128},
    {1130},
    {1131}
};

new lskirt[21][0] = {
    {1007},
    {1026},
    {1031},
    {1036},
    {1039},
    {1042},
    {1047},
    {1048},
    {1056},
    {1057},
    {1069},
    {1070},
    {1090},
    {1093},
    {1106},
    {1108},
    {1118},
    {1119},
    {1133},
    {1122},
    {1134}
};

new rskirt[21][0] = {
    {1017},
    {1027},
    {1030},
    {1040},
    {1041},
    {1051},
    {1052},
    {1062},
    {1063},
    {1071},
    {1072},
    {1094},
    {1095},
    {1099},
    {1101},
    {1102},
    {1107},
    {1120},
    {1121},
    {1124},
    {1137}
};

new hydraulics[1][0] = {
    {1087}
};

new vbase[1][0] = {
    {1086}
};

new rbbars[4][0] = {
    {1109},
    {1110},
    {1123},
    {1125}
};

new fbbars[2][0] = {
    {1115},
    {1116}
};

new wheels[17][0] = {
    {1025},
    {1073},
    {1074},
    {1075},
    {1076},
    {1077},
    {1078},
    {1079},
    {1080},
    {1081},
    {1082},
    {1083},
    {1084},
    {1085},
    {1096},
    {1097},
    {1098}
};

new lights[2][0] = {
	{1013},
	{1024}
};

//ZOMBIE SYSTEM
#define ZOMBIE_TIME		(0)
#define ZOMBIE_WEATHER	(9)

new ZombieMusic[][] =
{
	"https://www.dropbox.com/s/dyc7689hg1ss1v4/zombi1.mp3?dl=1",
	"https://www.dropbox.com/s/pp6wf4ha0tqkrda/zombi2.mp3?dl=1",
	"https://www.dropbox.com/s/hfcn5ou7fsknd8x/zombi3.mp3?dl=1",
	"https://www.dropbox.com/s/szinw2z9adrojxu/zombi4.mp3?dl=1"
};

enum
{
	TEAM_HUMANS,
	TEAM_ZOMBIE
};

enum ZINFO
{
	Z_TEAM_PLAYERS[2],
	Z_PLAYERS
};

new ZI[ZINFO];

new ZombieColor[] =
{
	0xC6D855AA,
	0xCF3200AA
};

new ZombieWeathers[] =
{
	ZOMBIE_WEATHER,
	ZOMBIE_WEATHER //754
};

new Float:ZombieSpawns[][][] =
{
	{
		{1893.895874, -1944.860961, 13.546875, 280.360015}, //h1
		{1814.852661, -1879.422851, 13.578125, 333.313934}, //h2
		{1611.209228, -1725.708374, 13.546875, 90.188339}, //h3
		{1275.393188, -1566.630615, 13.539091, 303.233612}, //h4
		{904.827758, -991.931823, 37.621093, 61.988059}, //h5
		{741.323852, -1783.682006, 13.165971, 301.690338} //h6
	},
	
	{
		{1075.176635, -1400.469970, 13.529095, 246.543334}, //z1
		{530.908386, -1657.995239, 18.531250, 218.343063}, //z2
		{1718.421142, -1247.170898, 13.792890, 189.852767}, //z3
		{1451.383178, -1174.337280, 23.689067, 297.327026}, //z4
		{2560.831298, -1260.371582, 45.923145, 81.751586}, //z5
		{2715.921630, -1524.584228, 29.745475, 189.852539} //z6
	}
};

new ZombieSkins[][] =
{
	{6, 15, 21, 56, 60, 73, 93, 100, 121, 142, 258},
	{77, 134, 137, 212, 230, 162, 162, 162, 162, 162, 162}
};

native IsValidVehicle(vehicleid);

main()
{
	print("\n----------------------------------");
	print("  LEGACY FREEROAM version "SERVER_VERSION" is on!");
	print("----------------------------------\n\n\n");
}

stock number_format(e_number)
{
	new f_string[24];
	format(f_string, sizeof f_string, "%d", e_number);
	
	new numbers = strlen(f_string);
	while(numbers > 3)
	{
		numbers -= 3;
		strins(f_string, ".", numbers);
	}
	return f_string;
}

public OnGameModeInit()
{		
	OpenDataBase();
	db_query(Database, "UPDATE USERS SET CONNECTED = '0', PLAYERID = '-1'");
	//format(DB_Query, sizeof DB_Query, "UPDATE USERS SET LCONNECT = '%d'", gettime());
	//db_query(Database, DB_Query);
	
	SetGameModeText(GAMEMODETEXT);
    SendRconCommand("hostname 			"HOSTNAME"");
    SendRconCommand("language 			"LANGUAGE"");
	SendRconCommand("weburl 			"SERVER_WEB"");
	SendRconCommand("minconnectiontime 	3000");
	SendRconCommand("ackslimit 			5000");
	SendRconCommand("chatlogging 		1");
	
	Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT, 550);
	AddPlayerClasses();
	UsePlayerPedAnims();
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(false);
	EnableVehicleFriendlyFire();
	LoadDMNames("DM/dms.LSR");
	LoadDerbyNames("DERBY/derbys.LSR");
	LoadFallNames("FALL/falls.LSR");
	LoadTDMNames("TDM/tdms.LSR");
	LoadShooterNames("SHOOTER/shooters.LSR");
	LoadRacesNames("RACE/races.LSR");
	CreateDialogsStrings();
	CreateObjects();
	CreatePickups();
	CreateTextDraws();
	LoadHouses();
	LoadCrews();
	SetTimers();
	//UpdateDNS();
	
	print("\n\n\n*** "SERVER_NAME" ***");
	print("----------------------------------");
	printf("--- USERS:\t%d", GetTotalUsers());
	printf("--- OWN CARS:\t%d", GetTotalVehicles());
	printf("--- SONGS:\t%d", GetTotalSongs());
	printf("--- PROPERTIES:\t%d (%d sold, %d free)", HOUSES_LOADED, HOUSES_SOLD, (HOUSES_LOADED - HOUSES_SOLD));
	printf("--- CREWS:\t%d", Total_Crews);
	printf("--- MAPAS DM:\t%d", Total_DM);
	printf("--- MAPAS DI:\t%d", TOTAL_DERBYS);
	printf("--- MAPAS FI:\t%d", TOTAL_FALLS);
	printf("--- MAPAS TDM:\t%d", TOTAL_TDM);
	printf("--- MAPAS ST:\t%d", TOTAL_SHOOTER);
	printf("--- MAPAS RC:\t%d", TOTAL_RACES);
	print("----------------------------------\n*** "VERSION_DATE" ***\n");
	return 1;
}

public OnGameModeExit()
{
	return 1;
}

public OnPlayerConnect(playerid)
{
	TOTAL_PLAYERS += 1;
	UpdateCountPlayersTextDraws();
	if(IsPlayerNPC(playerid))
	{
		PI[playerid][P_BOT] = true;
		Kick(playerid);
		return 1;
	}
	
	GetPlayerIp(playerid, PI[playerid][P_IP], 16);
	new num_players_on_ip = GetNumberOfPlayersOnThisIP(PI[playerid][P_IP]);
	GetPlayerName(playerid, PI[playerid][P_NAME], MAX_PLAYER_NAME);
	if(num_players_on_ip > 3)
	{
		PI[playerid][P_BOT] = true;
		Kick(playerid);
		return 1;
	}
	
	PI[playerid][P_CHATCOLOR] = 13421772; //CCCCCC
	PI[playerid][P_CREW_SLOT] = -1;
	
	EnablePlayerCameraTarget(playerid, true);
	PI[playerid][P_STATUS] = S_CONNECTED;
	PI[playerid][P_USER_CONNECTED_TICKCOUNT] = gettime();
	//GameTextForPlayer(playerid, "~g~~h~~h~LEGACY~n~~y~~h~freeroam", 10000, 6);
	CreatePlayerTextDraws(playerid);
	RemovePlayerBuildings(playerid);
	for(new i = 0; i != sizeof TD_WELCOME; i ++) TextDrawShowForPlayer(playerid, TD_WELCOME[i]);
	TextDrawShowForPlayer(playerid, TD_LSR_HUD[3]);
	PlayAudioStreamForPlayer(playerid, RandomMusic[random(sizeof(RandomMusic))][1]);
	return 1;
}

/*public OnReverseDNS(ip[], host[], extra)
{
	format(PI[extra][P_DNS], 45, "%s", host);
	for(new i = 0; i != sizeof BANNED_DNS; i++)
	{
		if(!isnull(BANNED_DNS[i]))
		{
			if(strfind(PI[extra][P_DNS], BANNED_DNS[i], true) != -1)
			{
				PlayerTextDrawSetString(extra, PTD_LSR_KICKED[extra][1], "Has_sido_expulsado_del_servidor.");
				PlayerTextDrawSetString(extra, PTD_LSR_KICKED[extra][2], "REASON:_~r~DNS baneada. Las proxies/VPN no estan permitidas.");
				PlayerTextDrawSetString(extra, PTD_LSR_KICKED[extra][3], "Desactive el Proxy o VPN y vuelva a entrar.");
					
				PlayerTextDrawShow(extra, PTD_LSR_KICKED[extra][0]);
				PlayerTextDrawShow(extra, PTD_LSR_KICKED[extra][1]);
				PlayerTextDrawShow(extra, PTD_LSR_KICKED[extra][2]);
				PlayerTextDrawShow(extra, PTD_LSR_KICKED[extra][3]);
				PlayerTextDrawShow(extra, PTD_LSR_KICKED[extra][4]);
				PlayerPlaySoundEx(extra, 5203, 0.0, 0.0, 0.0);
				PI[extra][P_TIMERS][4] = SetTimerEx("KickExPlayer", 500, false, "dd", extra, false);
				
				new message[145]; format(message, 145, "{FF7A45}AVISO: El jugador %s ha sido expulsado por DNS prohibida.", PI[extra][P_NAME]);
				SendMessageToAdmins(-1, message);
				
				format(message, 145, "Jugador %s (%d) [%s] kickeado por DNS prohibida (%s) ", PI[extra][P_NAME], PI[extra][P_ID], PI[extra][P_IP], PI[extra][P_DNS]);
				AntiCheatLog(message);
				return 1;
			}
		}
	}
	return 1;
}

AddDNS(dns[])
{
	new File:handle = fopen("SERVER/dns.txt", io_append);
	if(handle)
	{
		new line[64]; format(line, 64, "%s\r\n", dns);
		fwrite(handle, line);
		fclose(handle);
	}
	return 1;
}

UpdateDNS()
{
	new File:Handler = fopen("SERVER/dns.txt", io_read);
    if(!Handler) return 0;
	new Total_DNS = 0;
	for(new i = 0; i != sizeof BANNED_DNS; i++) format(BANNED_DNS[i], 45, "");
    while(fread(Handler, Object_String))
    {
        StripNewLine(Object_String);
        format(BANNED_DNS[Total_DNS], 45, "%s", Object_String);
        Total_DNS ++;
    }

    fclose(Handler);
	return 1;
}*/

stock GetNumberOfPlayersOnThisIP(test_ip[])
{
	new against_ip[16], ip_count = 0;
	for(new x = 0, j = GetPlayerPoolSize(); x <= j; x++) 
	{
		if(IsPlayerConnected(x)) 
		{
		    GetPlayerIp(x, against_ip, 16);
		    if(!strcmp(against_ip, test_ip)) ip_count++;
		}
	}
	return ip_count;
}

public OnPlayerRequestClass(playerid, classid)
{
	ApplyAnimation(playerid, "ON_LOOKERS", "shout_02", 4.1, true, true, true, true, 0); //encourage
	
	if(PI[playerid][P_STATUS] != S_CONNECTED && PI[playerid][P_STATUS] != S_CLASS)
	{
		ExitPlayerGameMode(playerid);
		PI[playerid][P_SELECT_MODE_PAGE] = 0;
		TextDrawHideForPlayer(playerid, TD_LSR_HUD[0]);
		TextDrawHideForPlayer(playerid, TD_LSR_HUD[1]);
		TextDrawHideForPlayer(playerid, TD_LSR_HUD[2]);
		TextDrawShowForPlayer(playerid, TD_LSR_WEB_INFO);
		
		SetPlayerCameraPos(playerid, 0.0, -8.8383, 2500.0);
		SetPlayerCameraLookAt(playerid, 0.0, 0.0, 2500.0);
		SetPlayerPosEx(playerid, -1.00000, -0.96780, 2499.74292, 180.0);
		SetPlayerTime(playerid, 18, 0);
		SetPlayerWeather(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		Streamer_UpdateEx(playerid, -1.00000, -0.96780, 2499.74292);
		StopAudioStreamForPlayer(playerid);
		PlayAudioStreamForPlayerEx(playerid, RandomMusic[random(sizeof(RandomMusic))][1]);
		SetPlayerSkin(playerid, PI[playerid][P_SAVED_SKIN]);
	}
   
	if(PI[playerid][P_STATUS] == S_CONNECTED)
	{
		for(new i = 0; i != sizeof TD_WELCOME; i ++) TextDrawHideForPlayer(playerid, TD_WELCOME[i]);
		TextDrawShowForPlayer(playerid, TD_LSR_WEB_INFO);
		//rdns(PI[playerid][P_IP], playerid);
		ResetPlayerWeapons(playerid);
		ResetPlayerMoney(playerid);
		SendClientMessage(playerid, -1, "{CCCCCC}welcome to {99CC00}Legacy Freeroam {CCCCCC}(versin {99CC00}"SERVER_VERSION"{CCCCCC})");
		SendClientMessage(playerid, -1, "{CCCCCC}Date update: {B0E66A}"VERSION_DATE".");
		
		
		new DBResult:Result;
		format(DB_Query, sizeof(DB_Query), "SELECT PASS, BANNED, TEMPBAN FROM USERS WHERE NAME = '%s'", PI[playerid][P_NAME]);
		Result = db_query(Database, DB_Query);
		if(db_num_rows(Result))
		{
	        PI[playerid][P_PASS] = db_get_field_int(Result, 0);
			PI[playerid][P_BANNED] = db_get_field_int(Result, 1);
			PI[playerid][P_TEMPBAN] = db_get_field_int(Result, 2);
			
			if(PI[playerid][P_BANNED])
			{
				SendClientMessage(playerid, -1, "{CC0000}This account is permanently expelled.");
				PI[playerid][P_TIMERS][4] = SetTimerEx("KickExPlayer", 500, false, "dd", playerid, false);
				return  1;
			}
			
			if(PI[playerid][P_TEMPBAN] > 0)
			{
				if(gettime() >= PI[playerid][P_TEMPBAN])
				{
					SendClientMessage(playerid, -1, "{99CC00}Your expulsion has risen. Hopefully it does not happen again.");
					PI[playerid][P_TEMPBAN] = 0;
				}
				else
				{
					SendClientMessage(playerid, -1, "{CC0000}An your expulsion is not risen.");
					PI[playerid][P_TIMERS][4] = SetTimerEx("KickExPlayer", 500, false, "dd", playerid, false);
					return 1;
				}
			}
			
			PI[playerid][P_USEREXIT] = true;
			ShowDialog(playerid, DIALOG_LOGIN);
		}
		else
		{
			PI[playerid][P_SAVED_SKIN] = classid;
			SendClientMessageEx(-1, -1, "{B0E66A}%s {CCCCCC}has entered the server", PI[playerid][P_NAME]);
		}
		
	    db_free_result(Result);
		
		PI[playerid][P_COLOR] = RandomColors[random(sizeof RandomColors)];
		SetPlayerCameraPos(playerid, 0.0, -8.8383, 2500.0);
		SetPlayerCameraLookAt(playerid, 0.0, 0.0, 2500.0);	
		SetPlayerPosEx(playerid, -1.00000, -0.96780, 2499.74292, 180.0);
		SetPlayerTime(playerid, 18, 0);
		SetPlayerWeather(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		Streamer_UpdateEx(playerid, -1.00000, -0.96780, 2499.74292);
	}

    PI[playerid][P_STATUS] = S_CLASS;
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	if(PI[playerid][P_STATUS] == S_CONNECTED) return OnPlayerRequestClass(playerid, 0);
	if(PI[playerid][P_USEREXIT] && !PI[playerid][P_LOGGED]) return 0;
	if(PI[playerid][P_GAMEMODE] == M_NONE)
	{
		if(PI[playerid][P_SELECTING_ZOMBIE_TEAM]) return 0;
		GameTextForPlayer(playerid, "_", 100, 6);
		for(new i = 0; i != 6; i++) TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[i]);
		ShowSelectMode(playerid, PI[playerid][P_SELECT_MODE_PAGE]);
		TextDrawShowForPlayer(playerid, TD_LSR_SMODE_PAGE[0]);
		TextDrawShowForPlayer(playerid, TD_LSR_SMODE_PAGE[1]);
		if(PI[playerid][P_SELECTING_MODE_TD] != 2)
		{
			PI[playerid][P_SELECTING_MODE_TD] = true;
			SelectTextDraw(playerid, 0x999999FF);
		}
		return 0;
	}
    return 0;
}

public OnPlayerSpawn(playerid)
{
	if(!PI[playerid][P_USEREXIT]) SendClientMessage(playerid, -1, "{"ORANGE"}Remember what you must be registered to save your progress, use {"GREY"}/register.");
	if(PI[playerid][P_STATUS] == S_DEAD) SetPlayerInterior(playerid, 0);
	if(PI[playerid][P_STATUS] == S_CLASS) SendClientMessage(playerid, -1, "{C6D855}Remember to use the command {FFFC33}/mode {C6D855}To change mode.");
	new iscoming = PI[playerid][P_STATUS];
	PI[playerid][P_STATUS] = S_SPAWNED;
	if(PI[playerid][P_JOINDERBY])
	{
		SetPlayerColor(playerid, PI[playerid][P_COLOR]);
		JoinPlayerGameMode(playerid, GAME_DERBY);
		return 1;
	}
	switch(PI[playerid][P_GAMEMODE])
	{
		case M_DUEL:
		{
			if(!DLI[PI[playerid][P_DUEL_ID]][DL_RUNNING]) SendClientMessage(playerid, -1, "{CCCCCC}Info: The duel has ended, to leave the duel /exitduel.");
			SetPlayerInterior(playerid, DUEL_LIST[ DLI[PI[playerid][P_DUEL_ID]][DL_DUEL_LIST_ID] ][DUEL_LIST_INTERIOR]);
			return 1;
		}
		case M_FREEROAM:
		{
			if(PI[playerid][P_DESMADRE])
			{
				SetPlayerInterior(playerid, 1);
				SetPlayerVirtualWorld(playerid, FREEROAM_VW);
			}
			
			if(PI[playerid][P_VIP]) SetPlayerArmour(playerid, 100.0);
			return 1;
		}
		case M_DM:
		{	
			SetPlayerVirtualWorld(playerid, DM_VW);
			SetPlayerInterior(playerid, DM_INT);
			for (new i = 0; i <= 12; i++) GivePlayerWeapon(playerid, DM_WEP[i][0], DM_WEP[i][1]);
			SetPlayerTime(playerid, DM_TWEATHER[0], 0);
			SetPlayerWeather(playerid, DM_TWEATHER[1]);
			SetCameraBehindPlayer(playerid);
			if(iscoming == S_CLASS)
			{
				if(DM_FREEZE)
				{
					TogglePlayerControllable(playerid, false);
					PI[playerid][P_TIMERS][0] = SetTimerEx("UnfreezePlayer", 3000, false, "d", playerid);
				}
			}
			return 1;
		}
		
		case M_TDM:
		{
			SetPlayerArmour(playerid, 0.0);
			SetPlayerHealth(playerid, 100.0);
			ResetPlayerWeapons(playerid);
			SetPlayerVirtualWorld(playerid, TDM_VW);
			SetPlayerInterior(playerid, TDMI[T_INT]);
			for (new i = 0; i <= 12; i++) GivePlayerWeapon(playerid, TDM_WEP[i][0], TDM_WEP[i][1]);
			SetPlayerTime(playerid, TDMI[T_WEATHER][0], 0);
			SetPlayerWeather(playerid, TDMI[T_WEATHER][1]);
			if(iscoming == S_CLASS)
			{
				if(TDMI[T_FREEZE])
				{
					TogglePlayerControllable(playerid, false);
					PI[playerid][P_TIMERS][0] = SetTimerEx("UnfreezePlayer", 3000, false, "d", playerid);
				}
			}
			else
			{
				if(TDMI[T_FREEZE]) SetPlayerVelocity(playerid, 0.0, 0.0, 0.2);
			}
			return 1;
		}
		
		case M_SHOOTER:
		{
			SetPlayerArmour(playerid, 0.0);
			SetPlayerHealth(playerid, 100.0);
			ResetPlayerWeapons(playerid);
			SetPlayerVirtualWorld(playerid, SHOOTER_VW);
			SetPlayerInterior(playerid, ST[S_INT]);
			SetPlayerTime(playerid, ST[S_WEATHER][0], 0);
			SetPlayerWeather(playerid, ST[S_WEATHER][1]);
			if(iscoming == S_CLASS)
			{
				switch(ST[S_STATUS])
				{
					case SHOOTER_RUNNING:
					{
						PI[playerid][P_SHOOTER_STATUS] = PD_SPECTATE;
						for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
						{
							if(IsPlayerConnected(i))
							{
								if(PI[i][P_GAMEMODE] == M_SHOOTER)
								{
									if(PI[i][P_SHOOTER_STATUS] == PD_NORMAL)
									{
										PI[playerid][P_SHOOTER_SPECTATEPLAYER] = i;
										break;
									}
								}
							}
						}
						for(new x; x != sizeof TD_SHOOTER; x ++) TextDrawShowForPlayer(playerid, TD_SHOOTER[x]);
						TogglePlayerSpectatingEx(playerid, true);
						PlayerSpectateVehicle(playerid, PI[PI[playerid][P_SHOOTER_SPECTATEPLAYER]][P_SHOOTER_VEHICLEID]);
						SendClientMessage(playerid, -1, "{"ORANGE"}Press the key {"GREY"}INTRO {"ORANGE"}To change the player.");
					}
					case SHOOTER_WAIT:
					{
						
						if(IsValidVehicle(PI[playerid][P_SHOOTER_VEHICLEID]) && PI[playerid][P_SHOOTER_VEHICLEID] != INVALID_VEHICLE_ID)
						{
							DestroyVehicleEx(PI[playerid][P_SHOOTER_VEHICLEID]);
							PI[playerid][P_SHOOTER_VEHICLEID] = INVALID_VEHICLE_ID;
						}
						PI[playerid][P_SHOOTER_VEHICLEID] = CreateVehicle(ST[S_VEH_MODELID], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][0], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][1], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][2], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][3], minrand(128, 255), minrand(128, 255), 99999);
						SetVehicleVirtualWorld(PI[playerid][P_SHOOTER_VEHICLEID], SHOOTER_VW);
						LinkVehicleToInterior(PI[playerid][P_SHOOTER_VEHICLEID], ST[S_INT]);
						SetVehicleParamsEx(PI[playerid][P_SHOOTER_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
						PutPlayerInVehicleEx(playerid, PI[playerid][P_SHOOTER_VEHICLEID], 0);
						
						return 1;
					}
				}
			}
			else
			{
				if(ST[S_STATUS] == SHOOTER_RUNNING)
				{
					if(PI[playerid][P_SHOOTER_STATUS] == PD_SPECTATE)
					{
						TogglePlayerSpectatingEx(playerid, true);
						PlayerSpectateVehicle(playerid, PI[PI[playerid][P_SHOOTER_SPECTATEPLAYER]][P_SHOOTER_VEHICLEID]);
					}
					else PlayerShooterDead(playerid);
				}
				else if(ST[S_STATUS] == SHOOTER_WAIT)
				{
					
					if(IsValidVehicle(PI[playerid][P_SHOOTER_VEHICLEID]) && PI[playerid][P_SHOOTER_VEHICLEID] != INVALID_VEHICLE_ID)
					{
						DestroyVehicleEx(PI[playerid][P_SHOOTER_VEHICLEID]);
						PI[playerid][P_SHOOTER_VEHICLEID] = INVALID_VEHICLE_ID;
					}
					PI[playerid][P_SHOOTER_VEHICLEID] = CreateVehicle(ST[S_VEH_MODELID], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][0], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][1], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][2], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][3], minrand(128, 255), minrand(128, 255), 99999);
					SetVehicleVirtualWorld(PI[playerid][P_SHOOTER_VEHICLEID], SHOOTER_VW);
					LinkVehicleToInterior(PI[playerid][P_SHOOTER_VEHICLEID], ST[S_INT]);
					SetVehicleParamsEx(PI[playerid][P_SHOOTER_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
					PutPlayerInVehicleEx(playerid, PI[playerid][P_SHOOTER_VEHICLEID], 0);
					
					return 1;
				}
			}
		}
		
		case M_RACE:
		{
			SetPlayerArmour(playerid, 0.0);
			SetPlayerHealth(playerid, 100.0);
			ResetPlayerWeapons(playerid);
			SetPlayerVirtualWorld(playerid, RACE_VW);
			SetPlayerInterior(playerid, RC[R_INT]);
			SetPlayerTime(playerid, RC[R_WEATHER][0], 0);
			SetPlayerWeather(playerid, RC[R_WEATHER][1]);
			if(iscoming == S_CLASS)
			{
				switch(RC[R_STATUS])
				{
					case RACE_RUNNING:
					{
						PI[playerid][P_RACE_STATUS] = PD_SPECTATE;
						for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
						{
							if(IsPlayerConnected(i))
							{
								if(PI[i][P_GAMEMODE] == M_RACE)
								{
									if(PI[i][P_RACE_STATUS] == PD_NORMAL)
									{
										PI[playerid][P_RACE_SPECTATEPLAYER] = i;
										break;
									}
								}
							}
						}
						for(new x; x != sizeof TD_SHOOTER; x ++) TextDrawShowForPlayer(playerid, TD_RACE[x]);
						TogglePlayerSpectatingEx(playerid, true);
						PlayerSpectateVehicle(playerid, PI[PI[playerid][P_RACE_SPECTATEPLAYER]][P_RACE_VEHICLEID]);
						SendClientMessage(playerid, -1, "{"ORANGE"}Press the key {"GREY"}INTRO {"ORANGE"}To change the player.");
					}
					case RACE_WAIT:
					{
						
						if(IsValidVehicle(PI[playerid][P_RACE_VEHICLEID]) && PI[playerid][P_RACE_VEHICLEID] != INVALID_VEHICLE_ID)
						{
							DestroyVehicleEx(PI[playerid][P_RACE_VEHICLEID]);
							PI[playerid][P_RACE_VEHICLEID] = INVALID_VEHICLE_ID;
						}
						PI[playerid][P_RACE_VEHICLEID] = CreateVehicle(RC[R_MODELID], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][0], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][1], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][2] + 0.5, RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][3], minrand(128, 255), minrand(128, 255), 99999);
						SetVehicleVirtualWorld(PI[playerid][P_RACE_VEHICLEID], RACE_VW);
						LinkVehicleToInterior(PI[playerid][P_RACE_VEHICLEID], RC[R_INT]);
						SetVehicleParamsEx(PI[playerid][P_RACE_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
						PutPlayerInVehicleEx(playerid, PI[playerid][P_RACE_VEHICLEID], 0);
						
						for(new i = 0; i != sizeof TD_RACE_Collisions; i ++) TextDrawShowForPlayer(playerid, TD_RACE_Collisions[i]);
						if(!PI[playerid][P_RACE_VOTED]) SelectTextDraw(playerid, 0x999999FF);
						return 1;
					}
				}
			}
			else
			{
				if(RC[R_STATUS] == RACE_RUNNING)
				{
					if(PI[playerid][P_RACE_STATUS] == PD_SPECTATE)
					{
						TogglePlayerSpectatingEx(playerid, true);
						PlayerSpectateVehicle(playerid, PI[PI[playerid][P_RACE_SPECTATEPLAYER]][P_RACE_VEHICLEID]);
					}
					else
					{
						if(IsValidVehicle(PI[playerid][P_RACE_VEHICLEID]) && PI[playerid][P_RACE_VEHICLEID] != INVALID_VEHICLE_ID)
						{
							DestroyVehicleEx(PI[playerid][P_RACE_VEHICLEID]);
							PI[playerid][P_RACE_VEHICLEID] = INVALID_VEHICLE_ID;
						}
						new kkc = PI[playerid][P_RACE_CPCOUNT] - 1;
						if(kkc < 0) kkc = 0;
						PI[playerid][P_RACE_VEHICLEID] = CreateVehicle(RC[R_MODELID], RACE_CP[ kkc ][R_CP_POS][0], RACE_CP[ kkc ][R_CP_POS][1], RACE_CP[ kkc ][R_CP_POS][2] + 0.5, RC[R_ANGLE], minrand(128, 255), minrand(128, 255), 99999);
						SetVehicleVirtualWorld(PI[playerid][P_RACE_VEHICLEID], RACE_VW);
						LinkVehicleToInterior(PI[playerid][P_RACE_VEHICLEID], RC[R_INT]);
						SetVehicleParamsEx(PI[playerid][P_RACE_VEHICLEID], VEHICLE_PARAMS_ON, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
						PutPlayerInVehicleEx(playerid, PI[playerid][P_RACE_VEHICLEID], 0);	
					}
				}
				else if(RC[R_STATUS] == RACE_WAIT)
				{
					
					if(IsValidVehicle(PI[playerid][P_RACE_VEHICLEID]) && PI[playerid][P_RACE_VEHICLEID] != INVALID_VEHICLE_ID)
					{
						DestroyVehicleEx(PI[playerid][P_RACE_VEHICLEID]);
						PI[playerid][P_RACE_VEHICLEID] = INVALID_VEHICLE_ID;
					}
					PI[playerid][P_RACE_VEHICLEID] = CreateVehicle(RC[R_MODELID], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][0], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][1], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][2] + 0.5, RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][3], minrand(128, 255), minrand(128, 255), 99999);
					SetVehicleVirtualWorld(PI[playerid][P_RACE_VEHICLEID], RACE_VW);
					LinkVehicleToInterior(PI[playerid][P_RACE_VEHICLEID], RC[R_INT]);
					SetVehicleParamsEx(PI[playerid][P_RACE_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
					PutPlayerInVehicleEx(playerid, PI[playerid][P_RACE_VEHICLEID], 0);
					
					for(new i = 0; i != sizeof TD_RACE_Collisions; i ++) TextDrawShowForPlayer(playerid, TD_RACE_Collisions[i]);
					if(!PI[playerid][P_RACE_VOTED]) SelectTextDraw(playerid, 0x999999FF);
					return 1;
				}
			}
		}
		
		case M_DERBY:
		{
			if(DI[D_STATUS] == DERBY_RUNNING)
			{
				if(PI[playerid][P_DERBY_STATUS] == PD_SPECTATE)
				{
					TogglePlayerSpectatingEx(playerid, true);
					PlayerSpectateVehicle(playerid, PI[PI[playerid][P_DERBY_SPECTATEPLAYER]][P_DERBY_VEHICLEID]);
				}
				else PlayerDerbyDead(playerid);
			}
			else if(DI[D_STATUS] == DERBY_WAIT)
			{
				if(PI[playerid][P_DERBY_STATUS] == PD_NORMAL)
				{
					if(!IsValidVehicle(PI[playerid][P_DERBY_VEHICLEID]) && PI[playerid][P_DERBY_VEHICLEID] != INVALID_VEHICLE_ID) return SpawnDerbyCarForPlayer(playerid, DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][0], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][1], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][2]+2.0, DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][3], DI[D_VEHICLE]);
					PutPlayerInVehicleEx(playerid, PI[playerid][P_DERBY_VEHICLEID], 0);
				}
			}
			return 1;
		}
		
		case M_FALL:
		{
			if(FI[F_STATUS] == FALL_RUNNING)
			{
				if(PI[playerid][P_FALL_STATUS] == PD_DEAD)
				{
					TogglePlayerSpectatingEx(playerid, true);
					InterpolateCameraPos(playerid, FI[F_DEAD_CAM][0], FI[F_DEAD_CAM][1], FI[F_DEAD_CAM][2], FI[F_DEAD_CAM][0], FI[F_DEAD_CAM][1], FI[F_DEAD_CAM][2], 500);
					InterpolateCameraLookAt(playerid, FI[F_DEAD_CAM][3], FI[F_DEAD_CAM][4], FI[F_DEAD_CAM][5], FI[F_DEAD_CAM][3], FI[F_DEAD_CAM][4], FI[F_DEAD_CAM][5], 500);
				}
				else PlayerFallDead(playerid);
			}
			else if(FI[F_STATUS] == FALL_WAIT) TogglePlayerControllable(playerid, false);
			return 1;
		}
		
		case M_ZOMBIE:
		{
			SetPlayerDrunkLevel(playerid, 0);
			TextDrawHideForPlayer(playerid, TD_LSR_ZOMBIE_INFECTED);
			ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 0, 0, 0, 0, true);
			ClearAnimations(playerid);
			if(PI[playerid][P_ZOMBIE_TEAM] == TEAM_HUMANS)
			{
				ResetPlayerWeapons(playerid);
				GivePlayerWeapon(playerid, 5, 1);
				GivePlayerWeapon(playerid, 24, minrand(50, 150));
				return 1;
			}
			else if(PI[playerid][P_ZOMBIE_TEAM] == TEAM_ZOMBIE) SetPlayerSkin(playerid, ZombieSkins[PI[playerid][P_ZOMBIE_TEAM]][random(sizeof(ZombieSkins[]))]);
			return 1;
		}
		
		case M_EVENT:
		{
			SetPlayerPosEx(playerid, EVENT_POS[0], EVENT_POS[1], EVENT_POS[2], EVENT_POS[3], EVENT_INT, EVENT_VIRUALWORLD, EVENT_FREEZE, false, EVENT_VEHICLE);
			ResetPlayerWeapons(playerid);
			GivePlayerWeapon(playerid, EVENT_WEP[0], 500);
			GivePlayerWeapon(playerid, EVENT_WEP[1], 500);
			GivePlayerWeapon(playerid, EVENT_WEP[2], 500);
			GivePlayerWeapon(playerid, EVENT_WEP[3], 500);
			GivePlayerWeapon(playerid, EVENT_WEP[4], 500);
			SetPlayerTime(playerid, EVENT_TIME, 0);
			SetPlayerWeather(playerid, EVENT_WEATHER);
			SetPlayerArmour(playerid, 0.0);
			SetPlayerHealth(playerid, 100.0);
			return 1;
		}
	}
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	TOTAL_PLAYERS -= 1;
	
	UpdateCountPlayersTextDraws();
	BlockIpAddress(PI[playerid][P_IP], 12000);
	
	switch(reason)
	{
		case 0: SendClientMessageEx(-1, -1, "{B0E66A}%s {CCCCCC}He has left the server (crash)", PI[playerid][P_NAME]);
		case 1: SendClientMessageEx(-1, -1, "{B0E66A}%s {CCCCCC}He has left the server", PI[playerid][P_NAME]);
		case 2:
		{
			if(!PI[playerid][P_BOT]) SendClientMessageEx(-1, -1, "{B0E66A}%s {CCCCCC}He has left the server (%s)", PI[playerid][P_NAME], ( PI[playerid][P_BANNED] == 1 ? ("baneado") : ("expulsado") ) );
		}
	}
			
	if(PI[playerid][P_USEREXIT] && PI[playerid][P_LOGGED])
	{
		if(PI[playerid][P_VEHICLES] > 0)
		{
			for(new i = 0; i != MAX_VEHICLES_PER_PLAYER; i++)
			{
				if(PI[playerid][P_VEHICLES_VEH_ID][i] != 0)
				{
					UpdatePlayerVehicle(PI[playerid][P_VEHICLES_VEH_ID][i], true);
				}
			}
		}
		UpdateUserData(playerid, true);
	}
	DestroyPlayerTextDraws(playerid);
	ResetPlayerVariables(playerid);
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	if(clickedid == Text:INVALID_TEXT_DRAW)
	{
		if(PI[playerid][P_SELECTING_MODE_TD] == 1)
		{
			PI[playerid][P_SELECTING_MODE_TD] = false;
			CancelSelectTextDraw(playerid);
			for(new i = 0; i != sizeof TD_LSR_SELECTMODE; i++) TextDrawHideForPlayer(playerid, TD_LSR_SELECTMODE[i]);
			TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[0]);
			TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[1]);
			return 1;
		}
		if(PI[playerid][P_SELECTING_ZOMBIE_TEAM])
		{
			for(new i = 0; i != sizeof TD_LSR_ZOMBIE_EDITION; i++) TextDrawHideForPlayer(playerid, TD_LSR_ZOMBIE_EDITION[i]);
			PI[playerid][P_SELECTING_ZOMBIE_TEAM] = false;
			
			StopAudioStreamForPlayer(playerid);
			PlayAudioStreamForPlayerEx(playerid, RandomMusic[random(sizeof(RandomMusic))][1]);
			SetPlayerCameraPos(playerid, -0.3055, -8.8383, 2500.1448);
			SetPlayerCameraLookAt(playerid, -0.2982, -7.8397, 2500.0933);	
			SetPlayerPosEx(playerid, -1.00000, -0.96780, 2499.74292, 180.0);
			SetPlayerTime(playerid, 18, 0);
			SetPlayerWeather(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			Streamer_UpdateEx(playerid, -1.00000, -0.96780, 2499.74292);
			return 1;
		}
		if(PI[playerid][P_SHOPCAR])
		{
			HidePlayerCarShop(playerid);
			return 1;
		}
		if(PI[playerid][P_TUNING_MENU])
		{
			HidePlayerTuningMenu(playerid);
			return 1;
		}
	}
	else if(	(clickedid == TD_LSR_SMODE_PAGE[0] || clickedid == TD_LSR_SMODE_PAGE[1]) && PI[playerid][P_SELECTING_MODE_TD] == 1)
	{
		for(new i = 6; i != sizeof TD_LSR_SELECTMODE; i++) TextDrawHideForPlayer(playerid, TD_LSR_SELECTMODE[i]);
		if(PI[playerid][P_SELECT_MODE_PAGE]) PI[playerid][P_SELECT_MODE_PAGE] = 0;
		else PI[playerid][P_SELECT_MODE_PAGE] = 1;
		ShowSelectMode(playerid, PI[playerid][P_SELECT_MODE_PAGE]);
		return 1;
	}
	else if(clickedid == TD_LSR_SELECTMODE[6] && PI[playerid][P_SELECTING_MODE_TD] == 1)	//FREEROAM
	{
		if(PI[playerid][P_GAMEMODE] != M_NONE) ExitPlayerGameMode(playerid);
		SetPlayerTeam(playerid, NO_TEAM);
		PI[playerid][P_SELECTING_MODE_TD] = false;
		CancelSelectTextDraw(playerid);
		for(new i = 0; i != sizeof TD_LSR_SELECTMODE; i++) TextDrawHideForPlayer(playerid, TD_LSR_SELECTMODE[i]);
		TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[0]);
		TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[1]);
		if(!PI[playerid][P_IGNORE_LSRTD])
		{
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[0]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[1]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[2]);
		}
		TextDrawHideForPlayer(playerid, TD_LSR_WEB_INFO);
		
		JoinPlayerGameMode(playerid, GAME_FREEROAM);
		StopAudioStreamForPlayer(playerid);
		SpawnPlayer(playerid);
		return 1;
	}
	else if(clickedid == TD_LSR_SELECTMODE[8] && PI[playerid][P_SELECTING_MODE_TD] == 1)	//GANG WARS
	{
		PI[playerid][P_SELECTING_MODE_TD] = 2;
		CancelSelectTextDraw(playerid);
		ShowDialog(playerid, DIALOG_SELECT_GANG_TEAM);
		return 1;
	}
	else if(clickedid == TD_LSR_SELECTMODE[10] && PI[playerid][P_SELECTING_MODE_TD] == 1) //DERBY
	{
		if(DI[D_PLAYERS] >= MAX_DERBY_PLAYERS) return SendClientMessage(playerid, -1, "{"ORANGE"}This game is complete.");
		if(PI[playerid][P_GAMEMODE] != M_NONE) ExitPlayerGameMode(playerid);
		SetPlayerTeam(playerid, NO_TEAM);
		PI[playerid][P_SELECTING_MODE_TD] = false;
		CancelSelectTextDraw(playerid);
		for(new i = 0; i != sizeof TD_LSR_SELECTMODE; i++) TextDrawHideForPlayer(playerid, TD_LSR_SELECTMODE[i]);
		TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[0]);
		TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[1]);
		if(!PI[playerid][P_IGNORE_LSRTD])
		{
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[0]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[1]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[2]);
		}
		TextDrawHideForPlayer(playerid, TD_LSR_WEB_INFO);
		
		PI[playerid][P_JOINDERBY] = true;
		//JoinPlayerGameMode(playerid, GAME_DERBY);
		StopAudioStreamForPlayer(playerid);
		SpawnPlayer(playerid);
		return 1;
	}
	else if(clickedid == TD_LSR_SELECTMODE[12] && PI[playerid][P_SELECTING_MODE_TD] == 1)	//DM
	{
		if(PI[playerid][P_GAMEMODE] != M_NONE) ExitPlayerGameMode(playerid);
		SetPlayerTeam(playerid, NO_TEAM);
		PI[playerid][P_SELECTING_MODE_TD] = false;
		CancelSelectTextDraw(playerid);
		for(new i = 0; i != sizeof TD_LSR_SELECTMODE; i++) TextDrawHideForPlayer(playerid, TD_LSR_SELECTMODE[i]);
		TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[0]);
		TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[1]);
		if(!PI[playerid][P_IGNORE_LSRTD])
		{
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[0]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[1]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[2]);
		}
		TextDrawHideForPlayer(playerid, TD_LSR_WEB_INFO);
		
		JoinPlayerGameMode(playerid, GAME_DEATHMATCH);
		StopAudioStreamForPlayer(playerid);
		SpawnPlayer(playerid);
		return 1;
	}
	else if(clickedid == TD_LSR_SELECTMODE[14] && PI[playerid][P_SELECTING_MODE_TD] == 1)	//FALL
	{
		if(PI[playerid][P_GAMEMODE] != M_NONE) ExitPlayerGameMode(playerid);
		SetPlayerTeam(playerid, NO_TEAM);
		PI[playerid][P_SELECTING_MODE_TD] = false;
		CancelSelectTextDraw(playerid);
		for(new i = 0; i != sizeof TD_LSR_SELECTMODE; i++) TextDrawHideForPlayer(playerid, TD_LSR_SELECTMODE[i]);
		TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[0]);
		TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[1]);
		if(!PI[playerid][P_IGNORE_LSRTD])
		{
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[0]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[1]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[2]);
		}
		TextDrawHideForPlayer(playerid, TD_LSR_WEB_INFO);
		
		JoinPlayerGameMode(playerid, GAME_FALL);
		StopAudioStreamForPlayer(playerid);
		SpawnPlayer(playerid);
		return 1;
	}

	else if(clickedid == TD_LSR_SELECTMODE[21] && PI[playerid][P_SELECTING_MODE_TD] == 1)	//ZOMBIE
	{
		PI[playerid][P_SELECTING_MODE_TD] = false;
		for(new i = 0; i != sizeof TD_LSR_SELECTMODE; i++) TextDrawHideForPlayer(playerid, TD_LSR_SELECTMODE[i]);
		TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[0]);
		TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[1]);
		for(new i = 0; i != sizeof TD_LSR_ZOMBIE_EDITION; i++) TextDrawShowForPlayer(playerid, TD_LSR_ZOMBIE_EDITION[i]);
		
		PI[playerid][P_SELECTING_ZOMBIE_TEAM] = true;
		SelectTextDraw(playerid, 0x999999FF);
	
		SetPlayerVirtualWorld(playerid, ZOMBIE_WORLD);
		InterpolateCameraPos(playerid, 1815.3907, -1823.3296, 21.1186, 1803.9763, -1833.6660, 21.1186, 60000);
		InterpolateCameraLookAt(playerid, 1816.0607, -1824.0693, 20.7836, 1804.6462, -1834.4058, 20.7836, 60000);
		E_SetPlayerPosEx(playerid, 1841.4988, -1852.2080, 12.9706);
		SetPlayerTime(playerid, ZOMBIE_TIME, 0);
		SetPlayerWeather(playerid, ZOMBIE_WEATHER);
		Streamer_UpdateEx(playerid, 1827.2300, -1839.1360, 12.2020);
		StopAudioStreamForPlayer(playerid);
		PlayAudioStreamForPlayerEx(playerid, ZombieMusic[random(sizeof(ZombieMusic))]);
		SendClientMessage(playerid, -1, "{"ORANGE"}Press {"GREY"}ESCAPE {"ORANGE"}To return to the selection of Modes.");
		return 1;
	}
	else if(clickedid == TD_LSR_SELECTMODE[25] && PI[playerid][P_SELECTING_MODE_TD] == 1)	//TDM
	{
		PI[playerid][P_SELECTING_MODE_TD] = 2;
		CancelSelectTextDraw(playerid);
		ShowDialog(playerid, DIALOG_SELECT_TDM_TEAM);
		return 1;
	}
	else if(clickedid == TD_LSR_SELECTMODE[28] && PI[playerid][P_SELECTING_MODE_TD] == 1) // SHOOTER
	{
		if(PI[playerid][P_GAMEMODE] != M_NONE) ExitPlayerGameMode(playerid);
		PI[playerid][P_SELECTING_MODE_TD] = false;
		CancelSelectTextDraw(playerid);
		for(new i = 0; i != sizeof TD_LSR_SELECTMODE; i++) TextDrawHideForPlayer(playerid, TD_LSR_SELECTMODE[i]);
		TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[0]);
		TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[1]);
		if(!PI[playerid][P_IGNORE_LSRTD])
		{
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[0]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[1]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[2]);
		}
		TextDrawHideForPlayer(playerid, TD_LSR_WEB_INFO);
		
		JoinPlayerGameMode(playerid, GAME_SHOOTER);
		StopAudioStreamForPlayer(playerid);
		SpawnPlayer(playerid);
		return 1;
	}
	else if(clickedid == TD_LSR_SELECTMODE[31] && PI[playerid][P_SELECTING_MODE_TD] == 1) // Car Race
	{
		if(PI[playerid][P_GAMEMODE] != M_NONE) ExitPlayerGameMode(playerid);
		PI[playerid][P_SELECTING_MODE_TD] = false;
		CancelSelectTextDraw(playerid);
		for(new i = 0; i != sizeof TD_LSR_SELECTMODE; i++) TextDrawHideForPlayer(playerid, TD_LSR_SELECTMODE[i]);
		TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[0]);
		TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[1]);
		if(!PI[playerid][P_IGNORE_LSRTD])
		{
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[0]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[1]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[2]);
		}
		TextDrawHideForPlayer(playerid, TD_LSR_WEB_INFO);
		
		JoinPlayerGameMode(playerid, GAME_RACE);
		StopAudioStreamForPlayer(playerid);
		SpawnPlayer(playerid);
		return 1;
	}
	
	else if(clickedid == TD_LSR_ZOMBIE_EDITION[2] && PI[playerid][P_SELECTING_ZOMBIE_TEAM]) //Humanos
	{
		if(ZI[Z_TEAM_PLAYERS][0] > ZI[Z_TEAM_PLAYERS][1] + 1) return SendClientMessage(playerid, -1, "{"ORANGE"}Please select the team {"GREY"}ZOMBIE {"ORANGE"}To balance players.");
		
		for(new i = 0; i != sizeof TD_LSR_ZOMBIE_EDITION; i++) TextDrawHideForPlayer(playerid, TD_LSR_ZOMBIE_EDITION[i]);
		PI[playerid][P_SELECTING_ZOMBIE_TEAM] = false;
		CancelSelectTextDraw(playerid);
		
		if(!PI[playerid][P_IGNORE_LSRTD])
		{
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[0]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[1]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[2]);
		}
		TextDrawHideForPlayer(playerid, TD_LSR_WEB_INFO);
		
		PI[playerid][P_ZOMBIE_TEAM] = TEAM_HUMANS;
		JoinPlayerGameMode(playerid, GAME_ZOMBIE);
		StopAudioStreamForPlayer(playerid);
		SpawnPlayer(playerid);
		return 1;
	}
	else if(clickedid == TD_LSR_ZOMBIE_EDITION[3] && PI[playerid][P_SELECTING_ZOMBIE_TEAM]) //Zombies
	{
		if(ZI[Z_TEAM_PLAYERS][1] > ZI[Z_TEAM_PLAYERS][0] + 1) return SendClientMessage(playerid, -1, "{"ORANGE"}Please select the team {"GREY"}HUMANOS {"ORANGE"}To balance players.");
		
		for(new i = 0; i != sizeof TD_LSR_ZOMBIE_EDITION; i++) TextDrawHideForPlayer(playerid, TD_LSR_ZOMBIE_EDITION[i]);
		PI[playerid][P_SELECTING_ZOMBIE_TEAM] = false;
		CancelSelectTextDraw(playerid);
		
		if(!PI[playerid][P_IGNORE_LSRTD])
		{
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[0]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[1]);
			TextDrawShowForPlayer(playerid, TD_LSR_HUD[2]);
		}
		TextDrawHideForPlayer(playerid, TD_LSR_WEB_INFO);
		
		PI[playerid][P_ZOMBIE_TEAM] = TEAM_ZOMBIE;
		JoinPlayerGameMode(playerid, GAME_ZOMBIE);
		StopAudioStreamForPlayer(playerid);
		SpawnPlayer(playerid);
		return 1;
	}
	
	else if(clickedid == TD_RACE_Collisions[0])
	{
		if(PI[playerid][P_GAMEMODE] == M_RACE && RC[R_STATUS] == RACE_WAIT)
		{
			if(PI[playerid][P_RACE_VOTED]) return SendClientMessage(playerid, -1, "{CCCCCC}Error: You have already voted.");
			
			RC[R_COLLISION_VOTES][0] ++;
			new str[45]; format(str, sizeof str, "With_contact:_%d~n~No contact:_%d~n~_", RC[R_COLLISION_VOTES][0], RC[R_COLLISION_VOTES][1]);
			TextDrawSetString(TD_RACE_Collisions[3], str);
			CancelSelectTextDraw(playerid);
			PI[playerid][P_RACE_VOTED] = true;
			return 1;
		}
	}
	else if(clickedid == TD_RACE_Collisions[1])
	{
		if(PI[playerid][P_GAMEMODE] == M_RACE && RC[R_STATUS] == RACE_WAIT)
		{
			if(PI[playerid][P_RACE_VOTED]) return SendClientMessage(playerid, -1, "{CCCCCC}Error: You have already voted.");
			
			RC[R_COLLISION_VOTES][1] ++;
			new str[45]; format(str, sizeof str, "With_contact:_%d~n~No contact:_%d~n~_", RC[R_COLLISION_VOTES][0], RC[R_COLLISION_VOTES][1]);
			TextDrawSetString(TD_RACE_Collisions[3], str);
			CancelSelectTextDraw(playerid);
			PI[playerid][P_RACE_VOTED] = true;
			return 1;
		}
	}
		
	else if(clickedid == TD_CarShop[2]) //COMPRAR
	{
		if(!PI[playerid][P_USEREXIT]) return SendClientMessage(playerid, -1, "{"GREY"}You must be registered to buy a vehicle.");
		
		if(PI[playerid][P_VIP]) { if(PI[playerid][P_VEHICLES] >= MAX_VEHICLES_PER_PLAYER) return SendClientMessage(playerid, -1, "{"GREY"}You can't buy more vehicles."); }
		else { if(PI[playerid][P_VEHICLES] >= MAX_VEHICLES_PER_NORMAL_PLAYER) return SendClientMessage(playerid, -1, "{"GREY"}You can't buy more vehicles. {FFCC00}(/vipinfo)"); }

		if(PI[playerid][P_MONEY] >= Vehiclescons[PI[playerid][P_SHOPCARINDEX]][1] && PI[playerid][P_SCORE] >= Vehiclescons[PI[playerid][P_SHOPCARINDEX]][2])
		{
			GivePlayerMoneyEx(playerid, -Vehiclescons[PI[playerid][P_SHOPCARINDEX]][1]);
			GivePlayerScoreEx(playerid, -Vehiclescons[PI[playerid][P_SHOPCARINDEX]][2]);
			GameTextForPlayer(playerid, "~g~~h~vehiculo_comprado", 5000, 1);
			PlayerPlaySoundEx(playerid, 1149, 0.0, 0.0, 0.0);
			
			
			NewPersonalCar(playerid, Vehiclescons[PI[playerid][P_SHOPCARINDEX]][0], minrand(128, 255), minrand(128, 255));
			UpdateUserData(playerid);
			HidePlayerCarShop(playerid);
			SendClientMessageEx(playerid, -1, "{"ORANGE"}Congratulations! You have bought a {C6D855}%s. {"ORANGE"}use {C6D855}/vv {"ORANGE"}To use your vehicle.", VehicleNames[ Vehiclescons[PI[playerid][P_SHOPCARINDEX]][0] - 400]);
		}
		else
		{
			SendClientMessage(playerid, -1, "{"GREY"}You don't have enough money or score to buy this house.");
			SendClientMessage(playerid, -1, "{"GREY"}To earn money/score ms rapid tries to play at stakes (/m)");
		}
		return 1;
	}
	else if(clickedid == TD_CarShop[3]) //>>
	{
		PlayerPlaySoundEx(playerid, 1054, 0.0, 0.0, 0.0);
		if(PI[playerid][P_SHOPCARINDEX] == sizeof(Vehiclescons)-1) PI[playerid][P_SHOPCARINDEX] = 0;
		else PI[playerid][P_SHOPCARINDEX] += 1;

		PlayerTextDrawSetPreviewModel(playerid, PTD_CarShop[playerid][0], Vehiclescons[PI[playerid][P_SHOPCARINDEX]][0]);
	
		new str[128]; format(str, 128, "%d$~n~%d_Score", Vehiclescons[PI[playerid][P_SHOPCARINDEX]][1], Vehiclescons[PI[playerid][P_SHOPCARINDEX]][2]);
		PlayerTextDrawSetString(playerid, PTD_CarShop[playerid][1], str);
		
		PlayerTextDrawSetString(playerid, PTD_CarShop[playerid][2], VehicleNames[ Vehiclescons[PI[playerid][P_SHOPCARINDEX]][0] - 400]);
		PlayerTextDrawShow(playerid, PTD_CarShop[playerid][0]);
		return 1;
	}
	else if(clickedid == TD_CarShop[4]) //<<
	{
		PlayerPlaySoundEx(playerid, 1054, 0.0, 0.0, 0.0);
		if(PI[playerid][P_SHOPCARINDEX] == 0) PI[playerid][P_SHOPCARINDEX] = sizeof(Vehiclescons)-1;
	    else PI[playerid][P_SHOPCARINDEX] -= 1;

		PlayerTextDrawSetPreviewModel(playerid, PTD_CarShop[playerid][0], Vehiclescons[PI[playerid][P_SHOPCARINDEX]][0]);
	
		new str[128]; format(str, 128, "%d$~n~%d_Score", Vehiclescons[PI[playerid][P_SHOPCARINDEX]][1], Vehiclescons[PI[playerid][P_SHOPCARINDEX]][2]);
		PlayerTextDrawSetString(playerid, PTD_CarShop[playerid][1], str);
		
		PlayerTextDrawSetString(playerid, PTD_CarShop[playerid][2], VehicleNames[ Vehiclescons[PI[playerid][P_SHOPCARINDEX]][0] - 400]);
		PlayerTextDrawShow(playerid, PTD_CarShop[playerid][0]);
		return 1;
	}
	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
    if(playertextid == PTD_LSR_TUNING[playerid][0])
    {
	
		if(!PI[playerid][P_VIP]) return HidePlayerTuningMenu(playerid);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return HidePlayerTuningMenu(playerid);
		
		if(PI[playerid][P_TUNING_PAGE] == TUNING_NEONS) return 1;
		PI[playerid][P_TUNING_PAGE] = TUNING_NEONS;
		UpdatePlayerTuningMenu(playerid);
		return 1;
    }
	else if(playertextid == PTD_LSR_TUNING[playerid][1])
    {
	
		if(!PI[playerid][P_VIP]) return HidePlayerTuningMenu(playerid);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return HidePlayerTuningMenu(playerid);
		
		if(PI[playerid][P_TUNING_PAGE] == TUNING_LIGHT) return 1;
		PI[playerid][P_TUNING_PAGE] = TUNING_LIGHT;
		UpdatePlayerTuningMenu(playerid);
		return 1;
    }
	else if(playertextid == PTD_LSR_TUNING[playerid][2])
    {
	
		if(!PI[playerid][P_VIP]) return HidePlayerTuningMenu(playerid);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return HidePlayerTuningMenu(playerid);
		
		SendClientMessage(playerid, -1, "{"GREY"}An not available, you can use the command {C6D855}/vcol {"GREY"}Meanwhile.");
		/*if(PI[playerid][P_TUNING_PAGE] == TUNING_PAINT) return 1;
		PI[playerid][P_TUNING_PAGE] = TUNING_PAINT;
		UpdatePlayerTuningMenu(playerid);*/
		return 1;
    }
	else if(playertextid == PTD_LSR_TUNING[playerid][3])
    {
	
		if(!PI[playerid][P_VIP]) return HidePlayerTuningMenu(playerid);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return HidePlayerTuningMenu(playerid);
		
		HidePlayerTuningMenu(playerid);
		ShowDialog(playerid, DIALOG_PLATE);
		/*if(PI[playerid][P_TUNING_PAGE] == TUNING_PLATE) return 1;
		PI[playerid][P_TUNING_PAGE] = TUNING_PLATE;
		UpdatePlayerTuningMenu(playerid);*/
		return 1;
    }
	
	else if(playertextid == PTD_LSR_TUNING[playerid][6])
    {
	
		if(!PI[playerid][P_VIP]) return HidePlayerTuningMenu(playerid);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return HidePlayerTuningMenu(playerid);
		
		new vid = GetPlayerVehicleID(playerid);
		if(VI[vid][V_VALID])
		{
			if(VI[vid][V_OWNERID] != PI[playerid][P_ID]) return SendClientMessage(playerid, -1, "{"GREY"}This vehicle does not belong to you.");
		}
		
		switch(PI[playerid][P_TUNING_PAGE])
		{
			case TUNING_NEONS:
			{
				SetVehicleNeonLights(vid, false);
				VI[vid][V_NEON] = 0;
				SendClientMessage(playerid, -1, "{"ORANGE"}INFO: {C6D855}Neons eliminated from this vehicle.");
				return 1;
			}
			case TUNING_LIGHT:
			{
				if(!VI[vid][V_VALID]) return SendClientMessage(playerid, -1, "{CCCCCC}Only personal vehicles.");
				if(IsValidDynamicObject(VEHICLE_SIREN[vid]))
				{
					DestroyDynamicObject(VEHICLE_SIREN[vid]);
					VEHICLE_SIREN[vid] = INVALID_OBJECT_ID;
				}
				if(VI[vid][V_VALID])
				{
					new slot = -1;
					for(new i = 0; i != MAX_VEHICLES_PER_PLAYER; i ++)
					{
						if(PI[playerid][P_VEHICLES_VEH_ID][i] == vid)
						{
							slot = i;
							break;
						}
					}
					if(slot == -1)
					{
						SendClientMessage(playerid, -1, "An error occurred");
						return 1;
					}
					
					VI[vid][V_SIREN] = false;
					HousePlayerVehicle(playerid, slot);
					SendClientMessage(playerid, -1, "{"ORANGE"}INFO: {C6D855}Eliminated siren from this vehicle, take it out again with /vv.");
				}
				/*else
				{
					new Float:pos[4], modelid = GetVehicleModel(vid);
					GetVehiclePos(vid, pos[0], pos[1], pos[2]);
					GetVehicleZAngle(vid, pos[3]);
					
					DestroyVehicleEx(vid);
					new index = CreateVehicle(modelid, pos[0], pos[1], pos[2], pos[3],  minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME, false);
					PutPlayerInVehicleEx(playerid, index, 0);
					SendClientMessage(playerid, -1, "{"ORANGE"}INFO: {C6D855}Sirena eliminada de este vehculo.");
				}*/
				
				
				return 1;
			}
		}
		return 1;
    }
	
	else if(playertextid == PTD_LSR_TUNING[playerid][8])
    {
	
		if(!PI[playerid][P_VIP]) return HidePlayerTuningMenu(playerid);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return HidePlayerTuningMenu(playerid);
		
		new vid = GetPlayerVehicleID(playerid);
		if(VI[vid][V_VALID])
		{
			if(VI[vid][V_OWNERID] != PI[playerid][P_ID]) return SendClientMessage(playerid, -1, "{"GREY"}This vehicle does not belong to you.");
		}
		
		switch(PI[playerid][P_TUNING_PAGE])
		{
			case TUNING_NEONS:
			{
				if(!VehicleSupportsNeonLights(GetVehicleModel(vid))) return SendClientMessage(playerid, -1, "{"GREY"}You cannot add neons to this vehicle.");
				
				if(PI[playerid][P_MONEY] < 5000) return SendClientMessage(playerid, -1, "{"GREY"}You don't have enough money.");
				GivePlayerMoneyEx(playerid, -5000);
				
				SetVehicleNeonLights(vid, true, RED_NEON);
				if(VI[vid][V_VALID]) VI[vid][V_NEON] = RED_NEON;
				SetVehicleVelocity(vid, 0.0, 0.0, 0.1);
				PlayerPlaySoundEx(playerid, 1133, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, -1, "{"ORANGE"}INFO: {C6D855}Red neon has to this vehicle.");
				return 1;
			}
			case TUNING_LIGHT:
			{
				if(!VI[vid][V_VALID]) return SendClientMessage(playerid, -1, "{CCCCCC}Only personal vehicles.");
				if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return HidePlayerTuningMenu(playerid);
				if(var_siren[GetVehicleModel(vid) - 400][2] == 0.0) return SendClientMessage(playerid, -1, "{"GREY"}You cannot add the siren to this vehicle.");
				if(PI[playerid][P_MONEY] < 3000) return SendClientMessage(playerid, -1, "{"GREY"}You don't have enough money.");
				GivePlayerMoneyEx(playerid, -3000);
				
				if(VI[vid][V_VALID])
				{
					new slot = -1;
					for(new i = 0; i != MAX_VEHICLES_PER_PLAYER; i ++)
					{
						if(PI[playerid][P_VEHICLES_VEH_ID][i] == vid)
						{
							slot = i;
							break;
						}
					}
					if(slot == -1)
					{
						GivePlayerMoneyEx(playerid, 3000);
						SendClientMessage(playerid, -1, "An error occurred");
						return 1;
					}
					
					VI[vid][V_SIREN] = true;
					HousePlayerVehicle(playerid, slot);
					SendClientMessage(playerid, -1, "{"ORANGE"}INFO: {C6D855}Siren ADDED TO THIS VEHICLE, Use /VV TO USE THE VEHICLE WITH SIREN.");
				}
				/*else
				{
					new Float:pos[4], modelid = GetVehicleModel(vid);
					GetVehiclePos(vid, pos[0], pos[1], pos[2]);
					GetVehicleZAngle(vid, pos[3]);
					
					DestroyVehicleEx(vid);
					new index = CreateVehicle(modelid, pos[0], pos[1], pos[2], pos[3],  minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME, true);
					if(IsValidDynamicObject(VEHICLE_SIREN[index])) DestroyDynamicObject(VEHICLE_SIREN[index]);
					VEHICLE_SIREN[index] = CreateDynamicObject(19420, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
					AttachDynamicObjectToVehicle(VEHICLE_SIREN[index], index, var_siren[modelid - 400][0], var_siren[modelid - 400][1], var_siren[modelid - 400][2], 0.0, 0.0, 0.0);
					Streamer_Update(playerid);
					PutPlayerInVehicleEx(playerid, index, 0);
					SendClientMessage(playerid, -1, "{"ORANGE"}INFO: {C6D855}Sirena aadida a este vehculo.");
				}*/
				
				HidePlayerTuningMenu(playerid);
				PlayerPlaySoundEx(playerid, 1133, 0.0, 0.0, 0.0);
				return 1;
			}
		}
		return 1;
    }
	
	else if(playertextid == PTD_LSR_TUNING[playerid][10])
    {
	
		if(!PI[playerid][P_VIP]) return HidePlayerTuningMenu(playerid);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return HidePlayerTuningMenu(playerid);
		
		new vid = GetPlayerVehicleID(playerid);
		if(VI[vid][V_VALID])
		{
			if(VI[vid][V_OWNERID] != PI[playerid][P_ID]) return SendClientMessage(playerid, -1, "{"GREY"}This vehicle does not belong to you.");
		}
		
		switch(PI[playerid][P_TUNING_PAGE])
		{
			case TUNING_NEONS:
			{
				if(!VehicleSupportsNeonLights(GetVehicleModel(vid))) return SendClientMessage(playerid, -1, "{"GREY"}You cannot add neons to this vehicle.");
				
				if(PI[playerid][P_MONEY] < 5000) return SendClientMessage(playerid, -1, "{"GREY"}You don't have enough money.");
				GivePlayerMoneyEx(playerid, -5000);
				
				SetVehicleNeonLights(vid, true, BLUE_NEON);
				if(VI[vid][V_VALID]) VI[vid][V_NEON] = BLUE_NEON;
				SetVehicleVelocity(vid, 0.0, 0.0, 0.1);
				PlayerPlaySoundEx(playerid, 1133, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, -1, "{"ORANGE"}INFO: {C6D855}Blue neon to this vehicle.");
				return 1;
			}
		}
		return 1;
    }
	
	else if(playertextid == PTD_LSR_TUNING[playerid][12])
    {
	
		if(!PI[playerid][P_VIP]) return HidePlayerTuningMenu(playerid);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return HidePlayerTuningMenu(playerid);
		
		new vid = GetPlayerVehicleID(playerid);
		if(VI[vid][V_VALID])
		{
			if(VI[vid][V_OWNERID] != PI[playerid][P_ID]) return SendClientMessage(playerid, -1, "{"GREY"}This vehicle does not belong to you.");
		}
		
		switch(PI[playerid][P_TUNING_PAGE])
		{
			case TUNING_NEONS:
			{
				if(!VehicleSupportsNeonLights(GetVehicleModel(vid)))return SendClientMessage(playerid, -1, "{"GREY"}You cannot add neons to this vehicle.");
				
				if(PI[playerid][P_MONEY] < 5000) return SendClientMessage(playerid, -1, "{"GREY"}You don't have enough money.");
				GivePlayerMoneyEx(playerid, -5000);
				
				SetVehicleNeonLights(vid, true, GREEN_NEON);
				if(VI[vid][V_VALID]) VI[vid][V_NEON] = GREEN_NEON;
				SetVehicleVelocity(vid, 0.0, 0.0, 0.1);
				PlayerPlaySoundEx(playerid, 1133, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, -1, "{"ORANGE"}INFO: {C6D855}Green Neon Aladido to this vehicle.");
				return 1;
			}
		}
		return 1;
    }
	
	else if(playertextid == PTD_LSR_TUNING[playerid][14])
    {
	
		if(!PI[playerid][P_VIP]) return HidePlayerTuningMenu(playerid);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return HidePlayerTuningMenu(playerid);
		
		new vid = GetPlayerVehicleID(playerid);
		if(VI[vid][V_VALID])
		{
			if(VI[vid][V_OWNERID] != PI[playerid][P_ID]) return SendClientMessage(playerid, -1, "{"GREY"}This vehicle does not belong to you.");
		}
		
		switch(PI[playerid][P_TUNING_PAGE])
		{
			case TUNING_NEONS:
			{
				if(!VehicleSupportsNeonLights(GetVehicleModel(vid))) return SendClientMessage(playerid, -1, "{"GREY"}You cannot add neons to this vehicle.");
				
				if(PI[playerid][P_MONEY] < 5000) return SendClientMessage(playerid, -1, "{"GREY"}You don't have enough money.");
				GivePlayerMoneyEx(playerid, -5000);
				
				SetVehicleNeonLights(vid, true, YELLOW_NEON);
				if(VI[vid][V_VALID]) VI[vid][V_NEON] = YELLOW_NEON;
				SetVehicleVelocity(vid, 0.0, 0.0, 0.1);
				PlayerPlaySoundEx(playerid, 1133, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, -1, "{"ORANGE"}INFO: {C6D855}Yellow neon to this vehicle.");
				return 1;
			}
		}
		return 1;
    }
	
	else if(playertextid == PTD_LSR_TUNING[playerid][16])
    {
	
		if(!PI[playerid][P_VIP]) return HidePlayerTuningMenu(playerid);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return HidePlayerTuningMenu(playerid);
		
		new vid = GetPlayerVehicleID(playerid);
		if(VI[vid][V_VALID])
		{
			if(VI[vid][V_OWNERID] != PI[playerid][P_ID]) return SendClientMessage(playerid, -1, "{"GREY"}This vehicle does not belong to you.");
		}
		
		switch(PI[playerid][P_TUNING_PAGE])
		{
			case TUNING_NEONS:
			{
				if(!VehicleSupportsNeonLights(GetVehicleModel(vid))) return SendClientMessage(playerid, -1, "{"GREY"}You cannot add neons to this vehicle.");
				
				if(PI[playerid][P_MONEY] < 5000) return SendClientMessage(playerid, -1, "{"GREY"}You don't have enough money.");
				GivePlayerMoneyEx(playerid, -5000);
				
				SetVehicleNeonLights(vid, true, PINK_NEON);
				if(VI[vid][V_VALID]) VI[vid][V_NEON] = PINK_NEON;
				SetVehicleVelocity(vid, 0.0, 0.0, 0.1);
				PlayerPlaySoundEx(playerid, 1133, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, -1, "{"ORANGE"}INFO: {C6D855}Neon pink to this vehicle.");
				return 1;
			}
		}
		return 1;
    }
	
	else if(playertextid == PTD_LSR_TUNING[playerid][18])
    {
	
		if(!PI[playerid][P_VIP]) return HidePlayerTuningMenu(playerid);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return HidePlayerTuningMenu(playerid);
		
		new vid = GetPlayerVehicleID(playerid);
		if(VI[vid][V_VALID])
		{
			if(VI[vid][V_OWNERID] != PI[playerid][P_ID]) return SendClientMessage(playerid, -1, "{"GREY"}This vehicle does not belong to you.");
		}
		
		switch(PI[playerid][P_TUNING_PAGE])
		{
			case TUNING_NEONS:
			{
				if(!VehicleSupportsNeonLights(GetVehicleModel(vid))) return SendClientMessage(playerid, -1, "{"GREY"}You cannot add neons to this vehicle.");
				
				if(PI[playerid][P_MONEY] < 5000) return SendClientMessage(playerid, -1, "{"GREY"}You don't have enough money.");
				GivePlayerMoneyEx(playerid, -5000);
				
				SetVehicleNeonLights(vid, true, WHITE_NEON);
				if(VI[vid][V_VALID]) VI[vid][V_NEON] = WHITE_NEON;
				SetVehicleVelocity(vid, 0.0, 0.0, 0.1);
				PlayerPlaySoundEx(playerid, 1133, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, -1, "{"ORANGE"}INFO: {C6D855}White Neon Appeared to this vehicle.");
				return 1;
			}
		}
		return 1;
    }
    return 1;
}


forward Float:GetVehicleSpeed(vehicleid);
public Float:GetVehicleSpeed(vehicleid)
{
    new Float:vx, Float:vy, Float:vz;
    GetVehicleVelocity(vehicleid, vx, vy, vz);
	new Float:vel = floatmul(floatsqroot(floatadd(floatadd(floatpower(vx, 2), floatpower(vy, 2)),  floatpower(vz, 2))), 181.5);
	return vel;
}
		
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
		if(PI[playerid][P_GAMEMODE] == M_GANGWAR)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, 2495.439697, -1690.764648, 14.765625) && GetPlayerTeam(playerid) == TEAM_GROVE && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SetPlayerPosEx(playerid, 2496.089111, -1692.420776, 1014.742187, 180.0, 3, GANGWAR_VW);
				return 1;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2496.089111, -1692.420776, 1014.742187) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SetPlayerPosEx(playerid, 2495.439697, -1690.764648, 14.765625, 0.0, 0, GANGWAR_VW);
				return 1;
			}

			else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2637.048095, -1991.733276, 14.324020) && GetPlayerTeam(playerid) == TEAM_BALLAS && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SetPlayerPosEx(playerid, 2468.781982, -1698.151123, 1013.507812, 90.0, 2, GANGWAR_VW);
				return 1;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2468.781982, -1698.151123, 1013.507812) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SetPlayerPosEx(playerid, 2637.048095, -1991.733276, 14.324020, 220.0, 0, GANGWAR_VW);
				return 1;
			}
			
			else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1555.178833, -1675.459838, 16.195312) && GetPlayerTeam(playerid) == TEAM_POLICE && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SetPlayerPosEx(playerid, 246.982345, 62.742130, 1003.640625, 0.0, 6, GANGWAR_VW);
				return 1;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 3.0, 246.982345, 62.742130, 1003.640625) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SetPlayerPosEx(playerid, 1555.178833, -1675.459838, 16.195312, 90.0, 0, GANGWAR_VW);
				return 1;
			}
			
		}
		else if(PI[playerid][P_GAMEMODE] == M_FREEROAM)
		{
			for(new i = 0; i != HOUSES_LOADED; i++)
			{
				if(HI[i][H_VALID] && HI[i][H_SOLD])
				{
					if(IsPlayerInRangeOfPoint(playerid, 3.0, HI[i][H_extPos][0], HI[i][H_extPos][1], HI[i][H_extPos][2]) && GetPlayerVirtualWorld(playerid) == FREEROAM_VW)
					{
						if(HI[i][H_OWNERID] == PI[playerid][P_ID] || HI[i][H_OPENED])
						{
							E_SetPlayerPosEx(playerid, HI[i][H_intPos][0], HI[i][H_intPos][1], HI[i][H_intPos][2]);
							SetPlayerFacingAngle(playerid, HI[i][H_intPos][3]);
							SetPlayerInterior(playerid, HI[i][H_INTERIOR]);
							SetPlayerVirtualWorld(playerid, HI[i][H_ID]);
							
							if(HI[i][H_FREEZE])
							{
								TogglePlayerControllable(playerid, false);
								PI[playerid][P_TIMERS][0] = SetTimerEx("UnfreezePlayer", 3000, false, "d", playerid);
							}
							SetCameraBehindPlayer(playerid);
						}
						else GameTextForPlayer(playerid, "~r~~h~Cerrada property", 2000, 1);
						return 1;
					}
					else if(IsPlayerInRangeOfPoint(playerid, 3.0, HI[i][H_intPos][0], HI[i][H_intPos][1], HI[i][H_intPos][2]) && GetPlayerVirtualWorld(playerid) == HI[i][H_ID])
					{				
						SetPlayerPosEx(playerid, HI[i][H_extPos][0], HI[i][H_extPos][1], HI[i][H_extPos][2], HI[i][H_extPos][3], 0, FREEROAM_VW, false, false);
						SetCameraBehindPlayer(playerid);
						return 1;
					}
				}
			}
			return 1;
		}
		else if(PI[playerid][P_GAMEMODE] == M_DERBY)
		{
			if(PI[playerid][P_DERBY_STATUS] == PD_SPECTATE)
			{
				PI[playerid][P_STATUS] = S_SPAWNED;
				
				new old = PI[playerid][P_DERBY_SPECTATEPLAYER];
				for(new i = PI[playerid][P_DERBY_SPECTATEPLAYER], j = GetPlayerPoolSize(); i <= j; i++) 
				{
					if(IsPlayerConnected(i))
					{
						if(PI[i][P_GAMEMODE] == M_DERBY)
						{
							if(PI[i][P_DERBY_STATUS] == PD_NORMAL)
							{
								if(PI[playerid][P_DERBY_SPECTATEPLAYER] != i)
								{
									PlayerSpectateVehicle(playerid, PI[i][P_DERBY_VEHICLEID]);
									PI[playerid][P_DERBY_SPECTATEPLAYER] = i;
									new str[70]; format(str, 70, "_~n~_~n~_~n~_~n~~y~-_~g~~h~%s_~b~~h~%d_~y~-~n~_", PI[ PI[playerid][P_DERBY_SPECTATEPLAYER] ][P_NAME], PI[playerid][P_DERBY_SPECTATEPLAYER]);
									GameTextForPlayer(playerid, str, 3000, 3);
									return 1;
								}
							}
						}
					}
				}
				if(PI[playerid][P_DERBY_SPECTATEPLAYER] == old)
				{
					for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
					{
						if(IsPlayerConnected(i))
						{
							if(PI[i][P_GAMEMODE] == M_DERBY)
							{
								if(PI[i][P_DERBY_STATUS] == PD_NORMAL)
								{
									if(PI[playerid][P_DERBY_SPECTATEPLAYER] != i)
									{
										PlayerSpectateVehicle(playerid, PI[i][P_DERBY_VEHICLEID]);
										PI[playerid][P_DERBY_SPECTATEPLAYER] = i;
										new str[70]; format(str, 70, "_~n~_~n~_~n~_~n~~y~-_~g~~h~%s_~b~~h~%d_~y~-~n~_", PI[ PI[playerid][P_DERBY_SPECTATEPLAYER] ][P_NAME], PI[playerid][P_DERBY_SPECTATEPLAYER]);
										GameTextForPlayer(playerid, str, 3000, 3);
										return 1;
									}
								}
							}
						}
					}
				}
				return 1;
			}
		}
		else if(PI[playerid][P_GAMEMODE] == M_SHOOTER)
		{
			if(PI[playerid][P_SHOOTER_STATUS] == PD_SPECTATE)
			{
				PI[playerid][P_STATUS] = S_SPAWNED;
				
				new old = PI[playerid][P_SHOOTER_SPECTATEPLAYER];
				for(new i = PI[playerid][P_SHOOTER_SPECTATEPLAYER], j = GetPlayerPoolSize(); i <= j; i++) 
				{
					if(IsPlayerConnected(i))
					{
						if(PI[i][P_GAMEMODE] == M_SHOOTER)
						{
							if(PI[i][P_SHOOTER_STATUS] == PD_NORMAL)
							{
								if(PI[playerid][P_SHOOTER_SPECTATEPLAYER] != i)
								{
									PlayerSpectateVehicle(playerid, PI[i][P_SHOOTER_VEHICLEID]);
									PI[playerid][P_SHOOTER_SPECTATEPLAYER] = i;
									new str[70]; format(str, 70, "_~n~_~n~_~n~_~n~~y~-_~g~~h~%s_~b~~h~%d_~y~-~n~_", PI[ PI[playerid][P_SHOOTER_SPECTATEPLAYER] ][P_NAME], PI[playerid][P_SHOOTER_SPECTATEPLAYER]);
									GameTextForPlayer(playerid, str, 3000, 3);
									return 1;
								}
							}
						}
					}
				}
				if(PI[playerid][P_SHOOTER_SPECTATEPLAYER] == old)
				{
					for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
					{
						if(IsPlayerConnected(i))
						{
							if(PI[i][P_GAMEMODE] == M_SHOOTER)
							{
								if(PI[i][P_SHOOTER_STATUS] == PD_NORMAL)
								{
									if(PI[playerid][P_SHOOTER_SPECTATEPLAYER] != i)
									{
										PlayerSpectateVehicle(playerid, PI[i][P_SHOOTER_VEHICLEID]);
										PI[playerid][P_SHOOTER_SPECTATEPLAYER] = i;
										new str[70]; format(str, 70, "_~n~_~n~_~n~_~n~~y~-_~g~~h~%s_~b~~h~%d_~y~-~n~_", PI[ PI[playerid][P_SHOOTER_SPECTATEPLAYER] ][P_NAME], PI[playerid][P_SHOOTER_SPECTATEPLAYER]);
										GameTextForPlayer(playerid, str, 3000, 3);
										return 1;
									}
								}
							}
						}
					}
				}
				return 1;
			}
		}
		else if(PI[playerid][P_GAMEMODE] == M_RACE)
		{
			if(PI[playerid][P_RACE_STATUS] == PD_SPECTATE)
			{
				PI[playerid][P_STATUS] = S_SPAWNED;
				
				new old = PI[playerid][P_RACE_SPECTATEPLAYER];
				for(new i = PI[playerid][P_RACE_SPECTATEPLAYER], j = GetPlayerPoolSize(); i <= j; i++) 
				{
					if(IsPlayerConnected(i))
					{
						if(PI[i][P_GAMEMODE] == M_RACE)
						{
							if(PI[i][P_RACE_STATUS] == PD_NORMAL)
							{
								if(PI[playerid][P_RACE_SPECTATEPLAYER] != i)
								{
									PlayerSpectateVehicle(playerid, PI[i][P_RACE_VEHICLEID]);
									PI[playerid][P_RACE_SPECTATEPLAYER] = i;
									new str[70]; format(str, 70, "_~n~_~n~_~n~_~n~~y~-_~g~~h~%s_~b~~h~%d_~y~-~n~_", PI[ PI[playerid][P_RACE_SPECTATEPLAYER] ][P_NAME], PI[playerid][P_RACE_SPECTATEPLAYER]);
									GameTextForPlayer(playerid, str, 3000, 3);
									return 1;
								}
							}
						}
					}
				}
				if(PI[playerid][P_RACE_SPECTATEPLAYER] == old)
				{
					for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
					{
						if(IsPlayerConnected(i))
						{
							if(PI[i][P_GAMEMODE] == M_RACE)
							{
								if(PI[i][P_RACE_STATUS] == PD_NORMAL)
								{
									if(PI[playerid][P_RACE_SPECTATEPLAYER] != i)
									{
										PlayerSpectateVehicle(playerid, PI[i][P_RACE_VEHICLEID]);
										PI[playerid][P_RACE_SPECTATEPLAYER] = i;
										new str[70]; format(str, 70, "_~n~_~n~_~n~_~n~~y~-_~g~~h~%s_~b~~h~%d_~y~-~n~_", PI[ PI[playerid][P_RACE_SPECTATEPLAYER] ][P_NAME], PI[playerid][P_RACE_SPECTATEPLAYER]);
										GameTextForPlayer(playerid, str, 3000, 3);
										return 1;
									}
								}
							}
						}
					}
				}
				return 1;
			}
		}
		return 1;
	}
	else if(newkeys & KEY_FIRE)
	{
		switch(PI[playerid][P_GAMEMODE])
		{
			case M_FREEROAM:
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					if(!PI[playerid][P_GODMODE]) return 1;
					AddVehicleComponent(GetPlayerVehicleID(playerid), 1009);
					new Float:vx, Float:vy, Float:vz;
					GetVehicleVelocity(GetPlayerVehicleID(playerid), vx, vy, vz);
					SetVehicleVelocity(GetPlayerVehicleID(playerid), vx * 1.2, vy * 1.2, vz * 1.2);
					return 1;
				}
				return 1;
			}
			case M_DERBY:
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && PI[playerid][P_VIP])
				{
					AddVehicleComponent(GetPlayerVehicleID(playerid), 1009);
					return 1;
				}
			}
			case M_SHOOTER:
			{
				if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER && ST[S_STATUS] == SHOOTER_RUNNING && ST[S_FIREWORKS])
				{
					if(gettime() < PI[playerid][P_SHOOTER_FIRETIME] + 3) return 1;
					PI[playerid][P_SHOOTER_FIRETIME] = gettime();
					new Float:pos[6], Float:m_pos[6], Float:v_pos[7], vehicleid = GetPlayerVehicleID(playerid), Float:distance = 120.0, Float:speed = distance + 30.0;
					GetVehiclePos(vehicleid, v_pos[0], v_pos[1], v_pos[2]);
					GetVehicleRotation(vehicleid, v_pos[3], v_pos[4], v_pos[5]);
					GetVehicleZAngle(vehicleid, v_pos[6]);
					
					for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
					{
						if(IsPlayerConnected(i) && PI[i][P_GAMEMODE] == M_SHOOTER)
						{
							if(i == playerid) continue;
							new Float:vel = GetVehicleSpeed(PI[i][P_SHOOTER_VEHICLEID]);
							if(IsPlayerInRangeOfPoint(i, distance, v_pos[0], v_pos[1], v_pos[2]) && vel <= 5.0)
							{
								new Float:tmpx, Float:tmpy, Float:tmpz, Float:tmpang;
								GetPlayerPos(i, tmpx, tmpy, tmpz);
								tmpang = (90 - atan2(tmpy - v_pos[1], tmpx - v_pos[0]) );
								if(tmpang < 0) tmpang = 360.0 + tmpang;
								tmpang = 360.0 - tmpang;
								if(floatabs(tmpang - v_pos[6]) < 5.0)
								{
									distance = GetPlayerDistanceFromPoint(i, v_pos[0], v_pos[1], v_pos[2]);
								}
							}
						}
					}
					
					conversion(v_pos[0], v_pos[1], v_pos[2], v_pos[3], v_pos[4], v_pos[5], 0.0, 3.5, -0.4, 0.0, 0.0, 0.0, pos[0], pos[1], pos[2], pos[3], pos[4], pos[5]);
					conversion(pos[0], pos[1], pos[2], pos[3], pos[4], pos[5], 0.0, distance, 0.2, 0.0, 0.0, 0.0, m_pos[0], m_pos[1], m_pos[2], m_pos[3], m_pos[4], m_pos[5]);
					new id = CreateDynamicObject(345, pos[0], pos[1], pos[2],	pos[3], pos[4], pos[5], SHOOTER_VW);
					new areaid = CreateDynamicSphere(0.0, 0.0, 0.0, 5.5, SHOOTER_VW);
					AttachDynamicAreaToObject(areaid, id); 
					
					new ob_info[2]; ob_info[0] = true; ob_info[1] = areaid;
					new area_info[3]; area_info[0] = true; area_info[1] = id; area_info[2] = playerid;
					Streamer_SetArrayData(STREAMER_TYPE_OBJECT, id, E_STREAMER_EXTRA_ID, ob_info, 2);
					Streamer_SetArrayData(STREAMER_TYPE_AREA, areaid, E_STREAMER_EXTRA_ID, area_info, 3);

					MoveDynamicObject(id, m_pos[0], m_pos[1], m_pos[2], speed);
					Streamer_Update(playerid);
					return 1;
				}
			}
		}
		return 1;
	}
	else if(newkeys & KEY_ACTION)
	{
		if(PI[playerid][P_GAMEMODE] == M_SHOOTER && ST[S_STATUS] == SHOOTER_RUNNING)
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				if(gettime() < PI[playerid][P_SHOOTER_JUMP] + 2) return 1;
				PI[playerid][P_SHOOTER_JUMP] = gettime();
				new Float:x, Float:y, Float:z;
				GetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z);
				SetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z + 0.3);
				return 1;
			}
			return 1;
		}
	}
	else if(newkeys & KEY_YES)
	{
		if(PI[playerid][P_EVENT_POSGET])
		{
			PI[playerid][P_EVENT_POSGET] = false;
			if(EVENT_STATUS == EVENT_RUNNING) return SendClientMessage(playerid, -1, "{"ORANGE"}The event was already activated.");
			GetPlayerPos(playerid, EVENT_POS[0], EVENT_POS[1], EVENT_POS[2]);
			GetPlayerFacingAngle(playerid, EVENT_POS[3]);
			EVENT_INT = GetPlayerInterior(playerid);
			EVENT_VIRUALWORLD = GetPlayerVirtualWorld(playerid);
			ShowDialog(playerid, DIALOG_EVENT);
			return 1;
		}
		if(PI[playerid][P_GAMEMODE] == M_FREEROAM)
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				if(!PI[playerid][P_GODMODE]) return 1;
				new Float:x, Float:y, Float:z;
				GetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z);
				SetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z + 0.25);
				return 1;
			}
			return 1;
		}
		return 1;
	}
	else if(newkeys & KEY_CROUCH)
	{
		if(PI[playerid][P_GAMEMODE] == M_FREEROAM)
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				if(!PI[playerid][P_GODMODE]) return 1;
				new Float:angle;
				GetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
				SetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
				SetVehicleAngularVelocity(GetPlayerVehicleID(playerid), 0.0, 0.0, 0.0);
				return 1;
			}
			return 1;
		}
		return 1;
	}
	else if(newkeys & KEY_SUBMISSION)
	{
		if(PI[playerid][P_GAMEMODE] == M_FREEROAM)
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && PI[playerid][P_VIP] && !PI[playerid][P_GODMODE])
			{
				RepairVehicle(GetPlayerVehicleID(playerid));
				PlayerPlaySoundEx(playerid, 1133, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~~p~~h~vehicle repaired!", 2000, 6);
				return 1;
			}
			return 1;
		}
		return 1;
	}
	
	if(PRESSED(KEY_WALK))
    {
        if(PI[playerid][P_GAMEMODE] == M_ZOMBIE && PI[playerid][P_ZOMBIE_TEAM] == TEAM_ZOMBIE && PI[playerid][P_STATUS] == S_SPAWNED)
        {
            ApplyAnimation(playerid, "ped", "WALK_old", 4.1, 1, 1, 1, 1, 1, true);
			return 1;
        }
	}
	else if(PRESSED(KEY_SPRINT))
	{
    	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE && PI[playerid][P_ZOMBIE_TEAM] == TEAM_ZOMBIE && PI[playerid][P_STATUS] == S_SPAWNED)
    	{
			ApplyAnimation(playerid, "MUSCULAR", "MuscleSprint", 4.1, 1, 1, 1, 1, 1, true);
			return 1;
		}
	}
	
	if(RELEASED(KEY_WALK) || RELEASED(KEY_SPRINT))
	{
        if(PI[playerid][P_GAMEMODE] == M_ZOMBIE && PI[playerid][P_ZOMBIE_TEAM] == TEAM_ZOMBIE && PI[playerid][P_STATUS] == S_SPAWNED)
        {
            ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 0, 0, 0, 0, true);
			return 1;
        }
	}
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	if(PI[playerid][P_STATUS] == S_SPAWNED || PI[playerid][P_STATUS] == S_DEAD)
	{
		if(GetPlayerPing(playerid) >= MAX_PING)
		{
			new message[145]; format(message, 145, "{FF7A45}NOTICE: The %S player has been expelled by Ping High (+%d).", PI[playerid][P_NAME], MAX_PING);
			SendMessageToAdmins(-1, message);
			
			new log[145]; format(log, 145, "Player%S (%D) [%S] Kicked by High Ping +%d ", PI[playerid][P_NAME], PI[playerid][P_ID], PI[playerid][P_IP], MAX_PING);
			AntiCheatLog(log);
		
			FuckPlayer(playerid, "Very high ping (more than 750)");
			return 1;
		}
	}
	
	TextDrawHideForPlayer(playerid, TD_MUSIC_YT[0]);
	TextDrawHideForPlayer(playerid, TD_MUSIC_YT[1]);
	PI[playerid][P_ANTICARTROLL_TIME] += 221;
	if(PI[playerid][P_GODMODE]) DeactivePlayerGodMode(playerid);
	switch(PI[playerid][P_GAMEMODE])
	{
		case M_DUEL:
		{
			new duel_id = PI[playerid][P_DUEL_ID];
			if(DLI[duel_id][DL_RUNNING])
			{
				new winner;
				if(DLI[duel_id][DL_PLAYER_ONE] == playerid) winner = DLI[duel_id][DL_PLAYER_TWO];
				else winner = DLI[duel_id][DL_PLAYER_ONE];
				FinishDuel(duel_id, winner, playerid);
				SendClientMessage(winner, -1, "{CCCCCC}Info: The duel has ended, for Exitduel Use /Exitduel.");
			}
			return 1;
		}
		case M_FREEROAM:
		{

			if(PI[playerid][P_DESMADRE])
			{
				new r = random(sizeof(Random_Desmadre_Spawn));
				SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), Random_Desmadre_Spawn[r][0], Random_Desmadre_Spawn[r][1], Random_Desmadre_Spawn[r][2], Random_Desmadre_Spawn[r][3], 24, 9999999999, 25, 9999999999, 34, 9999999999);
			}
			else
			{
				new Float:distance;
				new respawnID;

				distance = GetPlayerDistanceFromPoint(playerid, PlayerSpawnPosition_FR_LV[0][0], PlayerSpawnPosition_FR_LV[0][1], PlayerSpawnPosition_FR_LV[0][2]);
				respawnID = 0;
				for(new i = 0; i < sizeof(PlayerSpawnPosition_FR_LV); ++i)
				{
					new Float:tempDistance = GetPlayerDistanceFromPoint(playerid, PlayerSpawnPosition_FR_LV[i][0], PlayerSpawnPosition_FR_LV[i][1], PlayerSpawnPosition_FR_LV[i][2]);
					if(tempDistance < distance)
					{
						distance = tempDistance;
						respawnID = i;
					}
				}
				SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), PlayerSpawnPosition_FR_LV[respawnID][0], PlayerSpawnPosition_FR_LV[respawnID][1], PlayerSpawnPosition_FR_LV[respawnID][2], PlayerSpawnPosition_FR_LV[respawnID][3], 0, 0, 0, 0, 0, 0);
			}
			
		}
		case M_GANGWAR:
		{
			SetPlayerColor(playerid, TEAM_COLORS[GetPlayerTeam(playerid)]);
			new r = random(sizeof(TEAM_SPAWNS[]));
			SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), TEAM_SPAWNS[GetPlayerTeam(playerid)][r][0], TEAM_SPAWNS[GetPlayerTeam(playerid)][r][1], TEAM_SPAWNS[GetPlayerTeam(playerid)][r][2], TEAM_SPAWNS[GetPlayerTeam(playerid)][r][3], TEAM_WEAPONS[GetPlayerTeam(playerid)][0], 500, TEAM_WEAPONS[GetPlayerTeam(playerid)][1], 500, TEAM_WEAPONS[GetPlayerTeam(playerid)][2], 500);
		}
		case M_DM:
		{
			new index = random(sizeof(DM_SP));
			SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), DM_SP[index][0], DM_SP[index][1], DM_SP[index][2], DM_SP[index][3], 0, 0, 0, 0, 0, 0);
		}
		case M_TDM:
		{
			new index = random(sizeof(TDM_SP[])), team = GetPlayerTeam(playerid);
			SetSpawnInfo(playerid, team, GetPlayerSkin(playerid), TDM_SP[team][index][0], TDM_SP[team][index][1], TDM_SP[team][index][2], TDM_SP[team][index][3], 0, 0, 0, 0, 0, 0);
			if(IsPlayerConnected(killerid))
            {
                if(PI[killerid][P_GAMEMODE] == M_TDM)
                {
					new teamKiller = GetPlayerTeam(killerid);
				    TDMI[T_COUNTER][ teamKiller ] ++;
				    if(TDMI[T_COUNTER][ teamKiller ] == TDMI[T_OBJECTIVE])
				    {
						givePrize(M_TDM, teamKiller, 750 * TDMI[T_PLAYERS], 5);
						new str[45]; format(str, 45, "EQUIPMENT_%d_gana", teamKiller + 1);
						TextDrawSetString(TD_TDM[15], str);
				        KillTimer(TDMI[T_TIMETIMER]);
						TDMI[T_TIME] = 0;
						KillTimer(TDMI[T_NEXTTDM_TIMER]);
						TDMI[T_NEXTTDM_TIMER] = SetTimer("NextTDM", 3000, false);
				    }
                }
			}
		}
		case M_DERBY:
		{
			if(PI[playerid][P_STATUS] == S_SPAWNED && PI[playerid][P_DERBY_STATUS] == PD_NORMAL)
			{
				if(DI[D_STATUS] == DERBY_RUNNING && DI[D_RUNNINGPLAYERS] > 1)
				{
					PlayerDerbyDead(playerid);
				}
			}
		}
		case M_SHOOTER:
		{
			if(PI[playerid][P_STATUS] == S_SPAWNED && PI[playerid][P_SHOOTER_STATUS] == PD_NORMAL)
			{
				if(ST[S_STATUS] == SHOOTER_RUNNING && ST[S_RUNNING_PLAYERS] > 1)
				{
					PlayerShooterDead(playerid);
				}
			}
		}
		case M_FALL:
		{
			if(FI[F_STATUS] == FALL_RUNNING) PlayerFallDead(playerid);
		}
		case M_ZOMBIE:
		{		
			if(IsPlayerInAnyVehicle(playerid)) RemovePlayerFromVehicleEx(playerid);
			
			if(PI[playerid][P_VIP])
			{
				if(IsPlayerConnected(killerid))
				{
					if(PI[killerid][P_ZOMBIE_TEAM] == TEAM_ZOMBIE)
					{
						PI[playerid][P_INFECTED] = true;
					}
				}
			}
			if(PI[playerid][P_INFECTED] && PI[playerid][P_ZOMBIE_TEAM] == TEAM_HUMANS)
			{
				if(ZI[Z_TEAM_PLAYERS][1] > ZI[Z_TEAM_PLAYERS][0] + 3) PI[playerid][P_INFECTED] = false;
				else 
				{
					ZI[Z_TEAM_PLAYERS][PI[playerid][P_ZOMBIE_TEAM]] -= 1;
					PI[playerid][P_ZOMBIE_TEAM] = TEAM_ZOMBIE;
					ZI[Z_TEAM_PLAYERS][PI[playerid][P_ZOMBIE_TEAM]] += 1;
					
					new r = random(sizeof(ZombieSpawns[]));
					SetPlayerColor(playerid, ZombieColor[PI[playerid][P_ZOMBIE_TEAM]]);
					SetSpawnInfo(playerid, NO_TEAM, GetPlayerSkin(playerid), ZombieSpawns[PI[playerid][P_ZOMBIE_TEAM]][r][0], ZombieSpawns[PI[playerid][P_ZOMBIE_TEAM]][r][1], ZombieSpawns[PI[playerid][P_ZOMBIE_TEAM]][r][2], ZombieSpawns[PI[playerid][P_ZOMBIE_TEAM]][r][3], 0, 0, 0, 0, 0, 0);
					GameTextForPlayer(playerid, "~r~~h~Infected", 5000, 2);
				}
			}
			
			if(!PI[playerid][P_INFECTED])
			{
				new team = PI[playerid][P_ZOMBIE_TEAM];
				new Float:distance;
				new respawnID;

				distance = GetPlayerDistanceFromPoint(playerid, ZombieSpawns[team][0][0], ZombieSpawns[team][0][1], ZombieSpawns[team][0][2]);
				respawnID = 0;
				for(new i = 0; i < sizeof(ZombieSpawns[]); ++i)
				{
					new Float:tempDistance = GetPlayerDistanceFromPoint(playerid, ZombieSpawns[team][i][0], ZombieSpawns[team][i][1], ZombieSpawns[team][i][2]);
					if(tempDistance < distance)
					{
						distance = tempDistance;
						respawnID = i;
					}
				}
				SetSpawnInfo(playerid, team, GetPlayerSkin(playerid), ZombieSpawns[team][respawnID][0], ZombieSpawns[team][respawnID][1], ZombieSpawns[team][respawnID][2], ZombieSpawns[team][respawnID][3], 0, 0, 0, 0, 0, 0);
			}
			PI[playerid][P_INFECTED] = false;
			if(IsPlayerConnected(killerid))
			{
				GivePlayerScoreEx(killerid, 1);	
				GivePlayerMoneyEx(killerid, 500);
				PI[killerid][P_KILLS] ++;
			}
			PI[playerid][P_DEATHS] ++;
			SendDeathMessage(killerid, playerid, reason);
			PI[playerid][P_STATUS] = S_DEAD;
			return 1;
		}
	}
	
	if(IsPlayerConnected(killerid))
	{
		if(PI[killerid][P_DESMADRE])
		{
			new Float:armour; GetPlayerArmour(killerid, armour);
			if(armour < 100.0) SetPlayerArmour(killerid, armour+5.0);
		}
		TogglePlayerSpectatingEx(playerid, true);
		if(IsPlayerInAnyVehicle(killerid)) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(killerid));
		else PlayerSpectatePlayer(playerid, killerid);
		
		PI[playerid][P_TIMERS][2] = SetTimerEx("FinishPlayerSpectatePlayer", 3000, false, "i", playerid);
		GivePlayerScoreEx(killerid, 1);
		switch(random(5))
		{
			case 0: GameTextForPlayer(playerid, "~r~~h~Fucking Manco", 3000, 6), GameTextForPlayer(killerid, "~g~~h~all a man", 3000, 6);
			case 1: GameTextForPlayer(playerid, "~r~~h~noob", 3000, 6), GameTextForPlayer(killerid, "~g~~h~Mia Willy Mother", 3000, 6);
			case 2: GameTextForPlayer(playerid, "~r~~h~learn to play", 3000, 6), GameTextForPlayer(killerid, "~g~~h~el fucking I love", 3000, 6);
			case 3: GameTextForPlayer(playerid, "~r~~h~dedicate yourself to something else", 3000, 6), GameTextForPlayer(killerid, "~g~~h~You are Bicharraco", 3000, 6);
			case 4: GameTextForPlayer(playerid, "~r~~h~Put Studyr", 3000, 6), GameTextForPlayer(killerid, "~g~~h~Kill will feed you", 3000, 6);
		}
		GivePlayerMoneyEx(killerid, 500);
	}

	if(IsPlayerConnected(killerid)) PI[killerid][P_KILLS] ++;
	PI[playerid][P_DEATHS] ++;
	SendDeathMessage(killerid, playerid, reason);
	PI[playerid][P_STATUS] = S_DEAD;
	return 1;
}

public OnPlayerText(playerid, text[])
{
	if(PI[playerid][P_STATUS] == S_CONNECTED || PI[playerid][P_STATUS] == S_CLASS) { SendClientMessage(playerid, -1, "{"GREY"}Now you can't talk."); return 0; }
	if(text[0] == '#' && (PI[playerid][P_MOD] >= 1 || IsPlayerAdmin(playerid)) )
	{
      	new string[145];
        format(string, sizeof(string), "		{90C3D4}Admin Chat: {90D496}%s (%s): {CCCCCC}%s", PI[playerid][P_NAME], adminLevel(PI[playerid][P_MOD]), text[1]);
		SendMessageToAdmins(-1, string);
		return 0;
	}
	
	if(text[0] == '@' && PI[playerid][P_VIP])
	{
      	new string[145];
        format(string, sizeof(string), "		{C6D855}VIP Chat: {CCCCCC}%s: %s", PI[playerid][P_NAME], text[1]);
		SendMessageToVipUsers(-1, string);
		return 0;
	}
	
	if(text[0] == '!' && PI[playerid][P_CREW_SLOT] != -1)
	{
      	new string[145];
        format(string, sizeof(string), "		{%x}%s Chat: {CCCCCC}%s ({90C3D4}%s{CCCCCC}): %s", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], CI[PI[playerid][P_CREW_SLOT]][C_NAME], PI[playerid][P_NAME], Crew_Ranks[PI[playerid][P_CREW_RANK]], text[1]);
		SendMessageToCrew(PI[playerid][P_CREW_ID], -1, string);
		return 0;
	}
	
	if(gettime() < PI[playerid][P_ANTIFLOOD_TICKCOUNT] + 1) { GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~~r~~h~vamo_~p~a_~y~Calmarno~n~~g~~h~ok?~n~_", 2000, 6); return 0; }
	PI[playerid][P_ANTIFLOOD_TICKCOUNT] = gettime();
					
    new str[145];
	if(PI[playerid][P_CREW_SLOT] == -1) format(str, sizeof(str), "{%06x}%s{CCCCCC}(%d): {%x}%s", GetPlayerColor(playerid) >>> 8, PI[playerid][P_NAME], playerid, PI[playerid][P_CHATCOLOR], text);
	else format(str, sizeof(str), "{%x} [%s] {%06x}%s{CCCCCC}(%d): {%x}%s", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], CI[PI[playerid][P_CREW_SLOT]][C_NAME], GetPlayerColor(playerid) >>> 8, PI[playerid][P_NAME], playerid, PI[playerid][P_CHATCOLOR], text);
    SendClientMessageToAll(-1, str);
    SetPlayerChatBubble(playerid, text, PI[playerid][P_CHATCOLOR] << 8, 10.0, 10000);
	return 0;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
    if(pickupid == GROVE_STREET_HEALTH_PICKUP || pickupid == BALLAS_HEALTH_PICKUP || pickupid == POLICE_HEALTH_PICKUP)
    {
		if(GetPlayerTeam(playerid) == NO_TEAM) return 1;
        SetPlayerHealth(playerid, 100.0);
		SetPlayerArmour(playerid, 100.0);
		return 1;
    }
	else if(pickupid == GROVE_STREET_WEAPON_PICKUP[0] || pickupid == BALLAS_WEAPON_PICKUP[0] || pickupid == POLICE_WEAPON_PICKUP[0])
	{
		if(GetPlayerTeam(playerid) == NO_TEAM) return 1;
		GivePlayerWeapon(playerid, TEAM_WEAPONS[GetPlayerTeam(playerid)][0], 500);
		return 1;
	}
	else if(pickupid == GROVE_STREET_WEAPON_PICKUP[1] || pickupid == BALLAS_WEAPON_PICKUP[1] || pickupid == POLICE_WEAPON_PICKUP[1])
	{
		if(GetPlayerTeam(playerid) == NO_TEAM) return 1;
		GivePlayerWeapon(playerid, TEAM_WEAPONS[GetPlayerTeam(playerid)][1], 500);
		return 1;
	}
	else if(pickupid == GROVE_STREET_WEAPON_PICKUP[2] || pickupid == BALLAS_WEAPON_PICKUP[2] || pickupid == POLICE_WEAPON_PICKUP[2])
	{
		if(GetPlayerTeam(playerid) == NO_TEAM) return 1;
		GivePlayerWeapon(playerid, TEAM_WEAPONS[GetPlayerTeam(playerid)][2], 500);
		return 1;
	}
	
	else if(pickupid == PORTAL_PICKUP[0])
	{
		SetPlayerPosEx(playerid, 288.515350, -1782.124755, 4.480312, 180.0, 0, FREEROAM_VW, false, true, 0);
		SetCameraBehindPlayer(playerid);
		GameTextForPlayer(playerid, "Los Santos", 3000, 6);
		return 1;
	}
	else if(pickupid == PORTAL_PICKUP[1])
	{
		SetPlayerPosEx(playerid, -1984.807861, 260.942871, 35.223373, 90.0, 0, FREEROAM_VW, false, true, 0);
		SetCameraBehindPlayer(playerid);
		GameTextForPlayer(playerid, "San Fierro", 3000, 6);
		return 1;
	}
	else if(pickupid == PORTAL_PICKUP[2])
	{
		SetPlayerPosEx(playerid, -743.484863, 502.881072, 1372.125000, 250.0, 1, FREEROAM_VW, false, true, 0);
		SetCameraBehindPlayer(playerid);
		GameTextForPlayer(playerid, "Libert City", 3000, 6);
		return 1;
	}
	else if(pickupid == PORTAL_PICKUP[3])
	{
		SetPlayerPosEx(playerid, 1506.277099, 1501.160766, 10.886412, 0.0, 0, FREEROAM_VW, false, true, 0);
		SetCameraBehindPlayer(playerid);
		GameTextForPlayer(playerid, "Airport Las Venturas", 3000, 6);
		return 1;
	}
	else if(pickupid == PORTAL_PICKUP[4])
	{
		SetPlayerPosEx(playerid, -1524.225585, -99.324348, 14.148437, 45.0, 0, FREEROAM_VW, false, true, 0);
		SetCameraBehindPlayer(playerid);
		GameTextForPlayer(playerid, "Airport San Fierro", 3000, 6);
		return 1;
	}
	else if(pickupid == PORTAL_PICKUP[5])
	{
		SetPlayerPosEx(playerid, 374.283721, 2536.765869, 16.769062, 180.0, 0, FREEROAM_VW, false, true, 0);
		SetCameraBehindPlayer(playerid);
		GameTextForPlayer(playerid, "Airport Abandoned", 3000, 6);
		return 1;
	}
	else if(pickupid == PORTAL_PICKUP[6])
	{
		SetPlayerPosEx(playerid, -2318.737060, -1640.964599, 483.703125, 260.0, 0, FREEROAM_VW, false, true, 0);
		SetCameraBehindPlayer(playerid);
		GameTextForPlayer(playerid, "Monte Chilliad", 3000, 6);
		return 1;
	}
	else if(pickupid == PORTAL_PICKUP[7])
	{
		SetPlayerPosEx(playerid, -2625.978515, 1393.064086, 7.101562, 268.868530, 0, FREEROAM_VW, false, true, 0);
		SetCameraBehindPlayer(playerid);
		GameTextForPlayer(playerid, "Puente SF", 3000, 6);
		return 1;
	}
	else if(pickupid == PORTAL_PICKUP[8])
	{
		SetPlayerPosEx(playerid, 837.984191, -1101.969116, 24.303991, 269.831726, 0, FREEROAM_VW, false, true, 0);
		SetCameraBehindPlayer(playerid);
		GameTextForPlayer(playerid, "Cemetery", 3000, 6);
		return 1;
	}
    return 1;
}

public OnPlayerEnterDynamicArea(playerid, areaid)
{
	/*if(areaid == LS_Gang_Area && GetPlayerVirtualWorld(playerid) == FREEROAM_VW && PI[playerid][P_GAMEMODE] == M_FREEROAM && GetPlayerInterior(playerid) == 0)
	{
		if(PI[playerid][P_GODMODE]) DeactivePlayerGodMode(playerid);
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) RemoveVehicleComponent(GetPlayerVehicleID(playerid), 1009);
		ResetPlayerWeapons(playerid);
		if(GetPlayerTeam(playerid) != NO_TEAM)
		{
			GivePlayerWeapon(playerid, TEAM_WEAPONS[GetPlayerTeam(playerid)][0], 500);
			GivePlayerWeapon(playerid, TEAM_WEAPONS[GetPlayerTeam(playerid)][1], 500);
			GivePlayerWeapon(playerid, TEAM_WEAPONS[GetPlayerTeam(playerid)][2], 500);
		}
		PlayerPlaySoundEx(playerid, 30802, 0.0, 0.0, 0.0);
		GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~~h~~r~has_entrado_en_zona_de_bandas~n~_", 3000, 6);
		return 1;
	}*/
	if(PI[playerid][P_GAMEMODE] == M_SHOOTER)
	{
		new area_info[3]; 
		Streamer_GetArrayData(STREAMER_TYPE_AREA, areaid, E_STREAMER_EXTRA_ID, area_info, 3);
		if(area_info[0] && playerid != area_info[2] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			GivePlayerScoreEx(area_info[2], 1);
			DestroyDynamicArea(areaid);
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			SHOOTER_CreateExplosion(pos[0], pos[1], pos[2], 0, 15.0);
			DestroyDynamicObject(area_info[1]);
		}
		return 1;
	}
	
	if(areaid == Desmadre_Area && GetPlayerVirtualWorld(playerid) == FREEROAM_VW && PI[playerid][P_GAMEMODE] == M_FREEROAM && GetPlayerInterior(playerid) == 1)
	{
		if(PI[playerid][P_GODMODE])
		{
			if(PI[playerid][P_SPAWN_PROTECTION]) PI[playerid][P_SPAWN_PROTECTION] = false;
			PI[playerid][P_GODMODE] = false;
		}
		SetPlayerArmour(playerid, 0.0);
		SetPlayerHealth(playerid, 100.0);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 24, 9999999999);
		GivePlayerWeapon(playerid, 25, 9999999999);
		GivePlayerWeapon(playerid, 34, 9999999999);
		PI[playerid][P_DESMADRE] = true;
		PlayerPlaySoundEx(playerid, 30802, 0.0, 0.0, 0.0);
		GameTextForPlayer(playerid, "~p~Dissadre!", 3000, 6);
		return 1;
	}
	
	if(PI[playerid][P_GAMEMODE] == M_FREEROAM)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new Float:p[3]; GetVehiclePos(GetPlayerVehicleID(playerid), p[0], p[1], p[2]);
			for(new i = 0; i != sizeof(PlayerSpawnPosition_FR_LV); i++)
			{
				if(areaid == PlayerSpawnPosition_Areas[i])
				{
					if(p[2] <= PlayerSpawnPosition_FR_LV[i][2] + 10.0)
					{
						new Float:x, Float:y, Float:z;
						GetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z);
						SetVehicleVelocity(GetPlayerVehicleID(playerid), -x * 0.8, -y * 0.8, z + 0.25);
						GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~~h~~p~~h~spawn_zone~n~_", 3000, 6);
						return 1;
					}
				}
			}
		}
		else if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			if(!PI[playerid][P_GODMODE] && !PI[playerid][P_SPAWN_PROTECTION] && !PI[playerid][P_DESMADRE])
			{
				new Float:p[3]; GetPlayerPos(playerid, p[0], p[1], p[2]);
				for(new i = 0; i != sizeof(PlayerSpawnPosition_FR_LV); i++)
				{
					if(areaid == PlayerSpawnPosition_Areas[i])
					{
						if(p[2] <= PlayerSpawnPosition_FR_LV[i][2] + 10.0)
						{
							new Float:oldh = PI[playerid][P_HEALTH];
							GetPlayerHealth(playerid, PI[playerid][P_HEALTH]);
							if(PI[playerid][P_HEALTH] > 100.0) PI[playerid][P_HEALTH] = oldh;
							ResetPlayerWeapons(playerid);
							SetPlayerHealth(playerid, 9999999.0);
							TextDrawMessageForPlayer(playerid, "~g~~h~~h~ON~n~Spawn_Protection", 3000);
							//GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~~h~~y~spawn_protection_~g~~h~on~n~_", 3000, 6);
							PI[playerid][P_SPAWN_PROTECTION] = true;
							return 1;
						}
					}
				}
			}
		}
	}
	return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	if(areaid == Desmadre_Area)
	{
		PI[playerid][P_DESMADRE] = false;
		return 1;
	}
	else if(areaid == Minecraft_Area)
	{
		if(PI[playerid][P_GAMEMODE] == M_FREEROAM)
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), FREEROAM_VW);
			SetPlayerVirtualWorld(playerid, FREEROAM_VW);
		}
		Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT, 550, playerid);
		return 1;
	}
	
	if(PI[playerid][P_GAMEMODE] == M_FREEROAM)
	{
		if(!PI[playerid][P_GODMODE] && PI[playerid][P_SPAWN_PROTECTION])
		{
			for(new i = 0; i != sizeof(PlayerSpawnPosition_FR_LV); i++)
			{
				if(areaid == PlayerSpawnPosition_Areas[i])
				{
					SetPlayerHealth(playerid, PI[playerid][P_HEALTH]);
					ResetPlayerWeapons(playerid);
					for(new w = 0; w != 10; w ++) GivePlayerWeapon(playerid, Random_Weapons[random(sizeof(Random_Weapons))], 500);
					TextDrawMessageForPlayer(playerid, "~r~~h~~h~OFF~n~Spawn_Protection", 3000);
					//GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~~h~~y~spawn_protection_~r~~h~off~n~_", 3000, 6);
					PI[playerid][P_SPAWN_PROTECTION] = false;
					return 1;
				}
			}
		}
	}
	return 1;
}

public OnDynamicObjectMoved(objectid)
{
	new ob_info[2]; 
	Streamer_GetArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, ob_info, 2);
	if(ob_info[0])
	{
		DestroyDynamicArea(ob_info[1]);
		new Float:pos[3];
		GetDynamicObjectPos(objectid, pos[0], pos[1], pos[2]);
		SHOOTER_CreateExplosion(pos[0], pos[1], pos[2], 0, 15.0);
		DestroyDynamicObject(objectid);
	}
	return 1;
}

/*
new eTPcommand[][] =
{
	"TP_TYPE_CITY",
	"TP_TYPE_STUNTS",
	"TP_TYPE_DM",
	"TP_TYPE_JUMP",
	"TP_TYPE_PARKOUR",
	"TP_TYPE_BASEJUMP",
	"TP_TYPE_DRIFT",
	"TP_TYPE_INTERIOR",
	"TP_TYPE_OTHER",
	"TP_TYPE_CARTUNING"
};

CMD:pos(playerid, params[])
{
	new type, etp_name[24], etp_command[24], etp_freeze, etp_allowcar, etp_modelid;
	if(sscanf(params, "ds[24]s[23]dd", type, etp_name, etp_command, etp_freeze, etp_allowcar)) return SendClientMessage(playerid, -1, "Syntax: /pos [TYPE] [TP_NAME] [TP_COMMAND] [TP_FREEZE] [TP_ALLOWCARTP]");
	
	new Float:p[4];
	if(IsPlayerInAnyVehicle(playerid))
	{
		GetVehiclePos(GetPlayerVehicleID(playerid), p[0], p[1], p[2]);
		GetVehicleZAngle(GetPlayerVehicleID(playerid), p[3]);
		etp_modelid = GetVehicleModel(GetPlayerVehicleID(playerid));
	}
	else GetPlayerPos(playerid, p[0], p[1], p[2]), GetPlayerFacingAngle(playerid, p[3]);
	printf("{%s, \"%s\", \"%s\", %f, %f, %f, %f, %d, FREEROAM_VW, %s, %s, %d},", eTPcommand[type], etp_name, etp_command, p[0], p[1], p[2], p[3], GetPlayerInterior(playerid), (etp_freeze == 0 ? ("false"):("true")), (etp_allowcar == 0 ? ("false"):("true")), etp_modelid);
	return 1;
}

CMD:sel(playerid, params[])
{
	SelectObject(playerid);
	return 1;
}

public OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z)
{
	printf("Eliminado: %d, %d, %f, %f, %f", objectid, modelid, x, y, z);
	DestroyDynamicObject(objectid);
	return 1;
}*/

CMD:rpos(playerid, params[])
{
	new Float:pos[4];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	GetPlayerFacingAngle(playerid, pos[3]);
	printf("%f, %f, %f, %f", pos[0], pos[1], pos[2], pos[3]);
	return 1;
}

CMD:panel(playerid, params[])
{
	ShowDialog(playerid, DIALOG_USER_PANEL);
	return 1;
}

CMD:color(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE || PI[playerid][P_GAMEMODE] == M_GANGWAR || PI[playerid][P_GAMEMODE] == M_TDM) return SendClientMessage(playerid, -1, "{"GREY"}You can't change color in this game mode.");
	ShowDialog(playerid, DIALOG_SELECT_COLOR);
	return 1;
}

CMD:colores(playerid, params[])
{
	return cmd_color(playerid, params);
}

CMD:music(playerid, params[])
{
	ShowDialog(playerid, DIALOG_SOCIAL_MUSIC);
	return 1;
}

CMD:radio(playerid, params[])
{
	ShowDialog(playerid, DIALOG_RADIO);
	return 1;
}

CMD:stop(playerid, params[])
{
	StopAudioStreamForPlayer(playerid);
	return 1;
}

CMD:updatedata(playerid, params[])
{
	if(PI[playerid][P_ID] == 0) return SendClientMessage(playerid, -1, "{CCCCCC}You are not registered, use /Register.");
	UpdateUserData(playerid);
	SendClientMessage(playerid, -1, "Updated data.");
	return 1;
}

CMD:stats(playerid, params[])
{
	ShowDialog(playerid, DIALOG_STATS);
	return 1;
}

CMD:kill(playerid, params[])
{
	SetPlayerHealth(playerid, 0.0);
	return 1;
}

CMD:godmode(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM || PI[playerid][P_DESMADRE]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	if(PI[playerid][P_GODMODE]) DeactivePlayerGodMode(playerid);
	else ActivePlayerGodMode(playerid);
	return 1;
}

CMD:god(playerid, params[])
{
	return cmd_godmode(playerid, params);
}

CMD:tele(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	ShowDialog(playerid, DIALOG_TELEPORTS);
	return 1;
}

CMD:t(playerid, params[])
{
	return cmd_tele(playerid, params);
}

CMD:v(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	if(!sscanf(params, "d", params[0])) 
	{
		if(params[0] < 400 || params[0] > 611) return SendClientMessage(playerid, -1, "{"ORANGE"}Incorrect vehicle.");
		switch(params[0])
		{
			case 425, 447, 469, 520, 432, 464: return SendClientMessage(playerid, -1, "{"ORANGE"}Prohibited vehicle.");
		}
		SpawnCarForPlayer(playerid, params[0]);
		return 1;
	}
	new vehname[24];
	if(!sscanf(params, "s[24]", vehname)) 
	{
		new VehicleID = GetVehicleModelIDFromName(vehname);
		if(VehicleID == -1) return SendClientMessage(playerid, -1, "{"ORANGE"}Incorrect vehicle.");
		switch(VehicleID)
		{
			case 425, 447, 469, 520, 432, 464: return SendClientMessage(playerid, -1, "{"ORANGE"}Vprohibited eHulo.");
		}
		SpawnCarForPlayer(playerid, VehicleID);
		return 1;
	}
	SendClientMessage(playerid, -1, "{"ORANGE"}Remember that you can also use {"GREY"}/V [Modelid/Name]");
    ShowDialog(playerid, DIALOG_VEHICLES);
	return 1;
}

CMD:play(playerid, params[])
{
	if(!sscanf(params, "d", params[0]))
	{
		if(params[0] == 0) return StopAudioStreamForPlayer(playerid);
		PlaySocialSong(playerid, params[0]);
	}
	else SendClientMessage(playerid, -1, "{CCCCCC}Use /play <id>");
	return 1;
}

CMD:like(playerid, params[])
{
	if(!PI[playerid][P_USEREXIT]) return SendClientMessage(playerid, -1, "{999999}You must be registered to indicate that you like a song.");
	new id;
	if(!sscanf(params, "d", id))
	{
		if(id <= 0) return SendClientMessage(playerid, -1, "{CCCCCC}Use /like <id>"); 
		new DBResult:Result;
		format(DB_Query, sizeof(DB_Query), "SELECT MUSIC.TITLE, (EXISTS(SELECT * FROM LIKES WHERE LIKES.ID_USUARIO = '%d' AND LIKES.ID_SONG = '%d')) AS LIKED FROM MUSIC WHERE MUSIC.ID = '%d'", PI[playerid][P_ID], id, id);
		Result = db_query(Database, DB_Query);
		
		new song_title[32], liked;
		if(db_num_rows(Result))
		{
			db_get_field(Result, 0, song_title, 32);
			liked = db_get_field_int(Result, 1);
			
			if(liked)
			{
				format(DB_Query, sizeof(DB_Query), "DELETE FROM LIKES WHERE ID_USUARIO = '%d' AND ID_SONG = '%d'", PI[playerid][P_ID], id);
				db_query(Database, DB_Query);
				SendClientMessageEx(playerid, -1, "{CCCCCC}The song {90C3D4}'%s' {CCCCCC}you do not like it anymore.", song_title);
			}
			else
			{
				format(DB_Query, sizeof(DB_Query), "INSERT INTO LIKES (ID_USUARIO, ID_SONG) VALUES ('%d', '%d')", PI[playerid][P_ID], id);
				db_query(Database, DB_Query);
				SendClientMessageEx(playerid, -1, "{CCCCCC}You have indicated that the song {90C3D4}'%s' {CCCCCC}do you like it.", song_title);
				SendClientMessage(playerid, -1, "{CCCCCC}You can remove this favorite song using the same command.");
			}
		}
		else SendClientMessage(playerid, -1, "{CCCCCC}Song not found.");
		db_free_result(Result);
	}
	else SendClientMessage(playerid, -1, "{CCCCCC}Use /like <id>"); 
	return 1;
}

CMD:duel(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_DUEL) return SendClientMessage(playerid, -1, "{CCCCCC}Error: You are already in a duel.");
	if(PI[playerid][P_IGNORE_DUELS]) return SendClientMessage(playerid, -1, "{CCCCCC}Error: You must activate duel requests with /dls.");
	
	new id, bet;
	if(!sscanf(params, "ud", id, bet))
	{
		if(id == playerid) return SendClientMessage(playerid, -1, "{CCCCCC}Error:");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid, -1, "{CCCCCC}Error: Disconnected player.");
		if(PI[id][P_GAMEMODE] == M_DUEL) return SendClientMessage(playerid, -1, "{CCCCCC}Error: This player is already in a duel.");
		if(PI[id][P_STATUS] != S_SPAWNED) return SendClientMessage(playerid, -1, "{CCCCCC}Error: The player is not prepared for a duel.");
		if(PI[id][P_IGNORE_DUELS]) return SendClientMessage(playerid, -1, "{CCCCCC}Error: The player ignores duel requests.");
		if(bet < 10 || bet > 10000) return SendClientMessage(playerid, -1, "{CCCCCC}Error: MINIMUM BET: 10 $, MAXIMUM BETWEEN: 10.000$.");
		if(PI[playerid][P_MONEY] < bet) return SendClientMessage(playerid, -1, "{CCCCCC}Error: You don't have enough money to make the bet.");
		if(PI[id][P_MONEY] < bet) return SendClientMessage(playerid, -1, "{CCCCCC}Error: The chosen player does not have enough money for the bet.");
		
		DLI[playerid][DL_RUNNING] = false;
		DLI[playerid][DL_DUEL_LIST_ID] = 0;
		DLI[playerid][DL_DUEL_WEAPON_ID] = 0;
		DLI[playerid][DL_PLAYER_ONE] = playerid;
		DLI[playerid][DL_PLAYER_TWO] = id;
		DLI[playerid][DL_BET] = bet;
		DLI[playerid][DL_WORLD] = playerid + NO_VW;
		ShowDialog(playerid, DIALOG_DUEL);
		return 1;
	}
	
	if(!sscanf(params, "u", params[0]))
	{
		if(params[0] == playerid) return SendClientMessage(playerid, -1, "{CCCCCC}Error:");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{CCCCCC}Error: Disconnected player.");
		if(PI[params[0]][P_GAMEMODE] == M_DUEL) return SendClientMessage(playerid, -1, "{CCCCCC}Error: This player is already in a duel.");
		if(PI[params[0]][P_STATUS] != S_SPAWNED) return SendClientMessage(playerid, -1, "{CCCCCC}Error: The player is not prepared for a duel.");
		if(PI[params[0]][P_IGNORE_DUELS]) return SendClientMessage(playerid, -1, "{CCCCCC}Error: The player ignores duel requests.");
		
		DLI[playerid][DL_RUNNING] = false;
		DLI[playerid][DL_DUEL_LIST_ID] = 0;
		DLI[playerid][DL_DUEL_WEAPON_ID] = 0;
		DLI[playerid][DL_PLAYER_ONE] = playerid;
		DLI[playerid][DL_PLAYER_TWO] = params[0];
		DLI[playerid][DL_BET] = 0;
		DLI[playerid][DL_WORLD] = playerid + NO_VW;
		ShowDialog(playerid, DIALOG_DUEL);
		return 1;
	}
	
	SendClientMessage(playerid, -1, "{CCCCCC}Use /duel <playerid/playername> <bet $>");	
	return 1;
}

CMD:dls(playerid, params[])
{
	if(PI[playerid][P_IGNORE_DUELS])
	{
		PI[playerid][P_IGNORE_DUELS] = false;
		SendClientMessage(playerid, -1, "{FFCC00}Petitions for enabled duels.");
	}
	else
	{
		PI[playerid][P_IGNORE_DUELS] = true;
		SendClientMessage(playerid, -1, "{FFCC00}You will no longer receive duel requests.");
	}
	return 1;
}

CMD:weather(playerid, params[])
{
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CCCCCC}Use /weather <id>");
	SetPlayerWeather(playerid, params[0]);
	//SetWeather(19);
	return 1;
}

CMD:aplay(playerid, params[])
{
	if(PI[playerid][P_MOD] < ADMIN_LEVEL_BAN) return 0;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CCCCCC}Use /aplay <id>");
	
	new DBResult:Result;
	format(DB_Query, sizeof(DB_Query), "SELECT TITLE, URL FROM MUSIC WHERE ID = '%d'", params[0]);
	Result = db_query(Database, DB_Query);
	new song_title[32], url[128];
	if(db_num_rows(Result))
	{
		db_get_field(Result, 0, song_title, 32);
		db_get_field(Result, 1, url, 128);
	}
	else return SendClientMessage(playerid, -1, "{CCCCCC}Song not found.");
	db_free_result(Result);
	
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
		if(IsPlayerConnected(i))
		{
			if(!PI[i][P_IGNORE_MUSIC])
			{
				PlayAudioStreamForPlayer(i, url);
				SendClientMessageEx(i, -1, "{CCCCCC}Reproducing {90C3D4}'%s' {CCCCCC}use {CCFF00}/play %d {CCCCCC}To reproduce this song.", song_title, params[0]);
			}
		}
	}
	
	new advert[145]; format(advert, 145, "{CC0000}%s[%d] use /aplay %d", PI[playerid][P_NAME], playerid, params[0]);
	SendMessageToAdmins(-1, advert);
	return 1;
}

CMD:w(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0 || PI[playerid][P_GODMODE] || PI[playerid][P_SPAWN_PROTECTION]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	if(!sscanf(params, "d", params[0])) 
	{
		if(params[0] == 38 || params[0] == 35 || params[0] == 36 || params[0] == 44 || params[0] == 45) return SendClientMessage(playerid, -1, "{"ORANGE"}Prohibited weapon.");
		GivePlayerWeapon(playerid, params[0], 500);
		return 1;
	}
	ShowDialog(playerid, DIALOG_WEAPONS);
	return 1;
}

CMD:ww(playerid, params[])
{
    if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0 || PI[playerid][P_GODMODE] || PI[playerid][P_SPAWN_PROTECTION]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid, 8, 1);
	GivePlayerWeapon(playerid, 27, 8888);
	GivePlayerWeapon(playerid, 29, 8888);
	GivePlayerWeapon(playerid, 31, 8888);
	PlayerPlaySoundEx(playerid, 1058, 0.0, 0.0, 0.0);
	return 1;
}

CMD:ww2(playerid, params[])
{
    if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0 || PI[playerid][P_GODMODE] || PI[playerid][P_SPAWN_PROTECTION]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid, 4, 1);
	GivePlayerWeapon(playerid,28, 1000);
	GivePlayerWeapon(playerid,30, 1000);
    PlayerPlaySoundEx(playerid, 1058, 0.0, 0.0, 0.0);
    return 1;
}

CMD:rw(playerid, params[])
{
    if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0 || PI[playerid][P_GODMODE] || PI[playerid][P_SPAWN_PROTECTION]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid, 32, 1000);
	GivePlayerWeapon(playerid, 26, 1000);
	GivePlayerWeapon(playerid, 25, 1000);
	PlayerPlaySoundEx(playerid, 1058, 0.0, 0.0, 0.0);
	return 1;
}

CMD:rw2(playerid, params[])
{
    if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0 || PI[playerid][P_GODMODE] || PI[playerid][P_SPAWN_PROTECTION]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid, 28, 1000);
	GivePlayerWeapon(playerid, 27, 1000);
    PlayerPlaySoundEx(playerid, 1058, 0.0, 0.0, 0.0);
	return 1;
}

CMD:jetpack(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
	GameTextForPlayer(playerid, "~p~~h~jetpack!", 2000, 6);
	return 1;
}

//ITEMS
CMD:items(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	ShowDialog(playerid, DIALOG_ITEMS);
	return 1;
}

CMD:remove(playerid, params[])
{
	for(new i=0; i< MAX_PLAYER_ATTACHED_OBJECTS; i++)
	{
		if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	}
	return 1;
}

CMD:FIREFIGHTER(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid, 0, 19330, 2, 0.166000, -0.038999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //FIREMAN
	return 1;
}

CMD:POLICECAP(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid, 0, 19161, 2, 0.078999, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //POLICE
	return 1;
}

CMD:hatmj(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid, 0, 18639, 2, 0.131000, 0.019000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //HAT MJ
	return 1;
}

CMD:obrero(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid, 0, 18638, 2, 0.148999, 0.031000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //WORKER
	return 1;
}

CMD:gorra(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid, 0, 18939, 2, 0.164000, 0.001999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Gorare
	return 1;
}

CMD:hat(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid, 0, 19488, 2, 0.121999, 0.000000, -0.005999, -83.199966, 98.200027, -2.500000, 1.000000, 1.000000, 1.000000); //sombrero
	return 1;
}

CMD:hatmg(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid, 0, 19352, 2, 0.106999, 0.016000, -0.010999, 4.500000, 82.099990, -3.100001, 1.000000, 1.000000, 1.000000); //magicosombr
	return 1;
}

CMD:bolsa(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid, 0, 19090, 2, -0.315999, 0.019999, 0.030000, 0.000000, 0.000000, 0.000000, 1.455999, 0.526000, 0.541000); //BAG
	return 1;
}

CMD:dj(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid, 0, 19424, 2, 0.070999, -0.026000, -0.002000, -85.299987, 1.600005, -99.500000, 0.944001, 0.915000, 0.809999); //DJ
	return 1;
}

CMD:dloro(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid,0,19078,1,-1.000000,-0.517000,0.000000,0.000000,0.299999,10.499994,8.673998,9.400999,7.410993);//dizfraz de loro
	return 1;
}

CMD:loro(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid,0,19078,4,-0.067000,0.053999,0.018000,-168.400039,-169.800003,-2.800000,1.000000,1.000000,1.000000);//loro en hombro
	return 1;
}

CMD:parche(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid,0,19085,2,0.090999,0.035000,-0.015000,106.599983,83.199996,0.800003,1.000000,1.000000,1.000000);//parche
	return 1;
}

CMD:dildo(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid,0,19086,15,0.051000,0.000000,-0.424999,0.000000,0.000000,-102.100006,1.000000,1.000000,1.000000);//dildo
	return 1;
}

CMD:chicken(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid,0,19137,2,0.101000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);//cabeza de pollo
	return 1;
}

CMD:dchicken(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid,0,19137,15,0.040999,0.000000,-0.130000,-86.300003,106.100013,-96.100051,7.741999,4.874000,5.584998);//diLSRaz de pollo
	return 1;
}

CMD:ciervo(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid,0,19315,1,-0.247999,0.509999,-0.015999,4.300004,86.900024,85.500015,3.010000,4.463000,3.824000);//ciervo
	return 1;
}

CMD:cuernos1(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid,0,19314,2,0.157000,0.000000,0.000000,-0.199999,-7.600006,-88.599998,1.000000,1.000000,1.000000);//cuernos 1
	return 1;
}

CMD:cuernos2(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid,0,19314,2,0.157000,0.000000,0.000000,1.400000,-7.600006,-28.599973,0.711000,0.919999,0.361999);//cuernos 2
	return 1;
}

CMD:dcalabaza(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid,0,19320,2,0.000000,0.000000,0.000000,4.299999,72.999992,3.199999,3.594999,3.787999,4.951001);//diLSRaz de calabaza
	return 1;
}

CMD:cabezon(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid,0,18963,2,0.261000,0.084999,0.004999,4.999999,85.400039,84.699974,2.097000,2.627000,3.033999);//cabezonn
	return 1;
}

CMD:delfin(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid,0,1607,2,0.267000,0.000000,0.000000,-0.199999,81.199996,-3.499999,1.135000,1.000000,1.126999);//delfin
	return 1;
}

CMD:tiburon(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid,0,1608,1,0.000000,0.000000,0.000000,0.499999,89.200042,0.199999,1.000000,1.000000,1.000000);//tiburon
	return 1;
}

CMD:turtle(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid,0,1609,1,-0.358000,0.000000,0.170000,0.000000,93.099998,0.000000,1.427000,1.509000,1.641000);//tortuga
	return 1;
}

CMD:vaca(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return  SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerAttachedObject(playerid,0,16442,15,0.000000,0.000000,0.259000,0.000000,0.000000,-104.400001,1.000000,1.000000,1.000000);//vaca
	return 1;
}

CMD:pm(playerid, params[])
{
	if(PI[playerid][P_PMS]) return SendClientMessage(playerid, -1, "{996600}ERROR: Activate private messages with /pms");
	new message[95];
	if(sscanf(params, "us[95]", params[0], message)) return SendClientMessage(playerid, -1, "{996600}ERROR: /pm [Playerid/Name] [Mensaje]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}Disconnected player.");
    //if(params[0] == playerid) return SendClientMessage(playerid, -1, "{996600}Disconnected player.");
	if(PI[params[0]][P_PMS]) return SendClientMessage(playerid, -1, "{996600}ERROR: The player has disabled private messages.");
    PlayerPlaySoundEx(playerid, 1149, 0.0, 0.0, 0.0);
    PlayerPlaySoundEx(params[0], 1085, 0.0, 0.0, 0.0);

    SendClientMessageEx(playerid, -1, "{FFFC33}[PM] sent a %s (%d): %s", PI[params[0]][P_NAME], params[0], message);
    SendClientMessageEx(params[0], -1, "{FFFC33}[PM] of %s (%d): %s", PI[playerid][P_NAME], playerid, message);
	return 1;
}

CMD:pms(playerid, params[])
{
	if(PI[playerid][P_PMS])
	{
		PI[playerid][P_PMS] = false;
		SendClientMessage(playerid, -1, "{FFCC00}Enabled private messages.");
	}
	else
	{
		PI[playerid][P_PMS] = true;
		SendClientMessage(playerid, -1, "{FFCC00}Disabled private messages.");
	}
	return 1;
}

//animlist
CMD:animlist(playerid, params[])
{
	ShowDialog(playerid, DIALOG_ANIMS);
	return 1;
}
CMD:anims(playerid, params[])
{
	return cmd_animlist(playerid, params);
}
CMD:parar(playerid, params[])
{
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 0, 0, 0, 0, true);
	ClearAnimations(playerid);
	return 1;
}
CMD:surrender(playerid, params[])
{
    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_HANDSUP); //surrender
    SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:blowjob(playerid, params[])
{
	ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.0, 1, 1, 1, 0, 0);//blowjob
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:roll(playerid, params[])
{
	ApplyAnimation(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0);
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:drunk(playerid, params[])
{
    ApplyAnimation(playerid,"PED", "WALK_DRUNK",4.0,1,1,1,1,500);//drunk
    SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:bomb(playerid, params[])
{
    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);//bomb
    SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:aim(playerid, params[])
{
	ApplyAnimation( playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1,500);
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:laugh(playerid, params[])
{
    ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0,0);//laugh
    SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:threaten(playerid, params[])
{
    ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 1,500);//threaten
    SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:straw(playerid, params[])
{
	ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0, 1, 0, 0, 1, 0);
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:injured(playerid, params[])
{
	ApplyAnimation(playerid, "SWEET", "LaFin_Sweet", 4.0, 0, 1, 1, 1, 0);
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:crossing(playerid, params[])
{
	ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 1, 1, 1, 0, 4000);
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:lean(playerid, params[])
{
	ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_in", 4.0, 0, 0, 0, 1, 0);//lean
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:cover(playerid, params[])
{
    ApplyAnimation(playerid, "ped", "cower", 4.0, 1, 0, 0, 0, 0);//crubrirse
    SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:vomit(playerid, params[])
{
    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);//vomit
    SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:eat(playerid, params[])
{
	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:dismiss(playerid, params[])
{
	ApplyAnimation(playerid, "KISSING", "BD_GF_Wave", 3.0, 0, 0, 0, 0, 0);//dismiss
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:nalgada(playerid, params[])
{
	ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);//nalgada
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:agonize(playerid, params[])
{
	ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0);//agonize
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:besar(playerid, params[])
{
	ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 4.0, 0, 0, 0, 0, 0);//besar
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:crack(playerid, params[])
{
    ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 0, 0, 0, 1, 0);//crack
    SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:piss(playerid, params[])
{
    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);//piss
    SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:feel(playerid, params[])
{
    ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_in", 4.000000, 0, 1, 1, 1, 0);//feel
    SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:fucku(playerid, params[])
{
    ApplyAnimation( playerid,"ped", "fucku", 4.0, 0, 1, 1, 1, 1 );//fucku
    SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:llamar(playerid, params[])
{
	ApplyAnimation(playerid, "ped", "phone_in", 4.000000, 0, 0, 0, 1, 4000);//llamar
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:taichi(playerid, params[])
{
	ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop",  4.1,7,5,1,1,1);//taichi
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:todrink(playerid, params[])
{
	ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000);//todrink
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:boxer(playerid, params[])
{
	ApplyAnimation(playerid, "GYMNASIUM", "gym_shadowbox",  4.1,7,5,1,1,1);//boxer
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:greet(playerid, params[])
{
	ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);//greet
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:cure(playerid, params[])
{
	ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0);//cure
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:cry(playerid, params[])
{
	ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,0,0,0,0,0);//cry
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:sleep(playerid, params[])
{
	ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0);//sleep
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:rap(playerid, params[])
{
	ApplyAnimation(playerid,"RAPPING","RAP_B_Loop",4.0,1,0,0,0,8000);//rap
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:astrip(playerid, params[])
{
	ApplyAnimation(playerid,"STRIP","strip_A",4.1,7,5,1,1,1);//strip
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:dance(playerid, params[])
{
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, 0xFF4500FF, "ERROR: /dance [1-4]");

	switch(params[0])
	{
	    case 1: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
		case 2: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
		case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
		case 4: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
		default: SendClientMessage(playerid, 0xFF4500FF, "ERROR: /dance [1-4]");
	}
	return 1;
}
CMD:encourage(playerid, params[])
{
	ApplyAnimation(playerid,"ON_LOOKERS","shout_02",4.1,7,5,1,1,1);//encourage
	SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}
CMD:talk(playerid, params[])
{
    ApplyAnimation(playerid,"PED","IDLE_chat",4.1,7,5,1,1,1);//talk
    SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
	return 1;
}

//tele

CMD:ls(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 288.5153, -1782.1247, 4.4803, 180.0000, 0, 0, 0, 0, 0, 1);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Los Santos", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/ls~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:sf(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1984.8078, 260.9428, 35.2233, 0.0000, 0, 0, 0, 0, 0, 1);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "San Fierro", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/sf~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:lv(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2020.1384, 1545.1157, 10.8930, 270.0000, 0, 0, 0, 0, 0, 1);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Las Venturas", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/lv~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:lc(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -743.4848, 502.8810, 1372.1250, 250.0000, 1, 0, 0, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Libert City", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/lc~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:ap(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2099.6000, -2516.6000, 30.5699, 0.0000, 0, 0, 0, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Angel Pine", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/ap~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:dill(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 699.3499, -453.9700, 16.3400, 180.0000, 0, 0, 0, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Dillimore", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/dill~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:fc(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 159.6499, 1179.5400, 15.0399, 180.0000, 0, 0, 0, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Fort Carson", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/fc~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:palc(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2282.7099, 28.7099, 26.4799, 270.0000, 0, 0, 0, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Palomino Creek", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/palc~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:lva(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1628.8707, 1191.0780, 10.8599, 40.7337, 0, 0, 0, 0, 0, 1);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Aeropuerto Las Venturas", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/lva~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:aa(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 374.2837, 2536.7658, 16.7690, 180.0000, 0, 0, 0, 0, 0, 1);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Aeropuerto Abandoned", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/aa~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:sfa(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1117.0642, -201.4206, 14.6203, 68.2102, 0, 0, 0, 0, 0, 1);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Aeropuerto San Fierro", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/sfa~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:tb1(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1411.3253, 2773.9050, 10.9299, 63.0763, 0, 0, 0, 0, 415);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Tube Zone 1", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/tb1~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:tb2(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2078.9414, 1415.7369, 7.1006, 359.1325, 0, 0, 0, 1, 411);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Tube Zone 2", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/tb2~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:tb3(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2824.0666, 1306.9869, 7.1015, 46.7595, 0, 0, 0, 1, 415);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Tube Zone 3", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/tb3~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:tb4(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -3290.5036, 573.4685, 2.0237, 91.9033, 0, 0, 1, 1, 411);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Tube Zone 4", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/tb4~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:chill(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2318.7370, -1640.9645, 483.7031, 260.0000, 0, 0, 0, 0, 0, 1);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Chilliad", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/chill~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:sz1(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 232.0020, 2480.4794, 117.7704, 90.0000, 0, 0, 1, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Stunt Zone 1", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/sz1~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:tb5(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2260.2534, 552.0513, 35.0198, 180.0000, 0, 0, 0, 1, 502);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Tube 1", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/tb5~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:tn1(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1267.5181, -476.7799, 14.1484, 130.0000, 0, 0, 0, 1, 596);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Tunel", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/tn1~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:espiral(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1806.2692, 853.0211, 220.4626, 0.0000, 0, 0, 1, 1, 411);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Espiral LV", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/espiral~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:cannon(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1978.1507, 1893.1916, 121.7426, 210.0000, 0, 0, 0, 1, 411);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Cannon", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/cannon~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:cc(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2252.7543, -1713.2248, 479.7301, 210.0000, 0, 0, 0, 1, 411);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Chilliad Coaster", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/cc~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:hp(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2879.8999, -320.8581, 6.5351, 269.4347, 0, 0, 1, 1, 434);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Half Pipe", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/hp~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:helix(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2157.5329, 2191.0671, 282.2077, 181.8367, 0, 0, 1, 1, 411);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Helix", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/helix~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:loop1(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1245.6992, 1674.4324, 1114.4683, 183.5163, 0, 0, 1, 1, 411);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Loop 1", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/loop1~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:loop2(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1431.9554, 2708.1137, 740.9735, 179.4883, 0, 0, 1, 1, 545);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Loop 2", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/loop2~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:pipe(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 258.7706, 2912.5944, 5.2614, 8.3755, 0, 0, 0, 1, 411);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Pipe", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/pipe~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:rc1(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 836.7901, -2062.3166, 12.5942, 180.5278, 0, 0, 0, 1, 411);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Roller Coaster 1", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/rc1~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:rc2(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1943.5920, -1028.5319, 53.0768, 1.2897, 0, 0, 0, 1, 411);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Roller Coaster 2", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/rc2~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:wc1(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1936.0234, -1678.9033, 834.0378, 358.3630, 0, 2, 1, 1, 411);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Water Coaster 1", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/wc1~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:wc2(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 3157.7028, 2821.4311, 791.8008, 180.8139, 0, 0, 1, 1, 451);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Water Coaster 2", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/wc2~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:dr(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1027.1071, -349.6847, 74.2181, 179.9999, 0, 0, 0, 1, 407);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Disco Road", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/dr~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}

CMD:dm1(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2051.9050, -188.2926, 35.3203, 178.9873, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "DM No Escape", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/dm1~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:dm2(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1626.1861, 113.1502, -11.1633, 314.6620, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "DM 2", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/dm2~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:dm3(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1464.0471, 390.0712, 7.1875, 269.2283, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "DM 3", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/dm3~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:dm4(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -47.6099, 29.8136, 3.1171, 340.0189, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "DM Granja", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/dm4~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:dm5(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2312.0871, 1546.7860, 18.7734, 89.6635, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "DM Ship", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/dm5~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:pk1(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1364.5007, -1897.6993, 435.7926, 270.0000, 0, 0, 1, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Parkour 1", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/pk1~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}

CMD:pk2(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -3950.0, 1548.0, 4.8, 0.0, 0, 0, 1, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Parkour 2", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/pk2~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}

CMD:pkh(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1765.7893, 845.4763, 24.7343, 359.6847, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Pakour Hay", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/pkh~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:quadpk(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2939.2463, -2051.4020, 3.0295, 271.9478, 0, 0, 0, 1, 471);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Quad Parkour", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/quadpk~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:sanchezpk(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1019.1642, -1043.4389, 128.8859, 31.2093, 0, 0, 0, 1, 468);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Sanchez Parkour", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/sanchezpk~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:monsterpk(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1465.2593, 1143.5662, 7.5611, 269.4718, 0, 0, 0, 1, 556);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Monster Parkour", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/monsterpk~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:bmxpk(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1922.9492, 457.1618, 56.3131, 270.4193, 0, 0, 0, 1, 481);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "BMX Parkour", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/bmxpk~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:bikepk1(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2232.5874, 945.9760, 96.6942, 358.1542, 0, 0, 0, 1, 522);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Bike Parkour1", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/bikepk1~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:bikepk2(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2298.4943, 534.3939, 44.3010, 87.5317, 0, 0, 0, 1, 522);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Bike Parkour2", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/bikepk2~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:bikepk3(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2720.2551, -2558.4206, 24.0608, 179.3127, 0, 0, 0, 1, 522);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Bike Parkour3", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/bikepk3~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:leap1(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1544.6682, -1352.3226, 329.4760, 1.4249, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "leap 1", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/leap1~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:leap2(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1753.5561, 885.7960, 295.8750, 355.8117, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "leap 2", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/leap2~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:leap3(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2280.2199, 1647.7861, 107.9292, 268.0592, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "leap 3", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/leap3~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:leap4(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2504.1787, -707.2553, 279.7344, 222.7380, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "leap 4", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/leap4~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:leap5(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1483.2292, -1791.0810, 156.7532, 277.0704, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "leap 5", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/leap5~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:leap6(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1665.5255, -1218.5864, 233.3750, 359.8121, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "leap 6", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/leap6~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:leap7(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1790.8602, 567.4060, 332.8019, 300.6802, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "leap 7", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/leap7~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:leap8(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2661.9462, 1595.2344, 225.7577, 267.6448, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "leap 8", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/leap8~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:leap9(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2873.2102, 2710.7180, 275.0044, 97.0160, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "leap 9", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/leap9~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:leap10(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2059.8522, 2435.1950, 165.6172, 90.9789, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "leap 10", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/leap10~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:rampa1(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 12.7136, 1135.0366, 223.3950, 0.0000, 0, 0, 1, 1, 411);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Rampa 1", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/rampa1~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:rampa2(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1477.5687, 1081.4787, 93.3005, 359.9286, 0, 0, 1, 1, 415);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Rampa 2", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/rampa2~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:drift1(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -303.9527, 1521.7125, 75.3593, 180.0000, 0, 0, 0, 1, 502);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Drift Desierto", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/drift1~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:drift2(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 3043.9802, 2324.1118, 3.9765, 270.0000, 0, 0, 1, 1, 494);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Drift Ciudad", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/drift2~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:horror(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2324.5117, -1148.2541, 1050.7100, 359.4691, 12, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "house del Horror", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/horror~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:2471(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -25.8844, -185.8689, 1003.5468, 359.9107, 17, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "24/7 1", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/2471~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:2472(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 6.0911, -29.2718, 1003.5494, 359.0000, 10, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "24/7 2", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/2472~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:shamal(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1.8086, 32.3843, 1199.5937, 178.0534, 1, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Shamal", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/shamal~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:andromada(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 315.9612, 985.2896, 1958.8450, 359.2752, 9, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Andromada", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/andromada~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:ammu1(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 286.1489, -40.6444, 1001.5156, 359.0000, 1, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Ammunation 1", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/ammu1~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:ammu2(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 285.6192, -83.9430, 1001.5156, 358.0968, 4, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Ammunation 2", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/ammu2~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:ammu3(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 297.1148, -109.9272, 1001.5156, 2.1438, 6, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Ammunation 3", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/ammu3~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:ammu4(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 315.5148, -141.9978, 999.6016, 356.5060, 7, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Ammunation 4", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/ammu4~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:ammu5(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 316.3767, -167.7872, 999.5938, 1.7206, 6, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Ammunation 5", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/ammu5~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:jeff(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2216.7175, -1150.6586, 1025.7968, 270.2153, 15, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Jefferson motel", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/jeff~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:bshop(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 832.3687, 7.7683, 1004.1796, 87.7158, 3, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Betting shop", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/bshop~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:sexshop(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -99.9125, -23.5478, 1000.7188, 1.6807, 3, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Sex shop", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/sexshop~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:fabrica(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 961.5552, 2108.2912, 1011.0302, 89.0895, 1, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Meat Factory", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/fabrica~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:zero(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2239.1545, 137.1248, 1035.4140, 265.6268, 6, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Zero RC", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/zero~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:caligula(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2170.7392, 1618.5086, 999.9766, 269.1960, 1, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Base Caligula", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/caligula~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:woozie(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2158.5612, 641.7728, 1052.3750, 87.4609, 1, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Woozie office", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/woozie~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:binco(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 207.9069, -109.1246, 1005.1328, 4.6377, 15, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Binco", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/binco~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:ds(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 204.2467, -167.2684, 1000.5233, 358.7443, 14, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Didier Sachs", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/ds~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:prolaps(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 206.8025, -139.3262, 1003.5078, 2.8410, 3, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Prolaps", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/prolaps~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:suburban(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 203.7779, -48.4924, 1001.8046, 357.0000, 1, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "SubUrban", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/suburban~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:victim(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 224.9721, -8.2583, 1002.2108, 86.7174, 5, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Victim", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/victim~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:zip(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 162.0086, -94.4685, 1001.8046, 357.8640, 18, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Zip", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/zip~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:club(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 493.3909, -22.7227, 1000.6796, 357.0000, 17, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Club", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/club~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:bar(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 502.3338, -70.6352, 998.7578, 183.2398, 11, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Bar", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/bar~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:lilprobe(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -227.6723, 1400.8525, 27.7656, 274.7771, 18, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Lil' probe inn", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/lilprobe~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:bshot(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 364.8258, -73.9591, 1001.5078, 303.7720, 10, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Burger Shot", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/bshot~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:cbell(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 365.0606, -10.6916, 1001.8516, 358.5104, 9, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Cluckin' bell", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/cbell~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:wpizza(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 371.4448, -132.4595, 1001.4921, 357.7650, 5, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Well stacked pizza", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/wpizza~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:sherman(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -942.5675, 1847.6464, 5.0050, 357.1109, 17, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Sherman dam", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/sherman~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:pdept(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 385.8102, 173.9721, 1008.3828, 94.7136, 3, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Planning dept", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/pdept~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:area51(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 206.4965, 1868.2484, 13.1406, 267.5949, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Area 51", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/area51~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:lsgym(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 771.6627, -3.3455, 1000.7280, 0.7911, 5, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Los Santos Gym", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/lsgym~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:sfgym(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 774.2139, -48.9243, 1000.5858, 0.0000, 6, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "San Fierro Gym", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/sfgym~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:lvgym(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 773.5800, -77.0967, 1000.6550, 0.0000, 7, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Las Venturas Gym", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/lvgym~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:madd(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1266.5346, -781.1734, 1091.9062, 269.8514, 5, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Madd Doggs mansion", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/madd~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:fcrack(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2543.0800, -1304.2384, 1025.0743, 180.0612, 2, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Fabrica de Crack", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/fcrack~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:strip(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1211.6385, -12.8283, 1000.9218, 0.5169, 2, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Club de strip", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/strip~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:pdomes(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2637.9487, 1406.0510, 906.4608, 89.3124, 3, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Pleasure domes", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/pdomes~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:liberty(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -795.1964, 496.4371, 1376.1953, 1.7275, 1, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Liberty City", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/liberty~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:coronel(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2807.4582, -1172.8979, 1025.5703, 356.6788, 8, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Coronel Furhberger", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/coronel~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:crackden(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 318.5342, 1116.9687, 1083.8828, 357.5443, 5, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Crack den", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/crackden~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:wharehouse(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1294.1706, 4.7495, 1001.0115, 181.8583, 18, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Warehouse", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/wharehouse~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:rcbattle(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -976.7442, 1061.2204, 1345.6718, 92.9710, 10, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "RC Battlefield", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/rcbattle~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:sfpd(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 246.1726, 109.4176, 1003.2188, 357.8046, 10, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "San Fierro PD", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/sfpd~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:lvpd(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 288.7500, 168.8865, 1007.1718, 356.5683, 3, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Las Venturas PD", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/lvpd~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:escuela(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2030.0031, -107.1860, 1035.1718, 178.4842, 3, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Driving school", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/escuela~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:banco(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2307.6254, -15.3802, 26.7495, 271.2196, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Banco", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/banco~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:lsatruim(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1702.7667, -1667.5981, 20.2187, 268.8958, 18, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "LS Atruim", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/lsatruim~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}

CMD:minecraft(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT, 950, playerid);
	
	SetPlayerPosEx(playerid, -1149.381469, -962.833618, 129.218750, 180.0, 0, 555);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "~g~~h~minecraft!", 3000, 6);
	
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/minecraft~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}

CMD:isla(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1635.8270, -3213.3781, 5.2947, 151.3934, 0, 0, 1, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Isla", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/isla~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:piramide(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2323.6384, 1283.2148, 97.5790, 90.0000, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Pyramid", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/piramide~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:globo(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2049.5178, 1136.6280, 69.4172, 0.0000, 0, 0, 1, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Hot air balloon", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/globo~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}

CMD:karaoke(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1873.945312, -1411.067016, 13.570312, 0.0, 0, 0, 0, 0, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Karaoke", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/karaoke~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:karts1(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1321.3969, 2123.0112, 10.2994, 359.7577, 0, 0, 0, 0, 571);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Karts 1", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/karts1~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:karts2(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2421.2158, 1934.0714, 5.2994, 270.5587, 0, 0, 0, 0, 571);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Karts 2", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/karts2~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}

CMD:karts3(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1337.310424, 377.729400, 43.159145, 90.162170, 0, 0, 1, 0, 571);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Karts 3", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/karts3~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}

CMD:karts4(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1646.289062, 913.919982, 10.676133, 360.0, 0, 0, 1, 0, 571);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Karts 4", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/karts4~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}

CMD:toreno(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -676.3060, 922.5964, 12.1231, 83.1065, 0, 0, 0, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Toreno", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/toreno~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:tenis(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 753.3120, -1212.0039, 13.5468, 187.7375, 0, 0, 0, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Tenis", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/tenis~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:cementerio(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 837.9841, -1101.9691, 24.3039, 269.8317, 0, 0, 0, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Cemetery", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/cementerio~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:puentesf(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2625.9785, 1393.0640, 7.1015, 268.8685, 0, 0, 0, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Puente SF", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/puentesf~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:cardealer(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1641.7387, 1796.2030, 10.8203, 270.0000, 0, 0, 0, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "cardealer", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_cardealer~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:waa(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -2692.2336, 213.1313, 4.0525, 91.5529, 0, 0, 0, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Wheel Arch Angles SF", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/waa~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:transf(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, -1946.5611, 234.1954, 33.6482, 269.8927, 0, 0, 0, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Transfender SF", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/transf~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:tranlv(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 2387.8518, 1025.6975, 10.6269, 1.7750, 0, 0, 0, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Transfender LV", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/tranlv~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}
 
CMD:tranls(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	SetPlayerPosEx(playerid, 1041.2852, -1052.2833, 31.5088, 0.4850, 0, 0, 0, 1, 0);
	SetCameraBehindPlayer(playerid);
	GameTextForPlayer(playerid, "Transfender LS", 3000, 6);
 
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/tranls~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}

//tele

CMD:help(playerid, params[])
{
	ShowDialog(playerid, DIALOG_HELP1);
	return 1;
}

CMD:help1(playerid, params[])
{
	ShowDialog(playerid, DIALOG_HELP1);
	return 1;
}

CMD:help2(playerid, params[])
{
	ShowDialog(playerid, DIALOG_HELP2);
	return 1;
}

CMD:help3(playerid, params[])
{
	ShowDialog(playerid, DIALOG_HELP3);
	return 1;
}

CMD:rules(playerid, params[])
{
	ShowDialog(playerid, DIALOG_RULES);
	return 1;
}

CMD:command(playerid, params[])
{
	ShowDialog(playerid, DIALOG_COMMANDS);
	return 1;
}

CMD:c(playerid, params[])
{
	return cmd_command(playerid, params);
}

CMD:credit(playerid, params[])
{
	ShowDialog(playerid, DIALOG_CREDITS);
	return 1;
}

CMD:register(playerid, params[])
{
	if(PI[playerid][P_USEREXIT]) return SendClientMessage(playerid, -1, "{"ORANGE"}This account is already registered.");
	
	if( (gettime() >= PI[playerid][P_USER_CONNECTED_TICKCOUNT] + NECESSARY_TIME_REGISTER) ) ShowDialog(playerid, DIALOG_REGISTER);
	else
	{
		new time = (NECESSARY_TIME_REGISTER-(gettime()-PI[playerid][P_USER_CONNECTED_TICKCOUNT]));
		SendClientMessageEx(playerid, -1, "{"ORANGE"}You must play at least {"GREY"}%s mminutes{"ORANGE"}more to record the account.", TimeConvert(time));
	}
	return 1;
}

CMD:mode(playerid, params[])
{
    ShowDialog(playerid, DIALOG_SELECT_MODE);
	return 1;
}

CMD:m(playerid, params[])
{
    ShowDialog(playerid, DIALOG_SELECT_MODE);
	return 1;
}

CMD:dm(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_DM) return 1;
	ExitPlayerGameMode(playerid);
	JoinPlayerGameMode(playerid, GAME_DEATHMATCH);
	return 1;
}

CMD:derby(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_DERBY) return 1;
	if(DI[D_PLAYERS] >= MAX_DERBY_PLAYERS)
	{
		SendClientMessage(playerid, -1, "{"ORANGE"}This game is complete.");
		return 1;
	}
	ExitPlayerGameMode(playerid);
	JoinPlayerGameMode(playerid, GAME_DERBY);
	return 1;
}

CMD:fall(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_FALL) return 1;
	ExitPlayerGameMode(playerid);
	JoinPlayerGameMode(playerid, GAME_FALL);
	return 1;
}

CMD:shooter(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_SHOOTER) return 1;
	ExitPlayerGameMode(playerid);
	JoinPlayerGameMode(playerid, GAME_SHOOTER);
	return 1;
}

CMD:race(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_RACE) return 1;
	ExitPlayerGameMode(playerid);
	JoinPlayerGameMode(playerid, GAME_RACE);
	return 1;
}

CMD:tdm(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_TDM) return 1;
	ShowDialog(playerid, DIALOG_SELECT_TDM_TEAM);
	return 1;
}

CMD:gang(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_GANGWAR) return 1;
	ShowDialog(playerid, DIALOG_SELECT_GANG_TEAM);
	return 1;
}

CMD:zombie(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] == M_ZOMBIE) return 1;
	ShowDialog(playerid, DIALOG_SELECT_ZOMBIE_TEAM);
	return 1;
}


CMD:givemoney(playerid, params[])
{
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "{996600}ERROR: /givemoney [Playerid/Name] [amount]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}Disconnected player.");
	if(playerid == params[0]) return SendClientMessage(playerid, -1, "{996600}Disconnected player.");
	if(params[1] <= 0) return SendClientMessage(playerid, -1 , "{996600}Incorrect amount.");
	if(params[1] > PI[playerid][P_MONEY]) return SendClientMessage(playerid, -1 , "{996600}Incorrect amount.");
	
    PlayerPlaySoundEx(playerid, 1149, 0.0, 0.0, 0.0);
    PlayerPlaySoundEx(params[0], 1085, 0.0, 0.0, 0.0);
	
	SendClientMessageEx(playerid, -1, "{"ORANGE"}Has dado {"GREY"}$%d {"ORANGE"}a {"GREY"}%s.", params[1], PI[params[0]][P_NAME]);
	SendClientMessageEx(params[0], -1, "{"GREY"}%s {"ORANGE"}te ha dado {"GREY"}$%d.", PI[playerid][P_NAME], params[1]);
	GivePlayerMoneyEx(params[0], params[1]);
	GivePlayerMoneyEx(playerid, -params[1]);
	
	new log[145]; format(log, 145, "%s [ID:%d] give %d money to %s [ID:%d]", PI[playerid][P_NAME], PI[playerid][P_ID], params[1], PI[params[0]][P_NAME], PI[params[0]][P_ID]);
	UsersLog(log);
	return 1;
}

CMD:givescore(playerid, params[])
{
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "{996600}ERROR: /givescore [Playerid/Name] [amount]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}Disconnected player.");
	if(playerid == params[0]) return SendClientMessage(playerid, -1, "{996600}Disconnected player.");
	if(params[1] <= 0) return SendClientMessage(playerid, -1 , "{996600}Incorrect amount.");
	if(params[1] > PI[playerid][P_SCORE]) return SendClientMessage(playerid, -1 , "{996600}Incorrect amount.");
	
    PlayerPlaySoundEx(playerid, 1149, 0.0, 0.0, 0.0);
    PlayerPlaySoundEx(params[0], 1085, 0.0, 0.0, 0.0);
	
	SendClientMessageEx(playerid, -1, "{"ORANGE"}You have given {"GREY"}%d SCORE {"ORANGE"}a {"GREY"}%s.", params[1], PI[params[0]][P_NAME]);
	SendClientMessageEx(params[0], -1, "{"GREY"}%s {"ORANGE"}has given you {"GREY"}%d SCORE.", PI[playerid][P_NAME], params[1]);
	GivePlayerScoreEx(params[0], params[1]);
	GivePlayerScoreEx(playerid, -params[1]);
	
	new log[145]; format(log, 145, "%s [ID:%d] di %d score to %s [ID:%d]", PI[playerid][P_NAME], PI[playerid][P_ID], params[1], PI[params[0]][P_NAME], PI[params[0]][P_ID]);
	UsersLog(log);
	return 1;
}

CMD:report(playerid, params[])
{
	if(gettime() < PI[playerid][P_ANTIFLOOD_REPORT] + 5) return GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~~r~~h~vamo_~p~a_~y~Calmarno~n~~g~~h~ok?~n~_", 2000, 6);
	PI[playerid][P_ANTIFLOOD_REPORT] = gettime();
	
	new reason[45];
	if(sscanf(params, "us[45]", params[0], reason)) return SendClientMessage(playerid, -1, "{996600}ERROR: /report [Playerid/Name] [Reason]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}Disconnected player.");
	if(playerid == params[0]) return SendClientMessage(playerid, -1, "{996600}Disconnected player.");
	
	SendClientMessage(playerid, -1, "{"GREY"}Report sent to administrators.");
	new str[128]; format(str, 128, "	{CC0000}%s[%d] report a %s[%d]. REASON: %s", PI[playerid][P_NAME], playerid, PI[params[0]][P_NAME], params[0], reason);
	SendMessageToAdmins(-1, str);
	return 1;
}

CMD:ejoin(playerid, params[])
{
	if(EVENT_STATUS != EVENT_JOINING) return SendClientMessage(playerid, -1, "{"ORANGE"}Right now there is no event or has already begun.");
	if(PI[playerid][P_JOINED_EVENT]) return SendClientMessage(playerid, -1, "{"ORANGE"}You are already together with the event, use {"GREY"}/exitduel {"ORANGE"}Not to enter the event.");
	PI[playerid][P_JOINED_EVENT] = true;
	TOTAL_PLAYERS_EVENT += 1;
	SendClientMessage(playerid, -1, "{999900}You have registered to the event, wait for him to begin. Not to enter the event use /exitduel.");
	return 1;
}

CMD:exitduel(playerid, params[])
{
	if(PI[playerid][P_JOINED_EVENT])
	{
		SendClientMessage(playerid, -1, "{999900}You have left the event.");
		TOTAL_PLAYERS_EVENT -= 1;
		PI[playerid][P_JOINED_EVENT] = false;
		return 1;
	}
	if(PI[playerid][P_DESMADRE])
	{
		cmd_lv(playerid, "");
		return 1;
	}
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM)
	{
		ExitPlayerGameMode(playerid);
		JoinPlayerGameMode(playerid, GAME_FREEROAM);
		return 1;
	}
	SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command, To change mode use /m.");
	return 1;
}

CMD:tops(playerid, params[])
{
	PI[playerid][P_DIALOG_PAGE] = 0;
	ShowDialog(playerid, DIALOG_TOPS);
	return 1;
}

CMD:top(playerid, params[])
{
	return cmd_tops(playerid, params);
}

/*
select ID, NAME, SCORE, (select count(*) from USERS b  where a.SCORE <= b.SCORE) as cnt
from USERS a WHERE NAME = "Facuu_"	
*/



CMD:fightstyle(playerid, params[])
{
	ShowDialog(playerid, DIALOG_FIGHTSTYLE);
	return 1;
}

CMD:buyhouse(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerVirtualWorld(playerid) != FREEROAM_VW || GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	if(!PI[playerid][P_USEREXIT]) return SendClientMessage(playerid, -1, "{"GREY"}You must be registered to buy a house.");
	
	if(PI[playerid][P_VIP]) { if(PI[playerid][P_HOUSES] >= MAX_HOUSES_PER_PLAYER) return SendClientMessage(playerid, -1, "{"GREY"}You can't buy more houses."); }
	else { if(PI[playerid][P_HOUSES] >= MAX_HOUSES_PER_NORMAL_PLAYER) return SendClientMessage(playerid, -1, "{"GREY"}You can't buy more houses. {FFCC00}(/vipinfo)"); }
	for(new i = 0; i != HOUSES_LOADED; i++)
	{
		if(HI[i][H_VALID] && !HI[i][H_SOLD])
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, HI[i][H_extPos][0], HI[i][H_extPos][1], HI[i][H_extPos][2]))
			{
				if(PI[playerid][P_MONEY] >= HI[i][H_PRICE][0] && PI[playerid][P_SCORE] >= HI[i][H_PRICE][1])
				{
					GivePlayerMoneyEx(playerid, -HI[i][H_PRICE][0]);
					GivePlayerScoreEx(playerid, -HI[i][H_PRICE][1]);
					GameTextForPlayer(playerid, "~g~~h~property_", 5000, 1);
					PlayerPlaySoundEx(playerid, 1149, 0.0, 0.0, 0.0);
					format(HI[i][H_OWNER], 24, "%s", PI[playerid][P_NAME]);
					HI[i][H_OWNERID] = PI[playerid][P_ID];
					HI[i][H_SOLD] = true;
					PI[playerid][P_HOUSEICONS][ PI[playerid][P_HOUSES] ] = CreateDynamicMapIcon(HI[i][H_extPos][0], HI[i][H_extPos][1], HI[i][H_extPos][2], 31, -1, FREEROAM_VW, .playerid = playerid, .streamdistance = 1000.0, .style = MAPICON_GLOBAL);
					PI[playerid][P_HOUSES] += 1;
					
					UpdateHouse(i);
					UpdateUserData(playerid);
				}
				else
				{
					SendClientMessage(playerid, -1, "{"GREY"}You don't have enough money or score to buy this house.");
					SendClientMessage(playerid, -1, "{"GREY"}To earn money/scoremore wake up to play in games (/m)");
				}
				return 1;
			}
		}
	}
	SendClientMessage(playerid, -1, "{"GREY"}You are not in the right place.");
	return 1;
}

CMD:house(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	if(!PI[playerid][P_USEREXIT]) return SendClientMessage(playerid, -1, "{"GREY"}You have no house.");
	if(PI[playerid][P_HOUSES] <= 0) return SendClientMessage(playerid, -1, "{"GREY"}You don't have any house.");
	for(new i = 0; i != HOUSES_LOADED; i++)
	{
		if(HI[i][H_VALID] && HI[i][H_SOLD])
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, HI[i][H_intPos][0], HI[i][H_intPos][1], HI[i][H_intPos][2]) && GetPlayerVirtualWorld(playerid) == HI[i][H_ID])
			{
				if(HI[i][H_OWNERID] == PI[playerid][P_ID])
				{
					PI[playerid][P_TEMPHOUSE_INDEX] = i;
					ShowDialog(playerid, DIALOG_HOUSE_MANAGE);
					return 1;
				}
			}
		}
	}
	SendClientMessage(playerid, -1, "{"GREY"}You must be inside your home at the door to use this command.");
	return 1;
}

//ADMIN CMD

CMD:car(playerid, params[])
{
	if(PI[playerid][P_MOD] < ADMIN_LEVEL_OWNER) return 0;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /car [MODELID]");
	if(PI[playerid][P_VEHICLES] >= MAX_VEHICLES_PER_PLAYER) return SendClientMessage(playerid, -1, "{996600}You can't buy more vehicles.");
	NewPersonalCar(playerid, params[0], minrand(128, 255), minrand(128, 255));
	GameTextForPlayer(playerid, "~g~~h~Vehicle purchased", 5000, 1);
	PlayerPlaySoundEx(playerid, 1149, 0.0, 0.0, 0.0);
	UpdateUserData(playerid);
	return 1;
}

CMD:givevip(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_OWNER)
	{
		if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "{996600}ERROR: /givevip [PLAYERID] [DAYS]");
	    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /givevip [PLAYERID] [DAYS]");
		if(!PI[params[0]][P_USEREXIT]) return SendClientMessage(playerid, -1, "{996600}ERROR: The user is not registered.");
		
		if(params[1] == 0)
		{
			PI[params[0]][P_VIP] = false;
			PI[params[0]][P_VIPTIME] = 0;
			PI[params[0]][P_CHATCOLOR] = 0xCCCCCC;
			if(IsValidDynamic3DTextLabel(PI[params[0]][P_VIP_LABEL])) DestroyDynamic3DTextLabel(PI[params[0]][P_VIP_LABEL]);
			SendClientMessage(params[0], -1, "{C6D855}Your VIP membership has expired.");
			SendClientMessage(playerid, -1, "{99CC00}OK.");
		}
		else
		{
			PI[params[0]][P_VIP] = true;
			
			if(PI[params[0]][P_VIPTIME] == 0) PI[playerid][P_VIPTIME] = (gettime() + (86400*params[1]));
			else PI[params[0]][P_VIPTIME] += (86400*params[1]);
			
			if(IsValidDynamic3DTextLabel(PI[params[0]][P_VIP_LABEL])) DestroyDynamic3DTextLabel(PI[params[0]][P_VIP_LABEL]);
			PI[params[0]][P_VIP_LABEL] = CreateDynamic3DTextLabel("User VIP", 0xFFCC00AA, 0.0, 0.0, 0.3, 10.0, params[0]);
			SendClientMessageEx(params[0], -1, "{C6D855}You have received VIP membership by %of (/vipinfo)", params[1]);
			SendClientMessage(playerid, -1, "{99CC00}OK.");
		}
		
		UpdateUserData(params[0]);
		return 1;
	}
	return 0;
}

CMD:buyvip(playerid, params[])
{
	if(PI[playerid][P_SCORE] >= 1000)
	{
		GivePlayerScoreEx(playerid, -1000);
		PI[playerid][P_VIP] = true;
		
		if(PI[playerid][P_VIPTIME] == 0) PI[playerid][P_VIPTIME] = (gettime() + (86400*30));
		else PI[playerid][P_VIPTIME] += (86400*30);
	
		if(IsValidDynamic3DTextLabel(PI[playerid][P_VIP_LABEL])) DestroyDynamic3DTextLabel(PI[playerid][P_VIP_LABEL]);
		PI[playerid][P_VIP_LABEL] = CreateDynamic3DTextLabel("User VIP", 0xFFCC00AA, 0.0, 0.0, 0.3, 10.0, playerid);
		SendClientMessage(playerid, -1, "{C6D855}You have bought VIP membership for 30 days (/vipinfo)");

		UpdateUserData(playerid);
	}
	else SendClientMessage(playerid, -1, "{999999}You need 1000 score to buy VIP by 30 das.");
	return 1;
}

CMD:ahelp(playerid, params[])
{
	if(!PI[playerid][P_MOD]) return 0;
	ShowDialog(playerid, DIALOG_ACMDS);
	return 1;
}

CMD:ayt(playerid, params[])
{
	if(PI[playerid][P_MOD] < ADMIN_LEVEL_BAN) return 0;
	if(isnull(params)) return SendClientMessage(playerid, -1, "{996600}ERROR: /ayt [YOUTUBE URL]");
	format(params, 145, "http://www.youtubeinmp3.com/fetch/?video=%s", params);
	
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
		if(IsPlayerConnected(i))
		{
			PlayAudioStreamForPlayerEx(i, params);
		}
	}
	return 1;
}
	
CMD:adv(playerid, params[])
{
	if(!PI[playerid][P_MOD]) return 0;
	new reason[128];
	if(sscanf(params, "us[128]", params[0], reason)) return SendClientMessage(playerid, -1, "{996600}ERROR: /adv [PLAYERID] [REASON]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}Error: Disconnected player.");
	
	new log[145]; format(log, 145, "%s [ID:%d LVL:%d] He warned a %s [ID:%d]. REASON: %s", PI[playerid][P_NAME], PI[playerid][P_ID], PI[playerid][P_MOD], PI[params[0]][P_NAME], PI[params[0]][P_ID], reason);
	AdminLog(log);
	
	
	ShowPlayerMessage(params[0], 5000, "You have received a warning. ", reason," If you continue to be expelled from the server.");
	SendClientMessage(playerid, -1, "{99CC00}JPlayer warned. Remember that this will not expel the player, I will only show you a warning.");
	
	new advert[145]; format(advert, 145, "{CC0000}%s[%d] He warned a %s[%d]. Reason: %s", PI[playerid][P_NAME], playerid, PI[params[0]][P_NAME], params[0], reason);
	SendMessageToAdmins(-1, advert);
	return 1;
}

CMD:pstats(playerid, params[])
{
	if(!PI[playerid][P_MOD]) return 0;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /pstats [PLAYERID]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}Error: Disconnected player.");
	new str[145], dialog[850];
	strcat(dialog, "\n{009900}Statistics\n\n");
	format(str, sizeof(str), "{999900}ID\t\t{99CC00}%d\n", PI[params[0]][P_ID]); strcat(dialog, str);
	format(str, sizeof(str), "{999900}NAME\t\t{99CC00}%s\n", PI[params[0]][P_NAME]); strcat(dialog, str);
	format(str, sizeof(str), "{999900}Murders\t\t{99CC00}%d\n", PI[params[0]][P_KILLS]); strcat(dialog, str);
	format(str, sizeof(str), "{999900}DEATHS\t\t{99CC00}%d\n", PI[params[0]][P_DEATHS]); strcat(dialog, str);
	format(str, sizeof(str), "{999900}SCORE\t\t{99CC00}%d\n", PI[params[0]][P_SCORE]); strcat(dialog, str);
	format(str, sizeof(str), "{999900}MONEY\t\t{99CC00}%d\n", PI[params[0]][P_MONEY]); strcat(dialog, str);
	format(str, sizeof(str), "{999900}PROPERTIES\t\t{99CC00}%d\n", PI[params[0]][P_HOUSES]); strcat(dialog, str);
	format(str, sizeof(str), "{999900}VEHICLES\t\t{99CC00}%d\n", PI[params[0]][P_VEHICLES]); strcat(dialog, str);
	format(str, sizeof(str), "{999900}VIP\t\t{99CC00}%d\n", PI[params[0]][P_VIP]); strcat(dialog, str);
	if(PI[params[0]][P_CREW_ID] == 0)
	{
		format(str, sizeof(str), "{999900}CREW\t\t{99CC00}No"); 
		strcat(dialog, str);
	}
	else
	{
		format(str, sizeof(str), "{999900}CREW\t\t{99CC00}{%x}%s", CI[PI[params[0]][P_CREW_SLOT]][C_COLOR], CI[PI[params[0]][P_CREW_SLOT]][C_NAME]);
		strcat(dialog, str);
	}
	strcat(dialog, "\n\n{009900}  "SERVER_NAME" \n\n");
	ShowPlayerDialog(playerid, DIALOG_STATS, DIALOG_STYLE_MSGBOX, "{"ORANGE"}"SERVER_NAME" - STATS", dialog, "X", "");
	return 1;
}

CMD:setscore(playerid, params[])
{
	if(PI[playerid][P_MOD] < ADMIN_LEVEL_OWNER) return 0;
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "{996600}ERROR: /setscore [Playerid/Name] [SCORE]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}Error: Disconnected player.");

	SendClientMessageEx(params[0], -1, "{"ORANGE"}Your score now is {"GREY"}%d SCORE.", params[1]);
	PI[params[0]][P_SCORE] = params[1];
	SetPlayerScore(params[0], PI[params[0]][P_SCORE]);
	UpdateUserDataField(params[0], "SCORE", PI[params[0]][P_SCORE]);
	return 1;
}

CMD:setmoney(playerid, params[])
{
	if(PI[playerid][P_MOD] < ADMIN_LEVEL_OWNER) return 0;
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "{996600}ERROR: /setmoney [PlayerID/Name] [SCORE]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}Error: Disconnected player.");

	SendClientMessageEx(params[0], -1, "{"ORANGE"}Your money is now {"GREY"}%d$.", params[1]);
	PI[params[0]][P_MONEY] = params[1];
	ResetPlayerMoney(params[0]);
	GivePlayerMoney(params[0], PI[params[0]][P_MONEY]);
	return 1;
}

CMD:respawnveh(playerid, params[])
{
	if(!PI[playerid][P_MOD]) return 0;
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "{996600}Error: Is not in any vehicle.");
	new veh = GetPlayerVehicleID(playerid);
	
	if(VEHICLES_PLAYER[veh])
	{
		VEHICLES_PLAYER[veh] = false;
		DestroyVehicleEx(veh);
		return 1;
	}
    if(GetVehicleVirtualWorld(veh) != FREEROAM_VW) return SendClientMessage(playerid, -1, "{996600}Error: You can't answer this vehicle.");
	SetVehicleToRespawn(veh);
	return 1;
}

CMD:info(playerid, params[])
{
	if(PI[playerid][P_INFO_SERVER])
	{
		TextDrawHideForPlayer(playerid, TD_LSR_SERVER_INFO);
		PI[playerid][P_INFO_SERVER] = false;
	}
	else
	{
		TextDrawShowForPlayer(playerid, TD_LSR_SERVER_INFO);
		PI[playerid][P_INFO_SERVER] = true;
	}
	return 1;
}

CMD:psett(playerid, params[])
{
	if(!IsPlayerAdmin(playerid)) return 0;
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, -1, "Syntax: /psett <mode> <players>");
	switch(params[0])
	{
		case 0: TOTAL_PLAYERS = params[1];
		case 1: TOTAL_PLAYERS_FR = params[1];
		case 2: TOTAL_PLAYERS_DM = params[1];
		case 3: TOTAL_PLAYERS_GANG = params[1];
		case 4: TOTAL_PLAYERS_EVENT = params[1];
		case 5: DI[D_PLAYERS] = params[1];
		case 6: FI[F_PLAYERS] = params[1];
		case 7: ZI[Z_PLAYERS] = params[1];
		case 8: ZI[Z_TEAM_PLAYERS][0] = params[1];
		case 9: ZI[Z_TEAM_PLAYERS][1] = params[1];
	}
	return 1;
}

CMD:clean(playerid, params[])
{
	if(!PI[playerid][P_MOD]) return 0;
	for(new i = 0; i != 32; i++) SendClientMessageToAll(-1, " ");
	return 1;
}

CMD:admins(playerid, params[])
{
    if(!PI[playerid][P_MOD]) return 0;
	PI[playerid][P_DIALOG_PAGE] = 0;
	ShowDialog(playerid, DIALOG_ADMINS);
    return 1;
}

CMD:rac(playerid, params[])
{
    if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] > 0)
    {
        for(new v = 0; v < GetVehiclePoolSize(); v ++)
        {
            if(!VEHICLES_PLAYER[v] && !VI[v][V_VALID] && GetVehicleVirtualWorld(v) == FREEROAM_VW)
			{
				SetVehicleToRespawn(v);
				LinkVehicleToInterior(v, 0);
			}
        }
		SendClientMessageToAll(-1, "{"ORANGE"}All vehicles were respawned.");
		return 1;
    }
    return 0;
}

CMD:givemod(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_LEADER)
	{
		if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "{996600}ERROR: /givemod [PLAYERID] [LEVEL]");
	    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /givemod [PLAYERID] [LEVEL]");
		if(PI[playerid][P_MOD] == ADMIN_LEVEL_LEADER) if(params[1] > ADMIN_LEVEL_BAN) return SendClientMessage(playerid, -1, "Error: You cannot assign this level.");
		else if(PI[playerid][P_MOD] == ADMIN_LEVEL_OWNER) if(params[1] > ADMIN_LEVEL_OWNER) return SendClientMessage(playerid, -1, "Error.");
		SendClientMessageEx(playerid, -1, "{CCCCCC}You have modified the range A {B0E66A}%s {CCCCCC}de %s.", adminLevel(params[1]), PI[params[0]][P_NAME]);
		ChangeAdminRank(PI[params[0]][P_ID], params[1]);
		return 1;
	}
	return 0;
}

CMD:kroom(playerid, params[])
{
    if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_KICK)
	{
	    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /KROOM [PLAYERID]");
	    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /KROOM [PLAYERID]");
		if(PI[params[0]][P_GAMEMODE] == M_FREEROAM || PI[params[0]][P_GAMEMODE] == M_NONE) return SendClientMessage(playerid, -1, "{996600}The player is not in any way or is in the mode FREEROAM.");
		
		ExitPlayerGameMode(params[0]);
		JoinPlayerGameMode(params[0], GAME_FREEROAM);
		
		SendClientMessageEx(playerid, -1, "'%s' Now it is in the mode FREEROAM.", PI[params[0]][P_NAME]);
	    return 1;
	}
	return 0;
}

CMD:kick(playerid, params[])
{
    if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_KICK)
	{
		new id, reason[128];
		if(!sscanf(params, "us[128]", id, reason))
		{
			if(!IsPlayerConnected(id)) return SendClientMessage(playerid, -1, "{996600}ERROR: /KICK [PLAYERID] [REASON (OPCIONAL)]");
			if(IsPlayerAdmin(id) || PI[id][P_MOD] >= PI[playerid][P_MOD]) return SendClientMessage(playerid, -1, "{996600}ERROR:");
			
			new log[145]; format(log, 145, "%s [ID:%d LVL:%d] kick a %s [ID:%d]. REASON: %s", PI[playerid][P_NAME], PI[playerid][P_ID], PI[playerid][P_MOD], PI[id][P_NAME], PI[id][P_ID], reason);
			AdminLog(log);
		
			FuckPlayer(id, reason);
			SendClientMessage(playerid, -1, "{99CC00}PLAYER KICKED.");
			
			new advert[145]; format(advert, 145, "{CC0000}%s[%d] kick a %s[%d]. REASON: %s", PI[playerid][P_NAME], playerid, PI[id][P_NAME], id, reason);
			SendMessageToAdmins(-1, advert);
			return 1;
		}
	    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /KICK [PLAYERID] [REASON (OPCIONAL)]");
	    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /KICK [PLAYERID] [REASON (OPCIONAL)]");
		if(IsPlayerAdmin(params[0]) || PI[params[0]][P_MOD] >= PI[playerid][P_MOD]) return SendClientMessage(playerid, -1, "{996600}ERROR:");
	    SendClientMessage(playerid, -1, "{99CC00}PLAYER KICKED.");
		
		new advert[145]; format(advert, 145, "{CC0000}%s[%d] kick a %s[%d].", PI[playerid][P_NAME], playerid, PI[params[0]][P_NAME], params[0]);
		SendMessageToAdmins(-1, advert);
		
		new log[145]; format(log, 145, "%s [ID:%d LVL:%d] kick a %s [ID:%d]. REASON: -", PI[playerid][P_NAME], PI[playerid][P_ID], PI[playerid][P_MOD], PI[params[0]][P_NAME], PI[params[0]][P_ID]);
		AdminLog(log);
		
		Kick(params[0]);
	    return 1;
	}
	return 0;
}

/*
CMD:pdns(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_BAN)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /DNS [PLAYERID]");
	    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /DNS [PLAYERID]");
		SendClientMessageEx(playerid, -1, "%s DNS: %s", PI[params[0]][P_NAME], PI[params[0]][P_DNS]);
		return 1;
	}
	return 0;
}

CMD:dns(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_BAN)
	{
		ShowDialog(playerid, DIALOG_DNS);	
		return 1;
	}
	return 0;
}
*/

CMD:rhouse(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_BAN)
	{
		
		for(new i = 0; i != HOUSES_LOADED; i++)
		{
			if(HI[i][H_VALID] && HI[i][H_SOLD])
			{
				if(IsPlayerInRangeOfPoint(playerid, 3.0, HI[i][H_extPos][0], HI[i][H_extPos][1], HI[i][H_extPos][2]))
				{
					PlayerPlaySoundEx(playerid, 1149, 0.0, 0.0, 0.0);
					format(HI[i][H_OWNER], 24, "");
					new old = HI[i][H_OWNERID];
					HI[i][H_OWNERID] = 0;
					HI[i][H_SOLD] = false;
					UpdateHouse(i);
					RemovePlayerHouse(old, 1, HI[i][H_PRICE][0], HI[i][H_PRICE][1]);
					SendClientMessage(playerid, -1, "This property is now for sale.");
					return 1;
				}
			}
		}
		SendClientMessage(playerid, -1, "{"GREY"}Error: Nor are in the right place.");
		
		return 1;
	}
	return 0;
}

CMD:ban(playerid, params[])
{
    if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_BAN)
	{
		new id, reason[128];
		if(!sscanf(params, "us[128]", id, reason))
		{
			if(!IsPlayerConnected(id)) return SendClientMessage(playerid, -1, "{996600}ERROR: /BAN [PLAYERID] [REASON (OPCIONAL)]");
			if(IsPlayerAdmin(id) || PI[id][P_MOD] >= PI[playerid][P_MOD]) return SendClientMessage(playerid, -1, "{996600}ERROR:");
			
			SendClientMessage(playerid, -1, "{99CC00}PLAYER BANNED.");
			new advert[145]; format(advert, 145, "{CC0000}%s[%d] ban a %s[%d]. REASON: %s", PI[playerid][P_NAME], playerid, PI[id][P_NAME], id, reason);
			SendMessageToAdmins(-1, advert);
			
			new log[145]; format(log, 145, "%s [ID:%d LVL:%d] ban a %s [ID:%d IP:%s]. REASON: %s", PI[playerid][P_NAME], PI[playerid][P_ID], PI[playerid][P_MOD], PI[id][P_NAME], PI[id][P_ID], PI[id][P_IP], reason);
			AdminLog(log);
		
			//PI[id][P_SCORE] = 0;
			//PI[id][P_MONEY] = 0;
			FuckPlayer(id, reason, true);
			return 1;
		}
		
	    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /BAN [PLAYERID] [REASON (OPCIONAL)]");
	    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /BAN [PLAYERID] [REASON (OPCIONAL)]");
		if(IsPlayerAdmin(params[0]) || PI[params[0]][P_MOD] >= PI[playerid][P_MOD]) return SendClientMessage(playerid, -1, "{996600}ERROR:");
	 
	    SendClientMessage(playerid, -1, "{99CC00}PLAYER BANNED.");	
		new advert[145]; format(advert, 145, "{CC0000}%s[%d] ban a %s[%d].", PI[playerid][P_NAME], playerid, PI[params[0]][P_NAME], params[0]);
		SendMessageToAdmins(-1, advert);
		
		new log[145]; format(log, 145, "%s [ID:%d LVL:%d] ban a %s [ID:%d IP:%s]. REASON: -", PI[playerid][P_NAME], PI[playerid][P_ID], PI[playerid][P_MOD], PI[params[0]][P_NAME], PI[params[0]][P_ID], PI[params[0]][P_IP]);
		AdminLog(log);
		
		//RemovePlayerHouses(params[0]);
		PI[params[0]][P_BANNED] = true;
		
		//PI[params[0]][P_SCORE] = 0;
		//PI[params[0]][P_MONEY] = 0;
		new str[64]; format(str, 64, "banip %s", PI[params[0]][P_IP]); SendRconCommand(str);
		BlockIpAddress(PI[params[0]][P_IP], 0);
	    Ban(params[0]);
	    return 1;
	}
	return 0;
}

CMD:tban(playerid, params[])
{
    if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_BAN)
	{
		new reason[128];
	    if(sscanf(params, "uds[128]", params[0], params[1], reason)) return SendClientMessage(playerid, -1, "{996600}ERROR: /TBAN [PLAYERID] [DAYS] [REASON]");
	    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /TBAN [PLAYERID] [DAYS] [REASON]");
		if(!PI[params[0]][P_USEREXIT]) return SendClientMessage(playerid, -1, "{996600}ERROR: El jugador no est registrado.");
		if(IsPlayerAdmin(params[0]) || PI[params[0]][P_MOD] >= PI[playerid][P_MOD]) return SendClientMessage(playerid, -1, "{996600}ERROR:");
		if(params[1] < 1 || params[1] > 20) return SendClientMessage(playerid, -1, "{996600}ERROR: DAYS [1-20]");
	    
		SendClientMessage(playerid, -1, "{99CC00}PLAYER BANNED.");
		new advert[145]; format(advert, 145, "{CC0000}%s[%d] ban [%d days] a %s[%d]. REASON: %s", PI[playerid][P_NAME], playerid, params[1], PI[params[0]][P_NAME], params[0], reason);
		SendMessageToAdmins(-1, advert);
		
		new log[145]; format(log, 145, "%s [ID:%d LVL:%d] ban [%d days] a %s [ID:%d]. REASON: %s", PI[playerid][P_NAME], PI[playerid][P_ID], PI[playerid][P_MOD], params[1], PI[params[0]][P_NAME], PI[params[0]][P_ID], reason);
		AdminLog(log);
		
		FuckPlayer(params[0], reason, true, params[1]);
	    return 1;
	}
	return 0;
}

CMD:pass(playerid, params[])
{
	if(!PI[playerid][P_USEREXIT]) return SendClientMessage(playerid, -1, "{"GREY"}You are not registered.");
	ShowDialog(playerid, DIALOG_NPASS);
	return 1;
}

CMD:getid(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_SAY)
	{
		if(isnull(params)) return SendClientMessage(playerid, -1, "{996600}ERROR: /getid <name>");
		
		new DBResult:Result, name[24];
		format(DB_Query, sizeof(DB_Query), "SELECT ID, NAME, CONNECTED, PLAYERID FROM USERS WHERE NAME = '%s'", params);
		Result = db_query(Database, DB_Query);
		if(db_num_rows(Result))
		{
			db_get_field_assoc(Result, "NAME", name, 24);
			SendClientMessageEx(playerid, -1, "Result: Name: '%s' DB-ID: '%d' Connected: '%d' Player_ID: '%d'", name, db_get_field_assoc_int(Result, "ID"), db_get_field_assoc_int(Result, "CONNECTED"), db_get_field_assoc_int(Result, "PLAYERID"));
		}
		else SendClientMessageEx(playerid, -1, "{996600}ERROR:It was not found '%s'.", params);
		
		db_free_result(Result);
		return 1;
	}
	return 0;
}

CMD:setpass(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_OWNER)
	{
		new newpass[16];
		if(sscanf(params, "ds[16]", params[0], newpass)) return SendClientMessage(playerid, -1, "{996600}ERROR: /setpass <db player id> <name>");
		if(params[0] <= 0) return SendClientMessage(playerid, -1, "{996600}ERROR: Db player ID incorrecta.");
		//if(strlen(newpass) < 3) return SendClientMessage(playerid, -1, "{996600}ERROR: contasea demasiado corta.");
		
		
		new pass = udb_hash(newpass);
		format(DB_Query, sizeof DB_Query, "UPDATE USERS SET PASS = '%d' WHERE ID = '%d'", pass, params[0]); db_query(Database, DB_Query);
		
		new DBResult:Result, connected, c_id, player_name[24];
		format(DB_Query, sizeof(DB_Query), "SELECT CONNECTED, PLAYERID, NAME FROM USERS WHERE ID = '%d'", params[0]);
		Result = db_query(Database, DB_Query);
		if(db_num_rows(Result))
		{
			connected = db_get_field_int(Result, 0);
			c_id = db_get_field_int(Result, 1);
			db_get_field(Result, 2, player_name, 24);
			
			SendClientMessageEx(playerid, -1, "You have changed the password %s", player_name);
		}
		else SendClientMessage(playerid, -1, "{996600}ERROR: Db player ID no existe.");
		
		db_free_result(Result);
		
		if(connected)
		{
			PI[playerid][P_PASS] = pass;
			SendClientMessageEx(c_id, -1, "{99CC00}Your password has been modified.", PI[c_id][P_NAME]);
		}
			
		return 1;
	}
	return 0;
}

CMD:setname(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_LEADER)
	{
		if(sscanf(params, "ds[24]", params[0], PI[playerid][P_PLAYER_SELECTED_NAME])) return SendClientMessage(playerid, -1, "{996600}ERROR: /setname <db player id> <name>");
		if(params[0] <= 0) return SendClientMessage(playerid, -1, "{996600}ERROR: Db player ID incorrecta.");
		if(strlen(PI[playerid][P_PLAYER_SELECTED_NAME]) < 3) return SendClientMessage(playerid, -1, "{996600}ERROR: Wrong name.");
		
		new DBResult:Result, exists;
		format(DB_Query, sizeof(DB_Query), "SELECT ID FROM USERS WHERE NAME = '%s'", PI[playerid][P_PLAYER_SELECTED_NAME]);
		Result = db_query(Database, DB_Query);
		if(db_num_rows(Result))
		{
			exists = true;
		}
		db_free_result(Result);	
		if(exists) return SendClientMessage(playerid, -1, "{996600}ERROR: The name you have chosen is already in use.");
			
		format(DB_Query, sizeof(DB_Query), "SELECT NAME FROM USERS WHERE ID = '%d'", params[0]);
		Result = db_query(Database, DB_Query);
		if(db_num_rows(Result))
		{
			PI[playerid][P_PLAYER_SELECTED] = params[0];
			new dialog[120], oldname[24]; db_get_field(Result, 0, oldname, 24);
			format(dialog, sizeof dialog, "{999900}Current name:\t{99CC00}%s\n{999900}New name:\t{99CC00}%s\n", oldname, PI[playerid][P_PLAYER_SELECTED_NAME]);
			ShowPlayerDialog(playerid, DIALOG_EDIT_PLAYERNAME, DIALOG_STYLE_MSGBOX, "{"ORANGE"}"SERVER_NAME" - Set Name", dialog, "Cancelar", "Confirm");
		}
		else SendClientMessage(playerid, -1, "{996600}ERROR: Db player ID incorrecta.");
	    db_free_result(Result);
		return 1;
	}
	return 0;
}

CMD:premove(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_BAN)
	{
		if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CCCCCC}Use /premove <id>");
		if(params[0] <= 0) return StopAudioStreamForPlayer(playerid);
		
		new DBResult:Result;
		format(DB_Query, sizeof(DB_Query), "SELECT TITLE FROM MUSIC WHERE ID = '%d'", params[0]);
		Result = db_query(Database, DB_Query);
		new song_title[32];
		if(db_num_rows(Result))
		{
			db_get_field(Result, 0, song_title, 32);
			SendClientMessageEx(playerid, -1, "{CCCCCC}Song {90C3D4}'%s' {CCCCCC}eliminated.", song_title);
			DeleteSocialSong(params[0]);
		}
		else SendClientMessage(playerid, -1, "{CCCCCC}Song Not found.");
		db_free_result(Result);
		return 1;
	}
	return 0;
}

CMD:pplays(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_BAN)
	{
		if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, -1, "{CCCCCC}Use /pplays <id> <plays>");
		if(params[0] <= 0) return StopAudioStreamForPlayer(playerid);
		
		new DBResult:Result;
		format(DB_Query, sizeof(DB_Query), "SELECT TITLE FROM MUSIC WHERE ID = '%d'", params[0]);
		Result = db_query(Database, DB_Query);
		new song_title[32];
		if(db_num_rows(Result))
		{
			db_get_field(Result, 0, song_title, 32);
			SendClientMessageEx(playerid, -1, "{CCCCCC}Song {90C3D4}'%s' {CCCCCC}set plays = '%d'.", song_title, params[1]);
			new str[80]; format(str, sizeof(str), "UPDATE MUSIC SET PLAYS = %d WHERE ID = '%d'", params[1], params[0]);
			db_query(Database, str);
		}
		else SendClientMessage(playerid, -1, "{CCCCCC}Song not found.");
		db_free_result(Result);
		return 1;
	}
	return 0;
}

CMD:delete(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_LEADER)
	{
		new name[24];
	    if(sscanf(params, "s[24]", name)) return SendClientMessage(playerid, -1, "{996600}ERROR: /delete [NAME COMPLETE]");
		
		new DBResult:Result;
		format(DB_Query, sizeof(DB_Query), "SELECT ID FROM USERS WHERE NAME = '%s'", name);
		Result = db_query(Database, DB_Query);
		if(db_num_rows(Result))
		{
			DeletePlayer(db_get_field_int(Result, 0));
			SendClientMessageEx(playerid, -1, "{C6D855}'%s' removed.", name);
		}
		else SendClientMessageEx(playerid, -1, "{CC0000}ERROR: '%s' Not found in the database.", name);
	    db_free_result(Result);
		
		return 1;
	}
	return 0;
}

DeletePlayer(id)
{
	format(DB_Query, sizeof(DB_Query), "DELETE FROM USERS WHERE ID = '%d'", id);
	db_query(Database, DB_Query);
	
	format(DB_Query, sizeof(DB_Query), "DELETE FROM REGISTROS WHERE ID = '%d'", id);
	db_query(Database, DB_Query);
	
	format(DB_Query, sizeof(DB_Query), "UPDATE HOUSES SET OWNERID = '0', OWNER = '', SOLD = '0' WHERE OWNERID = '%d'", id);
	db_query(Database, DB_Query);
	
	format(DB_Query, sizeof(DB_Query), "DELETE FROM MUSIC WHERE OWNERID = '%d'", id);
	db_query(Database, DB_Query);
	
	format(DB_Query, sizeof(DB_Query), "DELETE FROM VEHICLES WHERE OWNERID = '%d'", id);
	print(DB_Query);
	db_query(Database, DB_Query);
	return 1;
}
			
CMD:unban(playerid, params[])
{
    if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_BAN)
	{
		new name[24];
	    if(sscanf(params, "s[24]", name)) return SendClientMessage(playerid, -1, "{996600}ERROR: /unban [NOMBRE COMPLETO]");
		
		new DBResult:Result;
		format(DB_Query, sizeof(DB_Query), "SELECT ID, IP, BANNED, TEMPBAN FROM USERS WHERE NAME = '%s'", name);
		Result = db_query(Database, DB_Query);
		if(db_num_rows(Result))
		{
		    new pid, pbanned, ptempban, pip[16];
			
			pid = db_get_field_int(Result, 0);
			db_get_field(Result, 1, pip, 16);
			pbanned = db_get_field_int(Result, 2);
			ptempban = db_get_field_int(Result, 3);
			
			if(!pbanned)
			{
				if(ptempban > 0)
				{	
					new str[64];
					format(DB_Query, sizeof(DB_Query), "");
					strcat(DB_Query, "UPDATE USERS SET TEMPBAN = '0'");
					format(str, 64, " WHERE NAME = '%s'", name); strcat(DB_Query, str);
					db_query(Database, DB_Query);
					
					SendClientMessageEx(playerid, -1, "{99CC00}'%s' unbalanced.", name);
					
					new log[145]; format(log, 145, "%s [ID:%d LVL:%d] unban a %s [ID:%d]", PI[playerid][P_NAME], PI[playerid][P_ID], PI[playerid][P_MOD], name, pid);
					AdminLog(log);
		
				}
				else SendClientMessageEx(playerid, -1, "{99CC00}'%s' He is not banned.", name);
			}
			else
			{
				new str[64];
				format(DB_Query, sizeof(DB_Query), "");
				strcat(DB_Query, "UPDATE USERS SET BANNED = '0'");
				format(str, 64, " WHERE NAME = '%s'", name); strcat(DB_Query, str);
				db_query(Database, DB_Query);
				
				if(!isnull(pip))
				{
					format(str, 64, "unbanip %s", pip);
					SendRconCommand(str);
					UnBlockIpAddress(pip);
				}
				SendClientMessageEx(playerid, -1, "{99CC00}'%s' unbalanced.", name);
			}
		}
		else SendClientMessageEx(playerid, -1, "{CC0000}ERROR: '%s' Not found in the database.", name);
	    db_free_result(Result);
		
	    return 1;
	}
	return 0;
}

CMD:bandb(playerid, params[])
{
    if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_BAN)
	{
		new name[24];
	    if(sscanf(params, "s[24]", name)) return SendClientMessage(playerid, -1, "{996600}ERROR: /bandb [DB Name]");
		
		new DBResult:Result;
		format(DB_Query, sizeof(DB_Query), "SELECT IP FROM USERS WHERE NAME = '%s'", name);
		Result = db_query(Database, DB_Query);
		if(db_num_rows(Result))
		{
		    new pip[16]; db_get_field(Result, 0, pip, 16);
		
			new str[64];
			format(DB_Query, sizeof(DB_Query), "");
			strcat(DB_Query, "UPDATE USERS SET BANNED = '1'");
			format(str, 64, " WHERE NAME = '%s'", name); strcat(DB_Query, str);
			db_query(Database, DB_Query);
			
			if(!isnull(pip))
			{
				format(str, 64, "banip %s", pip);
				SendRconCommand(str);
				BlockIpAddress(pip, 0);
			}
			SendClientMessageEx(playerid, -1, "{99CC00}'%s' baneado.", name);
		}
		else SendClientMessageEx(playerid, -1, "{CC0000}ERROR: '%s' Not found in the database.", name);
	    db_free_result(Result);
		
	    return 1;
	}
	return 0;
}

CMD:unbanall(playerid, params[])
{
    if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_BAN)
	{
		db_query(Database, "UPDATE USERS SET TEMPBAN = '0', BANNED = '0'");
		SendClientMessage(playerid, -1, "OK.");
	    return 1;
	}
	return 0;
}

CMD:say(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_SAY)
	{
		if(isnull(params)) return SendClientMessage(playerid, -1, "{996600}ERROR: /SAY [MESSAGE]");
		new str[145]; format(str, 145, "{00B8F5}* Admin [{B0E66A}%s (%s){00B8F5}] %s", PI[playerid][P_NAME], adminLevel(PI[playerid][P_MOD]), params);
		SendClientMessageToAll(-1, str);
		return 1;
	}
	return 0;
}

CMD:go(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_SAY)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /GO [PLAYERID]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: Disconnected player.");
		new Float:p[3]; GetPlayerPos(params[0], p[0], p[1], p[2]);
		E_SetPlayerPosEx(playerid, p[0], p[1], p[2]);
		SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
		return 1;
	}
	return 0;
}

CMD:	(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_SAY)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /tarik [PLAYERID]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: Disconnected player.");
		new Float:p[3]; GetPlayerPos(playerid, p[0], p[1], p[2]);
		E_SetPlayerPosEx(params[0], p[0], p[1], p[2]);
		SetPlayerInterior(params[0], GetPlayerInterior(playerid));
		SetPlayerVirtualWorld(params[0], GetPlayerVirtualWorld(playerid));
		return 1;
	}
	return 0;
}

CMD:slap(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_SAY)
	{
		if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /SLAP [PLAYERID]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: Disconnected player.");
		new Float:pos[3];
		GetPlayerPos(params[0], pos[0], pos[1], pos[2]);
		E_SetPlayerPosEx(params[0], pos[0], pos[1], pos[2]+10.0);
		return 1;
	}
	return 0;
}

CMD:explode(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_SAY)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /EXPLODE [PLAYERID]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: Disconnected player.");
		new Float:pos[3];
		GetPlayerPos(params[0], pos[0], pos[1], pos[2]);
		CreateExplosion(pos[0], pos[1], pos[2], 1, 2);
		return 1;
	}
	return 0;
}

CMD:spec(playerid, params[])
{
	if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] > 0)
	{
		if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{996600}You must be in the mode FREEROAM.");
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /SPEC [PLAYERID]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: Disconnected player.");
		TogglePlayerSpectatingEx(playerid, true);
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
		SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
		if(IsPlayerInAnyVehicle(params[0])) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(params[0]));
		else PlayerSpectatePlayer(playerid, params[0]);
		SendClientMessage(playerid, -1, "Use /adoff To finish spying on the player.");
		return 1;
	}
	return 0;
}

CMD:adoff(playerid, params[])
{
    if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] > 0)
	{
		if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{996600}You must be in the mode FREEROAM.");
		SetPlayerVirtualWorld(playerid, FREEROAM_VW);
		SetPlayerInterior(playerid, 0);
		TogglePlayerSpectatingEx(playerid, false);
		return 1;
	}
	return 0;
}

CMD:nextdm(playerid, params[])
{
	if(PI[playerid][P_MOD] >= ADMIN_LEVEL_OWNER || IsPlayerAdmin(playerid))
	{
		if(DM_STATUS == DM_RUNNING)
		{
			DM_TIME = 3;
			SendClientMessage(playerid, -1, "{"GREY"}Next DM in 3 seconds.");
		}
		else SendClientMessage(playerid, -1, "{"GREY"}DM is not active.");
		return 1;
	}
	return 0;
}

CMD:nextrace(playerid, params[])
{
	if(PI[playerid][P_MOD] >= ADMIN_LEVEL_OWNER || IsPlayerAdmin(playerid))
	{
		if(RC[R_STATUS] == RACE_RUNNING)
		{
			RC[R_TIMEOUT_COUNTER] = 3;
			SendClientMessage(playerid, -1, "{"GREY"}Next Race in 3 seconds.");
		}
		else SendClientMessage(playerid, -1, "{"GREY"}Race is not active.");
		return 1;
	}
	return 0;
}

CMD:reload(playerid, params[])
{
	if(PI[playerid][P_MOD] >= ADMIN_LEVEL_OWNER || IsPlayerAdmin(playerid))
	{
		LoadDMNames("DM/dms.LSR");
		LoadDerbyNames("DERBY/derbys.LSR");
		LoadFallNames("FALL/falls.LSR");
		LoadTDMNames("TDM/tdms.LSR");
		LoadShooterNames("SHOOTER/shooters.LSR");
		LoadRacesNames("RACE/races.LSR");
		return 1;
	}
	return 0;
}

CMD:nexttdm(playerid, params[])
{
	if(PI[playerid][P_MOD] >= ADMIN_LEVEL_OWNER || IsPlayerAdmin(playerid))
	{
		if(TDMI[T_STATUS] == TDM_RUNNING)
		{
			TDMI[T_TIME] = 3;
			SendClientMessage(playerid, -1, "{"GREY"}Next TDM in 3 seconds.");
		}
		else SendClientMessage(playerid, -1, "{"GREY"}TDM is not active.");
		return 1;
	}
	return 0;
}

CMD:nextshooter(playerid, params[])
{
	if(PI[playerid][P_MOD] >= ADMIN_LEVEL_OWNER || IsPlayerAdmin(playerid))
	{
		if(ST[S_STATUS] == SHOOTER_RUNNING)
		{
			ST[S_TIMEOUT_COUNTER] = 3;
			SendClientMessage(playerid, -1, "{"GREY"}Next shooter in 3 seconds.");
		}
		else SendClientMessage(playerid, -1, "{"GREY"}Shooter is not active.");
		return 1;
	}
	return 0;
}


CMD:nextderby(playerid, params[])
{
	if(PI[playerid][P_MOD] >= ADMIN_LEVEL_OWNER || IsPlayerAdmin(playerid))
	{
		if(DI[D_STATUS] == DERBY_RUNNING)
		{
			DI[D_TIMEOUT_COUNTER] = 3;
			SendClientMessage(playerid, -1, "{"GREY"}Next derby in 3 seconds.");
		}
		else SendClientMessage(playerid, -1, "{"GREY"}Derby is not active.");
		return 1;
	}
	return 0;
}

CMD:nextfall(playerid, params[])
{
	if(PI[playerid][P_MOD] >= ADMIN_LEVEL_OWNER || IsPlayerAdmin(playerid))
	{
		if(FI[F_STATUS] == FALL_RUNNING)
		{
			FI[F_TIMEOUT_COUNTER] = 3;
			SendClientMessage(playerid, -1, "{"GREY"}Next Fall in 3 seconds.");
		}
		else SendClientMessage(playerid, -1, "{"GREY"}Fall is not active.");
		return 1;
	}
	return 0;
}

CMD:skin(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	
	if(sscanf(params, "d", params[0]))
	{
		SetPlayerSkin(playerid, PI[playerid][P_SAVED_SKIN]);
		SendClientMessage(playerid, -1, "{FFCC00}Use the command /skin <id> To select a skin, Use /gskin To know the current Skin ID.");
		return 1;
	}
	
	PI[playerid][P_SAVED_SKIN] = params[0];
	SetPlayerSkin(playerid, params[0]);
	
	new r = random(sizeof(PlayerSpawnPosition_FR_LV));
	SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), PlayerSpawnPosition_FR_LV[r][0], PlayerSpawnPosition_FR_LV[r][1], PlayerSpawnPosition_FR_LV[r][2], PlayerSpawnPosition_FR_LV[r][3], 0, 0, 0, 0, 0, 0);
	SendClientMessage(playerid, -1, "{FFCC00}SKIN Guardado, use the command /skin When you want to put this skin.");
	return 1;
}

CMD:gskin(playerid, params[])
{
	SendClientMessageEx(playerid, -1, "{FFCC00}Skin ID actual: %d", GetPlayerSkin(playerid));
	return 1;
}

CMD:event(playerid, params[])
{
	if(PI[playerid][P_MOD] >= ADMIN_LEVEL_BAN || IsPlayerAdmin(playerid))
	{
		ShowDialog(playerid, DIALOG_EVENT);
		return 1;
	}
	return 0;
}

CMD:world(playerid, params[])
{
	if(PI[playerid][P_MOD] >= ADMIN_LEVEL_SAY || IsPlayerAdmin(playerid))
	{
		if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /world [id]");
		SetPlayerVirtualWorld(playerid, params[0]);
		return 1;
	}
	return 0;
}

CMD:spos(playerid, params[])
{
	if(PI[playerid][P_MOD] >= ADMIN_LEVEL_SAY || IsPlayerAdmin(playerid))
	{
		new Float:p[3], interior;
		if(sscanf(params, "p<,>fffd", p[0], p[1], p[2], interior)) return SendClientMessage(playerid, -1, "Syntax: /spos [X], [Y], [Z], [INTERIOR]");
		E_SetPlayerPosEx(playerid, p[0], p[1], p[2]);
		SetPlayerInterior(playerid, interior);
	}
	return 0;
}

CMD:agivemoney(playerid, params[])
{
	if(PI[playerid][P_MOD] >= ADMIN_LEVEL_OWNER || IsPlayerAdmin(playerid))
	{
		if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "{996600}ERROR: /agivemoney [Playerid/Name] [amount]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}Disconnected player.");
		
		SendClientMessageEx(params[0], -1, "{"ORANGE"}An administrator gave you {"GREY"}$%d.", params[1]);
		GivePlayerMoneyEx(params[0], params[1]);
		return 1;
	}
	return 0;
}

CMD:agivescore(playerid, params[])
{
	if(PI[playerid][P_MOD] >= ADMIN_LEVEL_OWNER || IsPlayerAdmin(playerid))
	{
		if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "{996600}ERROR: /agivescore [Playerid/Name] [amount]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}Disconnected player.");
		
		SendClientMessageEx(params[0], -1, "{"ORANGE"}An administrator gave you {"GREY"}%d SCORE.", params[1]);
		GivePlayerScoreEx(params[0], params[1]);
		return 1;
	}
	return 0;
}

CMD:id(playerid, params[])
{
	
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /id [Playerid/Name]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}Disconnected player.");
	
	SendClientMessageEx(playerid, -1, "%s: %d [%d]", PI[params[0]][P_NAME], params[0], PI[params[0]][P_ID]);
	return 1;
}

CMD:gid(playerid, params[])
{
    if(IsPlayerAdmin(playerid) || PI[playerid][P_MOD] >= ADMIN_LEVEL_BAN)
	{
		new name[24];
	    if(sscanf(params, "s[24]", name)) return SendClientMessage(playerid, -1, "{996600}ERROR: /gid [DB Name]");
		
		new DBResult:Result;
		format(DB_Query, sizeof(DB_Query), "SELECT ID FROM USERS WHERE NAME = '%s'", name);
		Result = db_query(Database, DB_Query);
		if(db_num_rows(Result))
		{
		    SendClientMessageEx(playerid, -1, "%s [%d]", name, db_get_field_int(Result, 0));
		}
		else SendClientMessageEx(playerid, -1, "{CC0000}ERROR: '%s' Not found in the database.", name);
	    db_free_result(Result);
	    return 1;
	}
	return 0;
}

CMD:ann(playerid, params[])
{
	if(PI[playerid][P_MOD] >= ADMIN_LEVEL_OWNER || IsPlayerAdmin(playerid))
	{
		new message[145];
		if(sscanf(params, "dds[145]", params[0], params[1], message)) return SendClientMessage(playerid, -1, "{996600}ERROR: /ann [SECONDS] [Type 0-6] [MESSAGE]");
		if(params[1] < 0 || params[1] == 2 || params[1] > 6) return SendClientMessage(playerid, -1, "{996600}ERROR: /ann [SECONDS] [Type 0-6] [MESSAGE]");
		GameTextForAll(message, params[0]*1000, params[1]);
		
		new advert[145]; format(advert, 145, "{CC0000}%s[%d] use /ann %s", PI[playerid][P_NAME], playerid, message);
		SendMessageToAdmins(-1, advert);
		return 1;
	}
	return 0;
}

CMD:song(playerid, params[])
{
	if(PI[playerid][P_MOD] < ADMIN_LEVEL_BAN) return 0;
	ShowDialog(playerid, DIALOG_SONG);
	return 1;
}

CMD:war(playerid, params[])
{
	if(!PI[playerid][P_MOD]) return 0;
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, -1, "{996600}ERROR: /war [WEAPON] [AMMUNITION]");
	if(params[0] == 38 || params[0] == 44 || params[0] == 45) return SendClientMessage(playerid, -1, "{CC0000}Weapon prohibited");
	
	new gunname[32]; GetWeaponName(params[0], gunname, sizeof(gunname));
	new str[45]; format(str, 45, "_~n~_~n~~r~~h~%s ~b~~h~war", gunname);
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
		if(IsPlayerConnected(i) && PI[i][P_GAMEMODE] == M_FREEROAM && !PI[i][P_GODMODE])
		{
			GameTextForPlayer(i, str, 3000, 6);
			GivePlayerWeapon(i, params[0], params[1]);
			SetPlayerArmedWeapon(i, params[0]);
		}
	}
	return 1;
}

CMD:ss(playerid, params[])
{
	if(!PI[playerid][P_MOD]) return 0;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /ss [ID]");
	PlayerPlaySoundEx(playerid, params[0], 0.0, 0.0, 0.0);
	return 1;
}

CMD:ip(playerid, params[])
{
	if(!PI[playerid][P_MOD]) return 0;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /ip [playerid]");
	SendClientMessageEx(playerid, -1, "%s: %d [%d] [%s]", PI[params[0]][P_NAME], params[0], PI[params[0]][P_ID], PI[params[0]][P_IP]);
	return 1;
}

CMD:wea(playerid, params[])
{
	if(!PI[playerid][P_MOD]) return 0;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /ss [ID]");
	SetPlayerWeather(playerid, params[0]); 
	return 1;
}

CMD:yt(playerid, params[])
{
	if(isnull(params)) return SendClientMessage(playerid, -1, "{996600}ERROR: /yt [YOUTUBE URL]");
	format(params, 145, "http://www.youtubeinmp3.com/fetch/?video=%s", params);
	PlayAudioStreamForPlayer(playerid, params);
	return 1;
}

CMD:veh(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	if(PI[playerid][P_VEHICLES] <= 0) return SendClientMessage(playerid, -1, "{996600}You have no vehicle.");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
	{
		new vid = GetPlayerVehicleID(playerid);
		

		if(!VI[vid][V_VALID]) return SendClientMessage(playerid, -1, "{996600}This is not your vehicle.");
		if(VI[vid][V_OWNERID] != PI[playerid][P_ID]) return SendClientMessage(playerid, -1, "{996600}This is not your vehicle.");

		new engine, vlights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(vid, engine, vlights, alarm, doors, bonnet, boot, objective);
		
		PI[playerid][P_TEMP_VID] = vid;
		new dialog[350], dialog_Title[128];
		format(dialog_Title, 128, "{"ORANGE"}"SERVER_NAME" - %s", VehicleNames[ VI[vid][V_MODELID] - 400]);
		format(dialog, 350, "{999900}Part\t{99CC00}State\n{999900}Motor\t{99CC00}%s\n{999900}Lights\t{99CC00}%s\n{999900}Doors\t{99CC00}%s\n{999900}Cap\t{99CC00}%s\n{999900}Trunk\t{99CC00}%s\n{999999}Destroy vehicle\t{CC0000}IRREVERSIBLE",
		(engine == 1 ? ("Switched on"):("Off")), (vlights == 1 ? ("Lit"):("Turned off")), (doors == 1 ? ("Closed"):("Open")), (bonnet == 1 ? ("Open"):("Closed")), (boot == 1 ? ("Open"):("Closed")));
		ShowPlayerDialog(playerid, DIALOG_VEHICLECONTROL, DIALOG_STYLE_TABLIST_HEADERS, dialog_Title, dialog, ">>", "Close");
		return 1;
	}
	else if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		new vid = GetPlayerCameraTargetVehicle(playerid);
		if(vid == INVALID_VEHICLE_ID) return SendClientMessage(playerid, -1, "{996600}You are not near your vehicle.");
		if(!VI[vid][V_VALID]) return SendClientMessage(playerid, -1, "{996600}This is not your vehicle.");
		if(VI[vid][V_OWNERID] != PI[playerid][P_ID]) return SendClientMessage(playerid, -1, "{996600}This is not your vehicle.");

		new engine, vlights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(vid, engine, vlights, alarm, doors, bonnet, boot, objective);
		
		PI[playerid][P_TEMP_VID] = vid;
		new dialog[350], dialog_Title[128];
		format(dialog_Title, 128, "{"ORANGE"}"SERVER_NAME" - %s", VehicleNames[ VI[vid][V_MODELID] - 400]);
		format(dialog, 350, "{999900}Part\t{99CC00}State\n{999900}Motor\t{99CC00}%s\n{999900}Lights\t{99CC00}%s\n{999900}Doors\t{99CC00}%s\n{999900}Cap\t{99CC00}%s\n{999900}Trunk\t{99CC00}%s\n{999999}Destroy vehicle\t{CC0000}IRREVERSIBLE",
		(engine == 1 ? ("Switched on"):("Off")), (vlights == 1 ? ("Lit"):("Turned off")), (doors == 1 ? ("Closed"):("Open")), (bonnet == 1 ? ("Open"):("Closed")), (boot == 1 ? ("Open"):("Closed")));
		ShowPlayerDialog(playerid, DIALOG_VEHICLECONTROL, DIALOG_STYLE_TABLIST_HEADERS, dialog_Title, dialog, ">>", "Close");
		return 1;
	}
	SendClientMessage(playerid, -1, "{996600}You are not near your vehicle.");
	return 1;
}

CMD:vv(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	if(PI[playerid][P_VEHICLES] <= 0) return SendClientMessage(playerid, -1, "{996600}You have no vehicle.");
	ShowDialog(playerid, DIALOG_PERSONAL_VEHICLES);
	return 1;
}

CMD:buvehicle(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1657.651489, 1796.443115, 10.820312))
	{
		if(!PI[playerid][P_SHOPCAR]) ShowPlayerCarShop(playerid);
		else HidePlayerCarShop(playerid);
	}
	else SendClientMessage(playerid, -1, "{"ORANGE"} You are not in the right place, use {C6D855}cardealer.");
	return 1;
}

CMD:deathmatch(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	if(IsPlayerInDynamicArea(playerid, Desmadre_Area) || PI[playerid][P_DESMADRE]) return 1;	
	PI[playerid][P_SPAWN_PROTECTION] = false;
	new r = random(sizeof(Random_Desmadre_Spawn));
	SetPlayerPosEx(playerid, Random_Desmadre_Spawn[r][0], Random_Desmadre_Spawn[r][1], Random_Desmadre_Spawn[r][2], Random_Desmadre_Spawn[r][3], 1, FREEROAM_VW, false, false);
	
	new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_/deathmatch~n~_", PI[playerid][P_NAME]);
	ShowTextDrawInfo(3000, str);
	return 1;
}

CMD:auxilios(playerid, params[])
{
	if(PI[playerid][P_GAMEMODE] != M_ZOMBIE) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
	if(PI[playerid][P_ZOMBIE_TEAM] != TEAM_HUMANS) return SendClientMessage(playerid, -1, "{"GREY"}You are a zombie...");
	
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 2478.669433, -1664.632568, 13.329092) || IsPlayerInRangeOfPoint(playerid, 3.0, 2693.755371, -1089.728759, 69.125000)
		|| IsPlayerInRangeOfPoint(playerid, 3.0, 2355.956787, -1232.644042, 27.976562) || IsPlayerInRangeOfPoint(playerid, 3.0, 1652.444458, -1008.928894, 24.062427)
		|| IsPlayerInRangeOfPoint(playerid, 3.0, 1199.899414, -1337.947143, 13.398426) || IsPlayerInRangeOfPoint(playerid, 3.0, 736.144165, -1346.766601, 13.513442))
	{
		ShowDialog(playerid, DIALOG_AUX);
		return 1;
	}
	else SendClientMessage(playerid, -1, "{"GREY"}You are not in the right place.");
	return 1;
}

//VIP COMMANDS

CMD:vcol(playerid, params[])
{
	if(!PI[playerid][P_VIP]) return 0;
	if(sscanf(params, "dd", params[0], params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /vcol [COLOR 1] [COLOR 2]");
	if(IsPlayerInAnyVehicle(playerid))
	{
		new vid = GetPlayerVehicleID(playerid);
		if(VI[vid][V_VALID])
		{
			if(VI[vid][V_OWNERID] != PI[playerid][P_ID]) return SendClientMessage(playerid, -1, "{"GREY"}This is not your vehicle.");
			VI[vid][V_COLOR][0] = params[0];
			VI[vid][V_COLOR][1] = params[1];
		}
		ChangeVehicleColor(vid, params[0], params[1]);
	}
	else SendClientMessage(playerid, -1, "{996600}ERROR: You are not in vehicle");
	return 1;
}

CMD:chatcolor(playerid, params[])
{
	if(!PI[playerid][P_VIP]) return SendClientMessage(playerid, -1, "{"GREY"}This command is only for users vip {C6D855}(/vipinfo)");
	ShowDialog(playerid, DIALOG_CHATCOLOR);
	return 1;
}

CMD:clearc(playerid, params[])
{
	if(!PI[playerid][P_VIP]) return SendClientMessage(playerid, -1, "{"GREY"}This command is only for users vip {C6D855}(/vipinfo)");
	for(new i = 0; i != 32; i++) SendClientMessage(playerid, -1, " ");
	return 1;
}

CMD:hesoyam(playerid, params[])
{
	if(!PI[playerid][P_VIP]) return SendClientMessage(playerid, -1, "{"GREY"}This command is only for users vip {C6D855}(/vipinfo)");
	if(gettime() < PI[playerid][P_HESOYAM_TIME] + 600) return SendClientMessage(playerid, -1, "{C6D855}You can only use this command every 10 minutes.");
	PI[playerid][P_HESOYAM_TIME] = gettime();
	SetPlayerHealth(playerid, 100.0);
	SetPlayerArmour(playerid, 100.0);
	return 1;
}

CMD:vipinfo(playerid, params[])
{
	ShowDialog(playerid, DIALOG_VIPINFO);
	return 1;
}

CMD:goto(playerid, params[])
{
	if(!PI[playerid][P_VIP]) return SendClientMessage(playerid, -1, "{"GREY"}This command is only for users vip {C6D855}(/vipinfo)");

	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /GOTO [PLAYERID]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: Disconnected player.");
	if(PI[params[0]][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{996600}ERROR: The player is not in the modeFREEROAM.");
	if(PI[params[0]][P_STATUS] != S_SPAWNED) return SendClientMessage(playerid, -1, "{996600}ERROR: Now you can't go to this player.");
	
	new Float:p[3]; GetPlayerPos(params[0], p[0], p[1], p[2]);
	E_SetPlayerPosEx(playerid, p[0] + 1.0, p[1] - 1.0, p[2] + 1.0);
	SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
	
	return 1;
}

CMD:invisible(playerid, params[])
{
	if(!PI[playerid][P_VIP]) return SendClientMessage(playerid, -1, "{"GREY"}This command is only for users vip {C6D855}(/vipinfo)");
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}You can only be invisible in the Mode FREEROAM.");
	SetPlayerColor(playerid, 0xFFFFFF00);
	SendClientMessage(playerid, -1, "{C6D855}Now you are invisible.");
	return 1;
}

CMD:vips(playerid, params[])
{
	SendClientMessage(playerid, -1, " ");
	SendClientMessage(playerid, -1, " ");
	SendClientMessage(playerid, -1, " ");
	SendClientMessage(playerid, -1, "\t{C6D855}Users VIP:");
	SendClientMessage(playerid, -1, " ");
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
	    if(IsPlayerConnected(i))
	    {
			if(PI[i][P_VIP])
			{
			    SendClientMessageEx(playerid, -1, "\t\t\t{FFCC00}%s", PI[i][P_NAME]);
			}
	    }
	}
	SendClientMessage(playerid, -1, " ");
	SendClientMessage(playerid, -1, " ");
	SendClientMessage(playerid, -1, " ");
    return 1;
}

CMD:neones(playerid, params[])
{
	SendClientMessage(playerid, -1, "{FFCC00}Use /tuning.");
	return 1;
}

CMD:tuning(playerid, params[])
{
	if(!PI[playerid][P_VIP]) return SendClientMessage(playerid, -1, "{"GREY"}This command is only for users vip {C6D855}(/vipinfo)");

	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, -1, "{"GREY"}ERROR: You are not in a vehicle.");
	if(VI[GetPlayerVehicleID(playerid)][V_VALID])
	{
		if(VI[GetPlayerVehicleID(playerid)][V_OWNERID] != PI[playerid][P_ID]) return SendClientMessage(playerid, -1, "{"GREY"}ERROR: You are not in your vehicle.");
	}
	
	if(PI[playerid][P_TUNING_MENU]) HidePlayerTuningMenu(playerid);
	else
	{
		SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0, 0.0, 0.0);
		TextDrawShowForPlayer(playerid, TD_LSR_TUNING[0]);
		TextDrawShowForPlayer(playerid, TD_LSR_TUNING[1]);
		TextDrawShowForPlayer(playerid, TD_LSR_TUNING[2]);
		for(new i = 0; i != sizeof(PTD_LSR_TUNING[]); i++) PlayerTextDrawShow(playerid, PTD_LSR_TUNING[playerid][i]);
		
		PI[playerid][P_TUNING_MENU] = true;
		SelectTextDraw(playerid, -1);
		
		UpdatePlayerTuningMenu(playerid);
	}
	return 1;
}

CMD:counting(playerid, params[])
{
	if(!PI[playerid][P_VIP]) return SendClientMessage(playerid, -1, "{"GREY"}This command is only for users vip {C6D855}(/vipinfo)");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{996600}ERROR: /counting [SECONDS 3-10]");
	if(params[0] < 3 || params[0] > 10)  return SendClientMessage(playerid, -1, "{996600}ERROR: /counting [SECONDS 3-10]");
	
	if(COUNTDOWN_STARTED) return SendClientMessage(playerid, -1, "{996600}ERROR: There is an ongoing count.");
	
	if(gettime() < COUNTDOWN_TIME + 60) 
	{
		new time = (60 - ( gettime() - COUNTDOWN_TIME ) );
		SendClientMessageEx(playerid, -1, "{"ORANGE"}You must wait {"GREY"}%s minutes {"ORANGE"}To start another count.", TimeConvert(time));
		return 1;
	}
	
	COUNTDOWN_COUNTER = params[0];
	COUNTDOWN_STARTED = true;
	COUNTDOWN_TIME = gettime();
	Countdown();
	return 1;
}

public Countdown()
{
	if(COUNTDOWN_COUNTER <= 0)
	{
		GameTextForAll("~r~~h~!!_Y~b~~h~A_!!", 2000, 6);
		
		COUNTDOWN_COUNTER = 0;
		COUNTDOWN_STARTED = false;
		return 1;
	}
	
	new str[64]; format(str, 64, "%s%d", RandomGameTextColors[random(sizeof(RandomGameTextColors))], COUNTDOWN_COUNTER);
	GameTextForAll(str, 2000, 6);
	
	COUNTDOWN_COUNTER -= 1;
	SetTimer("Countdown", 900, false);
	return 1;
}

CMD:createcrew(playerid, params[])
{
	if(Total_Crews >= MAX_CREWS) return SendClientMessage(playerid, -1, "You can't create more crews.");
	if(!PI[playerid][P_USEREXIT]) return SendClientMessage(playerid, -1, "{"GREY"}You are not registered.");
	if(PI[playerid][P_CREW_ID] != 0) return SendClientMessage(playerid, -1, "You already belong to a CREW, to abandon it /manage");
	if(PI[playerid][P_SCORE] < 1000) return SendClientMessage(playerid, -1, "You need 1000 from Score to create a {FF7A45}crew.");
	if(PI[playerid][P_MONEY] < 500000) return SendClientMessage(playerid, -1, "You need $ 500,000 to create a {FF7A45}crew.");
	if(isnull(params)) return SendClientMessage(playerid, -1, "Use {FF7A45}/createcrew [ABBREVIATED NAME, 2-6 characters]");
	if(strlen(params) < 2 || strlen(params) > 6) return SendClientMessage(playerid, -1, "Utiliza {FF7A45}/createcrew [ABBREVIATED NAME, 2-6 characters]");
	
	new DBResult:Result, exists;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM CREWS WHERE NAME = '%s'", params);
	Result = db_query(Database, DB_Query);
	if(db_num_rows(Result)) exists = true;
	db_free_result(Result);
	
	if(exists) return SendClientMessageEx(playerid, -1, "Crew {FF7A45}%s {FFFFFF}ya existe, elige otro nombre para tu crew.", params);
	format(DB_Query, sizeof(DB_Query), "INSERT INTO CREWS (NAME, MEMBERS) VALUES ('%s','1')", params);
	db_query(Database, DB_Query);

	new crewid;
	format(DB_Query, sizeof(DB_Query), "SELECT ID FROM CREWS WHERE NAME = '%s'", params);
	Result = db_query(Database, DB_Query);
	if(db_num_rows(Result))
	{
		crewid = db_get_field_int(Result, 0);
	}
	db_free_result(Result);
	new slot = GetFreeCrewSlot();
	CI[slot][C_VALID] = true;
	CI[slot][C_ID] = crewid;
	format(CI[slot][C_NAME], 10, "%s", params);
	CI[slot][C_MEMBERS] = 1;
	CI[slot][C_COLOR] = 0xFF7A45;
	
	Total_Crews ++;
	
	PI[playerid][P_CREW_ID] = crewid;
	PI[playerid][P_CREW_SLOT] = slot;
	PI[playerid][P_CREW_RANK] = RANK_FOUNDER;
	new label[24]; format(label, 24, "{%x}%s Crew", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], CI[PI[playerid][P_CREW_SLOT]][C_NAME]);
	PI[playerid][P_CREW_LABEL] = CreateDynamic3DTextLabel(label, 0xFFFFFFAA, 0.0, 0.0, 0.4, 10.0, playerid);
	UpdateUserData(playerid);
	
	GivePlayerScoreEx(playerid, -1000);
	GivePlayerMoneyEx(playerid, -500000);
	SendClientMessageEx(playerid, -1, "Crew {FF7A45}%s {FFFFFF}created, usa {FF7A45}/manage {FFFFFF}To manage yourcrew.", params);
	return 1;
}

CMD:manage(playerid, params[])
{
	if(PI[playerid][P_CREW_ID] == 0) return SendClientMessage(playerid, -1, "You do not belong to any {FF7A45}crew.");
	ShowDialog(playerid, DIALOG_CREW_MANAGE);
	return 1;
}

CMD:invite(playerid, params[])
{
	if(PI[playerid][P_CREW_ID] == 0) return SendClientMessage(playerid, -1, "You do not belong to any {FF7A45}crew.");
	if(PI[playerid][P_CREW_RANK] < RANK_LEADER) return SendClientMessage(playerid, -1, "You need to be {FF7A45}leader {FFFFFF}To invite players to {FF7A45}crew.");
	//if(CI[PI[playerid][P_CREW_SLOT]][C_MEMBERS] >= MAX_PLAYERS_PER_CREW) return SendClientMessage(playerid, -1, "La crew est completa.");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "Error: {FF7A45}/invite {FFFFFF}[ID/NAME]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "Error: {FF7A45}Disconnected player.");
	if(!PI[params[0]][P_USEREXIT]) return SendClientMessage(playerid, -1, "{"GREY"}Error: The user is not registered.");
	if(PI[params[0]][P_CREW_ID] != 0) return SendClientMessage(playerid, -1, "Error:The player must leave his current crew.");
	PI[params[0]][P_CREW_INVITED] = PI[playerid][P_CREW_ID];
	PI[params[0]][P_CREW_INVITE_TIME] = gettime();
	SendClientMessageEx(playerid, -1, "Invitation sent to {%x}%s.", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], PI[params[0]][P_NAME]);
	SendClientMessageEx(params[0], -1, "{%x}%s {FFFFFF}has invited you to join the CREW {%x}%s. {FFFFFF}use {%x}/acceptinvite {FFFFFF}To join.", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], PI[playerid][P_NAME], CI[PI[playerid][P_CREW_SLOT]][C_COLOR], CI[PI[playerid][P_CREW_SLOT]][C_NAME], CI[PI[playerid][P_CREW_SLOT]][C_COLOR]);
	PlayerPlaySoundEx(params[0], 5203, 0.0, 0.0, 0.0);
	return 1;
}

CMD:acceptinvite(playerid, params)
{
	if(PI[playerid][P_CREW_ID] != 0) return SendClientMessage(playerid, -1, "You already belong to a CREW.");
	if(PI[playerid][P_CREW_INVITED] == 0) return SendClientMessage(playerid, -1, "No invitation received.");
	if( (gettime() >= PI[playerid][P_CREW_INVITE_TIME] + 20) )
	{
		PI[playerid][P_CREW_INVITED] = 0;
		SendClientMessage(playerid, -1, "No invitation received.");
		return 1;
	}
	new slot = GetCrewSlotById(PI[playerid][P_CREW_INVITED]);
	if(slot == -1) 
	{
		PI[playerid][P_CREW_INVITED] = 0;
		SendClientMessage(playerid, -1, "The CREW no longer exists.");
		return 1;
	}
	PI[playerid][P_CREW_ID] = PI[playerid][P_CREW_INVITED];
	PI[playerid][P_CREW_SLOT] = slot;
	PI[playerid][P_CREW_RANK] = RANK_NOOB;
	new label[24]; format(label, 24, "{%x}%s Crew", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], CI[PI[playerid][P_CREW_SLOT]][C_NAME]);
	PI[playerid][P_CREW_LABEL] = CreateDynamic3DTextLabel(label, 0xFFFFFFAA, 0.0, 0.0, 0.4, 10.0, playerid);
	PI[playerid][P_CREW_INVITED] = 0;
	CI[PI[playerid][P_CREW_SLOT]][C_MEMBERS] ++;
	UpdateUserData(playerid);
	UpdateCrewDatabase(PI[playerid][P_CREW_ID], "MEMBERS", CI[PI[playerid][P_CREW_SLOT]][C_MEMBERS]);
	new message[145]; format(message, 145, "{%x}%s {FFFFFF}He has joined the Crew.", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], PI[playerid][P_NAME]);
	SendMessageToCrew(PI[playerid][P_CREW_ID], -1, message);
	return 1;
}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
	if(PI[playerid][P_STATUS] != S_SPAWNED)
	{
		SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
		return 0;
	}
	return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success) GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~n~~r~~h~Incorrect command~n~~y~~h~/help_/command_/tele", 3000, 6);
	return 1;
}

AddPlayerClasses()
{	
	/* FREEROAM */
	AddPlayerClassEx(NO_TEAM, 45, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 44, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 29, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 27, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 267, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 268, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 269, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 271, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 272, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 280, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 281, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 282, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 283, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 285, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 286, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 287, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 254, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 255, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 256, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 257, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 258, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 259, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 260, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 261, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 262, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 263, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 264, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 26, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 23, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 22, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 21, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 56, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 266, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 60, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 55, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 274, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 275, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 276, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 1, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 2, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 290, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 291, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 292, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 293, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 294, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 295, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 296, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 297, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	AddPlayerClassEx(NO_TEAM, 298, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	return 1;
}

CreateObjects()
{
	LS_Gang_GangZone = GangZoneCreate(989.084838, -2100.489990, 2892.070068, -1087.079711);

	Desmadre_Area = CreateDynamicRectangle(1422.480224, 9.216172, 1356.759033, -50.687465, FREEROAM_VW);
	
	for(new i = 0; i != sizeof(PlayerSpawnPosition_FR_LV); i++)
	{
		PlayerSpawnPosition_Areas[i] = CreateDynamicCircle(PlayerSpawnPosition_FR_LV[i][0], PlayerSpawnPosition_FR_LV[i][1], 10.0, FREEROAM_VW);
	}
	
	
	//GANG WARS
	//GROVE STREET
	AddStaticVehicleEx_VW(GANGWAR_VW, 475, 2295.5000, -1645.5000, 14.7000, 0.0000, 86, 86, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 475, 2301.2000, -1645.6000, 14.6000, 0.0000, 86, 86, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 475, 2298.3999, -1645.6000, 14.6000, 0.0000, 86, 86, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 466, 2393.0000, -1666.9000, 13.3000, 0.0000, 86, 86, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 413, 2473.1006, -1688.0000, 13.7000, 0.0000, 86, 86, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 410, 2509.5063, -1666.7826, 12.9878, 7.5577, 86, 86, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 421, 2489.3906, -1655.9161, 13.1694, 83.7211, 86, 86, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 429, 2502.0447, -1659.3116, 13.1694, 47.6687, 86, 86, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 421, 2488.5527, -1682.5806, 13.1694, 85.0878, 86, 86, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 436, 2508.5547, -1676.2996, 13.1694, 226.2338, 86, 86, FR_VEHICLES_RESPAWN_TIME);
	CreateDynamicObject_FR(3594, 2266.19995, -1632.19995, 15.00000,   0.00000, 0.00000, 340.00000, GANGWAR_VW);
	CreateDynamicObject_FR(12957, 2286.70020, -1644.09961, 15.00000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1265, 2286.89990, -1643.59998, 15.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1224, 2266.60010, -1639.19995, 15.00000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1442, 2259.19995, -1649.90002, 15.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1442, 2279.39990, -1649.40002, 14.80000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1442, 2241.00000, -1645.00000, 15.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1441, 2260.60010, -1644.69995, 15.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1440, 2249.00000, -1645.00000, 15.00000,   0.00000, 0.00000, 60.00000, GANGWAR_VW);
	CreateDynamicObject_FR(14402, 2265.19995, -1646.80005, 15.20000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(859, 2278.39990, -1646.59998, 14.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(805, 2270.89990, -1624.50000, 15.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(805, 2291.30005, -1637.00000, 14.90000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(647, 2277.80005, -1646.19995, 16.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(3497, 2256.69995, -1645.59998, 18.40000,   0.00000, 0.00000, 172.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1712, 2276.29980, -1649.59961, 14.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1712, 2242.10010, -1645.09998, 14.50000,   0.00000, 0.00000, 343.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2837, 2243.19995, -1645.59998, 15.00000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(669, 2265.39990, -1646.50000, 14.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(669, 2301.80005, -1673.40002, 13.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2838, 2260.10010, -1649.90002, 14.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1265, 2260.50000, -1649.59998, 14.90000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1265, 2259.69995, -1649.40002, 14.90000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1299, 2290.00000, -1648.09998, 14.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1215, 2311.19995, -1644.90002, 14.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1215, 2308.60010, -1642.09998, 14.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2277.00000, -1652.80005, 14.90000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2238.60010, -1647.59998, 15.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2320.79980, -1652.79980, 13.70000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1524, 2275.10010, -1635.69995, 16.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1526, 2308.89990, -1637.40002, 15.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(3087, 2258.69995, -1670.30005, 16.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1375, 2307.69995, -1653.19995, 15.20000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(832, 2255.89990, -1621.09998, 16.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1215, 2243.39990, -1665.40002, 15.00000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1215, 2245.19995, -1665.90002, 15.00000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1216, 2314.69995, -1645.00000, 14.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1258, 2246.90039, -1662.59961, 15.10000,   0.00000, 0.00000, 166.99800, GANGWAR_VW);
	CreateDynamicObject_FR(2942, 2249.69995, -1666.90002, 15.10000,   0.00000, 0.00000, 167.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2943, 2287.00000, -1642.59998, 15.20000,   0.00000, 90.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2915, 2284.50000, -1641.59998, 15.00000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2619, 2275.10010, -1633.90002, 16.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2056, 2280.80005, -1641.09998, 16.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1437, 2317.10010, -1649.40002, 13.20000,   357.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1558, 2311.10010, -1630.09998, 14.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1558, 2310.10010, -1630.09998, 14.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1332, 2295.39990, -1627.90002, 14.80000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1219, 2308.10010, -1630.40002, 13.80000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1220, 2308.00000, -1629.69995, 14.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1265, 2307.80005, -1630.80005, 14.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1299, 2305.10010, -1630.40002, 14.00000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1344, 2303.39990, -1629.40002, 14.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1349, 2303.69995, -1630.40002, 14.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1369, 2294.60010, -1629.50000, 14.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1449, 2301.00000, -1649.00000, 14.20000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1449, 2298.50000, -1649.00000, 14.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1449, 2296.00000, -1649.00000, 14.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1346, 2294.50000, -1669.59998, 15.20000,   0.00000, 0.00000, 180.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1341, 2330.10059, -1665.09961, 13.80000,   0.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(3594, 2311.00000, -1673.50000, 13.70000,   0.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1358, 2357.00000, -1672.00000, 13.80000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(645, 2358.10010, -1680.40002, 12.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1370, 2364.89990, -1643.40002, 13.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1438, 2370.10010, -1671.80005, 12.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1777, 2359.10010, -1643.30005, 13.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2744, 2367.39990, -1647.09998, 14.60000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(850, 2376.19995, -1634.40002, 12.60000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(853, 2380.00000, -1647.19995, 12.90000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(946, 2376.00000, -1637.50000, 14.70000,   0.00000, 0.00000, 180.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2114, 2375.50000, -1637.69995, 12.60000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1712, 2371.30005, -1646.50000, 12.50000,   0.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2370, 2373.10010, -1646.19995, 12.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2370, 2374.69995, -1646.19995, 12.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2370, 2376.30005, -1646.19995, 12.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1712, 2373.10010, -1643.50000, 12.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1712, 2375.60010, -1643.50000, 12.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1712, 2378.69995, -1645.09998, 12.50000,   0.00000, 0.00000, 270.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1486, 2373.19995, -1645.90002, 13.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1486, 2373.30005, -1646.19995, 13.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1486, 2374.89990, -1646.00000, 13.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1510, 2378.60010, -1644.80005, 13.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1517, 2377.50000, -1643.59998, 13.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1520, 2377.10010, -1646.30005, 13.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1544, 2376.10010, -1645.80005, 13.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1544, 2376.60010, -1645.50000, 13.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1546, 2376.80005, -1645.80005, 13.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1546, 2375.50000, -1645.40002, 13.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1546, 2374.19995, -1645.19995, 13.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1664, 2373.10010, -1643.69995, 13.20000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1665, 2375.69995, -1646.09998, 13.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1665, 2373.89990, -1645.59998, 13.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1667, 2375.00000, -1645.59998, 13.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1667, 2374.30005, -1646.30005, 13.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1667, 2376.00000, -1645.50000, 13.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1669, 2371.50000, -1644.69995, 13.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1668, 2375.10010, -1645.59998, 13.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1481, 2370.19995, -1641.19995, 13.20000,   0.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1481, 2370.19995, -1639.69995, 13.20000,   0.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2803, 2370.30005, -1642.40002, 13.20000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2845, 2372.10010, -1642.00000, 12.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2768, 2374.39990, -1645.59998, 13.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2768, 2373.19995, -1645.30005, 13.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2768, 2377.10010, -1645.19995, 13.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2769, 2375.69995, -1643.59998, 13.00000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2814, 2376.39990, -1646.30005, 13.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2823, 2376.30005, -1645.30005, 13.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2838, 2376.19995, -1647.90002, 12.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2839, 2375.10010, -1646.40002, 13.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2840, 2373.69995, -1646.30005, 13.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2856, 2376.18457, -1647.28613, 12.30567,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(14468, 2387.80005, -1671.40002, 14.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(3593, 2420.19995, -1676.59998, 13.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(12957, 2442.50000, -1644.59998, 13.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1215, 2496.19995, -1687.59998, 13.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1215, 2494.29980, -1687.59961, 13.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1216, 2478.60010, -1687.90002, 13.20000,   0.00000, 0.00000, 180.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1258, 2477.60010, -1687.80005, 13.20000,   0.00000, 0.00000, 166.99800, GANGWAR_VW);
	CreateDynamicObject_FR(2048, 2469.39990, -1646.00000, 15.40000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2047, 2482.19995, -1649.09998, 13.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2745, 2492.80005, -1689.00000, 13.70000,   0.00000, 0.00000, 180.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2745, 2497.69995, -1689.40002, 13.70000,   0.00000, 0.00000, 180.00000, GANGWAR_VW);
	CreateDynamicObject_FR(8836, 2433.19995, -1674.80005, 14.80000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(8623, 2429.60010, -1647.50000, 13.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(3462, 2429.60010, -1647.19995, 14.00000,   0.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2773, 2423.19995, -1648.90002, 13.10000,   0.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2773, 2425.60010, -1649.40002, 13.10000,   0.00000, 0.00000, 70.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2773, 2428.10010, -1649.69995, 13.10000,   0.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2773, 2430.60010, -1649.59998, 13.10000,   0.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2773, 2433.10010, -1649.59998, 13.10000,   0.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2773, 2435.39990, -1649.00000, 13.10000,   0.00000, 0.00000, 290.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2773, 2438.19995, -1648.69995, 13.10000,   1.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(18566, 2436.00000, -1672.19995, 13.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(3364, 2426.10010, -1674.90002, 12.70000,   0.00000, 0.00000, 180.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1341, 2355.00000, -1665.50000, 13.50000,   0.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2365.60010, -1653.19995, 13.20000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2390.89990, -1652.69995, 13.20000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2412.89990, -1653.00000, 13.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2444.29980, -1652.40039, 13.00000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2469.50000, -1652.59998, 13.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2509.60010, -1672.80005, 13.00000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2114, 2533.00000, -1666.90002, 14.30000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2114, 2530.19995, -1663.50000, 18.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2114, 2534.60010, -1668.59998, 17.60000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2114, 2520.10010, -1670.40002, 18.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1760, 2500.10010, -1642.50000, 12.80000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1337, 2496.01563, -1690.47559, 14.26563,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1352, 166.30000, 123.10000, 535.90002,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2467.60010, -1670.40002, 13.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2453.69995, -1665.19995, 13.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2438.39990, -1664.59998, 13.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2419.30005, -1664.80005, 13.20000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2397.19995, -1664.30005, 13.20000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2374.80005, -1664.50000, 13.20000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2358.69995, -1664.80005, 13.20000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2325.19995, -1665.40002, 13.60000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2307.39990, -1665.30005, 14.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1211, 2270.50000, -1665.19995, 15.00000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(669, 2404.39990, -1689.30005, 12.70000,   0.00000, 0.00000, 187.67900, GANGWAR_VW);
	CreateDynamicObject_FR(669, 2454.89990, -1674.40002, 12.50000,   0.00000, 0.00000, 187.67900, GANGWAR_VW);
	CreateDynamicObject_FR(669, 2444.19995, -1720.19995, 12.80000,   0.00000, 0.00000, 187.67900, GANGWAR_VW);
	CreateDynamicObject_FR(669, 2470.50000, -1631.40002, 12.40000,   0.00000, 0.00000, 187.67900, GANGWAR_VW);
	CreateDynamicObject_FR(1558, 2489.89990, -1684.90002, 13.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1328, 2488.10010, -1685.00000, 13.00000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1328, 2505.19995, -1657.50000, 13.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2672, 2491.80005, -1652.59998, 12.70000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2674, 2503.19995, -1683.19995, 12.60000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2676, 2497.69995, -1683.19995, 12.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(13591, 2527.39990, -1713.40002, 12.90000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1426, 2465.69995, -1689.69995, 12.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(8572, 2505.89990, -1700.59998, 14.80000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1472, 2507.89990, -1699.09998, 16.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1419, 2502.80005, -1690.90002, 17.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1419, 2506.90991, -1690.90002, 17.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1419, 2509.00000, -1692.90002, 17.50000,   0.00000, 0.00000, 270.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1419, 2509.00000, -1697.00000, 17.50000,   0.00000, 0.00000, 270.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1419, 2504.89990, -1699.59998, 17.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1419, 2500.80005, -1699.59998, 17.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1215, 2508.89990, -1699.50000, 17.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1215, 2509.00000, -1690.90002, 17.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1215, 2502.00000, -1690.93005, 17.50000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2345, 2503.30005, -1699.69995, 17.60000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2345, 2505.30005, -1699.69995, 17.60000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(14806, 2502.85010, -1695.67004, 18.12389,   0.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1703, 2508.30005, -1695.40002, 17.00000,   0.00000, 0.00000, 270.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1703, 2508.30005, -1692.50000, 17.00000,   0.00000, 0.00000, 269.99500, GANGWAR_VW);
	CreateDynamicObject_FR(2080, 2506.60010, -1695.90002, 17.00000,   0.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2080, 2506.60010, -1694.00000, 17.00000,   0.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2080, 2506.60010, -1697.80005, 17.00000,   0.00000, 0.00000, 90.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2114, 2508.19995, -1697.59998, 18.10000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2114, 2506.60010, -1692.90002, 17.90000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2837, 2506.69995, -1695.30005, 17.80000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2838, 2506.60010, -1693.69995, 17.80000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2839, 2506.50000, -1697.09998, 17.80000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2840, 2506.60010, -1697.80005, 17.80000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2856, 2506.69995, -1695.80005, 17.80000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2857, 2506.89990, -1691.80005, 17.00000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2858, 2506.50000, -1694.80005, 17.80000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(2867, 2508.10010, -1691.59998, 17.00000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);
	CreateDynamicObject_FR(1549, 2507.50000, -1695.00000, 17.00000,   0.00000, 0.00000, 0.00000, GANGWAR_VW);

		
	//BALLAS
	AddStaticVehicleEx_VW(GANGWAR_VW, 492, 2657.1111, -1998.8958, 13.4294, 83.9723, 173, 172, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 496, 2654.9841, -2008.3102, 13.4294, 276.7584, 173, 172, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 507, 2648.3848, -2002.6658, 13.4294, 324.4426, 173, 172, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 516, 2685.2158, -2016.7656, 13.6644, 0.0000, 173, 172, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 492, 2685.1616, -1993.1400, 13.6644, 180.0000, 173, 172, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 492, 2694.9187, -2009.0745, 13.6644, 283.5087, 173, 172, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 490, 2689.6616, -1999.2371, 13.6644, 258.4028, 173, 172, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 429, 2645.2493, -2019.1710, 13.1562, 0.0000, 173, 172, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 483, 2645.1091, -1992.3134, 13.5560, 188.9995, 173, 172, FR_VEHICLES_RESPAWN_TIME);
	
	//POLICE
	AddStaticVehicleEx_VW(GANGWAR_VW, 596, 1554.5928000, -1615.0944000, 13.1075000, 143.0000000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 596, 1560.2781000, -1614.7255000, 13.1065000, 143.0000000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 596, 1565.3577000, -1615.1208000, 13.1006000, 143.0000000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 596, 1570.3990000, -1615.1421000, 13.1035000, 143.0000000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 596, 1575.5455000, -1615.0767000, 13.1051000, 143.0000000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 427, 1600.4679000, -1607.5685000, 13.6005000, 88.3196000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 427, 1599.9907000, -1613.6184000, 13.5959000, 89.1377000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 427, 1600.0579000, -1619.9817000, 13.5981000, 89.7130000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 427, 1599.8956000, -1626.2255000, 13.5964000, 89.2148000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 596, 1602.4196000, -1683.8865000, 5.6119000, 269.8652000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 596, 1591.4985000, -1711.0421000, 5.6128000, 0.0437000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 596, 1602.2015000, -1687.9944000, 5.6107000, 89.8454000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 596, 1602.0392000, -1692.0045000, 5.6110000, 89.1947000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 596, 1595.4047000, -1711.5936000, 5.6116000, 180.3378000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 523, 1582.1798000, -1667.0845000, 5.4650000, 240.5349000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 523, 1582.3419000, -1669.2539000, 5.4650000, 239.3729000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 523, 1582.1704000, -1671.2072000, 5.4657000, 237.9856000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 523, 1582.1514000, -1673.4630000, 5.4652000, 238.0086000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 574, 1526.7522000, -1655.7896000, 5.6158000, 270.8942000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 574, 1526.7056000, -1652.4664000, 5.6158000, 270.6263000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 574, 1526.5553000, -1642.8456000, 5.6158000, 180.3993000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 574, 1530.7841000, -1642.8046000, 5.6158000, 179.2186000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 416, 2033.1270000, -1432.2743000, 17.2845000, 180.0169000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx_VW(GANGWAR_VW, 416, 2016.3477000, -1414.9769000, 17.1412000, 86.7151000, 252, 253, FR_VEHICLES_RESPAWN_TIME);
	
	
	
	
	//GOLF CLUB y AA 2
	AddStaticVehicleEx(535, 1395.5906, 2750.1879, 10.7025, 38.4775, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 1392.3547, 2747.6164, 10.7074, 38.4782, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(495, 1389.4821, 2745.3337, 10.7073, 38.4796, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, 1383.9394, 2744.1970, 10.7013, 38.4823, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(424, 1386.6325, 2753.6855, 10.7013, 323.8958, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(468, 1378.3428, 2782.0788, 10.7376, 59.4897, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(589, 1384.1549, 2793.2180, 10.7012, 260.5330, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(434, 1398.5252, 2793.7744, 10.7013, 299.4546, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, 1391.4376, 2795.7792, 10.7246, 209.5066, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 1394.3758, 2786.3691, 10.7006, 162.7849, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 1398.4986, 2784.6853, 10.7774, 163.3020, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(555, 1407.3281, 2783.6875, 10.7438, 163.3018, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(477, 1402.2833, 2763.1437, 10.7018, 41.9208, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 1401.5327, 2760.0651, 10.7005, 36.9906, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, 1397.2464, 2758.3444, 10.7019, 32.3838, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(434, 1394.4986, 2756.6013, 10.7078, 32.3861, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(439, 1378.9064, 2752.5979, 10.7013, 349.3056, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 1372.6120, 2752.6237, 10.7014, 332.5798, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, -15.2998, 2434.2436, 16.0516, 114.5800, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(424, -53.3612, 2440.8869, 15.6657, 350.9410, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(462, -37.6418, 2466.5886, 16.1650, 319.3846, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(424, -59.6001, 2534.5710, 16.1997, 44.2639, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, -52.1452, 2556.0104, 16.8323, 270.2397, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, -23.7804, 2549.0556, 16.2595, 241.9366, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 34.0922, 2529.8420, 16.1771, 263.3015, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 69.7722, 2529.1894, 16.1903, 269.6031, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 94.6876, 2529.0175, 16.3363, 269.5758, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 117.9546, 2528.8576, 16.4970, 269.5963, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(471, 149.7341, 2528.9958, 16.4987, 269.9238, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(573, 191.4159, 2528.4328, 16.5164, 270.3974, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 60.6145, 2428.9167, 16.1616, 268.0636, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(477, -71.6117, 2467.1013, 16.1690, 227.4120, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	
	//VEHICLES FR
	AddStaticVehicleEx(402, -2098.1516, 215.5723, 35.1562, 270.1041, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, -2097.7908, 205.7555, 35.1091, 270.8468, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, -2097.2122, 199.8000, 35.0823, 271.4950, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, -2122.1338, 195.0154, 34.9043, 274.6701, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, -2121.4285, 187.7142, 34.7254, 269.1169, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, -2123.4905, 176.6359, 35.1807, 271.4106, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, -2094.6350, 173.0707, 34.8861, 358.9465, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, -2082.0601, 173.2824, 34.8858, 181.5108, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, -2106.4270, 148.3459, 35.0025, 268.9361, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, -2042.2809, 223.6092, 35.1923, 273.5409, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, -2042.7124, 212.8348, 35.8897, 87.9302, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, -2111.0986, 221.7366, 34.6697, 91.3084, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, -2111.0859, 227.9094, 34.7329, 91.7290, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 1593.1237, 1529.2070, 10.5980, 34.9971, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, 1584.2325, 1520.9388, 10.6051, 53.6172, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, 1582.6603, 1507.6042, 10.6036, 134.2160, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, -1988.1807, 275.0850, 35.0074, 88.9195, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, -1990.7628, 247.2009, 35.0033, 86.8828, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, -1977.3083, 241.1560, 35.0050, 90.9607, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(562, -1921.1187, 242.5641, 40.8786, 2.7223, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, -1929.6018, 243.2344, 40.8704, 359.9095, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, -1943.7191, 249.6200, 40.8711, 94.1017, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, -1986.2063, 303.1494, 35.0073, 89.0492, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, -1971.5696, 306.5165, 35.0036, 90.5196, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, -1987.2395, 281.1920, 34.2417, 89.0119, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, -1987.1748, 295.7163, 34.6717, 88.2793, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, -2035.3629, 301.8949, 35.0647, 270.1490, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, -2035.0166, 308.2120, 35.0503, 270.6680, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, -2023.9420, 308.3108, 35.3303, 269.3015, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, -1986.2568, 312.5038, 34.9949, 93.3643, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, -1984.0604, 319.9705, 34.9668, 93.0377, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, -2048.3147, 487.9209, 34.8170, 269.1006, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, -2048.7371, 471.7333, 34.8013, 304.9679, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, -2041.5300, 471.2991, 34.8011, 315.7610, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, -2031.6548, 458.2529, 34.8011, 0.6385, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, -2021.5493, 460.3577, 34.8013, 27.6213, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(562, -2025.6157, 484.6813, 34.8013, 129.3646, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, -2041.0291, 492.2647, 34.8187, 359.6791, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, -1964.5037, 477.7655, 34.7969, 90.7331, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, -1958.8656, 471.4545, 34.7968, 91.6364, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, -1970.4637, 460.0757, 34.7973, 180.1794, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, -2019.0874, 471.2091, 34.8011, 271.0797, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, -2019.0127, 479.7057, 34.8013, 270.9105, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, 99.5653, 2591.1895, 16.2952, 200.7166, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, -1383.3073, -478.7131, 13.8786, 209.2845, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, -1379.1753, -476.4718, 13.8808, 207.8182, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, -1376.0663, -474.8050, 13.8805, 208.0442, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, -1371.0029, -473.0124, 13.8795, 208.6483, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, -1366.4691, -470.8265, 13.8792, 210.7737, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, -1360.5472, -467.6310, 13.8800, 210.2688, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, -1354.7964, -465.6542, 13.8789, 210.1349, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, -1388.4890, -493.7458, 13.8797, 298.2731, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, -1386.2754, -500.2390, 13.8802, 299.0677, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(562, -1381.2405, -509.4214, 13.8790, 291.3394, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, -1377.7212, -517.2713, 13.8796, 296.6371, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, -1374.7859, -522.8946, 13.8791, 295.2979, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, -1331.4932, -500.8582, 13.8791, 119.3196, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, -1333.8918, -495.9497, 13.8595, 118.9914, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, -1337.9484, -486.6856, 13.8751, 116.8871, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, -1341.0641, -480.5880, 13.8804, 116.5916, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, -1336.2349, -513.8250, 13.8089, 210.2453, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, -1327.7859, -509.5666, 13.8087, 210.7676, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, -1360.9254, -526.1720, 13.8086, 207.6086, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, -1370.2930, -530.2487, 13.8072, 205.0980, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 2106.1887, 1225.0522, 10.4766, 90.4417, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 2106.2397, 1231.1855, 10.4766, 90.6628, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 2106.7881, 1238.9802, 10.4766, 91.9337, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 2101.1318, 1247.0551, 10.4766, 0.1754, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 2112.0479, 1247.2759, 10.4295, 89.1187, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 2111.6399, 1254.7599, 10.4434, 94.7143, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, 2111.2249, 1259.7904, 10.4213, 87.4701, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 2111.7180, 1267.0466, 10.3991, 93.3007, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, 2101.7126, 1273.7887, 10.4728, 180.1035, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, 2091.3745, 1274.1595, 10.4765, 180.2253, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, 2137.4202, 1235.6808, 10.4792, 299.0468, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, 293.3796, -1794.1378, 3.9692, 180.2730, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, 283.4005, -1793.4321, 3.9283, 178.1669, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, 311.6811, -1788.6719, 4.2338, 180.4732, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, 315.1623, -1788.4568, 4.2904, 180.2673, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(562, 318.4951, -1788.7673, 4.3445, 180.2677, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, 324.8108, -1788.5488, 4.4459, 178.9668, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 327.8351, -1788.6215, 4.4954, 179.6290, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 331.1017, -1788.6742, 4.5399, 180.3875, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 334.3881, -1788.4672, 4.5699, 180.6484, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 353.4841, -1809.7725, 4.1752, 2.7412, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 350.2278, -1809.6080, 4.1782, 358.8592, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 347.0215, -1809.7839, 4.1688, 359.9590, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, 343.9057, -1809.3636, 4.1792, 0.9265, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 337.3877, -1809.3833, 4.1652, 0.3803, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, 333.8918, -1809.2131, 4.1510, 0.3284, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, 327.8423, -1809.4683, 4.1395, 358.7516, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, 324.7481, -1809.1682, 4.1456, 358.9513, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, 266.0135, -1792.4985, 6.2497, 180.8441, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, 252.1271, -1793.4847, 6.2488, 179.8402, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, -2346.6030, -1610.0834, 483.3105, 235.1669, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, -2350.3511, -1615.4836, 483.3008, 228.2757, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, -2354.0759, -1624.3022, 483.3289, 261.3088, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, -2353.4341, -1631.5210, 483.3486, 265.9385, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, -2353.3870, -1638.6008, 483.3639, 290.6780, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, -2351.3259, -1643.9281, 483.3633, 296.1667, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, -2347.5913, -1650.1804, 483.3640, 300.5729, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, -2344.4470, -1657.3831, 483.3644, 301.5540, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, -2337.8994, -1664.5602, 483.2739, 324.6306, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, -2327.1104, -1596.3326, 483.4306, 232.7949, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(562, -2324.0242, -1590.6587, 483.4107, 237.1157, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, 2018.2109, 1537.2723, 10.3786, 268.8462, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 2018.9194, 1531.1251, 10.3763, 270.7070, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, 2018.5168, 1526.2729, 10.3749, 270.5674, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 2039.3928, 1526.2307, 10.3282, 178.8455, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 2039.6650, 1539.7164, 10.3282, 178.8443, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 2039.4973, 1556.1083, 10.3280, 358.3660, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 2026.4780, 1559.4673, 10.4303, 271.7841, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 2092.2957, 1575.0294, 10.4766, 92.6477, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, 2090.4309, 1562.3198, 10.4766, 271.9738, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 2093.2871, 1548.8623, 10.4766, 89.0985, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, -2447.4910, 558.6979, 22.9576, 93.6252, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, -2589.5684, 622.1517, 14.2646, 270.2007, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, -2590.0010, 627.2403, 14.2660, 270.5197, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, -2590.5469, 638.1265, 14.2608, 276.0334, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, -2572.4478, 463.6331, 14.1897, 268.7196, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, -2901.6619, 424.0158, 4.7458, 359.2501, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, -2934.7268, 459.6985, 4.7383, 268.3912, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(562, -2941.1655, 482.9949, 4.7362, 183.0493, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, -2796.9363, 205.8481, 6.8923, 270.4422, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, -2656.7136, 130.4894, 3.9732, 183.3400, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(420, -2686.0007, -22.2335, 3.9921, 181.0781, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, -2676.9287, -55.2394, 3.9923, 183.1335, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, -2663.3354, -55.4320, 3.9922, 359.4467, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, -2630.6274, -34.7458, 3.9923, 358.5490, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(578, -2483.4075, -197.0040, 26.2467, 269.5687, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(573, -2506.3308, -50.2960, 26.2516, 358.3326, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(510, -2524.1460, -32.3735, 25.2124, 100.3713, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(602, -2726.8254, -314.6226, 6.9146, 136.8662, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, -2737.4690, -324.1751, 6.9154, 126.4372, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, -2734.6406, -281.1076, 6.8492, 179.2224, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, -1706.7155, 673.8197, 24.4686, 0.9758, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, -1678.5050, 723.7098, 20.5761, 268.5159, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, -1567.0249, 752.6329, 6.7657, 1.5159, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, -1518.0238, 827.2454, 6.8456, 270.5414, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, -1506.1278, 836.2297, 6.8452, 89.1416, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, -1691.4424, 857.7677, 24.4682, 90.0900, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, -1756.5923, 944.4014, 24.5447, 226.0836, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, -1765.2969, 944.5854, 24.5458, 224.0251, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(562, -1952.8838, 724.8456, 45.1392, 79.8367, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, 1982.2217, 1268.3151, 10.4011, 89.9424, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 1844.1018, 1199.9136, 10.4940, 268.6293, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 1844.1852, 1203.1946, 10.4904, 270.9065, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 1844.1764, 1215.8457, 10.4871, 92.3897, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 1843.9510, 1225.7908, 10.4844, 270.1579, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, 1873.6708, 1458.1238, 10.3701, 270.0985, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, 1941.2876, 1718.3937, 10.4007, 269.7388, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 2245.5764, 2042.4622, 10.6520, 271.0049, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 2254.2974, 2063.4968, 10.6520, 0.1250, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, 2237.1235, 2064.6873, 10.6519, 175.1902, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(542, 2438.4617, -2107.6897, 13.2918, 358.7589, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 2447.1384, -2108.2883, 13.2918, 0.5460, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 2457.1980, -2108.4028, 13.2904, 178.8623, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(445, 2467.6299, -2116.7891, 13.2906, 2.6859, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, 2477.2102, -2117.3933, 13.2904, 359.9293, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 2001.9824, -1940.0975, 14.3743, 270.7258, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 2206.9868, -2522.4387, 14.5869, 269.8065, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 2099.6655, -2077.5313, 14.5885, 180.8334, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 2432.8206, -2109.6555, 14.5652, 359.6463, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 2500.6555, -2209.1882, 14.5620, 178.6679, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 2061.0474, -1939.7745, 13.2006, 90.2122, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, 2027.0923, -1939.9590, 13.2064, 269.6728, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, 2458.3452, -2078.2278, 13.2523, 180.9549, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(450, 2282.8433, -2351.3801, 13.2523, 224.2315, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(435, 2208.4968, -2597.3840, 13.2506, 270.0967, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(442, 2503.8308, -2268.1306, -0.6851, 271.0656, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(446, 2443.0024, -2715.0647, -0.2478, 270.5447, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 2355.9438, -2521.3450, -0.7666, 178.3984, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 2932.6929, -2057.4172, -0.7016, 269.0194, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(592, 1488.6454, -2593.2637, 14.7407, 270.0806, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 1488.3427, -2493.9607, 14.7487, 269.9044, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(519, 1823.1643, -2630.5415, 14.4654, 359.6695, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 1889.6864, -2629.3171, 14.4656, 359.4183, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(513, 1856.8051, -2411.1489, 14.1093, 197.3260, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, 1814.5001, -2437.5330, 14.0975, 239.6807, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 2050.2764, -2637.4497, 14.8787, 61.8532, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, 1941.2543, -2451.5334, 14.8658, 128.1360, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, 2124.6965, -2458.1074, 14.2599, 120.1050, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, 1984.8978, -2638.3120, 14.2599, 65.0431, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(435, 1923.2277, -2241.2700, 14.2527, 180.2805, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(466, 2052.0728, -1694.7084, 13.2964, 270.0654, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(567, 2452.3054, -1102.5942, 43.0857, 357.9726, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(542, 2327.4827, -1677.3326, 14.1673, 269.8396, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 2495.2571, -1995.9064, 13.2625, 179.2733, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 2411.0503, -1390.7070, 24.0663, 359.3449, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 2161.7957, -1172.8940, 23.5625, 90.2493, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(542, 1947.4548, -2120.5735, 13.2899, 269.9948, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 1844.4076, -1871.1821, 13.1508, 359.8899, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 2192.6365, -1465.4865, 25.3018, 270.1690, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, 2853.0518, -1330.1758, 10.8295, 279.3965, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 2399.3892, -1134.3718, 29.8696, 181.0839, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, 2373.8125, -1927.3652, 13.1202, 359.1471, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, 2025.6007, -1648.8838, 13.2912, 90.3605, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, 1921.1251, -1788.4198, 13.1127, 268.3328, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, 2822.3770, -1553.1898, 10.6504, 89.9093, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(534, 2426.5911, -1243.1105, 23.8694, 359.6307, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, 2817.3174, -1183.5714, 24.8551, 270.9797, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(576, 2271.0046, -1032.8309, 51.4856, 136.4009, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, 2475.3682, -1526.3867, 23.6049, 359.2925, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(566, 2196.5745, -1283.0890, 24.1231, 179.5897, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, 2052.5330, -1904.4730, 13.3282, 179.1011, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(562, 2390.1199, -1718.7175, 13.3790, 179.2825, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, 2229.7876, -1363.0439, 23.8577, 90.2294, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 2805.7119, -1428.5934, 16.1224, 178.4703, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 2350.7051, -2000.0120, 13.2338, 359.9185, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 2454.1021, -1014.1890, 59.6425, 176.1889, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 2489.2539, -1953.6476, 13.0816, 1.0010, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 2694.3064, -1119.9226, 69.2362, 180.5238, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 2164.1445, -1793.6271, 13.0189, 180.5116, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, 2256.8760, -1939.6943, 13.2044, 89.4820, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 1964.9985, -1719.2476, 15.7505, 359.4735, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, 1999.4695, -1275.2704, 23.6021, 180.5423, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, 1879.1167, -2020.9791, 13.1724, 180.6543, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, 2613.1377, -2380.0427, 13.4068, 179.5431, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, 1947.1716, -1991.0991, 13.0587, 271.1580, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, 2130.0039, -1595.3577, 13.8617, 161.5534, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, 2542.6423, -1354.5869, 30.1054, 178.9754, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, 2508.5757, -1773.3990, 13.0594, 266.9215, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(562, 2804.7268, -1252.8588, 46.4658, 142.1307, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, 2023.4795, -962.4792, 39.2699, 21.0140, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 2037.2390, -1423.4762, 17.1416, 180.3667, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 1179.3715, -1338.9187, 13.9725, 271.0954, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 1130.0643, -1689.4120, 13.3153, 180.3318, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 1040.7117, -1056.4841, 31.4088, 1.2718, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 1657.6219, -1089.1050, 23.6119, 270.4426, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 1012.6143, -1461.4174, 13.2568, 0.3901, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, 981.2479, -1306.9004, 13.3182, 269.4426, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 1098.7172, -1763.8140, 13.2781, 89.8239, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, 782.0196, -1612.4509, 12.9532, 270.1972, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, 1183.8922, -1263.9352, 14.7461, 181.1518, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, 1279.5542, -1667.3218, 13.1171, 179.6212, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, 1712.7981, -1005.5743, 23.4843, 171.1206, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, 1464.1157, -903.3469, 54.5425, 0.0953, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, 1517.6372, -694.6029, 94.4771, 89.4996, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, 1193.0533, -1020.2946, 32.2740, 186.7821, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(562, 1100.1062, -820.5209, 86.5702, 115.0450, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, 1640.6359, -1281.9531, 14.4353, 256.6248, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 1231.4021, -1020.1202, 32.3558, 187.0757, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 826.6736, -1545.4895, 13.3071, 270.2256, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 1503.8798, -1321.1948, 13.9002, 0.7865, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 1108.3026, -1024.7616, 31.6530, 181.6333, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 1001.4642, -1105.2848, 23.6533, 91.1393, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 1658.9725, -1695.1852, 20.2898, 180.1059, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, 2010.6484, -2203.4685, 13.3786, 0.4120, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 2102.4797, -1273.2668, 25.3218, 179.2833, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, 1749.3578, -1858.4083, 13.5473, 270.0417, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, 2676.8569, -1673.6639, 9.5299, 179.6113, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, 1401.4670, -2347.9583, 13.3526, 359.3793, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, 957.8749, -1449.3049, 13.3096, 271.0958, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, 1401.4198, -2225.3242, 13.1763, 179.6696, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, 1691.5933, -2250.2534, 13.1612, 90.2945, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, 1674.1932, -2322.7227, 13.1630, 269.8391, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(562, 977.2274, -1847.8711, 12.4171, 88.1356, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, 741.0170, -1866.4719, 4.8683, 240.8761, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 1015.7095, -1354.9799, 13.0935, 90.0699, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 1245.8824, -2022.2595, 60.2011, 269.7729, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 1273.3865, -2010.0261, 59.4094, 180.2513, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 2116.2781, -1822.6934, 13.1571, 270.2033, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 2124.0410, -1795.8849, 13.1502, 0.1300, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 2116.8557, -1783.0336, 13.0587, 359.6252, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, 2706.6162, -1843.0298, 9.1662, 158.7779, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 2398.7065, -1545.8726, 23.6661, 270.0880, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, 1358.4578, -1752.2974, 13.4604, 90.1414, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, 1468.4294, -1232.5582, 13.7444, 89.0040, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, 2236.3997, -1637.8600, 15.1748, 159.7275, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, 2633.3040, -1221.5355, 49.6119, 358.8300, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, 2177.1533, -993.3595, 62.5770, 167.8490, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, 2098.6597, -1359.5281, 23.5625, 270.9590, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, 1214.8021, -1470.3621, 13.1436, 90.1879, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(562, 1946.7832, -1364.9180, 18.0948, 124.3683, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, 1883.9183, -1369.9069, 13.0857, 138.9769, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 1915.8243, -1437.6688, 13.0706, 230.1378, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 1696.4769, -1508.5443, 13.1852, 359.2828, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 1627.3304, -1038.1265, 23.7035, 359.3652, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 1910.5804, -1115.8199, 25.4690, 179.9177, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 1775.8020, -1896.7933, 13.2893, 180.6083, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 2861.8750, -1951.5374, 10.9619, 0.4270, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, 2174.1794, -2266.8301, 13.8141, 225.1139, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 2506.7410, -2627.9053, 14.0830, 89.6795, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(455, 2515.9543, -2355.0374, 14.0669, 226.4995, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, 1279.7465, -1815.5831, 13.3775, 90.2054, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, 1951.4786, -1563.3632, 13.6084, 134.7018, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, 2534.2007, -1474.1321, 23.9917, 269.1452, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, 1425.6019, -1313.0128, 13.1256, 359.1056, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, 2819.5659, -1454.4861, 39.6325, 89.2029, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, 1560.6329, -2321.9302, 13.1249, 268.9026, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, 1544.0109, -1351.2589, 330.0924, 0.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(562, 1631.1934, -1048.1313, 24.5838, -1.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, 1653.9323, -1047.0758, 24.5838, -1.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 1974.5653, -824.5998, 132.7968, 0.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 2135.1533, -1139.0533, 25.1763, 0.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 2119.0161, -1138.1858, 25.1763, 0.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 2061.8889, -1368.9360, 23.7899, 0.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 2161.3406, -1557.9351, 2.2468, 67.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 2005.1763, -1895.3555, 7.9477, 0.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, 2133.9961, -2091.7380, 13.4634, 135.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, 2119.1133, -2077.7983, 13.4634, 135.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(502, 2303.9331, -2426.0620, 1.1109, -42.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, 2317.6997, -2411.0603, 1.1109, -42.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, 2572.6306, -2002.3179, 3.7983, 0.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, 2922.5388, -1903.8240, 3.7951, 90.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, 2914.1919, -1672.1815, 0.9994, -16.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, 2918.8586, -1657.7645, 0.9994, -16.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, 2943.5769, -1420.9318, 10.6158, 90.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(562, 2942.8923, -1406.9263, 10.6158, 90.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(581, 2737.1606, -1759.7706, 44.9336, 0.0000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, -1836.9528, -111.6619, 5.2242, 91.0337, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(400, -1972.1176, -69.9921, 26.6610, 102.4574, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(401, -2025.8453, -286.7577, 35.0867, 90.0116, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, -2224.8848, -304.9352, 35.1762, 9.1462, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(404, -2273.3022, -126.3816, 34.9761, 269.1254, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(405, -2324.4456, -124.2783, 34.9688, 174.1493, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(410, -2352.3489, -125.9144, 34.9686, 358.8382, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, -2265.8489, 148.3154, 34.8186, 276.8785, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(412, -2265.7900, 133.4583, 34.8281, 88.4277, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(413, -2162.6492, 212.7678, 34.8984, 270.6820, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, -2102.4453, 392.1134, 34.8282, 280.9677, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(419, -2180.7793, 503.2542, 34.7476, 95.0880, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(421, -2351.3728, 512.9484, 28.8692, 84.9495, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, -2421.2944, 742.2791, 34.6718, 359.1454, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(426, -2597.1311, 727.4150, 28.3001, 299.0332, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, -2792.0249, 792.4202, 49.0002, 9.5405, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(436, -2850.0894, 940.5141, 43.7110, 321.2881, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(439, -2899.7295, 1161.4260, 13.1223, 91.8671, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(445, -2436.2446, 1195.5724, 34.7507, 241.8706, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, -1943.6328, 1193.8219, 45.0461, 346.6231, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, -1784.3719, 1206.0319, 24.7812, 50.7928, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(475, -1558.3634, 1215.7561, 6.8407, 126.6148, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, -2274.2695, 1053.3733, 82.8071, 174.6811, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(401, -2278.4082, 916.2686, 66.2348, 87.9557, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, -2724.0881, 519.7319, 9.2518, 245.9549, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, -2721.3076, 342.2946, 3.9838, 102.9804, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(404, -2678.5129, 234.6594, 3.9027, 261.7227, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(421, -2498.1824, 152.7941, 6.7124, 295.7857, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(520, -1906.4412, 1001.0737, 36.8070, 4.1870, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	
	//DRIFT1
	AddStaticVehicleEx(429, -307.8628, 1542.5423, 75.2967, 201.1046, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, -328.5316, 1542.7492, 75.2967, 184.9427, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(545, -316.9040, 1513.9951, 75.0854, 348.4412, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(439, -319.9396, 1515.2641, 75.0850, 359.6909, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, -322.6058, 1515.2784, 75.0905, 359.6903, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(462, -325.8627, 1515.2961, 75.0906, 359.6903, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(494, -328.9320, 1515.3126, 75.0902, 359.6909, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, -332.3140, 1515.3308, 75.0900, 359.6903, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, -335.3035, 1515.3470, 75.0904, 359.6909, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(522, -338.7950, 1515.3660, 75.0903, 359.6903, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(545, -341.9625, 1515.3831, 75.0903, 359.6903, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, -345.0892, 1515.4000, 75.0902, 359.6909, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(589, -290.8278, 1520.9116, 75.0864, 109.7810, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(522, -293.2085, 1525.1801, 75.0864, 132.6592, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(555, -441.3944, 1421.4664, 32.6397, 13.7091, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(462, -454.1489, 1505.3352, 35.6874, 3.4832, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, -454.5901, 1512.5831, 36.0080, 3.4839, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(434, -455.0673, 1520.2188, 36.3677, 3.5750, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(555, -455.5418, 1527.7974, 36.7391, 3.5747, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(462, -456.5578, 1536.8192, 36.8780, 11.2472, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, -442.0812, 1517.0002, 34.7126, 3.2703, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, -441.2281, 1508.7656, 34.4096, 8.0127, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(522, -440.2153, 1499.7541, 34.1019, 4.3601, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	
	//L6
	AddStaticVehicleEx(429, -2066.5981, 1422.6842, 6.8286, 50.6713, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, -2066.9145, 1418.1195, 6.8336, 50.6713, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(434, -2067.5158, 1413.8193, 6.8340, 50.6713, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, -2066.1811, 1409.3819, 6.8335, 50.6713, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(468, -2066.0515, 1405.4748, 6.8339, 50.6713, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, -2065.9929, 1401.6379, 6.8340, 50.6713, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(468, -2066.0781, 1398.7753, 6.8336, 50.6713, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(573, -2067.6259, 1396.8912, 6.8517, 50.8765, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(462, -2066.7932, 1391.3253, 6.9716, 50.3510, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(439, -2067.3168, 1387.4017, 7.1574, 50.3510, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(462, -2066.6625, 1381.3546, 7.3787, 50.3510, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, -2065.4990, 1375.9200, 7.5521, 50.3510, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, -2065.2846, 1372.1048, 7.7006, 50.3510, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(555, -2089.8459, 1416.6578, 6.8277, 340.9186, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(439, -2089.9848, 1410.4876, 6.8351, 340.9188, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, -2089.2055, 1404.4373, 6.8267, 339.3698, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, -2089.8051, 1396.9815, 6.8333, 336.8249, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(545, -2089.6262, 1390.2791, 6.7970, 336.7745, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(560, -2090.2119, 1385.1496, 6.8254, 336.7745, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(471, -2092.5485, 1430.1485, 6.8286, 209.7273, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, -2066.4873, 1429.6301, 6.8277, 139.8634, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(439, -2061.6984, 1329.3123, 6.8831, 42.1221, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, -2084.5942, 1334.4197, 6.8379, 68.7329, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, -2090.5351, 1336.7322, 6.8431, 68.7332, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(462, -2097.8405, 1338.5620, 6.8420, 83.0422, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(555, -2102.9389, 1339.1882, 6.9730, 83.0111, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(568, -2109.7189, 1340.0228, 6.8378, 82.9944, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, -2116.8459, 1340.7780, 6.8418, 85.5618, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	
	//L8
	AddStaticVehicleEx(477, -2757.6611, 570.6666, 14.2418, 109.0498, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, -2755.0102, 559.8764, 14.2025, 57.1276, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(555, -2751.6687, 561.8966, 14.1255, 66.5614, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, -2752.0627, 569.8317, 14.1268, 124.2140, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	
	//L9
	AddStaticVehicleEx(589, -2838.6645, 1303.1833, 6.8286, 330.7233, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(573, -2837.0871, 1302.2989, 6.8337, 330.7233, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(495, -2833.8928, 1300.5081, 6.8341, 330.7233, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, -2830.6491, 1298.6893, 6.8340, 330.7233, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(480, -2827.7297, 1297.0527, 6.8336, 330.7233, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(545, -2819.8291, 1313.3199, 6.8286, 70.9990, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, -2813.5722, 1311.2855, 6.6019, 70.9447, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(471, -2785.1887, 1306.9904, 6.6833, 93.3519, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(480, -2763.4545, 1300.7314, 6.0105, 91.6970, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, -2802.4497, 1317.5675, 6.8287, 79.6599, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(439, -2812.1577, 1317.7747, 6.8286, 94.0975, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, -2804.3974, 1313.3041, 6.8286, 83.4774, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(589, -2806.3222, 1310.8322, 6.8286, 78.5809, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(480, -2803.3676, 1306.5915, 6.8286, 69.2545, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(439, -2811.3061, 1306.6392, 6.8258, 58.1812, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, -2823.0405, 1295.0528, 6.8286, 10.9630, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, -2819.8239, 1295.5958, 6.8286, 21.6886, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(568, -2815.5705, 1297.8162, 6.8286, 45.0032, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(434, -2812.8623, 1300.1979, 6.8279, 65.2047, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(506, -2809.3251, 1302.3133, 6.8265, 69.6383, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);

	//LVA
	AddStaticVehicleEx(402, 1618.7729, 1213.5313, 10.5358, 158.4093, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(424, 1615.0280, 1213.8352, 10.5432, 158.4093, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(568, 1611.1474, 1213.8112, 10.5414, 158.4093, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(477, 1607.6643, 1215.1892, 10.5469, 158.4094, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(468, 1603.1009, 1214.5268, 10.5464, 158.4093, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(462, 1599.8603, 1214.8568, 10.5483, 158.4093, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(424, 1596.9508, 1214.9890, 10.5504, 158.4093, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(439, 1593.0249, 1214.3138, 10.5549, 158.4094, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, 1588.8900, 1215.0954, 10.5566, 158.4093, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 1567.5584, 1176.2333, 10.5395, 327.1697, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, 1562.0357, 1180.3355, 10.5395, 313.9690, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(555, 1559.6707, 1184.5612, 10.5396, 301.4338, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 1555.4329, 1188.7897, 10.5395, 294.7940, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(545, 1552.3082, 1193.5206, 10.5395, 289.4160, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, 1549.4709, 1196.1475, 10.5395, 285.7009, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 1548.5769, 1200.1851, 10.5394, 275.6408, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(522, 1548.1566, 1204.4385, 10.5449, 275.6408, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(589, 1547.8441, 1207.5994, 10.5500, 275.6408, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 1547.1763, 1211.3616, 10.5395, 267.5086, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(480, 1547.3461, 1215.2652, 10.5451, 267.5086, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(468, 1582.1688, 1168.5598, 10.5346, 355.5822, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(424, 1326.6402, 1279.2368, 10.5294, 355.6743, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 1322.5122, 1279.5493, 10.5365, 355.6743, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, 1317.8449, 1279.9022, 10.5360, 355.6743, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(589, 1314.3352, 1280.1673, 10.5356, 355.6743, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, 1310.2218, 1279.3135, 10.5371, 355.6743, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(424, 1306.8612, 1279.1905, 10.5371, 355.6743, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(555, 1294.9548, 1341.8745, 10.5474, 279.2713, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(477, 1303.5577, 1379.1176, 10.5515, 279.2713, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(573, 1334.3531, 1512.5926, 10.5473, 255.5801, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(468, 1333.2716, 1508.4505, 10.5498, 255.5800, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 1332.6890, 1506.1837, 10.5483, 255.5800, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 1331.7120, 1502.3845, 10.5464, 255.5800, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(568, 1330.7110, 1498.4914, 10.5436, 255.5800, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 1329.8388, 1495.1003, 10.5424, 255.5800, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(439, 1329.0081, 1491.8696, 10.5392, 255.5800, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(535, 1328.1104, 1488.3771, 10.5376, 255.5800, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(555, 1327.2120, 1484.8839, 10.5348, 255.5800, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, 1326.3677, 1481.6007, 10.5327, 255.5800, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	
	//SFA
    AddStaticVehicleEx(506, -1150.8391, -173.4885, 13.8755, 97.8374, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(424, -1153.4010, -170.4837, 13.8805, 97.8374, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(402, -1156.3504, -168.0069, 13.8794, 97.8375, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(522, -1158.7487, -164.8582, 13.8804, 97.8374, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(461, -1161.2136, -161.9173, 13.8802, 97.8374, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(494, -1162.2440, -159.6660, 13.8807, 97.8374, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(568, -1164.3585, -156.8044, 13.8802, 97.8389, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(439, -1167.8159, -154.4274, 13.8801, 97.8374, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(506, -1169.4919, -151.6082, 13.8795, 97.8374, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(402, -1171.7321, -148.2653, 13.8800, 97.8374, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(573, -1139.5535, -224.8344, 13.8755, 90.4133, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(462, -1139.5827, -219.9969, 13.8790, 90.4130, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(535, -1139.6101, -216.2013, 13.8773, 90.4130, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(589, -1139.4979, -231.8168, 13.8840, 90.4130, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(522, -1139.4622, -236.7476, 13.8810, 90.4130, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(568, -1139.4298, -241.2819, 13.8831, 90.4130, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(521, -1139.4061, -244.5996, 13.8894, 90.4130, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(559, -1139.3857, -247.4689, 13.8860, 90.4130, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(411, -1139.3592, -251.1296, 13.8930, 90.4130, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(462, -1139.3255, -255.7943, 13.8898, 90.4130, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(568, -1139.2982, -259.6343, 13.8916, 90.4130, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(461, -1139.2753, -262.7738, 13.8930, 90.4130, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(589, -1238.0020, -273.3041, 13.8755, 306.7388, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(522, -1247.9506, -280.0147, 13.8755, 301.1188, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(439, -1256.9006, -285.3996, 13.8755, 301.0375, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(471, -1249.7451, -271.2565, 13.8755, 329.2003, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(560, -1238.0208, -288.9704, 13.8755, 146.5828, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(439, -1251.6500, -333.0588, 13.8755, 201.8763, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(471, -1316.9462, -521.5158, 13.8754, 157.3120, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(506, -1424.9464, -607.8837, 13.8755, 124.0708, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(521, -1477.2451, -615.2930, 13.8754, 75.1654, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(411, -1530.9752, -585.1108, 13.9675, 42.4873, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(589, -1668.9638, -381.9460, 13.8795, 304.6305, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(402, -1618.2767, -210.4531, 13.8755, 358.4474, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(603, -1596.1632, -162.2540, 14.2739, 316.5501, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(477, -1487.7423, -51.3465, 14.2679, 327.4299, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(480, -1307.2504, 77.4085, 13.8755, 286.1062, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(495, -1138.0960, 332.7091, 13.9266, 317.2616, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(541, -1106.2633, 363.1189, 13.8718, 310.9473, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
    AddStaticVehicleEx(555, -1095.0090, 374.0053, 13.8718, 315.4024, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);

	//KARAOKE
	CreateDynamicObject_FR(16088, 1874.56995, -1386.22998, 13.09000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(16088, 1874.56995, -1392.04004, 13.09000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(10244, 1865.77002, -1384.73999, 10.35000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(974, 1879.02002, -1391.25000, 11.03000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(974, 1879.02002, -1388.51001, 13.80000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(974, 1872.35999, -1391.25000, 11.03000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(974, 1872.35999, -1388.51001, 13.80000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(974, 1870.45996, -1391.25000, 11.03000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(974, 1870.45996, -1388.51001, 13.80000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3851, 1874.18994, -1386.02002, 18.03000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, 1874.18994, -1386.02002, 15.77000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, 1876.46997, -1389.10999, 21.20000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(3851, 1874.82996, -1386.02002, 18.03000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18648, 1873.59998, -1386.18994, 17.27000,   113.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18092, 1874.41003, -1390.32996, 14.20000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(14820, 1875.43994, -1390.44995, 14.79000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(1841, 1876.27002, -1390.81006, 13.88000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1841, 1872.56006, -1390.83997, 13.88000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(2229, 1880.41003, -1389.98999, 13.88000,   0.00000, 0.00000, -33.00000);
	CreateDynamicObject_FR(2232, 1868.67004, -1392.92004, 19.06000,   25.00000, 0.00000, 33.00000);
	CreateDynamicObject_FR(2229, 1869.28003, -1390.35999, 13.88000,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject_FR(2229, 1880.30005, -1390.81006, 13.88000,   0.00000, 0.00000, -33.00000);
	CreateDynamicObject_FR(2229, 1869.51001, -1389.66003, 13.88000,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject_FR(2229, 1879.62000, -1392.63000, 21.22000,   25.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2232, 1880.35999, -1392.69995, 19.14000,   25.00000, 0.00000, -33.00000);
	CreateDynamicObject_FR(2229, 1878.10999, -1392.58997, 21.22000,   25.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2229, 1878.54004, -1392.59998, 21.22000,   25.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2229, 1879.07996, -1392.60999, 21.22000,   25.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2229, 1872.23999, -1392.43994, 21.22000,   25.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2229, 1871.62000, -1392.43005, 21.22000,   25.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2229, 1871.01001, -1392.41003, 21.22000,   25.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2229, 1870.50000, -1392.40002, 21.22000,   25.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18648, 1874.77002, -1386.18994, 18.08000,   178.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18648, 1874.47949, -1386.18994, 17.27000,   178.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18648, 1875.71997, -1386.18994, 17.27000,   113.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18648, 1876.90002, -1386.18994, 18.08000,   178.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18648, 1876.78003, -1386.18994, 17.66000,   161.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18648, 1876.73999, -1386.18994, 16.95000,   -161.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18646, 1874.68005, -1390.85999, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1873.70996, -1390.83997, 13.99000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1873.60999, -1390.84998, 14.00000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1873.51001, -1390.84998, 14.21000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1873.50000, -1390.84998, 14.20000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1873.50000, -1390.84998, 14.00000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.04004, -1390.81995, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.67004, -1390.83997, 14.31000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.67004, -1390.83997, 14.09000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1873.60999, -1390.84998, 14.21000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1873.70996, -1390.83997, 14.21000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.67004, -1390.83997, 14.21000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.67004, -1390.84998, 13.98000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1873.81006, -1390.83997, 14.31000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1873.81006, -1390.83997, 14.21000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1873.50000, -1390.84998, 14.10000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1873.81006, -1390.83997, 13.99000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.38000, -1390.81995, 13.99000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1873.51001, -1390.84998, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1873.60999, -1390.84998, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1873.70996, -1390.83997, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1873.81006, -1390.83997, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.56006, -1390.84998, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.35999, -1390.82996, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.83997, -1390.81006, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.04004, -1390.81995, 14.31000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.04004, -1390.81995, 14.21000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.05005, -1390.81995, 14.09000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1875.18005, -1390.80005, 13.98000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1875.18005, -1390.79004, 14.09000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.97998, -1390.79004, 14.21000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1875.18005, -1390.81006, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1875.06995, -1390.80005, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.95996, -1390.81006, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.04004, -1390.83997, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.15002, -1390.83997, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.25000, -1390.83997, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.35999, -1390.83997, 14.41000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.35999, -1390.83997, 14.31000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.37000, -1390.81995, 14.21000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.37000, -1390.81995, 14.09000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.35999, -1390.82996, 13.98000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.25000, -1390.83997, 13.99000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.15002, -1390.83997, 13.99000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1874.05005, -1390.81995, 13.99000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1875.18005, -1390.79004, 14.21000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18646, 1875.07996, -1390.79004, 14.21000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(3850, 1869.33997, -1406.39001, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3850, 1869.33997, -1403.70996, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3850, 1879.56006, -1406.39001, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3850, 1879.56006, -1402.91003, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3850, 1879.56006, -1399.51001, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3850, 1879.56006, -1396.08997, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3850, 1877.93005, -1394.34998, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3850, 1874.51001, -1394.34998, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3850, 1871.06006, -1394.34998, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3850, 1879.53003, -1409.39001, 13.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3850, 1881.19995, -1407.67004, 13.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.12000, -1387.18005, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1870.12000, -1392.80005, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(19419, 1875.72998, -1391.19995, 13.10000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19420, 1877.29004, -1391.19995, 13.10000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19420, 1873.35999, -1391.20996, 13.10000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19419, 1871.75000, -1391.20996, 13.10000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19447, 1875.93005, -1385.47998, 14.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19447, 1873.55005, -1385.47998, 14.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19447, 1862.71997, -1380.66003, 14.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19447, 1867.45996, -1375.92004, 14.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19447, 1864.46997, -1380.69995, 16.14000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(19447, 1867.98999, -1380.69995, 16.14000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(19447, 1871.46997, -1380.69995, 16.14000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(19447, 1875.00000, -1380.66003, 16.14000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(919, 1865.33997, -1385.29004, 16.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(919, 1864.35999, -1385.29004, 16.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(919, 1863.27002, -1385.29004, 16.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18653, 1879.29724, -1391.16394, 12.11000,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject_FR(19435, 1868.14746, -1385.39807, 14.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19348, 1874.40002, -1389.96997, 14.94000,   180.00000, -45.00000, 90.00000);
	CreateDynamicObject_FR(19435, 1866.67004, -1385.27002, 14.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1502, 1865.78003, -1385.20996, 12.96000,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject_FR(19435, 1863.44995, -1385.27002, 14.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19435, 1864.46997, -1385.29004, 16.26000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19435, 1866.53003, -1385.27002, 14.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19435, 1882.26001, -1390.71997, 13.05000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19435, 1882.26001, -1387.26001, 13.05000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3851, 1874.82996, -1386.02002, 15.77000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, 1882.05005, -1389.10999, 15.56000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3851, 1872.34998, -1389.10999, 21.20000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(1649, 1866.90002, -1389.29004, 18.44000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1649, 1866.83997, -1389.29004, 19.56000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1649, 1866.90002, -1389.29004, 18.44000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1649, 1866.83997, -1389.29004, 19.56000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(2224, 1873.75000, -1391.82996, 12.23000,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject_FR(18653, 1869.97400, -1391.07922, 12.11000,   0.00000, 0.00000, 120.00000);
	CreateDynamicObject_FR(18654, 1868.57996, -1392.77002, 14.56000,   0.00000, 0.00000, 120.00000);
	CreateDynamicObject_FR(18654, 1880.57996, -1392.73999, 14.56000,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject_FR(18655, 1877.75000, -1411.96997, 11.99000,   0.00000, 0.00000, -55.00000);
	CreateDynamicObject_FR(18655, 1869.22998, -1411.92004, 11.99000,   0.00000, 0.00000, -120.00000);
	CreateDynamicObject_FR(19128, 1873.01001, -1396.30005, 12.54000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19128, 1876.93005, -1396.29004, 12.54000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19128, 1873.03003, -1400.18994, 12.54000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19128, 1876.93005, -1400.18994, 12.54000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(16151, 1868.68005, -1397.98999, 12.81000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19435, 1867.60999, -1400.91003, 13.18000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19435, 1867.60999, -1399.31995, 13.18000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19435, 1867.60999, -1397.73999, 13.18000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19435, 1867.60999, -1394.73999, 13.18000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1574, 1866.93005, -1394.81995, 12.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19435, 1861.84998, -1387.17004, 14.13000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19435, 1862.25000, -1385.72998, 14.13000,   0.00000, 0.00000, -32.00000);
	CreateDynamicObject_FR(19435, 1861.84998, -1388.63000, 14.13000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19435, 1861.84998, -1390.18994, 14.13000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19435, 1880.66003, -1384.76001, 14.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19447, 1875.78003, -1375.92004, 14.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19435, 1880.66003, -1383.16003, 14.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19391, 1880.66003, -1380.80005, 14.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1502, 1880.71997, -1381.54004, 12.53000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19435, 1880.66003, -1378.41003, 14.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19435, 1880.66003, -1376.85999, 14.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19435, 1880.65002, -1376.64001, 14.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1584, 1880.67004, -1382.35999, 13.31000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1583, 1880.68994, -1379.31006, 13.31000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1597, 1884.06006, -1387.81995, 15.15000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1597, 1889.01001, -1380.75000, 15.15000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1597, 1884.06006, -1380.75000, 15.15000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1597, 1889.01001, -1387.81995, 15.15000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1649, 1886.52002, -1390.45996, 12.69000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1649, 1886.52002, -1387.18005, 12.69000,   -90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1649, 1886.52002, -1383.93994, 12.69000,   -90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1649, 1886.52002, -1380.66003, 12.69000,   -90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1653, 1877.18994, -1375.92004, 13.27000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(14820, 1872.22998, -1376.66003, 13.41000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1737, 1871.70996, -1376.73999, 12.51000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1741, 1865.31995, -1383.89001, 12.33000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1741, 1862.62000, -1383.89001, 14.98000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1741, 1867.34998, -1384.90002, 12.43000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1741, 1867.34998, -1384.90002, 14.97000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1741, 1865.31995, -1383.89001, 14.98000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1741, 1864.80005, -1384.90002, 12.43000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1741, 1864.80005, -1384.90002, 13.36000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1741, 1862.62000, -1383.89001, 12.43000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1741, 1865.31995, -1383.89001, 13.36000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1741, 1867.34998, -1384.90002, 13.36000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1741, 1865.31995, -1383.89001, 14.37000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1741, 1867.34998, -1384.90002, 14.47000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1741, 1862.62000, -1383.89001, 13.36000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1741, 1862.62000, -1383.89001, 14.47000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1741, 1864.80005, -1384.90002, 14.47000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1741, 1864.80005, -1384.90002, 14.98000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1741, 1864.45996, -1385.06006, 14.97000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1741, 1865.44995, -1382.83997, 14.97000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19447, 1878.46997, -1380.66003, 16.14000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(19447, 1879.01001, -1380.66003, 16.14000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(1527, 1875.77002, -1375.81006, 14.17000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1585, 1874.09998, -1375.84998, 13.35000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(1584, 1877.47998, -1375.88000, 13.35000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(1446, 1889.15002, -1373.47998, 13.26000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1446, 1886.81995, -1371.08997, 13.26000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1446, 1882.14001, -1371.09998, 13.26000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1439, 1867.07996, -1400.75000, 12.65000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1439, 1866.98999, -1398.01001, 12.65000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1649, 1886.52002, -1377.43994, 12.69000,   -90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1879.41003, -1392.94995, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.13000, -1390.92004, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.06006, -1390.72998, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.25000, -1390.42004, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.26001, -1390.52002, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.12000, -1390.02002, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.10999, -1389.60999, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.07996, -1388.80005, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.06995, -1388.59998, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.15002, -1388.08997, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.13000, -1387.39001, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.13000, -1387.58997, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.08997, -1389.19995, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.10999, -1389.81995, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.09998, -1389.41003, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.08997, -1389.00000, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.16003, -1388.29004, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.15002, -1387.89001, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.14001, -1387.68994, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18643, 1882.23999, -1390.12000, 21.36000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18646, 1875.18005, -1390.81006, 14.31000,   90.00000, 0.00000, 0.32000);
	CreateDynamicObject_FR(18648, 1872.27002, -1386.18994, 18.08000,   178.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18648, 1872.23999, -1386.18994, 17.58110,   -154.50000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18648, 1872.23999, -1386.18994, 16.74380,   154.50000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19609, 1874.61536, -1387.41553, 13.79732,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19608, 1874.58801, -1389.02502, 21.40546,   180.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19608, 1873.45911, -1410.32495, 12.39076,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19893, 1874.03394, -1390.51758, 14.70578,   0.00000, 0.00000, 164.54701);
	CreateDynamicObject_FR(19786, 1871.95654, -1385.20764, 14.68577,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19128, 1872.18408, -1382.84534, 12.54442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19317, 1874.94507, -1385.13611, 13.28868,   -17.00000, 0.00000, 177.04739);
	CreateDynamicObject_FR(19611, 1872.05444, -1382.18665, 12.64303,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19610, 1872.05444, -1382.18665, 14.29222,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19609, 1872.08960, -1379.36938, 12.48566,   0.00000, 0.00000, 0.00000);



	//INTROSPAWN LSR
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, 0.00000, 0.00000, 2500.00000,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -0.78600, 0.00000, 2500.00000,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -1.32700, 0.00000, 2500.00000,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -0.78600, 0.00000, 2501.04297,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -1.32700, 0.00000, 2501.04297,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -0.78600, 0.00000, 2498.95972,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -1.32700, 0.00000, 2498.95972,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, 0.00000, 0.00000, 2501.27197,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, 1.21400, 0.00000, 2501.04297,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, 1.21400, 0.00000, 2500.00000,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, 1.21400, 0.00000, 2498.95972,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, 1.98600, 0.00000, 2501.27197,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, 2.78800, 0.00000, 2501.04297,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, 1.98600, 0.00000, 2500.00000,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, 2.78800, 0.0, 2500.27856,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, 1.82600, 0.0, 2499.41162,   0.00000, 40.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, 2.34600, 0.00000, 2498.97559,   0.00000, 40.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, 0.00000, 0.00000, 2501.27197,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -2.50000, 0.00000, 2501.27197,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -3.54400, 0.00000, 2501.27197,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -3.78900, 0.0000, 2500.6118,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -3.24800, 0.0, 2500.50391,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -3.54400, 0.00000, 2499.94775,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -2.50000, 0.00000, 2499.94775,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -2.24000, 0.0, 2499.17969,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -2.78000, 0.0, 2499.17969,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -2.50000, 0.00000, 2498.68848,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -3.54400, 0.00000, 2498.68848,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, -4.59000, 0.00000, 2498.68848,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, 3.08000, 0.0, 2498.68848,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(2661, 4.12400, 0.0, 2498.68848,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent");
	//SetDynamicObjectMaterial(CreateDynamicObject_FR(18981, 0.00000, 0.00000, 2498.22827,   0.00000, 90.00000, 0.00000), 0, 0, "a", "a");
	/*CreateDynamicObject_FR(19128, 3.85520, 0.17380, 2500.08618,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, -0.14480, 0.17380, 2500.08618,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, -4.14480, 0.17380, 2500.08618,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18711, 0.000000, 23.262195, 2513.724121, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(18728, 0.159998, 0.972199, 2499.451416, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(18728, -0.599999, 2.332215, 2497.951904, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(18729, -3.919989, -0.980155, 2497.251953, 0.000000, 0.000000, 90.099845);
	CreateDynamicObject_FR(18729, 3.407008, -1.110603, 2497.262695, 0.000000, 0.000000, -92.400115);
	CreateDynamicObject_FR(18694, 1.360924, -1.514043, 2502.668945, 90.600090, 0.000000, -91.399948);
	CreateDynamicObject_FR(18708, -2.159998, -5.897815, 2499.095947, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(18708, -2.159997, -5.897815, 2497.934814, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(18708, 1.640001, -5.897815, 2499.095947, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(18708, 1.660001, -5.897815, 2497.924804, 0.000000, 0.000000, 0.000000);*/
	/*SetDynamicObjectMaterial(CreateDynamicObject_FR(18981, -0.5, -3.0, 2497.62451,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-40-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(18981, 2.5, -3.0, 2497.62451,   0.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-40-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(18981, -0.5, 9.5000, 2498.1245,   90.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-40-percent");
	SetDynamicObjectMaterial(CreateDynamicObject_FR(18981, 2.5, 9.5000, 2498.1245,   90.00000, 90.00000, 0.00000), 0, 18646, "matcolours", "grey-40-percent");
	
	CreateDynamicObject_FR(19128, 0.00000, 0.17380, 2500.0,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, -4.00000, 0.17380, 2500.0,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, 4.00000, 0.17380, 2500.0,   90.00000, 0.00000, 0.00000);*/
	CreateDynamicObject_FR(19128, 0.00000, 0.00000, 2498.38916,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, 4.00000, 0.00000, 2498.38916,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, -4.00000, 0.00000, 2498.38916,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19333, 5.77320, 8.48840, 2498.70728,   0.00000, 0.00000, 308.22519);
	CreateDynamicObject_FR(19332, -7.43774, 12.79309, 2498.70728,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(10757, 0.4383, 27.6951, 2507.7725,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(CreateDynamicObject_FR(18981, 0.00000, -11.25600, 2490.03857,   0.00000, -130.00000, 90.00000), 0, 18646, "matcolours", "grey-40-percent");
	
	new Unused_Object;
	//AEROPUERTO Abandoned AA
	AddStaticVehicleEx(560, 343.4845, 2537.6611, 16.4778, 159.0943, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(471, 347.3576, 2536.5312, 16.7643, 159.1160, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, 350.3739, 2535.9338, 16.7867, 159.1160, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(424, 352.5691, 2536.1545, 16.7806, 159.1160, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(434, 356.6974, 2535.4531, 16.8072, 159.1160, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(555, 360.7445, 2535.9404, 16.7935, 159.1160, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(477, 363.6789, 2535.8854, 16.7973, 159.1164, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(480, 389.9196, 2536.5979, 16.4833, 159.1194, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(411, 393.1986, 2535.9699, 16.5116, 159.1194, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 363.1490, 2475.9287, 16.1902, 91.3193, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(568, 351.8969, 2475.6416, 16.1906, 89.9238, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(559, 342.2437, 2475.1887, 16.1906, 93.2902, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(545, 322.9977, 2476.1818, 16.1938, 87.1762, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(434, 297.6677, 2475.9497, 16.1888, 92.4383, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(522, 276.6790, 2476.4255, 16.1870, 87.8189, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(573, 242.7099, 2476.7202, 16.1872, 88.0905, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(480, 257.2241, 2475.5471, 16.1867, 94.1959, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(480, 222.6503, 2475.3420, 16.1900, 88.7930, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(545, 200.3263, 2476.7304, 16.1929, 84.5838, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(462, 175.7275, 2477.2597, 16.1900, 90.4376, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(434, 150.4665, 2477.0026, 16.1902, 89.4724, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(415, 128.9295, 2476.8134, 16.1881, 91.3756, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(402, 118.5113, 2476.5644, 16.1881, 91.3731, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(462, 85.7891, 2580.5825, 16.0840, 248.0802, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 94.3728, 2577.1684, 16.1981, 248.2680, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(462, 105.8636, 2572.6008, 16.2127, 248.3231, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(480, 136.1752, 2568.0798, 16.1313, 270.4734, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(451, 177.1586, 2565.1074, 16.2340, 263.3000, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(568, 222.0974, 2542.9279, 16.3522, 193.2657, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(462, 245.1230, 2531.9326, 16.4489, 301.3631, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(573, 287.0090, 2533.0847, 16.5257, 325.1755, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(471, 288.1735, 2549.9592, 16.5256, 12.3944, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(521, 306.9418, 2564.5493, 16.2053, 277.4292, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(545, 320.0982, 2565.0444, 16.2262, 270.0960, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(461, 335.2185, 2564.7175, 16.2035, 265.5168, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(541, 366.8233, 2553.6066, 16.2278, 282.6395, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 381.7905, 2558.9101, 16.2578, 289.4122, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(603, 394.3729, 2555.6601, 16.2537, 239.3816, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(424, 410.9205, 2564.1579, 16.2051, 330.5959, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(555, 400.5963, 2579.9360, 16.1540, 74.6013, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(471, 377.1020, 2576.9462, 16.1065, 112.4596, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(480, 353.8020, 2556.2912, 16.2398, 141.7109, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(429, 433.6146, 2487.5290, 16.1990, 4.4443, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	AddStaticVehicleEx(462, 431.2358, 2520.3269, 16.1965, 180.7870, minrand(128, 255), minrand(128, 255), FR_VEHICLES_RESPAWN_TIME);
	CreateDynamicObject_FR(13646, 404.8013, 2454.2509, 15.0508, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 416.1880, 2443.6608, 15.4922, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 393.5455, 2443.5400, 15.4922, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 416.0578, 2466.0319, 15.4922, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 393.5012, 2466.0820, 15.4922, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18768, 441.4200, 2447.0700, 59.9199, 0.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(18768, 441.4400, 2447.1101, 59.9199, -45.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(7657, 435.8500, 2502.8300, 16.1399, 296.4299, 0.0000, 270.0000);
	CreateDynamicObject_FR(7657, 438.6700, 2502.8300, 17.9699, 309.2900, 0.0000, 270.0000);
	CreateDynamicObject_FR(7657, 441.0199, 2502.8300, 20.3700, 322.1400, 0.0000, 270.0000);
	CreateDynamicObject_FR(7657, 442.7699, 2502.8300, 23.2399, 335.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(7657, 432.3299, 2502.8300, 44.2400, 77.8600, 0.0000, 270.0000);
	CreateDynamicObject_FR(7657, 443.8399, 2502.8300, 26.4200, 347.8599, 0.0000, 270.0000);
	CreateDynamicObject_FR(7657, 435.5100, 2502.8300, 43.1699, 65.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(7657, 444.1700, 2502.8300, 29.7600, 0.7099, 0.0000, 270.0000);
	CreateDynamicObject_FR(7657, 438.3800, 2502.8300, 41.4199, 52.1399, 0.0000, 270.0000);
	CreateDynamicObject_FR(7657, 443.7600, 2502.8300, 33.0999, 13.5699, 0.0000, 270.0000);
	CreateDynamicObject_FR(7657, 440.7799, 2502.8300, 39.0699, 39.2900, 0.0000, 270.0000);
	CreateDynamicObject_FR(7657, 442.6099, 2502.8300, 36.2500, 26.4300, 0.0000, 270.0000);
	CreateDynamicObject_FR(10357, 443.5199, 2474.8400, 79.9700, 0.0000, 0.0000, 238.0000);
	CreateDynamicObject_FR(16790, 425.4687, 2531.0000, 22.5546, 356.8583, 0.0000, 3.1415);
	CreateDynamicObject_FR(19002, 441.2200, 2461.2299, 89.8399, 0.0000, -96.0000, -270.0000);
	CreateDynamicObject_FR(10357, 459.5199, 2499.7399, -25.6100, 0.0000, 0.0000, 239.0000);
	Unused_Object = CreateDynamicObject_FR(18826, 447.9599, 2502.0800, 69.8899, 0.0000, -90.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18841, 328.7699, 2411.4199, 18.6399, -90.0000, 0.0000, 180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(7586, 318.1000, 2411.3100, 28.1100, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18826, 471.3099, 2501.5700, 69.8899, 0.0000, -90.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(8397, 318.1000, 2411.3100, 34.5600, 0.0000, 0.0000, 180.0000);
	Unused_Object = CreateDynamicObject_FR(18826, 447.9599, 2502.0800, 91.0400, 0.0000, 90.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18778, 304.1000, 2442.4099, 16.7800, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(19002, 440.3900, 2460.0000, 111.6500, 0.0000, -96.0000, -270.0000);
	CreateDynamicObject_FR(10357, 443.8699, 2524.5400, 80.5800, 0.0000, 0.0000, 238.0000);
	Unused_Object = CreateDynamicObject_FR(18841, 307.5700, 2411.4199, 18.6399, -90.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18826, 471.2999, 2501.5600, 91.0400, 0.0000, 90.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18826, 492.3900, 2501.1000, 69.8899, 0.0000, -90.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18768, 440.9700, 2556.8100, 59.9199, -90.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(18768, 441.3699, 2556.8400, 59.9199, -45.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(19002, 441.7699, 2542.5800, 89.8399, 0.0000, -96.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(18826, 492.3800, 2501.1000, 91.0599, 0.0000, 90.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18778, 277.5700, 2442.0500, 16.7800, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(16098, 307.9500, 2543.4499, 20.3999, 360.1000, 0.0000, -91.5699);
	Unused_Object = CreateDynamicObject_FR(18826, 318.1400, 2421.8999, 113.0100, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19002, 440.9100, 2543.7900, 111.6500, 0.0000, -96.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(18841, 274.7099, 2410.9799, 18.6399, -90.0000, 0.0000, 180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18826, 318.1499, 2400.8000, 113.0100, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(7586, 263.9400, 2411.0500, 28.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8397, 263.9400, 2411.0500, 0.2000, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject_FR(18778, 255.4100, 2447.5100, 16.7800, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(18780, 307.7295, 2567.0676, 27.4160, 0.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(18826, 274.4800, 2411.1999, 78.4800, 0.0000, 0.0000, 180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18841, 253.5099, 2410.9899, 18.6399, -90.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(1383, 322.9800, 2587.9599, 34.2599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19005, 268.7600, 2539.8798, 18.3899, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(705, 305.5000, 2587.4099, 14.5600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18858, 322.8999, 2587.9299, 75.1500, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18826, 253.3999, 2411.2099, 78.4800, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(705, 332.3299, 2613.7800, 14.5600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18778, 224.7700, 2446.6599, 16.7800, 0.0000, 0.0000, 270.0000);
	Unused_Object = CreateDynamicObject_FR(18841, 219.9700, 2411.2500, 18.6399, -90.0000, 0.0000, 180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(1383, 267.7799, 2590.6201, 34.2599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1383, 295.8900, 2614.1499, 34.2599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1383, 327.7999, 2634.7500, 34.2599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(7586, 209.0299, 2411.3400, 28.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8397, 209.2899, 2411.3000, 34.5600, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject_FR(18858, 267.5299, 2590.6201, 75.1500, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(18858, 295.9500, 2614.1499, 75.1500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19337, 421.7922, 2646.6359, 80.7914, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(705, 251.5399, 2588.4799, 14.5600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(705, 279.1400, 2615.4199, 14.5600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18858, 327.7600, 2634.6398, 75.1500, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(18778, 199.1399, 2446.9299, 16.7800, 0.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(18841, 198.7799, 2411.2500, 18.6399, -90.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(705, 305.1900, 2641.6599, 14.5600, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18826, 209.1799, 2421.8701, 113.0100, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18826, 209.1799, 2400.7800, 113.0100, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19005, 193.1900, 2542.2600, 18.3899, 0.0000, 0.0000, -270.0000);
	CreateDynamicObject_FR(18778, 169.5000, 2446.8100, 16.7800, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(1383, 269.9700, 2645.8601, 34.2599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1383, 239.6300, 2623.2299, 34.2599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(705, 225.8500, 2615.2099, 14.5600, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18841, 166.9199, 2411.1699, 18.6399, -90.0000, 0.0000, 180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18858, 269.8999, 2645.8701, 75.1500, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(705, 251.3099, 2641.8100, 14.5600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18858, 239.6199, 2623.3000, 75.1500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(705, 197.6799, 2587.6599, 14.5600, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18826, 167.0899, 2411.4399, 78.4800, 0.0000, 0.0000, 180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19129, 169.6600, 2542.0900, 15.5500, 0.0000, -90.0000, 180.0000);
	CreateDynamicObject_FR(7586, 156.4900, 2411.5200, 28.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8397, 156.4900, 2411.5200, 0.2000, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject_FR(1383, 198.4600, 2602.6398, 34.2599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 159.7100, 2532.1201, 15.5500, 0.0000, -90.0000, 90.0000);
	CreateDynamicObject_FR(3515, 159.7200, 2542.1000, 24.7000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 159.7200, 2542.1000, 25.5000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3461, 159.7200, 2542.1000, 28.5499, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18728, 159.7100, 2542.1101, 29.3600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19335, 159.7200, 2542.1000, 1.0700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18858, 198.3200, 2602.7700, 75.1500, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18841, 145.7299, 2411.1699, 18.6399, -90.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18778, 142.0800, 2446.1398, 16.7800, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(19129, 159.7100, 2552.0300, 15.5500, 0.0000, -90.0000, 270.0000);
	Unused_Object = CreateDynamicObject_FR(18826, 145.9600, 2411.4399, 78.4800, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19129, 149.7599, 2542.0900, 15.5500, 0.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(1383, 214.3600, 2651.8601, 34.2599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(705, 198.8500, 2641.2500, 14.5600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1383, 160.4299, 2591.0600, 34.2599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18858, 214.3099, 2651.8300, 75.1500, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(705, 171.1499, 2614.2500, 14.5600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(4992, 286.9899, 2711.1899, 52.4500, 0.0000, -90.0000, 90.0000);
	CreateDynamicObject_FR(18858, 160.3000, 2591.0300, 75.1500, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(18778, 117.0599, 2446.2800, 16.7800, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(4992, 275.3599, 2711.4299, 39.2700, 0.0000, -90.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(18841, 116.6500, 2410.3000, 18.6399, -90.0000, 0.0000, 180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19005, 125.3600, 2541.7099, 18.3899, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(705, 144.0500, 2588.1899, 14.5600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(4992, 263.3999, 2711.2399, 52.4599, 0.0000, -90.0000, 90.0000);
	CreateDynamicObject_FR(7586, 106.0699, 2410.2500, 28.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8397, 106.0699, 2410.2500, 34.5600, 0.0000, 0.0000, 180.0000);
	Unused_Object = CreateDynamicObject_FR(18841, 95.4400, 2410.3000, 18.6399, -90.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(1383, 152.4499, 2638.5300, 34.2599, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18826, 106.0999, 2420.8000, 113.0100, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18858, 152.5000, 2638.7800, 75.1500, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18826, 106.0899, 2399.6899, 113.0100, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(1383, 119.2399, 2608.4899, 34.2599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(4992, 287.3599, 2758.0700, 52.4500, 0.0000, -90.0000, 90.0000);
	CreateDynamicObject_FR(18858, 119.1500, 2608.4799, 75.1500, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(4992, 275.3900, 2757.9899, 39.2700, 0.0000, -90.0000, 90.0000);
	CreateDynamicObject_FR(4992, 263.4299, 2758.0900, 52.4599, 0.0000, -90.0000, 90.0000);
	CreateDynamicObject_FR(19335, 79.8825, 2541.4531, 62.9756, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18858, 54.1199, 2438.7900, 42.8199, -180.0000, 0.0000, 30.0000);
	CreateDynamicObject_FR(3498, 54.1300, 2438.7500, 56.4900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3498, 54.1300, 2438.7500, 65.4899, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3498, 54.1300, 2438.7500, 74.3899, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18858, 54.1199, 2381.9299, 42.8199, -180.0000, 0.0000, -30.0000);
	CreateDynamicObject_FR(3498, 54.1699, 2381.8798, 56.4900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3498, 54.1699, 2381.8798, 65.3700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3498, 54.1699, 2381.8798, 74.3899, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19005, 49.5499, 2544.2800, 18.3899, 0.0000, 0.0000, -270.0000);
	CreateDynamicObject_FR(1383, 27.4899, 2423.4299, 86.0599, -105.0000, 0.0000, -60.0000);
	CreateDynamicObject_FR(1383, 27.5000, 2397.3798, 86.0599, -105.0000, 0.0000, -120.0000);
	CreateDynamicObject_FR(19336, 72.7359, 2640.5637, 90.7578, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18858, 5.1599, 2467.2199, 42.8199, -180.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(3498, 5.1199, 2467.1599, 56.4300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19635, 5.1199, 2410.3200, 15.3400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19946, 5.1199, 2410.3200, 22.2099, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19945, 5.1199, 2410.3200, 22.2099, 0.0000, 0.0000, -9.0000);
	CreateDynamicObject_FR(3498, 5.1199, 2467.1599, 65.3799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1380, 12.1400, 2544.5700, 34.1500, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(1380, 12.1400, 2544.5700, 34.1699, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(10145, 5.1199, 2410.3200, 52.2900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(10145, 5.1199, 2410.3200, 52.2900, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(3498, 5.1199, 2467.1599, 74.3899, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(726, 10.6999, 2545.0600, 8.8400, 0.0000, 0.0000, -180.0000);
	CreateDynamicObject_FR(726, 10.6999, 2545.0600, 8.8400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1383, 5.0700, 2436.2500, 86.0599, -105.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(7586, 5.1199, 2410.3200, 84.7500, -180.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(7586, 5.1199, 2410.3200, 97.6100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1383, 5.2100, 2384.3798, 86.0599, -105.0000, 0.0000, -180.0000);
	CreateDynamicObject_FR(18858, 5.1999, 2353.4299, 42.8199, -180.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(3498, 5.1999, 2353.4399, 56.4900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3498, 5.1999, 2353.4399, 65.4000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3498, 5.1999, 2353.4399, 74.3899, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18826, 3.5699, 2610.2700, 108.5100, 0.0000, 0.0000, -142.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18826, -13.0900, 2597.2600, 108.5100, 0.0000, 0.0000, 38.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(1383, -17.3600, 2423.2600, 86.0599, -105.0000, 0.0000, 60.0000);
	CreateDynamicObject_FR(1383, -23.1800, 2626.3000, 57.3400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(7315, -22.5599, 2626.8601, 67.0299, 0.0000, 0.0000, 38.0000);
	CreateDynamicObject_FR(1383, -17.2999, 2397.3500, 86.0599, -105.0000, 0.0000, -240.0000);
	Unused_Object = CreateDynamicObject_FR(18826, -16.0300, 2634.7199, 108.5100, 0.0000, 0.0000, -142.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18858, -44.1100, 2438.6999, 42.8199, -180.0000, 0.0000, -30.0000);
	CreateDynamicObject_FR(3498, -44.0499, 2438.6101, 56.4900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3498, -44.0499, 2438.6101, 65.4300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3498, -44.0499, 2438.6101, 74.3899, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18826, -32.7299, 2621.6599, 108.5100, 0.0000, 0.0000, 38.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18858, -44.0900, 2382.0000, 42.8199, -180.0000, 0.0000, 30.0000);
	CreateDynamicObject_FR(3498, -44.0699, 2381.9699, 56.4900, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18826, -33.9799, 2656.9199, 108.5100, 0.0000, 0.0000, -142.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(3498, -44.0699, 2381.9699, 65.3899, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3498, -44.0699, 2381.9699, 74.3899, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18784, -80.1500, 2504.0700, 17.7700, 0.0000, -5.0000, -180.0000);
	Unused_Object = CreateDynamicObject_FR(18824, -82.6399, 2520.6298, 35.3100, 0.0000, -35.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18826, -50.6599, 2643.8999, 108.5100, 0.0000, 0.0000, 38.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18824, -82.8000, 2487.6201, 35.3100, 0.0000, -35.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(7315, -60.0600, 2673.5200, 67.0299, 0.0000, 0.0000, 38.0000);
	CreateDynamicObject_FR(3080, -92.6800, 2520.5800, 66.4100, 100.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(3080, -92.8399, 2487.6699, 66.4100, 100.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(3080, -94.9499, 2520.5800, 62.2400, 90.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(3080, -95.0999, 2487.6599, 62.2400, 90.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(8397, -99.4000, 2520.6201, 23.8999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8397, -99.4400, 2487.5400, 23.8999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19002, -105.9800, 2548.6699, 44.3899, 0.0000, -57.0000, 270.0000);
	CreateDynamicObject_FR(19002, -105.3300, 2458.8898, 44.3899, 0.0000, -57.0000, -270.0000);
	CreateDynamicObject_FR(18784, -114.3199, 2504.6298, 58.1699, 0.0000, -53.0000, -180.0000);
	CreateDynamicObject_FR(19002, -116.9199, 2537.5700, 59.4599, 0.0000, -57.0000, -90.0000);
	CreateDynamicObject_FR(18784, -116.3600, 2504.7199, 71.8499, 0.0000, -84.0000, -180.0000);
	CreateDynamicObject_FR(18784, -116.3600, 2504.7199, 72.8600, 0.0000, -93.0000, -180.0000);
	CreateDynamicObject_FR(19002, -117.0100, 2469.8100, 59.4599, 0.0000, -57.0000, -270.0000);
	CreateDynamicObject_FR(8397, -124.1299, 2527.7500, 23.8999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8397, -123.3799, 2479.3701, 23.8999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3499, -124.1299, 2527.7500, 81.2500, -90.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3499, -124.1500, 2522.8898, 86.1200, -180.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3499, -124.1399, 2532.5500, 86.1200, -180.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3499, -123.3799, 2479.3701, 81.2500, -90.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3499, -123.3700, 2484.1799, 86.1200, -180.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3499, -124.1299, 2527.7500, 90.9700, -90.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3499, -123.3600, 2474.5100, 86.1200, -180.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3499, -123.3799, 2479.3701, 90.9700, -90.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19071, -124.6200, 2401.5200, 28.0300, -26.0000, 0.0000, 286.0000);
	CreateDynamicObject_FR(8395, -141.9499, 2503.9799, 47.6800, 0.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(18826, -144.8699, 2514.6599, 106.5500, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18826, -144.7799, 2493.4699, 106.5500, 0.0000, 0.0000, -270.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18784, -141.5700, 2386.0600, 40.7999, 0.0000, -31.0000, 196.0000);
	CreateDynamicObject_FR(18784, -147.0800, 2405.2800, 40.7999, 0.0000, -31.0000, 196.0000);
	CreateDynamicObject_FR(18784, -146.1399, 2384.7500, 45.9399, 0.0000, -47.0000, 196.0000);
	CreateDynamicObject_FR(18784, -151.6499, 2403.9499, 45.9399, 0.0000, -47.0000, 196.0000);
	Unused_Object = CreateDynamicObject_FR(18826, -171.5599, 2515.1699, 106.5500, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18826, -171.5599, 2493.9799, 106.5500, 0.0000, 0.0000, -270.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18826, -197.7700, 2515.9799, 106.5500, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18826, -197.7899, 2494.8000, 106.5500, 0.0000, 0.0000, -270.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19005, -557.9699, 2211.3100, 42.7000, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(9159, -583.0300, 2223.1298, 57.9300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8493, -583.0300, 2223.1298, 57.9300, 0.0000, 0.0000, 0.0000);

	//house DEL HORROR
	CreateDynamicObject_FR(2905, 2323.91772, -1148.87927, 1049.79382,   0.00000, 0.00000, 267.36917);
	CreateDynamicObject_FR(2908, 2322.80859, -1147.71924, 1049.80835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2906, 2326.63940, -1148.39807, 1049.77551,   0.00000, 0.00000, 238.68591);
	CreateDynamicObject_FR(2905, 2324.49023, -1145.91736, 1049.79382,   0.00000, 0.00000, 232.88484);
	CreateDynamicObject_FR(2907, 2322.39893, -1146.60767, 1049.83655,   0.00000, 0.00000, 289.18558);
	CreateDynamicObject_FR(3092, 2321.45801, -1149.84265, 1051.54419,   0.00000, 0.00000, 0.60617);
	CreateDynamicObject_FR(3092, 2327.26440, -1149.89697, 1051.54419,   0.00000, 0.00000, 0.60617);
	CreateDynamicObject_FR(2906, 2320.68433, -1148.94067, 1049.77551,   0.00000, 0.00000, 273.17017);
	CreateDynamicObject_FR(2908, 2324.21338, -1144.47522, 1049.80835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2908, 2328.09668, -1147.32495, 1049.80835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2906, 2321.43359, -1145.53723, 1049.77551,   0.00000, 0.00000, 238.68591);
	CreateDynamicObject_FR(2905, 2327.55981, -1145.95972, 1049.79382,   0.00000, 0.00000, 327.67471);
	CreateDynamicObject_FR(2906, 2326.54712, -1144.87634, 1049.77551,   0.00000, 0.00000, 273.17017);
	CreateDynamicObject_FR(2905, 2320.13062, -1146.53882, 1049.79382,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2907, 2329.08008, -1148.65894, 1049.83655,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2908, 2318.58081, -1148.41113, 1049.80835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(6865, 2324.46118, -1144.19019, 1055.05505,   0.00000, 0.00000, 224.56766);
	CreateDynamicObject_FR(2907, 2318.16040, -1146.07800, 1049.83655,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19320, 2324.48218, -1141.81055, 1050.24524,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3525, 2324.47412, -1141.82080, 1049.37842,   0.00000, 0.00000, 266.36108);
	CreateDynamicObject_FR(19320, 2318.27026, -1144.99500, 1050.04431,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19320, 2330.41064, -1145.16370, 1050.04431,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2908, 2323.31299, -1141.48804, 1049.50635,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3525, 2318.53711, -1143.65540, 1051.44971,   0.00000, 0.00000, 82.37543);
	CreateDynamicObject_FR(19339, 2319.27832, -1142.90942, 1049.83337,   0.00000, 0.00000, 90.41692);
	CreateDynamicObject_FR(19339, 2329.58032, -1143.05481, 1049.83337,   0.00000, 0.00000, 89.69556);
	CreateDynamicObject_FR(2906, 2331.97217, -1148.49500, 1049.77551,   0.00000, 0.00000, 299.69446);
	CreateDynamicObject_FR(3092, 2331.42627, -1145.02722, 1051.54419,   0.00000, 0.00000, 177.18817);
	CreateDynamicObject_FR(3525, 2330.38550, -1143.10437, 1051.44971,   0.00000, 0.00000, 266.36108);
	CreateDynamicObject_FR(2908, 2331.14038, -1143.21045, 1050.81824,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3525, 2318.45825, -1141.79480, 1051.44971,   0.00000, 0.00000, 82.37543);
	CreateDynamicObject_FR(2908, 2333.44507, -1146.69629, 1049.80835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3525, 2330.42969, -1141.40906, 1051.44971,   0.00000, 0.00000, 266.36108);
	CreateDynamicObject_FR(3524, 2317.04980, -1142.79749, 1047.79053,   0.00000, 0.00000, 310.59531);
	CreateDynamicObject_FR(19339, 2316.31641, -1143.78674, 1053.68860,   0.00000, 0.00000, 179.19426);
	CreateDynamicObject_FR(19320, 2314.41089, -1149.56616, 1050.04431,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19339, 2332.71069, -1143.61560, 1053.68860,   0.00000, 0.00000, 179.19426);
	CreateDynamicObject_FR(2908, 2320.85059, -1138.69983, 1049.50745,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2907, 2314.12280, -1144.82959, 1050.64343,   0.00000, 0.00000, 289.18558);
	CreateDynamicObject_FR(3525, 2318.42773, -1138.90527, 1051.44971,   0.00000, 0.00000, 82.37543);
	CreateDynamicObject_FR(3092, 2334.92480, -1144.95520, 1051.54419,   0.00000, 0.00000, 177.18817);
	CreateDynamicObject_FR(3524, 2322.33374, -1137.34766, 1049.67065,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2908, 2328.08032, -1137.85339, 1049.60742,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3525, 2330.49268, -1138.98584, 1051.44971,   0.00000, 0.00000, 266.36108);
	CreateDynamicObject_FR(3524, 2326.52808, -1137.35144, 1049.67065,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3525, 2319.30640, -1137.82837, 1049.37952,   0.00000, 0.00000, 273.40106);
	CreateDynamicObject_FR(3525, 2329.52588, -1137.82666, 1049.37952,   0.00000, 0.00000, 273.40106);
	CreateDynamicObject_FR(3524, 2314.80859, -1141.45422, 1047.79053,   0.00000, 0.00000, 348.28845);
	CreateDynamicObject_FR(2906, 2331.34106, -1138.15991, 1050.83215,   0.00000, 0.00000, 192.20271);
	CreateDynamicObject_FR(19320, 2335.19629, -1142.36707, 1053.59473,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19320, 2311.18164, -1145.05444, 1050.04431,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3525, 2314.41064, -1140.11951, 1054.69141,   0.00000, 0.00000, 88.99600);
	CreateDynamicObject_FR(3525, 2334.52930, -1140.68335, 1054.69141,   0.00000, 0.00000, 273.40106);
	CreateDynamicObject_FR(2907, 2334.41284, -1139.23242, 1050.64954,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3524, 2312.43530, -1141.98047, 1047.79053,   0.00000, 0.00000, 35.26843);
	CreateDynamicObject_FR(3524, 2337.19336, -1143.98108, 1048.89929,   0.00000, 0.00000, 220.14154);
	CreateDynamicObject_FR(3524, 2338.05762, -1145.15088, 1047.79053,   0.00000, 0.00000, 311.73834);
	CreateDynamicObject_FR(3462, 2311.28833, -1142.42871, 1054.08984,   0.00000, 0.00000, 268.44275);
	CreateDynamicObject_FR(2906, 2337.30640, -1141.18201, 1050.83215,   0.00000, 0.00000, 192.20271);
	CreateDynamicObject_FR(3525, 2314.40503, -1137.26257, 1054.69141,   0.00000, 0.00000, 88.99600);
	CreateDynamicObject_FR(3525, 2334.43774, -1136.97693, 1054.69141,   0.00000, 0.00000, 273.40106);
	CreateDynamicObject_FR(3524, 2331.93408, -1134.84351, 1047.99036,   0.00000, 0.00000, 41.42507);
	CreateDynamicObject_FR(8131, 2324.47583, -1134.73132, 1041.29126,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3092, 2309.00415, -1141.38843, 1054.25366,   91.00000, 0.00000, 3.69128);
	CreateDynamicObject_FR(3524, 2313.64771, -1134.87012, 1051.54309,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19320, 2335.12012, -1135.22913, 1053.59473,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2905, 2337.49414, -1136.66150, 1050.80261,   0.00000, 0.00000, 5.84483);
	CreateDynamicObject_FR(3462, 2340.35693, -1139.99500, 1054.08984,   0.00000, 0.00000, 357.91888);
	CreateDynamicObject_FR(3092, 2337.87915, -1136.31165, 1054.05273,   91.00000, 0.00000, 178.74295);
	CreateDynamicObject_FR(3524, 2336.73242, -1134.93274, 1047.99036,   0.00000, 0.00000, 332.98737);
	CreateDynamicObject_FR(8131, 2334.45020, -1134.55530, 1040.88733,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3524, 2308.41992, -1134.79919, 1051.54309,   0.00000, 0.00000, 0.00000);
	

	//ISLANDS
	CreateDynamicObject_FR(1640, -1624.67004, -3200.87988, 4.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1598, -1627.79004, -3204.51001, 4.61000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1640, -1629.28003, -3200.42993, 4.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1637, -1623.50000, -3201.97998, 5.59000,   0.00000, 0.00000, 218.00000);
	CreateDynamicObject_FR(1642, -1627.68005, -3197.66992, 4.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1461, -1631.52002, -3202.42993, 5.11000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1598, -1631.09998, -3204.15991, 4.61000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1642, -1624.68994, -3207.10010, 4.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1461, -1622.08997, -3206.25000, 5.11000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1637, -1633.33997, -3201.96997, 5.58000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(902, -1635.35999, -3193.47998, 3.36000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1627.88000, -3185.39990, 1.56000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1612.60999, -3190.08008, 2.21000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1621.17004, -3184.41992, 1.23000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1615.53003, -3185.62988, 1.43000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1607.56006, -3189.66992, 1.58000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1604.45996, -3197.32007, 1.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1635.12000, -3178.93994, 0.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(902, -1609.37000, -3219.53003, 2.17000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1643.28003, -3183.11011, 1.11000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1602.75000, -3210.65991, 1.38000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(745, -1653.06006, -3205.40991, 2.49000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1642.31006, -3175.82007, 0.32000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1656.59998, -3210.14990, 3.02000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1651.37000, -3182.31006, 0.75000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1619.53003, -3233.60010, 3.66000,   0.00000, 0.00000, 352.00000);
	CreateDynamicObject_FR(621, -1658.97998, -3193.77002, 1.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1657.00000, -3187.55005, 0.92000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(17068, -1594.03003, -3219.62012, 0.73000,   0.00000, 0.00000, 82.00000);
	CreateDynamicObject_FR(621, -1611.33997, -3236.96997, 2.81000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1666.47998, -3190.57007, 0.16000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(744, -1665.89001, -3216.09009, 4.48000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(902, -1614.34998, -3241.76001, 3.91000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1669.97998, -3196.01001, 1.22000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1600.31006, -3236.37988, 0.78000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(745, -1620.19995, -3245.25000, 4.49000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1637.89001, -3245.17993, 4.34000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1671.97998, -3198.13989, 3.45000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1673.09998, -3208.13989, 5.31000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1675.43994, -3201.87012, 4.14000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1598.26001, -3243.65991, 1.46000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1678.58997, -3195.88989, 0.68000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3580, -1655.82996, -3245.50000, 5.52000,   0.00000, 0.00000, 94.00000);
	CreateDynamicObject_FR(647, -1679.21997, -3209.20996, 5.51000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1681.97998, -3202.88989, 2.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1600.80005, -3251.96997, 1.83000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3877, -1663.97998, -3244.86011, 3.03000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1684.23999, -3208.93994, 5.16000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3877, -1663.67004, -3247.42993, 3.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1684.70996, -3217.37988, 6.15000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1686.06995, -3213.32007, 5.74000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1681.60999, -3229.07007, 4.48000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1602.68994, -3258.60010, 1.66000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(745, -1688.85999, -3214.33008, 3.18000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(4726, -1583.53003, -3155.58008, 1.98000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1618.88000, -3265.55005, 2.81000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1691.50000, -3206.92993, 0.99000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1605.82996, -3263.83008, 1.57000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1690.62000, -3219.68994, 4.79000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1634.81995, -3267.80005, 2.09000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1625.33997, -3268.37012, 2.44000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1641.65002, -3267.62988, 1.05000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1610.82996, -3268.09009, 1.24000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1694.17004, -3217.15991, 3.69000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1695.32996, -3212.61011, 1.31000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(4726, -1555.02002, -3202.31006, 2.03000,   0.00000, 0.00000, 356.00000);
	CreateDynamicObject_FR(647, -1697.06995, -3223.75000, 5.09000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1647.43005, -3272.93994, 1.80000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1701.08997, -3215.47998, 1.74000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(728, -1702.44995, -3220.87012, 3.65000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1653.93994, -3275.60010, 5.58000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1657.59998, -3274.90991, 6.46000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3877, -1673.06995, -3267.10010, 6.74000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1650.62000, -3278.37988, 2.67000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1705.39001, -3220.87012, 5.89000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3877, -1675.83997, -3267.01001, 6.74000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1707.56006, -3214.73999, 2.27000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1705.34998, -3224.78003, 6.57000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(744, -1689.39001, -3255.30005, 2.33000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(6295, -1563.00000, -3249.01001, 27.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1657.59998, -3281.12988, 6.39000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1703.15002, -3240.13989, 4.74000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1654.02002, -3284.37988, 3.11000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(745, -1657.73999, -3283.16992, 4.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3580, -1674.37000, -3274.97998, 9.72000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1662.57996, -3281.87012, 6.73000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16258, -1605.01001, -3269.48999, -47.77000,   0.00000, 0.00000, 204.00000);
	CreateDynamicObject_FR(16258, -1568.92004, -3242.38989, -48.55000,   0.00000, 0.00000, 168.00000);
	CreateDynamicObject_FR(621, -1715.32996, -3211.70996, 1.13000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1711.44995, -3230.94995, 6.57000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1714.19995, -3224.02002, 6.06000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1716.50000, -3214.25000, 3.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1717.18005, -3218.10010, 2.73000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1660.84998, -3287.91992, 5.57000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(744, -1715.89001, -3235.36011, 4.74000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1718.37000, -3227.97998, 6.57000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1669.31006, -3287.76001, 6.24000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1656.98999, -3293.64990, 2.11000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1702.83997, -3264.38989, 4.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1719.79004, -3235.92993, 6.57000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1707.68994, -3259.76001, 5.15000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1665.84998, -3293.55005, 4.99000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1711.14001, -3255.93994, 5.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1718.89001, -3242.04004, 6.41000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1714.75000, -3250.51001, 6.21000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1726.76001, -3214.36011, 1.24000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1726.64001, -3222.44995, 2.67000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16258, -1708.39001, -3169.54004, -48.11000,   0.00000, 0.00000, 288.00000);
	CreateDynamicObject_FR(647, -1696.94995, -3277.20996, 5.38000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1661.95996, -3298.80005, 1.95000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1685.65002, -3287.65991, 5.97000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1703.45996, -3273.22998, 4.26000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1676.66003, -3294.40991, 5.19000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1711.48999, -3264.40991, 4.69000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(745, -1680.69995, -3294.39990, 3.32000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1707.37000, -3272.80005, 1.69000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(745, -1694.57996, -3285.87012, 3.41000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1731.40002, -3231.13989, 4.71000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1724.16003, -3250.03003, 4.59000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1704.62000, -3278.13989, 4.33000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1722.43994, -3254.20996, 2.40000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1694.16003, -3287.68994, 5.21000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1698.21997, -3284.88989, 4.92000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1668.12000, -3303.23999, 1.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1734.35999, -3225.96997, 1.53000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1684.95996, -3295.65991, 4.83000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1701.23999, -3284.32007, 2.71000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1692.22998, -3293.57007, 5.15000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1730.59998, -3246.38989, 1.79000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1732.71997, -3241.48999, 3.68000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1735.09998, -3234.43994, 1.97000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1720.19995, -3265.91992, 1.78000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1675.84998, -3305.11011, 1.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1716.18994, -3273.21997, 1.01000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1680.81006, -3302.73999, 1.73000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1711.09998, -3279.27002, 1.34000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1705.15002, -3285.98999, 3.91000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(647, -1724.77002, -3262.14990, 3.14000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1736.15002, -3241.59009, 1.11000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1732.62000, -3250.87988, 0.88000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1729.97998, -3258.53003, 0.76000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1709.77002, -3286.11011, 1.44000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1684.10999, -3306.16992, 1.34000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1701.92004, -3295.95996, 1.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1707.00000, -3291.83008, 1.46000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1690.64001, -3304.37012, 1.54000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1698.66003, -3299.20996, 1.84000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1695.03003, -3302.04004, 1.61000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16258, -1736.21997, -3200.42993, -48.37000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1729.71997, -3267.73999, 0.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16258, -1607.93994, -3312.88989, -48.36000,   0.00000, 0.00000, 124.00000);

	
	//STUNT GOLF
	CreateDynamicObject_FR(13646, 1411.7700, 2773.6699, 9.2200, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1414.6600, 2777.8999, 54.7000, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19662, 1409.4599, 2742.2700, 51.9500, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	Unused_Object = CreateDynamicObject_FR(18809, 1382.8800, 2777.8200, 54.7000, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19662, 1388.1300, 2742.2700, 51.9500, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	CreateDynamicObject_FR(1634, 1357.4899, 2800.9499, 15.7799, 20.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(3665, 1354.6099, 2799.1499, 11.5799, 0.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1414.6500, 2827.7900, 51.9500, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	CreateDynamicObject_FR(1634, 1352.0400, 2800.7900, 15.7799, 20.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1382.8900, 2827.7600, 51.9500, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	CreateDynamicObject_FR(19005, 1342.0400, 2753.5300, 9.8000, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(11414, 1363.4300, 2833.4799, 10.8299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(11414, 1363.4300, 2833.4799, 10.8299, 0.0000, 0.0000, 21.0900);
	Unused_Object = CreateDynamicObject_FR(19662, 1377.6700, 2767.2600, 81.9400, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	CreateDynamicObject_FR(7586, 1367.2199, 2838.7600, 3.4700, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1382.9100, 2802.8100, 84.6900, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(6866, 1382.9300, 2855.3000, -6.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8620, 1320.4399, 2753.4099, -1.8999, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(18778, 1413.8399, 2872.3100, 11.3900, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(6994, 1317.7299, 2751.3798, 17.6800, 0.0000, 69.0000, 90.0000);
	CreateDynamicObject_FR(18778, 1388.7299, 2871.8999, 11.3900, 0.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1377.6800, 2838.3500, 81.9400, 0.0000, 0.0000, 180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10056, "bigoldbuild_sfe", "cluckbelld1_law");
	CreateDynamicObject_FR(18778, 1380.8900, 2871.8999, 15.3199, 10.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1342.1099, 2761.9899, 84.6900, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(8620, 1311.8499, 2753.4399, -1.8999, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(8397, 1322.2399, 2753.3601, -40.1800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(6994, 1306.7500, 2755.6899, 17.6800, 0.0000, 69.0000, -90.0000);
	CreateDynamicObject_FR(8483, 1354.2399, 2865.8798, 15.0799, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(4867, 1311.9300, 2815.5000, 9.9300, 0.0000, 180.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1414.6400, 2877.6699, 54.7000, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19642, 1332.4699, 2791.3100, 85.5899, 30.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	CreateDynamicObject_FR(8483, 1359.6800, 2873.1999, 15.0799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8397, 1312.0100, 2753.4299, -34.0600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8620, 1303.3199, 2753.5100, -1.8999, 0.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1382.8900, 2877.6298, 54.7000, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19332, 1353.2399, 2872.7800, -5.2699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8483, 1345.6500, 2872.0900, 15.0799, 0.0000, 0.0000, -180.0000);
	CreateDynamicObject_FR(18778, 1298.1700, 2802.2199, 11.1099, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(16112, 1417.4699, 2895.6101, 0.6499, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1301.4200, 2777.8200, 54.7000, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(8483, 1351.8000, 2879.1999, 15.0799, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(18858, 1294.1800, 2802.2600, 13.9899, 0.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1342.1500, 2843.5900, 84.6900, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(8397, 1301.4599, 2753.6899, -40.1800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18778, 1290.1300, 2802.2199, 11.1099, 0.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1296.1800, 2742.2900, 51.9500, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	Unused_Object = CreateDynamicObject_FR(19649, 1301.4200, 2827.6699, 51.9500, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3615, "beachhut", "ws_decking1");
	CreateDynamicObject_FR(18778, 1321.1999, 2872.6201, 15.3199, 10.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(19005, 1277.8499, 2753.6799, 9.8000, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(18778, 1313.3499, 2872.6201, 11.3900, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(7586, 1276.0200, 2801.3701, 6.8600, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1292.2700, 2762.0100, 81.9400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 19527, "cauldron1", "alienliquid1");
	Unused_Object = CreateDynamicObject_FR(19662, 1377.6999, 2891.8898, 81.9400, 0.0000, 0.0000, -270.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	CreateDynamicObject_FR(19338, 1276.0200, 2801.3701, -15.7100, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1292.2199, 2791.0900, 84.6900, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19661, 1409.4100, 2913.2299, 51.9500, 0.0000, 0.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 19527, "cauldron1", "alienliquid1");
	Unused_Object = CreateDynamicObject_FR(19662, 1377.6600, 2913.1599, 51.9500, 0.0000, 0.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	Unused_Object = CreateDynamicObject_FR(18809, 1342.1400, 2886.6398, 84.6900, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18778, 1262.2900, 2801.2800, 11.1099, 0.0000, 0.0000, -270.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1292.2800, 2843.5800, 81.9400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	Unused_Object = CreateDynamicObject_FR(19661, 1388.1999, 2913.2099, 81.9400, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3615, "beachhut", "ws_decking1");
	CreateDynamicObject_FR(18858, 1258.1899, 2801.0900, 13.9899, 0.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1301.4100, 2877.5900, 54.7000, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18778, 1254.2600, 2801.2800, 11.1099, 0.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1260.6400, 2737.0700, 54.7000, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(8397, 1250.2900, 2780.7299, 5.0500, 0.0000, -67.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19653, 1398.8499, 2934.3798, 56.9399, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	Unused_Object = CreateDynamicObject_FR(18809, 1342.1999, 2918.3798, 54.7000, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19653, 1398.8499, 2934.3798, 66.9400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	Unused_Object = CreateDynamicObject_FR(19653, 1398.8499, 2934.3798, 76.9400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	CreateDynamicObject_FR(19005, 1246.2800, 2826.4299, 12.9499, 0.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(19667, 1267.3000, 2767.5500, 113.7699, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	Unused_Object = CreateDynamicObject_FR(19662, 1306.6600, 2913.1298, 51.9500, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	Unused_Object = CreateDynamicObject_FR(19649, 1292.2600, 2886.6398, 81.9400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightyellow2_32");
	CreateDynamicObject_FR(18784, 1258.7600, 2865.4399, 12.3299, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject_FR(8397, 1234.7199, 2780.7099, -27.1399, 0.0000, -26.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1242.3199, 2773.1000, 81.9400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	Unused_Object = CreateDynamicObject_FR(19649, 1242.3499, 2791.0900, 81.9400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	CreateDynamicObject_FR(3095, 1227.8800, 2753.6298, 9.6300, 0.0000, -9.0000, -180.0000);
	CreateDynamicObject_FR(9078, 1232.6899, 2827.6499, 9.9399, 0.0000, 0.0000, 27.0000);
	Unused_Object = CreateDynamicObject_FR(19667, 1267.3000, 2849.1398, 113.7699, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightgreen2_32");
	CreateDynamicObject_FR(18783, 1238.9300, 2857.9199, 4.8000, 90.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1225.0500, 2742.3100, 51.9500, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	CreateDynamicObject_FR(3095, 1219.1500, 2753.6201, 9.6300, 0.0000, -9.0000, 0.0000);
	CreateDynamicObject_FR(19129, 1238.9100, 2865.4299, 14.7799, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1219.8100, 2777.9399, 54.7000, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18783, 1238.9699, 2872.9499, 4.8000, 90.0000, 0.0000, 180.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1242.3000, 2854.6899, 81.9400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 19527, "cauldron1", "alienliquid1");
	Unused_Object = CreateDynamicObject_FR(19649, 1219.8000, 2827.7700, 51.9500, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10056, "bigoldbuild_sfe", "cluckbelld1_law");
	CreateDynamicObject_FR(16776, 1210.4300, 2826.1799, 17.6299, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1242.3199, 2886.6398, 84.6900, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18830, 1213.0100, 2861.3300, 12.2600, 0.0000, -180.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(6994, 1192.8000, 2788.7299, 17.6800, 0.0000, 69.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(18830, 1212.9599, 2869.4099, 12.2700, 0.0000, -180.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(726, 1212.5999, 2871.5100, 11.6899, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(13646, 1212.5100, 2871.4899, 11.2799, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1219.8100, 2877.5900, 54.7000, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18824, 1197.7299, 2803.1499, 84.6900, -90.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(16776, 1183.2500, 2780.6499, 9.1000, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(6994, 1182.0600, 2772.8200, 17.6800, 0.0000, 69.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1192.3499, 2773.1000, 81.9400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	Unused_Object = CreateDynamicObject_FR(18824, 1197.7199, 2842.6398, 84.6900, -90.0000, 0.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18783, 1186.9599, 2857.8000, 4.7600, 90.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 1187.0200, 2865.3100, 14.7399, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1214.5799, 2913.0900, 51.9500, 0.0000, 0.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	CreateDynamicObject_FR(19005, 1172.7700, 2826.1298, 12.9499, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(18783, 1187.0200, 2872.8300, 4.7800, 90.0000, 0.0000, 180.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1192.3699, 2886.6201, 81.9400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3615, "beachhut", "ws_decking1");
	Unused_Object = CreateDynamicObject_FR(19653, 1154.2700, 2752.6201, 16.9799, 0.0000, 0.0000, 360.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10056, "bigoldbuild_sfe", "cluckbelld1_law");
	CreateDynamicObject_FR(8397, 1154.2099, 2752.6101, 13.3199, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19653, 1154.2700, 2752.6201, 26.9799, 0.0000, 0.0000, 360.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightyellow2_32");
	Unused_Object = CreateDynamicObject_FR(19653, 1154.2700, 2752.6201, 36.9799, 0.0000, 0.0000, 360.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	Unused_Object = CreateDynamicObject_FR(19653, 1154.2700, 2752.6201, 46.9799, 0.0000, 0.0000, 360.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	CreateDynamicObject_FR(18784, 1167.1199, 2865.3100, 12.2799, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1143.6400, 2741.9399, 51.9500, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	Unused_Object = CreateDynamicObject_FR(18824, 1147.6700, 2785.1599, 84.6900, -90.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19649, 1138.3900, 2777.5800, 51.9500, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	Unused_Object = CreateDynamicObject_FR(18809, 1179.0799, 2918.3100, 54.7000, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18809, 1138.3800, 2827.5100, 54.7000, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19649, 1135.6099, 2829.8898, 81.9400, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10056, "bigoldbuild_sfe", "cluckbelld1_law");
	Unused_Object = CreateDynamicObject_FR(18824, 1147.6700, 2874.5700, 84.6900, -90.0000, 0.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19649, 1138.3900, 2877.4399, 51.9500, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	CreateDynamicObject_FR(7939, 1114.1600, 2723.7299, 11.3800, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1143.6400, 2913.0900, 51.9500, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightgreen2_32");
	CreateDynamicObject_FR(19884, 1106.3900, 2832.0000, 18.2600, -30.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(4867, 1099.1700, 2815.5100, 9.9099, 0.0000, 180.0000, 0.0000);
	CreateDynamicObject_FR(19635, 1084.6300, 2774.7299, 9.7799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(17511, 1084.6300, 2774.7299, -6.1399, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19332, 1084.6300, 2774.7299, 27.9200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19945, 1084.6300, 2774.7299, -27.9599, 0.0000, 0.0000, 0.0000);


	//STUNT BOAT
	CreateDynamicObject_FR(19005, -557.96997, 2211.31006, 42.70000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(9159, -583.03003, 2223.12988, 57.93000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8493, -583.03003, 2223.12988, 57.93000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19005, -612.10999, 2211.06006, 42.70000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(4246, -626.90002, 2202.48999, 36.56000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18779, -625.91998, 2118.66992, 49.23000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19945, -651.31000, 2145.97998, 10.97000,   0.00000, 0.00000, 5.96000);
	CreateDynamicObject_FR(19947, -651.38000, 2102.57007, 10.97000,   0.00000, 0.00000, 5.65000);
	CreateDynamicObject_FR(18779, -674.22998, 2130.41992, 49.24000,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject_FR(19005, -700.59003, 2204.03003, 44.28000,   5.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19635, -727.92999, 2203.78003, 36.57000,   0.00000, 90.00000, -180.00000);
	CreateDynamicObject_FR(19635, -727.95001, 2203.78003, 36.57000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(19635, -727.95001, 2203.78003, 36.57000,   0.00000, 90.00000, -90.00000);
	CreateDynamicObject_FR(19635, -727.96002, 2203.78003, 36.57000,   0.00000, 90.00000, -270.00000);
	CreateDynamicObject_FR(7586, -728.45001, 2203.79004, 40.94000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19005, -754.34998, 2203.82007, 44.28000,   5.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18779, -758.15002, 2113.13989, 49.23000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19947, -781.26001, 2140.42993, 10.97000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19945, -781.17999, 2097.09009, 10.97000,   0.00000, 0.00000, -14.00000);
	CreateDynamicObject_FR(18779, -806.03998, 2125.08008, 49.24000,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject_FR(19005, -864.33002, 2196.18994, 44.28000,   5.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(4246, -875.06000, 2202.33008, 36.56000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3665, -886.91998, 2121.03003, 41.58000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19071, -386.98001, 2504.38989, 397.13000,   15.00000, 0.00000, 89.50000);
	CreateDynamicObject_FR(16061, -391.39001, 2504.69995, 398.06000,   -15.00000, 0.00000, -90.50000);
	CreateDynamicObject_FR(19885, -329.12000, 2503.87012, 381.62000,   15.00000, 0.00000, 89.50000);
	CreateDynamicObject_FR(19885, -444.85999, 2504.87988, 412.64001,   15.00000, 0.00000, 89.50000);
	CreateDynamicObject_FR(16061, -273.59000, 2503.57007, 366.10999,   -15.00000, 0.00000, -90.50000);
	CreateDynamicObject_FR(19071, -271.51001, 2503.36011, 366.17999,   15.00000, 0.00000, 89.50000);
	CreateDynamicObject_FR(19071, -502.66000, 2505.37988, 428.14001,   15.00000, 0.00000, 89.50000);
	CreateDynamicObject_FR(16061, -507.19000, 2505.51001, 429.04001,   -15.00000, 0.00000, -90.50000);
	CreateDynamicObject_FR(19885, -560.40997, 2505.88989, 443.60999,   15.00000, 0.00000, 89.50000);
	CreateDynamicObject_FR(19884, -212.97000, 2502.86011, 360.38000,   -15.00000, 0.00000, 89.50000);
	CreateDynamicObject_FR(4246, -811.57001, 2599.32007, 36.56000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3512, -187.60001, 2482.70996, 373.13000,   0.00000, 0.00000, -90.50000);
	CreateDynamicObject_FR(3512, -187.67000, 2492.84009, 373.13000,   0.00000, 0.00000, -90.50000);
	CreateDynamicObject_FR(3512, -187.53999, 2502.87988, 373.13000,   0.00000, 0.00000, -90.50000);
	CreateDynamicObject_FR(11498, -677.35999, 2494.38989, 447.19000,   -15.00000, 7.00000, -42.50000);
	CreateDynamicObject_FR(3512, -187.50999, 2512.75000, 373.13000,   0.00000, 0.00000, -90.50000);
	CreateDynamicObject_FR(3512, -187.23000, 2522.80005, 373.13000,   0.00000, 0.00000, -90.50000);
	CreateDynamicObject_FR(8171, -652.54999, 2506.86011, 468.45999,   -15.00000, -180.00000, -90.50000);
	CreateDynamicObject_FR(11498, -756.77002, 2480.26001, 456.51001,   -15.00000, 8.00000, -42.50000);
	CreateDynamicObject_FR(19885, -746.50000, 2507.84009, 493.72000,   15.00000, 0.00000, 89.50000);
	CreateDynamicObject_FR(2755, 0.00000, 0.00000, -1000.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, 0.00000, 0.00000, -1000.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18653, 0.00000, 0.00000, -1000.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18728, 0.00000, 0.00000, -1000.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18654, 0.00000, 0.00000, -1000.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18646, 0.00000, 0.00000, -1000.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(705, -902.40002, 2200.37012, 24.34000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(705, -904.08002, 2184.86011, 24.34000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16114, -909.90997, 2197.33008, 35.71000,   0.00000, 0.00000, 341.92999);
	CreateDynamicObject_FR(16114, -909.90997, 2197.33008, 35.71000,   0.00000, 0.00000, -69.00000);
	CreateDynamicObject_FR(16114, -915.84998, 2198.13989, 35.71000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7586, -916.20001, 2193.36011, 40.09000,   -180.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7586, -916.20001, 2193.36011, 52.97000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(705, -915.69000, 2201.71997, 24.34000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16114, -916.48999, 2198.94995, 35.71000,   0.00000, 0.00000, 37.20000);
	CreateDynamicObject_FR(705, -920.69000, 2185.76001, 24.34000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19005, -938.34003, 2322.12012, 41.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(11440, -937.58002, 2371.83008, 39.79000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(645, -932.41998, 2396.47998, 41.37000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7588, -949.50000, 2385.63989, 42.74000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(645, -954.89001, 2409.04004, 40.91000,   0.00000, 0.00000, 0.20000);
	CreateDynamicObject_FR(19005, -942.16998, 2454.72998, 41.62000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(4246, -984.06000, 2400.82007, 36.56000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19005, -982.52002, 2523.52002, 43.54000,   0.00000, 0.00000, 25.00000);
	CreateDynamicObject_FR(4246, -1123.29004, 2205.87988, 36.56000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1380, -995.41998, 2550.25000, 48.82000,   0.00000, 0.00000, 340.00000);
	CreateDynamicObject_FR(18835, -993.67999, 2582.14990, 42.68000,   -90.00000, 0.00000, -67.00000);
	CreateDynamicObject_FR(1380, -1007.02002, 2576.87988, 54.47000,   0.00000, 0.00000, 340.00000);
	CreateDynamicObject_FR(18835, -1020.21997, 2570.97998, 42.68000,   -270.00000, 0.00000, -67.00000);
	CreateDynamicObject_FR(1380, -1020.03998, 2606.61011, 48.82000,   0.00000, 0.00000, 340.00000);
	CreateDynamicObject_FR(19071, -804.21002, 2508.34009, 509.17999,   15.00000, 0.00000, 89.50000);
	CreateDynamicObject_FR(16061, -806.46997, 2508.48999, 509.03000,   -15.00000, 0.00000, -90.50000);
	CreateDynamicObject_FR(4246, -1059.77002, 2599.30005, 36.56000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19005, -1034.41003, 2634.71997, 43.54000,   0.00000, 0.00000, -155.00000);
	CreateDynamicObject_FR(19885, -862.03998, 2508.84009, 524.67999,   15.00000, 0.00000, 89.50000);
	CreateDynamicObject_FR(19891, -919.75000, 2509.34009, 540.15997,   15.00000, 0.00000, 89.50000);
	CreateDynamicObject_FR(18982, -1215.16003, 2137.70996, 41.04000,   0.00000, 0.00000, 280.00000);
	CreateDynamicObject_FR(18982, -1313.55005, 2120.36011, 41.04000,   0.00000, 0.00000, 280.00000);
	CreateDynamicObject_FR(19005, -1375.38000, 2109.18994, 42.98000,   0.00000, 0.00000, 101.28000);
	CreateDynamicObject_FR(17310, -1719.78430, 2030.59204, 297.57870,   296.50562, 179.51820, 145.24490);
	CreateDynamicObject_FR(17310, -1723.07544, 2025.83948, 289.83325,   313.69431, 179.51820, 145.24490);
	CreateDynamicObject_FR(17310, -1717.78796, 2033.58826, 308.63940,   279.31689, 179.51820, 145.24490);
	CreateDynamicObject_FR(17310, -1727.46338, 2019.38403, 283.89343,   330.88300, 179.51820, 145.24490);
	CreateDynamicObject_FR(17310, -1717.70569, 2033.66675, 319.59451,   262.12820, 179.51820, 145.24490);
	CreateDynamicObject_FR(17310, -1733.51355, 2010.58447, 278.96948,   339.47729, 179.51820, 145.24490);
	CreateDynamicObject_FR(17310, -1719.62598, 2031.09534, 330.46872,   244.93950, 179.51820, 145.24490);
	CreateDynamicObject_FR(17310, -1723.03577, 2026.46399, 339.94226,   232.04800, 179.51820, 145.24490);
	CreateDynamicObject_FR(17310, -1727.53345, 2020.00208, 341.45892,   51.56620, 180.37770, 145.24490);
	CreateDynamicObject_FR(17310, -1731.59436, 2014.07019, 350.55640,   51.56620, 180.37770, 145.24490);
	CreateDynamicObject_FR(17310, -1735.55420, 2008.24121, 359.43469,   51.56620, 180.37770, 145.24490);
	CreateDynamicObject_FR(17310, -1739.43958, 2002.54138, 368.17276,   51.56620, 180.37770, 145.24490);
	CreateDynamicObject_FR(17310, -1743.21533, 1996.97852, 376.64221,   51.56620, 180.37770, 145.24490);
	CreateDynamicObject_FR(18777, -1490.53992, 1980.75989, 576.61737,   0.00000, 0.00000, 14.33920);
	CreateDynamicObject_FR(17310, -1747.27258, 1990.98962, 385.78418,   51.56620, 180.37770, 145.24490);
	CreateDynamicObject_FR(17310, -1751.32581, 1985.01086, 394.87390,   51.56620, 180.37770, 145.24490);
	CreateDynamicObject_FR(17310, -1755.43225, 1979.02661, 404.05347,   51.56620, 180.37770, 145.24490);
	CreateDynamicObject_FR(17310, -1759.38049, 1973.20154, 412.93008,   51.56620, 180.37770, 145.24490);
	CreateDynamicObject_FR(17310, -1763.24634, 1967.49780, 421.62054,   51.56620, 180.37770, 145.24490);
	CreateDynamicObject_FR(18777, -1490.51062, 1980.73291, 602.63141,   0.00000, 0.00000, 14.33916);
	CreateDynamicObject_FR(17310, -1767.14087, 1961.78052, 430.35059,   51.56620, 180.37770, 145.24490);
	CreateDynamicObject_FR(18772, -1440.35730, 1864.85657, 576.43781,   0.00000, 0.00000, 14.33070);
	CreateDynamicObject_FR(18772, -1440.18262, 1863.61133, 576.41779,   0.00000, 0.00000, 14.33070);
	CreateDynamicObject_FR(17310, -1770.95166, 1956.11719, 438.95099,   51.56620, 180.37770, 145.24490);
	CreateDynamicObject_FR(17310, -1774.94275, 1950.23181, 447.93002,   51.56620, 180.37770, 145.24490);
	CreateDynamicObject_FR(18772, -1501.21533, 2106.90649, 628.64520,   0.00000, 0.00000, 13.93542);
	CreateDynamicObject_FR(17310, -1778.92676, 1944.35913, 456.87366,   51.56620, 180.37770, 145.24490);
	CreateDynamicObject_FR(17310, -1782.90942, 1938.50842, 465.79907,   51.56620, 180.37770, 145.24490);
	CreateDynamicObject_FR(18998, -1545.65247, 2135.13818, 632.80603,   17.82000, 89.64000, 271.05789);
	CreateDynamicObject_FR(17310, -1786.97754, 1932.51758, 474.55383,   48.98790, 180.37770, 145.24490);
	CreateDynamicObject_FR(18774, -1531.58240, 2229.46069, 628.65698,   0.00000, 0.00000, 12.97808);
	CreateDynamicObject_FR(18809, -971.73999, 2509.79004, 558.59998,   -75.00000, 180.00000, 89.50000);
	CreateDynamicObject_FR(18771, -1019.88000, 2510.19995, 571.03003,   -75.00000, 180.00000, 89.50000);
	CreateDynamicObject_FR(18809, -1019.88000, 2510.19995, 571.53003,   -75.00000, 180.00000, 89.50000);
	CreateDynamicObject_FR(19891, -1073.72998, 2510.60010, 582.10999,   -15.00000, 0.00000, -90.50000);
	CreateDynamicObject_FR(19885, -1131.56006, 2511.08008, 597.60999,   15.00000, 0.00000, 89.50000);
	CreateDynamicObject_FR(4246, -874.67999, 2797.77002, 36.56000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(4246, -1122.90002, 2797.78003, 36.56000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19005, -1152.06006, 2813.75000, 44.80000,   9.00000, 0.00000, 14.00000);
	CreateDynamicObject_FR(19072, -1186.80005, 2511.58008, 615.09998,   15.00000, 0.00000, 89.50000);
	CreateDynamicObject_FR(3512, -1213.81006, 2531.82007, 620.73999,   0.00000, 0.00000, -90.50000);
	CreateDynamicObject_FR(3512, -1214.65002, 2521.94995, 620.73999,   0.00000, 0.00000, -90.50000);
	CreateDynamicObject_FR(3512, -1214.68005, 2511.90991, 620.73999,   0.00000, 0.00000, -90.50000);
	CreateDynamicObject_FR(3512, -1214.95996, 2501.92993, 620.73999,   0.00000, 0.00000, -90.50000);
	
	//L6
	Unused_Object = CreateDynamicObject_FR(19689, -2094.0783, 1414.6757, 31.0511,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(19649, -2056.9055, 1414.6722, 28.6523,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(716, -2088.1870, 1430.4205, 6.2506,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(716, -2070.4331, 1430.4205, 6.2506,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(18778, -2079.2321, 1432.9022, 6.5265,	-10.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 2048, 11390, "hubint2", "CJ_DarkWood");
    Unused_Object = CreateDynamicObject_FR(3524, -2068.8205, 1436.8718, 9.0806,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(3524, -2065.1474, 1436.8718, 9.0806,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19688, -2114.7155, 1414.6851, 44.8248,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(11495, -2067.8823, 1448.2546, 6.1053,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(11495, -2066.0905, 1448.2546, 6.1053,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19681, -2019.7351, 1417.0843, 28.6569,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(19681, -2019.7351, 1417.0843, 34.1469,	180.0000, 0.0000, -180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(16121, -2113.9604, 1459.1458, 0.5910,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(11495, -2067.8823, 1470.2465, 6.1053,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(11495, -2066.0905, 1470.2557, 6.1053,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -2151.8552, 1414.6983, 47.2244,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(16121, -2113.9604, 1474.4656, 0.5910,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(16121, -2113.9604, 1484.1953, 0.5910,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(11495, -2067.8823, 1492.2465, 6.1053,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(11495, -2066.0905, 1492.2182, 6.1053,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -1991.7451, 1441.6601, 28.6558,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(8493, -2029.1898, 1486.4265, 16.9684,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(18805, -2079.2729, 1511.9862, 7.1015,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 8438, "vgseroads", "blendpavement2b_256");
    Unused_Object = CreateDynamicObject_FR(11495, -2067.8823, 1514.1866, 6.1053,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(11495, -2066.0905, 1514.1885, 6.1053,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(16121, -2113.9604, 1511.4459, 0.5910,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19628, -2046.7006, 1511.9295, 34.9494,	0.0000, -20.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(19629, -2118.6525, 1511.9259, 34.9460,	0.0000, -20.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(19678, -2201.8076, 1414.6977, 47.2121,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19681, -1967.1734, 1469.6527, 28.6442,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(19681, -1967.1734, 1469.6527, 34.1742,	-180.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(11495, -2067.8823, 1536.1359, 6.1053,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(11495, -2066.0905, 1536.1773, 6.1053,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(16121, -2113.9604, 1546.3864, 0.5910,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19667, -2226.7885, 1446.5141, 30.5850,	90.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19667, -2226.7885, 1446.5141, 41.6760,	90.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(19649, -1964.7526, 1506.8353, 28.6308,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(11495, -2067.8823, 1558.1072, 6.1053,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(11495, -2066.0905, 1558.1762, 6.1053,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(8493, -2019.9338, 1550.1737, 16.9684,	0.0000, 0.0000, -225.0000);
    Unused_Object = CreateDynamicObject_FR(19679, -2251.7768, 1414.6538, 25.0379,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(18788, -2031.7897, 1564.4440, 15.4919,	0.0000, 20.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(18788, -2133.5629, 1564.4440, 15.4919,	0.0000, 20.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(11495, -2067.8823, 1580.0975, 6.1053,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(11495, -2066.0905, 1580.1752, 6.1053,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19688, -1964.7548, 1543.9957, 26.1930,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(18778, -2079.2321, 1591.1978, 6.4681,	-10.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 2304, 8534, "tikimotel", "sa_wood03_128");
    Unused_Object = CreateDynamicObject_FR(3524, -2068.8488, 1591.1866, 9.1953,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2093.5256, 1591.0810, 6.9353,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(3524, -2065.0158, 1591.1866, 9.1953,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2106.2778, 1591.0810, 6.9353,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(18778, -2031.4362, 1587.5018, 7.8156,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 2048, 12991, "sw_shack2", "sw_woodslat01");
    Unused_Object = CreateDynamicObject_FR(18778, -2133.7072, 1587.5018, 7.8156,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 2048, 12991, "sw_shack2", "sw_woodslat01");
    Unused_Object = CreateDynamicObject_FR(984, -2119.2431, 1591.0810, 6.9353,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(3425, -2117.6743, 1593.6951, 17.5989,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19689, -1964.7529, 1564.6300, 12.4431,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(984, -2141.5983, 1597.9829, 6.9353,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(3524, -2016.7545, 1598.7987, 9.1853,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(13593, -2014.7520, 1600.2470, 7.0453,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 512, 10756, "airportroads_sfse", "ws_roadarrow1");
    Unused_Object = CreateDynamicObject_FR(984, -2141.5983, 1603.2159, 6.9353,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(13593, -2014.8221, 1603.0385, 7.0553,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 768, 10756, "airportroads_sfse", "ws_roadarrow1");
    Unused_Object = CreateDynamicObject_FR(3524, -2016.7545, 1604.4506, 9.1853,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -2301.7639, 1414.6530, 25.0506,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19538, -2079.1213, 1622.3261, 6.3153,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8438, "vgseroads", "blendpavement2b_256");
    Unused_Object = CreateDynamicObject_FR(19642, -2145.2714, 1617.3170, 9.3679,	0.0000, 8.4999, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19647, -2155.5268, 1617.2220, 10.1353,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(18820, -1964.7114, 1601.8070, 12.8986,	90.0000, 90.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19689, -2172.7026, 1617.1840, 12.5519,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19659, -2201.1821, 1603.3072, 8.7567,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19460, -2080.4721, 1635.7418, 26.5215,	0.0000, 90.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5422, "idlewood6_lae", "lostonclad1");
    Unused_Object = CreateDynamicObject_FR(19460, -2076.9787, 1635.7418, 26.5215,	0.0000, 90.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5422, "idlewood6_lae", "lostonclad1");
    Unused_Object = CreateDynamicObject_FR(19665, -2012.2655, 1627.4998, 31.6353,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(984, -2141.5983, 1631.3570, 6.9353,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(18846, -1836.6269, 1373.2910, 53.2700,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19634, -2077.9497, 1644.9775, 16.4553,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 256, 5422, "idlewood6_lae", "lostonclad1");
    Unused_Object = CreateDynamicObject_FR(19688, -2193.3303, 1617.1812, 26.3319,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19688, -2061.1174, 1644.1977, 29.5732,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 256, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19460, -2080.4707, 1645.3725, 26.5215,	0.0000, 90.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5422, "idlewood6_lae", "lostonclad1");
    Unused_Object = CreateDynamicObject_FR(19460, -2076.9787, 1645.3725, 26.5215,	0.0000, 90.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5422, "idlewood6_lae", "lostonclad1");
    Unused_Object = CreateDynamicObject_FR(19460, -2083.9628, 1645.3725, 26.5215,	0.0000, 90.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5422, "idlewood6_lae", "lostonclad1");
    Unused_Object = CreateDynamicObject_FR(19646, -2092.6032, 1644.7557, 30.8750,	0.0000, 45.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(19460, -2073.5085, 1645.3725, 26.5215,	0.0000, 90.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5422, "idlewood6_lae", "lostonclad1");
    Unused_Object = CreateDynamicObject_FR(19646, -2043.9592, 1644.1981, 32.0053,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19688, -2106.2985, 1644.7579, 41.2013,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19646, -2122.6015, 1644.7432, 43.5534,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -2032.1259, 1644.0328, 42.3059,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(984, -2141.5983, 1644.2088, 6.9353,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -2017.9940, 1644.1950, 32.0025,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "greygreensubuild_128");
    Unused_Object = CreateDynamicObject_FR(19646, -2210.5034, 1617.1976, 28.7620,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -1968.0460, 1627.5025, 32.0163,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19661, -2337.4050, 1419.8922, 25.0671,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(19661, -2337.4050, 1419.8922, 30.5671,	180.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(3524, -2016.7545, 1648.6728, 9.1853,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -2151.6164, 1644.7480, 43.6015,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(13593, -2014.7520, 1650.0690, 7.0453,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 512, 10756, "airportroads_sfse", "ws_roadarrow1");
    Unused_Object = CreateDynamicObject_FR(19667, -2057.1223, 1649.5853, 74.1424,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19646, -2220.5019, 1617.1976, 28.7620,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19649, -1914.7551, 1601.8061, 10.0764,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -2185.2666, 1638.9282, 8.7576,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(13593, -2014.8221, 1652.8812, 7.0453,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 512, 10756, "airportroads_sfse", "ws_roadarrow1");
    Unused_Object = CreateDynamicObject_FR(3524, -2016.7545, 1654.1232, 9.1853,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(19681, -1994.9503, 1646.4266, 42.1432,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19681, -1994.9503, 1646.4266, 47.6231,	-180.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(984, -2141.5983, 1656.9792, 6.9353,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -2342.6408, 1455.4970, 25.0576,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(984, -2141.5983, 1660.7000, 6.9353,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -2082.1008, 1666.2366, 42.3024,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19649, -1968.0507, 1644.1950, 32.0025,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19667, -2057.1135, 1660.6853, 74.1424,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19689, -2119.2192, 1666.2243, 44.7284,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19649, -2217.0964, 1638.9735, 8.7449,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19649, -2201.8303, 1644.7480, 43.6015,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(984, -2148.0844, 1667.0667, 7.1847,	1.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -2250.4846, 1617.2009, 28.8355,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(18820, -1964.7114, 1651.7784, 12.8986,	90.0000, 90.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19689, -2342.6462, 1492.6835, 27.4599,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(984, -2153.5576, 1667.0667, 7.2801,	1.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(19629, -2093.6523, 1184.0277, 195.6037,	0.0000, -15.0000, 135.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -1918.0556, 1627.5025, 32.0163,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19649, -2147.2287, 1666.2261, 69.3054,	0.0000, 45.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19646, -2291.3630, 1586.3111, 28.8309,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19659, -2307.2770, 1570.6392, 28.7888,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19659, -2307.2770, 1570.6392, 34.2787,	180.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19681, -1977.7299, 1663.6469, 42.1432,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19538, -2079.1213, 1684.8187, 6.3153,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8438, "vgseroads", "blendpavement2b_256");
    Unused_Object = CreateDynamicObject_FR(19665, -2012.2655, 1676.0207, 31.6353,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "greygreensubuild_128");
    Unused_Object = CreateDynamicObject_FR(19681, -1977.7299, 1663.6469, 47.6131,	-180.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19688, -2342.6491, 1513.3231, 41.2618,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19662, -1879.0895, 1607.0363, 10.1090,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1676, "wshxrefpump", "black64");
    Unused_Object = CreateDynamicObject_FR(19662, -1879.0895, 1607.0363, 15.5690,	180.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1676, "wshxrefpump", "black64");
    Unused_Object = CreateDynamicObject_FR(19650, -2147.4895, 1679.6033, 6.3034,	0.0000, 1.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19646, -2291.3630, 1596.3028, 28.8309,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19652, -2201.2060, 1663.9631, 18.7534,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19652, -2201.2060, 1663.9631, 24.2433,	180.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19662, -2180.0161, 1674.5999, 8.7814,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19647, -2164.3618, 1679.8231, 8.7753,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(18788, -2045.0173, 1156.4732, 180.8382,	0.0000, 15.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(19688, -2175.2021, 1666.2259, 93.8424,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19669, -1925.5704, 1651.7811, 10.1385,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19661, -2286.1352, 1611.9541, 28.8303,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19649, -1968.0460, 1676.0147, 32.0163,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(984, -2148.0844, 1692.0781, 7.1847,	1.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(19669, -2081.5578, 1699.6669, 24.2482,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19659, -1932.3944, 1660.0906, 32.0109,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "greygreensubuild_128");
    Unused_Object = CreateDynamicObject_FR(19659, -1932.3944, 1660.0906, 37.5108,	180.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "greygreensubuild_128");
    Unused_Object = CreateDynamicObject_FR(984, -2153.5346, 1692.0781, 7.2798,	1.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -2251.8117, 1644.7480, 43.6015,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(19649, -2072.3962, 1698.0528, 58.9528,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19689, -2109.5607, 1698.0606, 61.3874,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(984, -2141.5983, 1698.5206, 6.9353,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(3524, -2016.7545, 1698.8566, 9.1853,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(13593, -2014.8221, 1700.4033, 7.0453,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 512, 10756, "airportroads_sfse", "ws_roadarrow1");
    Unused_Object = CreateDynamicObject_FR(19681, -1880.8843, 1629.9219, 32.0087,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -2022.4033, 1698.0528, 58.9528,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19681, -1880.8843, 1629.9219, 37.5086,	180.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19688, -2130.2102, 1698.0639, 75.1704,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(13593, -2014.8922, 1703.2053, 7.0453,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 512, 10756, "airportroads_sfse", "ws_roadarrow1");
    Unused_Object = CreateDynamicObject_FR(3524, -2016.7545, 1704.6590, 9.1853,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -2212.3574, 1666.2266, 96.2675,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19649, -2342.6435, 1550.4444, 43.6779,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(984, -2083.8549, 1716.0141, 6.9353,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2071.0339, 1716.0141, 6.9353,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2141.5983, 1709.6619, 6.9353,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2096.6728, 1716.0141, 6.9353,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2058.9008, 1716.0141, 6.9353,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2109.5051, 1716.0141, 6.9353,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2122.3349, 1716.0141, 6.9353,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -2167.3713, 1698.0734, 77.5894,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(984, -2135.1752, 1716.0141, 6.9353,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -1975.3085, 1700.8076, 42.1414,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19649, -2217.1047, 1688.9801, 28.7525,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(984, -2052.5256, 1722.2797, 8.0011,	10.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(18820, -1964.7114, 1701.6876, 12.8986,	90.0000, 90.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -1873.8453, 1642.6955, 10.1058,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19681, -2084.0153, 1726.0208, 24.2336,	0.0000, 0.0000, -225.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(984, -2027.5441, 1722.2915, 8.0028,	10.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19689, -2065.4411, 1729.8647, 7.5461,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19649, -2102.6103, 1729.8563, 5.1459,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19650, -2040.0303, 1728.3084, 8.2027,	10.0000, 180.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 512, 8839, "vgsecarshow", "lightblue_64");
    Unused_Object = CreateDynamicObject_FR(19659, -1986.7524, 1713.9599, 58.9688,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19649, -2323.1926, 1606.2896, 28.8017,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19649, -2037.6038, 1729.8664, 31.9534,	0.0000, -45.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19659, -1986.7524, 1713.9599, 64.4588,	180.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19689, -2204.5075, 1698.0483, 80.0119,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19666, -2132.0097, 1729.8526, 28.4395,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(984, -2052.5256, 1734.0882, 10.0831,	10.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19662, -2247.9975, 1671.4786, 96.2541,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(984, -2027.5441, 1734.0882, 10.0831,	10.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19662, -2247.9975, 1671.4786, 101.7640,	180.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19688, -2009.6049, 1729.8658, 56.5544,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19649, -2301.7453, 1644.7480, 43.6015,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -2176.1997, 1729.8499, 28.8113,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19688, -2225.1428, 1698.0412, 93.8549,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19681, -2097.8359, 1746.6704, 24.2336,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19644, -2040.4482, 1745.4195, 11.7678,	0.0000, 10.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19649, -1914.7551, 1701.6871, 10.0764,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1676, "wshxrefpump", "black64");
    Unused_Object = CreateDynamicObject_FR(19646, -1964.7137, 1731.6848, 10.1093,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19646, -1873.8383, 1672.6846, 10.1003,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1676, "wshxrefpump", "black64");
    Unused_Object = CreateDynamicObject_FR(19662, -2211.8435, 1724.6356, 28.7515,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19662, -2211.8435, 1724.6356, 34.2615,	180.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19662, -2247.9863, 1692.8033, 96.2541,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19642, -2040.4145, 1755.2641, 13.5028,	0.0000, 10.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19662, -2247.9863, 1692.8033, 101.7740,	180.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19649, -1852.9527, 1654.4458, 32.0074,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19649, -2342.6435, 1600.4365, 43.6779,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19646, -1873.8183, 1680.7333, 10.0603,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1676, "wshxrefpump", "black64");
    Unused_Object = CreateDynamicObject_FR(19648, -2040.5213, 1765.1301, 15.1098,	0.0000, 10.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19679, -1975.3299, 1750.7965, 42.1780,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19681, -1967.1395, 1748.8514, 10.1130,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19689, -2100.2592, 1770.9567, 26.6464,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19662, -1879.0895, 1696.4429, 15.6090,	180.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19662, -1879.0895, 1696.4429, 10.1090,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19668, -2007.1602, 1775.7664, 47.6897,	90.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19668, -2007.1602, 1775.7664, 58.7897,	90.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19649, -1991.7056, 1776.8507, 10.0955,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -2323.1926, 1656.2995, 28.8017,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19688, -2100.2558, 1791.5305, 40.3800,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19646, -2342.6367, 1623.8643, 43.5773,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19662, -2337.3916, 1639.4924, 43.5952,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(19649, -2040.5197, 1794.6770, 20.3010,	0.0000, 10.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19662, -2337.3916, 1639.4924, 49.0852,	180.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5126, "imrancomp_las2", "ws_oldpaintedblue");
    Unused_Object = CreateDynamicObject_FR(19659, -2246.6704, 1758.1166, 47.3830,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19659, -2246.6704, 1758.1166, 52.8729,	180.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19649, -2027.0135, 1812.1585, 10.0955,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19681, -2097.8596, 1815.8792, 42.7998,	0.0000, 0.0000, 270.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19681, -2097.8596, 1815.8792, 48.2697,	180.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19681, -1828.4066, 1682.4088, 31.9607,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19681, -1828.4066, 1682.4088, 37.4305,	180.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19654, -2068.4628, 1819.6195, 47.7795,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19677, -1975.3435, 1800.7564, 64.3356,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19654, -2068.4628, 1819.6195, 57.7596,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19689, -2323.2023, 1693.4824, 31.2259,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19649, -2282.3110, 1742.1962, 47.4138,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19654, -2018.5173, 1819.6077, 67.7412,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19681, -2080.6245, 1833.1003, 42.7998,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19681, -2054.9985, 1836.7214, 10.1075,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -2043.4716, 1835.5201, 62.7422,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19649, -2092.1525, 1839.1728, 10.1019,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19689, -1826.0096, 1706.7537, 34.3819,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19689, -2129.3183, 1839.1778, 12.5261,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -2040.5197, 1843.9300, 28.9852,	0.0000, 10.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19688, -2149.9990, 1839.1860, 26.3031,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19688, -2323.2106, 1714.1019, 44.9880,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -2282.3000, 1774.0422, 47.3614,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -2187.1811, 1839.1810, 28.7107,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19659, -2007.8627, 1851.4154, 72.6974,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19688, -1826.0054, 1727.3942, 48.1636,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19659, -2007.8627, 1851.4154, 78.0773,	180.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19661, -2317.9582, 1736.9525, 47.4057,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19661, -2317.9582, 1736.9525, 52.9056,	180.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19649, -1975.3455, 1850.7447, 64.3325,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19649, -2093.4719, 1867.3199, 72.6961,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19649, -2043.4986, 1867.3199, 72.6961,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19689, -2224.3613, 1839.1778, 31.1462,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19684, -2040.5208, 1880.9591, 34.6786,	0.0000, -5.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19667, -2118.3503, 1872.8620, 104.5172,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19688, -2244.9716, 1839.1760, 44.9253,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19667, -2118.3503, 1883.9534, 104.5172,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19667, -2307.2868, 1779.6049, 79.1819,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19649, -2143.3571, 1889.4836, 72.7263,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -1826.0076, 1764.5723, 50.5824,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19667, -2307.2868, 1790.7049, 79.1819,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19665, -1975.3596, 1894.9539, 63.9693,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 9169, "vgslowbuild", "ws_white_wall1");
    Unused_Object = CreateDynamicObject_FR(19667, -2307.2868, 1801.8049, 79.1819,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19649, -2040.5112, 1917.9965, 34.3843,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19646, -1975.3590, 1904.3323, 40.6899,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19689, -2106.2016, 1921.2843, 75.1924,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19649, -2078.2216, 1921.2829, 99.7671,	0.0000, -45.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19659, -2178.9963, 1905.3928, 72.7559,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19659, -2178.9963, 1905.3928, 78.2359,	180.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19649, -2282.1474, 1839.1845, 47.3564,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19667, -1857.8452, 1839.5222, 56.1322,	-90.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19667, -1857.8452, 1839.5222, 67.2322,	-90.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19688, -2050.2290, 1921.2913, 124.3067,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19646, -1975.3590, 1914.3214, 40.6899,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19649, -2143.3527, 1921.2893, 72.7414,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -2013.0579, 1921.3002, 126.6745,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19680, -1826.0025, 1814.5574, 50.5773,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19665, -1975.3702, 1923.7510, 63.9782,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19688, -1975.8753, 1921.2913, 124.3067,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19651, -2024.5841, 1942.9473, 49.8042,	0.0000, 180.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19651, -2024.5841, 1942.9473, 44.3842,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19649, -1947.8812, 1921.2854, 99.7600,	0.0000, 45.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19689, -1919.9082, 1921.2843, 75.2024,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19649, -2040.4735, 1967.9407, 54.3567,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19677, -1826.0285, 1864.5150, 72.7738,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19649, -1882.7592, 1921.2878, 72.7849,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -1975.3697, 1967.9400, 64.3210,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19667, -2034.9509, 1992.9094, 86.1780,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19667, -2023.8509, 1992.9094, 86.1780,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19667, -2012.7509, 1992.9094, 86.1780,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19681, -1845.5893, 1918.8780, 78.2657,	180.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19681, -1845.5893, 1918.8780, 72.7557,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19681, -1828.4176, 1901.6982, 72.7457,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -2007.2060, 2017.9060, 54.3583,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19649, -1975.3697, 2017.9117, 64.3210,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1237, "dyncones", "redwhite_stripe");
    Unused_Object = CreateDynamicObject_FR(19655, -1991.2930, 2053.5686, 64.8524,	0.0000, 180.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19655, -1991.2930, 2053.5686, 59.3426,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10769, "docks2_sfse", "ws_whitestripe");
    Unused_Object = CreateDynamicObject_FR(19649, -2332.1477, 1839.1845, 47.3564,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -2332.1716, 1807.3533, 47.3596,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19659, -2367.7829, 1823.2751, 52.7254,	180.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19659, -2367.7829, 1823.2751, 47.3654,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(18794, -2143.9887, 1154.5716, 199.3988,	46.0000, 15.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(18801, -2032.2858, 1129.9224, 197.8973,	2.0999, 15.0000, -38.0999);
	
	//L8
    Unused_Object = CreateDynamicObject_FR(18788, -2859.9624, 565.8322, 23.0438,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 18800, "MRoadHelix1", "road1-3");
    Unused_Object = CreateDynamicObject_FR(18796, -2820.0541, 565.8242, 21.7512,	0.0000, 7.5000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 18800, "MRoadHelix1", "road1-3");
    Unused_Object = CreateDynamicObject_FR(695, -2885.7395, 583.3475, 14.1955,	0.0000, 0.0000, -1.2934);
    Unused_Object = CreateDynamicObject_FR(695, -2891.6796, 557.7879, 9.7455,	0.0000, 0.0000, 64.2066);
    Unused_Object = CreateDynamicObject_FR(3458, -2900.1279, 565.8597, 22.4401,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(3458, -2900.1279, 560.7601, 22.4401,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(3458, -2900.1279, 570.9797, 22.4401,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(18794, -2780.6889, 565.8168, 12.6446,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 18800, "MRoadHelix1", "road1-3");
    Unused_Object = CreateDynamicObject_FR(19002, -2760.7998, 565.8277, 11.3376,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(12990, -2921.5456, 540.0451, 1.3633,	0.0000, 0.0000, 90.8680);
    Unused_Object = CreateDynamicObject_FR(19649, -2931.6069, 570.4110, 47.1691,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(19688, -2931.6184, 533.2601, 44.7494,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(3458, -2940.3833, 566.1366, 22.4401,	0.0000, 0.0000, -0.7999);
    Unused_Object = CreateDynamicObject_FR(3458, -2940.3115, 571.2660, 22.4401,	0.0000, 0.0000, -0.7999);
    Unused_Object = CreateDynamicObject_FR(3458, -2940.4528, 561.0474, 22.4401,	0.0000, 0.0000, -0.7999);
    Unused_Object = CreateDynamicObject_FR(19669, -2931.6059, 609.5628, 47.1656,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(19689, -2931.6137, 512.5974, 30.9621,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(12990, -2946.3400, 539.6426, 1.3633,	0.0000, 0.0000, 90.8680);
    Unused_Object = CreateDynamicObject_FR(19661, -2936.8657, 489.7746, 28.5117,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(19661, -2936.8657, 489.7746, 33.9717,	180.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(4206, -2715.6533, 590.8465, 14.6031,	0.0000, 0.0000, 99.9376);
    Unused_Object = CreateDynamicObject_FR(4206, -2715.6533, 590.8465, 14.5031,	0.0000, 0.0000, 99.9376);
    Unused_Object = CreateDynamicObject_FR(12990, -2972.4929, 539.2904, 1.3633,	0.0000, 0.0000, 90.8680);
    Unused_Object = CreateDynamicObject_FR(879, -2713.7600, 599.9338, 13.0500,	0.0000, 13.0000, 154.2195);
    Unused_Object = CreateDynamicObject_FR(3458, -2980.3298, 572.4128, 22.4401,	0.0000, 0.0000, -2.5000);
    Unused_Object = CreateDynamicObject_FR(3515, -2710.3347, 588.3013, 11.9231,	0.0000, 0.0000, 114.3187);
    Unused_Object = CreateDynamicObject_FR(3458, -2980.5627, 567.2983, 22.4401,	0.0000, 0.0000, -2.5000);
    Unused_Object = CreateDynamicObject_FR(879, -2711.6948, 597.5333, 13.6561,	-7.3999, 0.0000, -124.2804);
    Unused_Object = CreateDynamicObject_FR(3458, -2980.7954, 562.2036, 22.4401,	0.0000, 0.0000, -2.5000);
    Unused_Object = CreateDynamicObject_FR(801, -2709.7485, 598.2276, 13.4608,	0.0000, 0.0000, -43.3327);
    Unused_Object = CreateDynamicObject_FR(1601, -2706.2114, 593.1571, 13.8308,	0.0000, 0.0000, 10.5657);
    Unused_Object = CreateDynamicObject_FR(652, -2703.7185, 582.5411, 14.3330,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(906, -2703.7656, 585.2018, 13.1590,	-23.9000, 2.2999, 75.5941);
    Unused_Object = CreateDynamicObject_FR(906, -2705.7138, 598.5308, 12.6504,	-101.2000, 7.9999, 136.2039);
    Unused_Object = CreateDynamicObject_FR(906, -2702.6369, 590.4292, 13.4424,	12.4999, 16.5999, 80.9143);
    Unused_Object = CreateDynamicObject_FR(18228, -2985.0722, 562.0574, -4.0769,	0.0000, 0.0000, -39.5025);
    Unused_Object = CreateDynamicObject_FR(906, -2702.6042, 593.8795, 12.8062,	53.8999, 7.9999, 121.2038);
    Unused_Object = CreateDynamicObject_FR(18228, -2989.5505, 567.2808, 2.0030,	0.0000, 0.0000, -96.6024);
    Unused_Object = CreateDynamicObject_FR(18228, -2988.0058, 581.8866, -4.0769,	0.0000, 0.0000, 158.7974);
    Unused_Object = CreateDynamicObject_FR(695, -2993.5749, 549.6396, 12.1159,	0.0000, 0.0000, 177.7968);
    Unused_Object = CreateDynamicObject_FR(19679, -2972.5166, 484.5201, 28.4913,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(683, -2996.6945, 584.3830, 12.4071,	0.0000, 0.0000, 73.3719);
    Unused_Object = CreateDynamicObject_FR(18830, -2749.3332, 459.5296, 88.7125,	14.8999, -141.5999, -1.1090);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "dinerfloor01_128");
    Unused_Object = CreateDynamicObject_FR(970, -2690.2734, 602.3094, 27.0645,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(1786, -2689.9653, 601.8670, 27.0045,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(1840, -2689.7365, 601.1586, 27.0145,	0.0000, 0.0000, -171.0123);
    Unused_Object = CreateDynamicObject_FR(2313, -2689.6721, 601.2877, 26.5245,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(12990, -2998.2861, 539.0338, 1.3633,	0.0000, 0.0000, 90.8680);
    Unused_Object = CreateDynamicObject_FR(1840, -2689.6638, 602.7894, 27.0345,	0.0000, 0.0000, 157.7745);
    Unused_Object = CreateDynamicObject_FR(10009, -2689.4414, 604.5313, 23.3045,	0.0000, 0.0000, 89.9133);
    Unused_Object = CreateDynamicObject_FR(970, -2688.2099, 600.2176, 27.0625,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(10009, -2689.5336, 604.5566, 15.4545,	0.0000, 0.0000, 10.3133);
    Unused_Object = CreateDynamicObject_FR(970, -2690.2800, 611.4425, 27.0535,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(970, -2690.2800, 614.1834, 27.0535,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(3498, -2690.0847, 616.6317, 31.0135,	0.0000, 0.0000, 91.0448);
    Unused_Object = CreateDynamicObject_FR(18701, -2689.3195, 615.5245, 25.7235,	0.0000, 0.0000, 24.8048);
    Unused_Object = CreateDynamicObject_FR(18701, -2689.1599, 615.3891, 25.7235,	0.0000, 0.0000, 24.8048);
    Unused_Object = CreateDynamicObject_FR(1481, -2689.1333, 615.7503, 27.2235,	0.0000, 0.0000, 48.0151);
    Unused_Object = CreateDynamicObject_FR(2804, -2689.0852, 615.6908, 27.3635,	0.0000, 0.0000, -35.2114);
    Unused_Object = CreateDynamicObject_FR(18701, -2689.0581, 615.6463, 25.7235,	0.0000, 0.0000, 24.8048);
    Unused_Object = CreateDynamicObject_FR(18701, -2688.9335, 616.0449, 25.7235,	0.0000, 0.0000, 24.8048);
    Unused_Object = CreateDynamicObject_FR(18701, -2688.8046, 615.7636, 25.7235,	0.0000, 0.0000, 24.8048);
    Unused_Object = CreateDynamicObject_FR(19378, -2685.5786, 605.4229, 26.4486,	0.0000, 90.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(970, -2684.1098, 600.2176, 27.0625,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(970, -2687.5295, 616.7979, 27.0625,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19378, -2685.5786, 611.6857, 26.4476,	0.0000, 90.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(1594, -2684.6772, 613.1181, 26.9935,	0.0000, 0.0000, 138.2560);
    Unused_Object = CreateDynamicObject_FR(970, -2685.4499, 616.7979, 27.0625,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19128, -2682.3300, 608.1058, 26.4735,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(970, -2680.0097, 600.2176, 27.0625,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(2311, -2677.8110, 603.7252, 26.5035,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(2964, -2680.4526, 614.1842, 26.5338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(970, -2681.2302, 616.7979, 27.0625,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19378, -2678.0825, 605.4239, 26.4476,	0.0000, 90.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(1723, -2676.3957, 600.7728, 26.5135,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(2311, -2676.8906, 603.7252, 26.5035,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(970, -2675.9096, 600.2176, 27.0625,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19378, -2678.0810, 611.6837, 26.4466,	0.0000, 90.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(1723, -2675.2307, 604.0123, 26.4835,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(19433, -2673.3735, 601.1635, 27.2825,	90.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(970, -2676.9904, 616.7979, 27.0625,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19433, -2673.3735, 604.4931, 27.2825,	90.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(16151, -2674.5102, 609.4434, 26.8645,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19433, -2673.3735, 607.9837, 27.2825,	90.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(626, -2674.2648, 614.6143, 28.5425,	0.0000, 0.0000, -114.0497);
    Unused_Object = CreateDynamicObject_FR(19433, -2673.3735, 611.4533, 27.2825,	90.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19433, -2673.3735, 614.9424, 27.2825,	90.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(18801, -2732.3303, 446.0960, 100.4621,	15.2999, 0.0000, 8.0113);
    SetDynamicObjectMaterial(Unused_Object, 1024, 16150, "ufo_bar", "dinerfloor01_128");
    Unused_Object = CreateDynamicObject_FR(18788, -3026.6535, 569.5037, 18.1223,	0.0000, -12.2999, -3.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 18800, "MRoadHelix1", "road1-3");
    Unused_Object = CreateDynamicObject_FR(12990, -3023.2280, 538.6699, 1.3633,	0.0000, 0.0000, 90.8680);
    Unused_Object = CreateDynamicObject_FR(9593, -2673.8022, 639.9854, 39.6181,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 2816, 8390, "vegasemulticar", "ws_mixedbrick");
    Unused_Object = CreateDynamicObject_FR(9593, -2673.7822, 639.9454, 39.6231,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 2816, 8390, "vegasemulticar", "ws_mixedbrick");
    Unused_Object = CreateDynamicObject_FR(3515, -2661.7536, 607.6197, 13.1990,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8390, "vegasemulticar", "ws_mixedbrick");
    Unused_Object = CreateDynamicObject_FR(19667, -2997.4833, 452.6768, 34.0000,	90.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(19667, -2997.4833, 452.6768, 45.1000,	90.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(19677, -3022.4670, 484.4941, 50.6569,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(638, -2644.0310, 579.8530, 15.3113,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(18792, -2690.6787, 442.8264, 75.5626,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 16150, "ufo_bar", "dinerfloor01_128");
    Unused_Object = CreateDynamicObject_FR(638, -2641.3911, 579.8530, 15.3113,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(638, -2638.7221, 579.8530, 15.3113,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(638, -2636.0439, 579.8530, 15.3113,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(12990, -3050.6821, 538.3281, 1.3633,	0.0000, 0.0000, 90.8680);
    Unused_Object = CreateDynamicObject_FR(3502, -2636.2463, 595.5979, 9.9190,	90.0000, 0.0000, 3.2581);
    SetDynamicObjectMaterial(Unused_Object, 0, 4600, "theatrelan2", "gm_labuld2_b");
    Unused_Object = CreateDynamicObject_FR(18788, -3065.1877, 571.5234, 9.2885,	0.0000, -13.3999, -3.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 18800, "MRoadHelix1", "road1-3");
    Unused_Object = CreateDynamicObject_FR(18763, -2622.0898, 581.2223, 12.2819,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8390, "vegasemulticar", "ws_mixedbrick");
    Unused_Object = CreateDynamicObject_FR(1368, -2619.7827, 580.7636, 15.4609,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(18763, -2619.1000, 581.2223, 12.2809,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8390, "vegasemulticar", "ws_mixedbrick");
    Unused_Object = CreateDynamicObject_FR(6056, -2618.9990, 607.7892, 15.8583,	-90.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 768, 3990, "lanroad", "tarmacplain_bank");
    Unused_Object = CreateDynamicObject_FR(641, -2614.6450, 582.0130, 11.8509,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(19126, -2613.6672, 580.1350, 15.1715,	0.0000, 0.0000, 358.3442);
    Unused_Object = CreateDynamicObject_FR(641, -2614.2619, 601.8931, 11.8509,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(638, -2614.3034, 605.5379, 15.3163,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(638, -2614.3034, 608.1879, 15.3163,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(12990, -3076.0966, 537.9756, 1.3633,	0.0000, 0.0000, 90.8680);
    Unused_Object = CreateDynamicObject_FR(3515, -2614.1826, 613.7507, 14.4249,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4600, "theatrelan2", "gm_labuld2_b");
    Unused_Object = CreateDynamicObject_FR(805, -2614.1896, 634.9878, 15.4890,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -3072.4692, 484.4967, 50.6440,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(808, -2614.4448, 651.7524, 21.5272,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(12950, -2602.2553, 624.1149, 14.4531,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 256, 16150, "ufo_bar", "sa_wood07_128");
    Unused_Object = CreateDynamicObject_FR(18796, -2631.1303, 442.8309, 73.6899,	0.0000, 7.5000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 16150, "ufo_bar", "dinerfloor01_128");
    Unused_Object = CreateDynamicObject_FR(3499, -2602.1779, 628.3961, 12.1306,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 256, 16150, "ufo_bar", "sa_wood07_128");
    Unused_Object = CreateDynamicObject_FR(12950, -2602.2553, 630.4458, 19.1631,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 256, 16150, "ufo_bar", "sa_wood07_128");
    Unused_Object = CreateDynamicObject_FR(808, -2614.4448, 666.0225, 26.1972,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(3499, -2602.1779, 634.6563, 16.9006,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 256, 16150, "ufo_bar", "sa_wood07_128");
    Unused_Object = CreateDynamicObject_FR(12950, -2602.2553, 636.6757, 23.7731,	0.0000, 2.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 256, 16150, "ufo_bar", "sa_wood07_128");
    Unused_Object = CreateDynamicObject_FR(994, -2602.7998, 641.9427, 27.2831,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 256, 16150, "ufo_bar", "sa_wood07_128");
    Unused_Object = CreateDynamicObject_FR(3499, -2602.1779, 640.9168, 21.5206,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 256, 16150, "ufo_bar", "sa_wood07_128");
    Unused_Object = CreateDynamicObject_FR(1633, -3094.7170, 537.7731, 1.2661,	-13.6999, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 2048, 3902, "libertyhi3", "glass2_64");
    Unused_Object = CreateDynamicObject_FR(3499, -2602.1779, 640.9168, 10.5806,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 256, 16150, "ufo_bar", "sa_wood07_128");
    Unused_Object = CreateDynamicObject_FR(18794, -3100.8220, 573.3710, 0.2687,	0.0000, 0.0000, -2.9999);
    SetDynamicObjectMaterial(Unused_Object, 1024, 18800, "MRoadHelix1", "road1-3");
    Unused_Object = CreateDynamicObject_FR(19667, -3097.4926, 512.2418, 82.4684,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(19121, -2578.1457, 579.7449, 15.1663,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19667, -3097.4926, 501.1417, 82.4684,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(19667, -3097.4926, 490.0417, 82.4684,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(3524, -3117.6721, 565.8057, 4.0453,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(3524, -3117.6721, 580.8055, 4.0453,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(18671, -3117.6901, 569.0545, -0.3761,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(18671, -3117.6901, 578.1844, -0.3761,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(714, -3118.8520, 562.1423, 1.1140,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(18778, -3119.2707, 573.6322, 1.5651,	-10.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 2048, 9683, "goldengate_sfw", "stonesandkb2_128");
    Unused_Object = CreateDynamicObject_FR(714, -3118.8520, 584.4821, 1.1140,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(18824, -3119.5681, 537.6757, 16.3851,	0.0000, -51.1999, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
    Unused_Object = CreateDynamicObject_FR(9836, -2574.2153, 638.2603, 20.6133,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 768, 8390, "vegasemulticar", "ws_mixedbrick");
    Unused_Object = CreateDynamicObject_FR(9836, -2574.1953, 638.2904, 20.5583,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 768, 8390, "vegasemulticar", "ws_mixedbrick");
    Unused_Object = CreateDynamicObject_FR(18794, -2592.2233, 442.8299, 64.6280,	0.0000, 15.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 16150, "ufo_bar", "dinerfloor01_128");
    Unused_Object = CreateDynamicObject_FR(19649, -3122.4770, 517.8070, 50.6137,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(19121, -2555.3193, 579.7449, 15.1663,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(1597, -2559.4492, 625.9116, 29.4262,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(3471, -2557.9433, 630.5146, 27.8125,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(18796, -2550.6748, 559.9583, 52.9077,	0.0000, 22.5000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 18800, "MRoadHelix1", "road1-3");
    Unused_Object = CreateDynamicObject_FR(18794, -2550.6738, 595.1584, 34.0968,	0.0000, 30.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 18800, "MRoadHelix1", "road1-3");
    Unused_Object = CreateDynamicObject_FR(18794, -2550.6757, 607.8860, 29.4619,	0.0000, 25.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 18800, "MRoadHelix1", "road1-3");
    Unused_Object = CreateDynamicObject_FR(984, -2547.8203, 579.5556, 14.9109,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(673, -2569.0654, 459.0608, 65.4287,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2546.2321, 579.5556, 14.9109,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(18796, -2550.6748, 521.4635, 63.2103,	0.0000, 7.5000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 18800, "MRoadHelix1", "road1-3");
    Unused_Object = CreateDynamicObject_FR(19681, -3159.6596, 520.2293, 50.6261,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(19681, -3159.6596, 520.2293, 56.0961,	180.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(18824, -3166.3208, 537.6757, 16.3858,	0.0000, -51.1999, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
    Unused_Object = CreateDynamicObject_FR(19681, -3169.0246, 631.7545, 27.1442,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8529, "vgsmotelgrnd", "greenwall2");
    Unused_Object = CreateDynamicObject_FR(19689, -3166.6130, 656.1372, 29.5638,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17547, "eastbeach4a_lae2", "ltgreenwallc1");
    Unused_Object = CreateDynamicObject_FR(19688, -3166.6201, 676.7973, 43.3731,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8529, "vgsmotelgrnd", "greenwall2");
    Unused_Object = CreateDynamicObject_FR(19649, -3187.6381, 544.7841, 50.6311,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(19681, -3186.2517, 614.5175, 27.1442,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17547, "eastbeach4a_lae2", "ltgreenwallc1");
    Unused_Object = CreateDynamicObject_FR(19681, -3186.2517, 614.5175, 32.6343,	180.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17547, "eastbeach4a_lae2", "ltgreenwallc1");
    Unused_Object = CreateDynamicObject_FR(18805, -3198.4814, 573.6937, 2.0056,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 4849, "ground3_las", "ws_bigstones");
    Unused_Object = CreateDynamicObject_FR(19649, -3166.6184, 713.9597, 45.7916,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17547, "eastbeach4a_lae2", "ltgreenwallc1");
    Unused_Object = CreateDynamicObject_FR(18824, -3206.9448, 537.6757, 16.4458,	0.0000, -51.1999, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
    Unused_Object = CreateDynamicObject_FR(19681, -3212.2197, 572.7824, 50.6051,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(19681, -3217.0734, 597.1358, 50.6161,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(19681, -3217.0734, 597.1358, 56.1161,	180.0000, 0.0000, 270.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(19649, -3223.4277, 612.0902, 27.1686,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5870, "sunst18_lawn", "greenwall3");
    Unused_Object = CreateDynamicObject_FR(19662, -3171.8537, 749.6315, 45.8098,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8529, "vgsmotelgrnd", "greenwall2");
    Unused_Object = CreateDynamicObject_FR(19662, -3171.8537, 749.6315, 51.2598,	180.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8529, "vgsmotelgrnd", "greenwall2");
    Unused_Object = CreateDynamicObject_FR(19649, -3241.6508, 625.1409, 50.6114,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(19667, -3225.7224, 445.7421, 34.0325,	90.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(19667, -3225.7224, 445.7421, 45.1325,	90.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(19667, -3248.4360, 617.6428, 59.0029,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17547, "eastbeach4a_lae2", "ltgreenwallc1");
    Unused_Object = CreateDynamicObject_FR(19646, -3187.5034, 754.8900, 45.7505,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17547, "eastbeach4a_lae2", "ltgreenwallc1");
    Unused_Object = CreateDynamicObject_FR(19667, -3248.4360, 628.7427, 59.0029,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5870, "sunst18_lawn", "greenwall3");
    Unused_Object = CreateDynamicObject_FR(19667, -3248.4360, 639.8427, 59.0029,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17547, "eastbeach4a_lae2", "ltgreenwallc1");
    Unused_Object = CreateDynamicObject_FR(18824, -3258.3395, 537.6757, 15.7999,	0.0000, -51.1999, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
    Unused_Object = CreateDynamicObject_FR(19681, -3259.9584, 557.8904, 28.5218,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(19681, -3259.9584, 557.8904, 34.0219,	180.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(19649, -3257.5361, 520.7257, 28.5280,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(19667, -3248.4360, 650.9427, 59.0029,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5870, "sunst18_lawn", "greenwall3");
    Unused_Object = CreateDynamicObject_FR(19667, -3248.4360, 662.0427, 59.0029,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17547, "eastbeach4a_lae2", "ltgreenwallc1");
    Unused_Object = CreateDynamicObject_FR(19842, -3266.8857, 588.1452, 17.6638,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(18830, -3265.9978, 599.9494, 10.5232,	0.0000, 135.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5774, "garag3_lawn", "orngpartwall1_256");
    Unused_Object = CreateDynamicObject_FR(19842, -3266.8857, 611.6152, 17.6638,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(19688, -3204.6828, 754.8902, 43.3457,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8529, "vgsmotelgrnd", "greenwall2");
    Unused_Object = CreateDynamicObject_FR(19679, -3257.5385, 470.7482, 28.5314,	0.0000, 0.0000, 270.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(19681, -3277.1770, 575.1192, 28.5218,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(18778, -3277.3461, 573.6322, 1.4819,	-10.0000, 0.0000, 270.0000);
    SetDynamicObjectMaterial(Unused_Object, 2304, 9683, "goldengate_sfw", "stonesandkb2_128");
    Unused_Object = CreateDynamicObject_FR(18778, -3277.4951, 573.6322, 0.6251,	0.0000, 0.0000, 270.0000);
    Unused_Object = CreateDynamicObject_FR(18671, -3278.5541, 569.0545, -0.3761,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19681, -3266.2104, 653.1390, 50.6047,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 256, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(3524, -3278.9338, 565.8868, 3.8138,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(18671, -3278.5541, 577.3045, -0.3761,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(3524, -3278.8537, 580.9267, 3.8138,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3279.1101, 559.3199, 1.6438,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19681, -3266.2104, 653.1390, 56.0947,	180.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(984, -3279.1101, 587.5797, 1.6438,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(3524, -3279.8947, 565.8868, 3.8138,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -3279.3642, 588.1756, 5.1538,	90.0000, 90.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3279.1101, 547.5601, 1.6438,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(3524, -3279.8947, 580.9567, 3.8138,	0.0000, 0.0000, -90.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3279.1101, 527.5300, 1.6438,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -3279.3642, 611.6257, 5.1538,	90.0000, 90.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3279.1101, 612.2797, 1.6438,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3279.1101, 514.7600, 1.6438,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(703, -3284.6733, 554.4597, 1.2638,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(716, -3281.8127, 616.6694, 1.1338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3279.1101, 501.9202, 1.6438,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3279.1101, 499.5001, 1.6438,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(3524, -3284.0693, 617.7565, 3.8538,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(703, -3284.6733, 517.1599, 1.2638,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -3273.4511, 667.5702, 27.0193,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5870, "sunst18_lawn", "greenwall3");
    Unused_Object = CreateDynamicObject_FR(19689, -3225.3349, 754.8994, 29.5452,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17547, "eastbeach4a_lae2", "ltgreenwallc1");
    Unused_Object = CreateDynamicObject_FR(716, -3281.5434, 493.8894, 1.1338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19666, -3289.3583, 622.4647, 26.5838,	0.0000, 0.0000, 270.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(3524, -3284.0798, 493.1861, 3.8738,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -3268.6254, 690.3136, 50.6025,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(19677, -3257.5268, 420.7460, 50.6555,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(3524, -3294.7697, 617.7565, 3.8538,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19666, -3289.3583, 488.6040, 26.5838,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(19666, -3289.3583, 646.1046, 50.2439,	0.0000, 0.0000, 270.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(3524, -3294.5603, 493.1861, 3.8738,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(716, -3301.9333, 616.6694, 1.1338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19667, -3263.0949, 715.3106, 82.4651,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(19666, -3289.3583, 464.9541, 50.2638,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(716, -3302.0334, 493.8894, 1.1338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -3257.5419, 740.3125, 50.6025,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(3524, -3309.0617, 617.7565, 3.8538,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -3314.3576, 577.5493, 28.5252,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(19649, -3289.3532, 690.3136, 50.6025,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(19666, -3314.3583, 622.4647, 26.5838,	0.0000, 0.0000, 270.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1257, "bustopm", "CJ_GREENMETAL");
    Unused_Object = CreateDynamicObject_FR(3524, -3309.1811, 493.1861, 3.8738,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -3148.4882, 304.9816, 70.9749,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue_64");
    Unused_Object = CreateDynamicObject_FR(3524, -3319.6525, 617.7565, 3.8538,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19655, -3112.8186, 289.0458, 76.0013,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19666, -3314.3583, 488.6040, 26.5838,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19681, -3309.5234, 556.9477, 116.2750,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19688, -3314.3693, 653.8207, 24.5320,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10871, "blacksky_sfse", "ws_skywinsgreen");
    Unused_Object = CreateDynamicObject_FR(3524, -3319.6015, 493.1861, 3.8738,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(19677, -3262.5029, 754.8864, 27.1282,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8529, "vgsmotelgrnd", "greenwall2");
    Unused_Object = CreateDynamicObject_FR(19649, -3289.3586, 420.7288, 50.6284,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(716, -3326.8669, 616.6694, 1.1338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -3257.5278, 370.7486, 50.6284,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(19689, -3314.3544, 674.4274, 10.7520,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1257, "bustopm", "CJ_GREENMETAL");
    Unused_Object = CreateDynamicObject_FR(716, -3326.8669, 493.8894, 1.1338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(3524, -3334.2124, 617.7565, 3.8538,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19659, -3323.0310, 579.7662, 116.2748,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19667, -3338.9140, 534.1351, 25.5372,	90.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -3323.4506, 667.5702, 27.0193,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17547, "eastbeach4a_lae2", "ltgreenwallc1");
    Unused_Object = CreateDynamicObject_FR(19649, -3314.3659, 444.4151, 26.9424,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19667, -3338.9140, 534.1351, 36.6372,	90.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19646, -3314.3662, 691.6031, 8.3485,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10871, "blacksky_sfse", "ws_skywinsgreen");
    Unused_Object = CreateDynamicObject_FR(19531, -3341.5346, 555.5112, 1.0238,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19667, -3338.9140, 534.1351, 47.7372,	90.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19667, -3339.3149, 583.1005, 60.3624,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(3524, -3334.1130, 493.1861, 3.8738,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(19667, -3339.3149, 594.2005, 60.3624,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(19667, -3338.9140, 534.1351, 58.8372,	90.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19666, -3339.3583, 622.4647, 26.5838,	0.0000, 0.0000, 270.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");
    Unused_Object = CreateDynamicObject_FR(19667, -3338.9140, 534.1351, 69.9371,	90.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -3289.3532, 740.3125, 50.6025,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4726, "libhelipad_lan2", "helipad_whitelines");
    Unused_Object = CreateDynamicObject_FR(19667, -3338.9140, 534.1351, 81.0371,	90.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(3524, -3344.6242, 617.7565, 3.8538,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19666, -3339.3583, 488.1140, 26.5838,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue_64");
    Unused_Object = CreateDynamicObject_FR(19667, -3338.9140, 534.1351, 92.1371,	90.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19681, -3316.7839, 708.7734, 8.3532,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1257, "bustopm", "CJ_GREENMETAL");
    Unused_Object = CreateDynamicObject_FR(19689, -3339.3632, 653.8265, 29.3580,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 12938, "sw_apartments", "desgreengrass");
    Unused_Object = CreateDynamicObject_FR(19689, -3338.9470, 536.3211, 100.0935,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(3524, -3344.5732, 493.1861, 3.8738,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(716, -3351.2673, 616.6694, 1.1338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -3334.0935, 528.9510, 116.2699,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19688, -3338.9404, 556.9401, 113.8590,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -3338.9428, 499.1473, 97.6860,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19688, -3314.3728, 407.2531, 24.5136,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(716, -3353.2963, 493.8894, 1.1338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19659, -3273.4436, 775.9815, 50.5611,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(3524, -3359.1130, 617.7565, 3.8538,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19659, -3273.4436, 775.9815, 56.0011,	180.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 16150, "ufo_bar", "GEwhite1_64");
    Unused_Object = CreateDynamicObject_FR(19649, -3339.3564, 681.8099, 53.9214,	0.0000, -45.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");
    Unused_Object = CreateDynamicObject_FR(19649, -3364.2802, 599.7427, 28.4992,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(19649, -3339.3391, 444.3878, 26.9412,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(3524, -3359.1044, 493.1861, 3.8738,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -3289.3586, 370.7486, 50.6284,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(19666, -3364.3583, 622.4647, 26.5838,	0.0000, 0.0000, 270.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5870, "sunst18_lawn", "greenwall3");
    Unused_Object = CreateDynamicObject_FR(3524, -3369.6335, 617.7565, 3.8538,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19654, -3173.5373, 289.0479, 46.0191,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19669, -3109.4062, 273.1322, 41.0756,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19661, -3359.0949, 662.3139, 26.9531,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5870, "sunst18_lawn", "greenwall3");
    Unused_Object = CreateDynamicObject_FR(19646, -3364.3518, 646.6605, 26.9549,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17547, "eastbeach4a_lae2", "ltgreenwallc1");
    Unused_Object = CreateDynamicObject_FR(19661, -3359.0949, 662.3139, 32.4131,	180.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5870, "sunst18_lawn", "greenwall3");
    Unused_Object = CreateDynamicObject_FR(19666, -3364.3583, 488.6040, 26.5838,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19689, -3314.3698, 386.6057, 10.7188,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(3524, -3369.6550, 493.1861, 3.8738,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(19689, -3332.2824, 727.6954, 10.7877,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10871, "blacksky_sfse", "ws_skywinsgreen");
    Unused_Object = CreateDynamicObject_FR(19680, -3312.4411, 754.8471, 4.9727,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17547, "eastbeach4a_lae2", "ltgreenwallc1");
    Unused_Object = CreateDynamicObject_FR(716, -3376.2590, 616.6694, 1.1338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -3338.9428, 449.1472, 97.6860,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19667, -3287.4677, 786.6819, 10.5148,	90.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8529, "vgsmotelgrnd", "greenwall2");
    Unused_Object = CreateDynamicObject_FR(19667, -3287.4677, 786.6819, 21.6148,	90.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17547, "eastbeach4a_lae2", "ltgreenwallc1");
    Unused_Object = CreateDynamicObject_FR(19688, -3339.3515, 709.8114, 78.4875,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 12938, "sw_apartments", "desgreengrass");
    Unused_Object = CreateDynamicObject_FR(19654, -3173.5373, 289.0479, 56.0091,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue_64");
    Unused_Object = CreateDynamicObject_FR(716, -3377.9064, 493.8894, 1.1338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19689, -3339.3334, 407.1926, 29.3624,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue_64");
    Unused_Object = CreateDynamicObject_FR(3524, -3384.0144, 617.7565, 3.8538,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19677, -3370.7214, 509.1363, 97.6857,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19649, -3364.3754, 444.3734, 26.9214,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(3524, -3384.0781, 493.1861, 3.8738,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(19666, -3389.3583, 622.4647, 26.5838,	0.0000, 0.0000, 270.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "greygreensubuild_128");
    Unused_Object = CreateDynamicObject_FR(19659, -3273.4396, 335.0922, 50.6255,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(19659, -3273.4396, 335.0922, 56.0956,	180.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(3524, -3394.5976, 617.7565, 3.8538,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19667, -3355.6647, 515.2077, 148.1368,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(714, -3400.3359, 563.6197, 1.3338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19669, -3322.2104, 763.1259, 55.8756,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 12938, "sw_apartments", "desgreengrass");
    Unused_Object = CreateDynamicObject_FR(19655, -3184.1418, 289.0599, 65.9927,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19646, -3370.7407, 479.1408, 97.7067,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(714, -3400.3359, 546.7498, 1.3338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19666, -3389.3583, 488.6040, 26.5838,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10765, "airportgnd_sfse", "ws_whiteplaster_btm");
    Unused_Object = CreateDynamicObject_FR(19654, -3373.4455, 691.6652, 31.9338,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "greygreensubuild_128");
    Unused_Object = CreateDynamicObject_FR(19649, -3398.6669, 561.5339, 51.8371,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(714, -3400.3359, 526.4298, 1.3338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(716, -3399.7292, 616.6694, 1.1338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19654, -3373.4455, 691.6652, 41.9438,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 11391, "hubprops2_sfse", "blackbag");
    Unused_Object = CreateDynamicObject_FR(19842, -3403.9411, 562.0349, 5.1538,	90.0000, 90.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3403.9951, 561.4460, 1.6838,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3403.9951, 551.0661, 1.6838,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -3403.9411, 550.3851, 5.1538,	90.0000, 90.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(3524, -3394.5395, 493.1861, 3.8738,	0.0000, 0.0000, 180.0000);
    Unused_Object = CreateDynamicObject_FR(19688, -3346.8803, 742.3021, 24.5716,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1257, "bustopm", "CJ_GREENMETAL");
    Unused_Object = CreateDynamicObject_FR(19842, -3403.9411, 597.5053, 5.1538,	90.0000, 90.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3403.9951, 598.1359, 1.6838,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -3403.9411, 538.7651, 5.1538,	90.0000, 90.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3403.9951, 538.2362, 1.6838,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -3403.9711, 609.1152, 5.1538,	90.0000, 90.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3403.9951, 611.1456, 1.6838,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19681, -3401.0874, 598.6828, 51.8225,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(984, -3403.9951, 527.7460, 1.6838,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -3403.9411, 527.1354, 5.2138,	90.0000, 90.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -3403.9411, 612.5453, 5.1538,	90.0000, 90.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -3389.3649, 666.6630, 26.9472,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 11391, "hubprops2_sfse", "blackbag");
    Unused_Object = CreateDynamicObject_FR(19667, -3363.5104, 523.0495, 148.1368,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19681, -3401.0874, 598.6828, 57.2625,	180.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(716, -3399.3254, 493.8894, 1.1338,	0.0000, 0.0000, 0.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -3339.3461, 746.9879, 80.9089,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");
    Unused_Object = CreateDynamicObject_FR(19649, -3314.3764, 349.4267, 8.2703,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19681, -3348.5976, 386.6074, 33.2544,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19649, -3370.7634, 449.1448, 97.7051,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19649, -3339.3508, 379.1907, 53.9571,	0.0000, 45.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19681, -3348.5976, 386.6074, 38.7545,	180.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19649, -3385.0649, 509.3333, 116.2930,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19842, -3416.3430, 561.9454, 17.6638,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -3414.2800, 599.7427, 28.4992,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(18830, -3417.0957, 573.9393, 10.5656,	0.0000, 135.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5774, "garag3_lawn", "orngpartwall1_256");
    Unused_Object = CreateDynamicObject_FR(19842, -3416.3430, 550.3054, 17.6638,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(19669, -3351.5866, 754.8383, 4.9594,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8529, "vgsmotelgrnd", "greenwall2");
    Unused_Object = CreateDynamicObject_FR(18830, -3417.0673, 585.7795, 10.5939,	0.0000, 135.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5774, "garag3_lawn", "orngpartwall1_256");
    Unused_Object = CreateDynamicObject_FR(19689, -3364.1103, 405.5446, 35.6276,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19842, -3416.3430, 597.5051, 17.6638,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(19667, -3404.2277, 536.5634, 83.6793,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19842, -3416.3430, 538.6854, 17.6638,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -3389.3481, 444.4027, 26.9667,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
    Unused_Object = CreateDynamicObject_FR(19842, -3416.3430, 609.1252, 17.6638,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(19659, -3354.8583, 413.4833, 97.6952,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19842, -3416.3430, 527.1354, 17.6638,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(18830, -3417.0957, 515.3690, 10.5656,	0.0000, 135.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5774, "garag3_lawn", "orngpartwall1_256");
    Unused_Object = CreateDynamicObject_FR(19649, -3364.3754, 394.3932, 26.9214,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19688, -3378.7187, 420.1580, 49.4370,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(18830, -3417.1240, 503.5390, 10.5374,	0.0000, 135.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5774, "garag3_lawn", "orngpartwall1_256");
    Unused_Object = CreateDynamicObject_FR(19667, -3415.3278, 536.5634, 83.6793,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -3389.3566, 716.6733, 46.9233,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "greygreensubuild_128");
    Unused_Object = CreateDynamicObject_FR(19659, -3355.2612, 766.4840, 37.3289,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");
    Unused_Object = CreateDynamicObject_FR(19659, -3355.2612, 766.4840, 42.7389,	180.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");
    Unused_Object = CreateDynamicObject_FR(19649, -3425.7143, 626.5690, 51.7902,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -3405.0087, 446.4313, 51.8549,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19667, -3426.4279, 536.5634, 83.6793,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19649, -3322.2263, 802.2579, 55.8557,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");
    Unused_Object = CreateDynamicObject_FR(19649, -3431.9848, 511.5785, 51.8527,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19661, -3426.4313, 480.1117, 26.9596,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10765, "airportgnd_sfse", "ws_whiteplaster_btm");
    Unused_Object = CreateDynamicObject_FR(19652, -3355.2380, 771.9908, 70.9103,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 12938, "sw_apartments", "desgreengrass");
    Unused_Object = CreateDynamicObject_FR(19681, -3409.6257, 481.3397, 116.2867,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19681, -3423.5864, 679.4906, 46.8883,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 11391, "hubprops2_sfse", "blackbag");
    Unused_Object = CreateDynamicObject_FR(19681, -3423.5864, 679.4906, 52.3583,	180.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 11391, "hubprops2_sfse", "blackbag");
    Unused_Object = CreateDynamicObject_FR(19649, -3346.1950, 349.4290, 33.2657,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -3373.1684, 768.5917, 26.9946,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10871, "blacksky_sfse", "ws_skywinsgreen");
    Unused_Object = CreateDynamicObject_FR(19681, -3429.5578, 474.4145, 51.8405,	0.0000, 0.0000, 315.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19681, -3429.5578, 474.4145, 57.3305,	180.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19649, -3421.1696, 444.4364, 26.9568,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
    Unused_Object = CreateDynamicObject_FR(19649, -3339.3281, 796.9617, 60.8874,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");
    Unused_Object = CreateDynamicObject_FR(19688, -3339.3527, 351.1824, 78.5169,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue_64");
    Unused_Object = CreateDynamicObject_FR(19649, -3339.3652, 802.1257, 37.2706,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 12938, "sw_apartments", "desgreengrass");
    Unused_Object = CreateDynamicObject_FR(19689, -3451.4421, 599.7396, 30.9155,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(19688, -3439.0781, 660.5724, 44.4746,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "greygreensubuild_128");
    Unused_Object = CreateDynamicObject_FR(19659, -3405.2502, 408.7716, 26.9671,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10765, "airportgnd_sfse", "ws_whiteplaster_btm");
    Unused_Object = CreateDynamicObject_FR(19688, -3412.0524, 456.9804, 113.8554,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19667, -3294.4848, 827.1935, 87.6607,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 12938, "sw_apartments", "desgreengrass");
    Unused_Object = CreateDynamicObject_FR(19681, -3366.7897, 357.2279, 26.9299,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -3412.0551, 428.9961, 89.2916,	0.0000, -45.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19649, -3421.1665, 716.6646, 46.8930,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "greygreensubuild_128");
    Unused_Object = CreateDynamicObject_FR(19681, -3366.7897, 357.2279, 32.4099,	180.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19689, -3453.6789, 645.9851, 30.6956,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 11391, "hubprops2_sfse", "blackbag");
    Unused_Object = CreateDynamicObject_FR(19651, -3330.2917, 324.4243, 23.2652,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19651, -3330.2917, 324.4243, 28.7352,	180.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19689, -3371.1848, 789.3054, 39.7302,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 12938, "sw_apartments", "desgreengrass");
    Unused_Object = CreateDynamicObject_FR(19659, -3405.2651, 752.3303, 46.9202,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 11391, "hubprops2_sfse", "blackbag");
    Unused_Object = CreateDynamicObject_FR(19659, -3405.2651, 752.3303, 52.4302,	180.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 11391, "hubprops2_sfse", "blackbag");
    Unused_Object = CreateDynamicObject_FR(19667, -3305.5849, 827.1935, 87.6607,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");
    Unused_Object = CreateDynamicObject_FR(19688, -3468.4020, 539.8033, 34.7108,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(19689, -3468.4013, 519.2470, 21.0027,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(19662, -3473.6530, 562.6440, 37.1325,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(19688, -3472.1125, 599.7462, 44.7006,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(19662, -3473.6530, 562.6440, 42.6226,	180.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(19649, -3462.0632, 485.3594, 26.9731,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
    Unused_Object = CreateDynamicObject_FR(19649, -3412.0551, 393.6409, 53.9363,	0.0000, -45.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -3461.0607, 661.9011, 51.7961,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19681, -3472.6184, 630.4754, 28.2833,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "greygreensubuild_128");
    Unused_Object = CreateDynamicObject_FR(19667, -3316.6850, 827.1935, 87.6607,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 12938, "sw_apartments", "desgreengrass");
    Unused_Object = CreateDynamicObject_FR(19658, -3330.2922, 313.7597, 10.7741,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -3468.4040, 482.0834, 18.5744,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(19681, -3384.0156, 339.9967, 26.9299,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19689, -3412.0483, 365.6746, 29.3432,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue2_32");
    Unused_Object = CreateDynamicObject_FR(19688, -3371.1643, 809.8340, 53.4485,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");
    Unused_Object = CreateDynamicObject_FR(19649, -3288.8964, 852.1219, 55.8441,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");
    Unused_Object = CreateDynamicObject_FR(19667, -3487.0605, 513.0595, 58.7853,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10765, "airportgnd_sfse", "ws_whiteplaster_btm");
    Unused_Object = CreateDynamicObject_FR(19669, -3468.3742, 442.9418, 18.5657,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(19667, -3487.0605, 501.9595, 58.7853,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
    Unused_Object = CreateDynamicObject_FR(19667, -3487.0605, 490.8595, 58.7853,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10765, "airportgnd_sfse", "ws_whiteplaster_btm");
    Unused_Object = CreateDynamicObject_FR(19689, -3496.9497, 628.0614, 30.7043,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 11391, "hubprops2_sfse", "blackbag");
    Unused_Object = CreateDynamicObject_FR(19649, -3339.3505, 314.0169, 80.9401,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19681, -3397.7663, 796.5891, 26.9890,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1257, "bustopm", "CJ_GREENMETAL");
    Unused_Object = CreateDynamicObject_FR(19649, -3509.3161, 567.9438, 37.1552,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(19649, -3509.3054, 599.7547, 47.1231,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 17146, "cuntwroad", "Tar_blenddrtwhiteline");
    Unused_Object = CreateDynamicObject_FR(19662, -3406.8093, 342.8280, 26.9266,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -3512.0654, 518.6205, 26.9271,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
    Unused_Object = CreateDynamicObject_FR(19689, -3339.3566, 839.2969, 39.7106,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");
    Unused_Object = CreateDynamicObject_FR(19658, -3355.2395, 832.6075, 58.3947,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 12938, "sw_apartments", "desgreengrass");
    Unused_Object = CreateDynamicObject_FR(19688, -3517.5620, 628.0587, 44.4568,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "greygreensubuild_128");
    Unused_Object = CreateDynamicObject_FR(19658, -3355.2395, 832.6075, 63.8247,	180.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 12938, "sw_apartments", "desgreengrass");
    Unused_Object = CreateDynamicObject_FR(19677, -3496.4189, 697.2503, 51.8008,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19669, -3400.1779, 822.9184, 26.9901,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10871, "blacksky_sfse", "ws_skywinsgreen");
    Unused_Object = CreateDynamicObject_FR(19667, -3491.5815, 737.4114, 24.0601,	90.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19667, -3491.5815, 737.4114, 35.1601,	90.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19667, -3491.5815, 737.4114, 46.2601,	90.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8529, "vgsmotelgrnd", "greenwall2");
    Unused_Object = CreateDynamicObject_FR(19655, -3544.9638, 583.8448, 42.1429,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(19655, -3544.9638, 583.8448, 47.5729,	180.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "archgrnd3_SFE");
    Unused_Object = CreateDynamicObject_FR(19669, -3551.2084, 518.5877, 26.9440,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10765, "airportgnd_sfse", "ws_whiteplaster_btm");
    Unused_Object = CreateDynamicObject_FR(19649, -3554.7570, 628.0639, 46.8778,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 11391, "hubprops2_sfse", "blackbag");
    Unused_Object = CreateDynamicObject_FR(19688, -3339.3417, 859.8876, 53.4223,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 12938, "sw_apartments", "desgreengrass");
    Unused_Object = CreateDynamicObject_FR(19679, -3531.7917, 732.5701, 18.5251,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19662, -3334.1210, 278.4003, 80.9379,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue_64");
    Unused_Object = CreateDynamicObject_FR(19662, -3334.1210, 278.4003, 86.4579,	180.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue_64");
    Unused_Object = CreateDynamicObject_FR(19649, -3298.4663, 273.1480, 80.9340,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19677, -3604.7585, 628.0680, 46.8749,	0.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "greygreensubuild_128");
    Unused_Object = CreateDynamicObject_FR(19663, -3248.4711, 273.1432, 78.7413,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue_64");
    Unused_Object = CreateDynamicObject_FR(19663, -3198.4709, 273.1432, 78.7413,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -3148.5566, 273.1234, 41.0451,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue_64");
    Unused_Object = CreateDynamicObject_FR(19649, -3148.4768, 273.1013, 81.0153,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8839, "vgsecarshow", "lightblue_64");
    Unused_Object = CreateDynamicObject_FR(19667, -3629.7507, 659.9169, 41.3451,	90.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 11391, "hubprops2_sfse", "blackbag");
    Unused_Object = CreateDynamicObject_FR(19667, -3629.7507, 659.9169, 30.2451,	90.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "greygreensubuild_128");
    Unused_Object = CreateDynamicObject_FR(19667, -3629.7507, 659.9169, 19.1451,	90.0000, 0.0000, 180.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 11391, "hubprops2_sfse", "blackbag");
    Unused_Object = CreateDynamicObject_FR(19680, -3654.7114, 628.1071, 13.5854,	0.0000, 0.0000, 0.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "greygreensubuild_128");
    Unused_Object = CreateDynamicObject_FR(19649, -3567.1635, 767.9025, 18.5101,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1675, "wshxrefhse", "duskyblue_128");
    Unused_Object = CreateDynamicObject_FR(19669, -3594.8381, 795.5744, 18.5365,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 8395, "pyramid", "white");
    Unused_Object = CreateDynamicObject_FR(19649, -3339.3422, 897.0640, 55.8434,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");
    Unused_Object = CreateDynamicObject_FR(19681, -3291.3154, 889.2474, 55.8246,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 12938, "sw_apartments", "desgreengrass");
    Unused_Object = CreateDynamicObject_FR(19681, -3305.1032, 909.8835, 61.2537,	180.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");
    Unused_Object = CreateDynamicObject_FR(19681, -3305.1032, 909.8835, 55.8138,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");
    Unused_Object = CreateDynamicObject_FR(19649, -3339.3422, 947.0442, 55.8434,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 12938, "sw_apartments", "desgreengrass");
    Unused_Object = CreateDynamicObject_FR(19649, -3307.5197, 947.0442, 55.8434,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 12938, "sw_apartments", "desgreengrass");
    Unused_Object = CreateDynamicObject_FR(19659, -3323.4426, 982.6807, 61.3408,	180.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");
    Unused_Object = CreateDynamicObject_FR(19659, -3323.4426, 982.6807, 55.8508,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 1273, "icons3", "greengrad32");

	//L9
    Unused_Object = CreateDynamicObject_FR(984, -2922.3984, 1393.8110, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2915.0458, 1406.2893, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2909.3859, 1401.9576, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2924.6960, 1396.9064, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2929.0471, 1400.4587, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2918.4675, 1411.0369, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2913.3129, 1384.7254, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2924.4245, 1415.6671, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2933.9953, 1406.1707, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2903.7375, 1394.9831, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2913.2873, 1385.4997, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2938.1423, 1400.4802, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2918.5131, 1420.1087, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -2937.7514, 1400.9165, 17.2842,	90.0000, 0.0000, 225.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -2918.9348, 1419.7319, 17.2842,	90.0000, 0.0000, 225.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2900.3205, 1392.8922, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19535, -2933.6203, 1415.6140, 7.7143,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10858, "navyroad_sfse", "ws_sub_pen_conc4");
    Unused_Object = CreateDynamicObject_FR(19532, -2933.9711, 1415.2578, 7.7043,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10858, "navyroad_sfse", "ws_sub_pen_conc4");
    Unused_Object = CreateDynamicObject_FR(19842, -2944.0468, 1394.6226, 17.2842,	90.0000, 0.0000, 225.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2913.8823, 1426.2053, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2945.2612, 1394.8354, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -2899.4729, 1391.6296, 30.5185,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19842, -2910.7246, 1427.9411, 17.2842,	90.0000, 0.0000, 225.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2904.2243, 1375.6391, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2933.6523, 1425.0576, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2943.5104, 1415.1873, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2947.2077, 1391.4149, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2909.4309, 1429.1879, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2892.2524, 1383.4985, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2891.2409, 1383.8137, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2901.8041, 1374.0227, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2923.2705, 1435.4400, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19646, -2920.6596, 1370.4323, 30.5440,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(736, -2954.7197, 1403.9860, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -2952.2578, 1386.4127, 17.2842,	90.0000, 0.0000, 225.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -2902.5087, 1436.1580, 17.2842,	90.0000, 0.0000, 225.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2902.6267, 1437.4616, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19646, -2926.7922, 1364.3031, 30.5440,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(984, -2895.1364, 1366.5522, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2900.3852, 1438.2309, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2956.2687, 1382.3499, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2956.6445, 1383.4503, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2882.1633, 1374.7344, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2955.1728, 1427.1363, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2945.5227, 1436.9228, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2911.8344, 1446.8765, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -2960.4738, 1378.1964, 17.2842,	90.0000, 0.0000, 225.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2880.8366, 1372.0864, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2890.3627, 1362.5808, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2965.9523, 1392.7565, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19532, -2884.1311, 1366.1109, 7.8869,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10858, "navyroad_sfse", "ws_sub_pen_conc4");
    Unused_Object = CreateDynamicObject_FR(19842, -2894.3186, 1444.3474, 17.2842,	90.0000, 0.0000, 225.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2891.3173, 1447.2967, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2965.3427, 1373.2770, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2886.0290, 1357.4445, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2891.2172, 1448.8740, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2889.0039, 1449.6096, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2968.1069, 1371.9871, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2873.0883, 1365.6624, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -2888.6115, 1450.0544, 17.2842,	90.0000, 0.0000, 225.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2968.2878, 1370.3352, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -2968.6689, 1370.0010, 17.2842,	90.0000, 0.0000, 225.0000);
    Unused_Object = CreateDynamicObject_FR(19533, -2960.9353, 1442.9102, 7.7143,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10858, "navyroad_sfse", "ws_sub_pen_conc4");
    Unused_Object = CreateDynamicObject_FR(736, -2900.4284, 1458.2835, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2966.7070, 1438.6700, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2957.1943, 1448.5970, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2977.5310, 1381.1804, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2879.0419, 1351.2592, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2869.4555, 1360.7069, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19667, -2877.8979, 1405.3579, 62.3376,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(984, -2876.9421, 1348.3582, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -2948.0080, 1343.0937, 30.5385,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19667, -2870.0383, 1397.5013, 62.3376,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(984, -2864.0073, 1356.5760, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -2848.4724, 1411.2524, 30.4836,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19531, -2972.8754, 1454.1540, 7.6843,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5787, "melrose02_lawn", "sfe_arch6");
    Unused_Object = CreateDynamicObject_FR(736, -2968.6228, 1460.0240, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2978.3422, 1450.3077, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2867.8601, 1339.2781, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2858.0327, 1349.2852, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2867.5544, 1339.7747, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(18830, -2890.5275, 1478.6262, 17.1498,	0.0000, 135.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melrpurp2_law");
    Unused_Object = CreateDynamicObject_FR(984, -2854.9357, 1347.5041, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(18830, -2997.1879, 1371.6733, 17.1639,	0.0000, 135.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melrpurp2_law");
    Unused_Object = CreateDynamicObject_FR(18794, -2875.6867, 1473.5480, 6.8043,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(6965, -2950.5424, 1479.4451, 11.3043,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(6964, -2950.4370, 1479.4266, 6.8343,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(18794, -2992.2968, 1356.9399, 6.8043,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19667, -2950.3076, 1451.5107, 73.9671,	90.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(6965, -3000.1274, 1429.8562, 11.3043,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(6964, -3000.1057, 1429.7591, 6.8343,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(18830, -2898.5192, 1486.6166, 17.1498,	0.0000, 135.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melrgren2_law");
    Unused_Object = CreateDynamicObject_FR(18830, -3005.1049, 1379.5911, 17.1639,	0.0000, 135.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melrgren2_law");
    Unused_Object = CreateDynamicObject_FR(19533, -2984.0175, 1465.9925, 7.7043,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10858, "navyroad_sfse", "ws_sub_pen_conc4");
    Unused_Object = CreateDynamicObject_FR(984, -2858.7878, 1330.2059, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2979.8247, 1471.2264, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2989.7336, 1461.6993, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19652, -2996.9597, 1356.7198, 40.5935,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19667, -2950.3076, 1451.5107, 85.0571,	90.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(18830, -2906.8825, 1494.9805, 17.1498,	0.0000, 135.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melroran2_law");
    Unused_Object = CreateDynamicObject_FR(18830, -3013.4409, 1387.9270, 17.1639,	0.0000, 135.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melroran3_law");
    Unused_Object = CreateDynamicObject_FR(736, -2856.1799, 1328.4033, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2845.8618, 1338.4317, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2846.5783, 1337.8369, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19647, -2827.2521, 1432.4736, 30.4872,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19647, -2827.2521, 1432.4736, 35.9072,	180.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19662, -2976.9228, 1321.5860, 30.6022,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19662, -2976.9228, 1321.5860, 36.1422,	180.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19652, -2996.9597, 1356.7198, 60.6035,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(18830, -2915.2504, 1503.3470, 17.1498,	0.0000, 135.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melroran3_law");
    Unused_Object = CreateDynamicObject_FR(18830, -3021.7709, 1396.2584, 17.1639,	0.0000, 135.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melroran2_law");
    Unused_Object = CreateDynamicObject_FR(19646, -2991.7226, 1328.9271, 30.5603,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19646, -2998.7817, 1335.9997, 30.5603,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(984, -2839.1960, 1331.7694, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2849.7578, 1321.1761, 8.7269,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19646, -3004.7014, 1341.9182, 30.5603,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(736, -3001.0153, 1472.9779, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2991.3889, 1482.7882, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(18830, -2923.5502, 1511.6490, 17.1498,	0.0000, 135.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melrpurp2_law");
    Unused_Object = CreateDynamicObject_FR(18830, -3030.1240, 1404.6118, 17.1639,	0.0000, 135.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melrpurp2_law");
    Unused_Object = CreateDynamicObject_FR(736, -2835.4868, 1326.7487, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2845.0043, 1317.2302, 19.1951,	0.0000, 0.0000, 90.0000);
    Unused_Object = CreateDynamicObject_FR(19680, -2955.1257, 1491.6782, 68.4091,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19652, -2996.9597, 1356.7198, 80.6036,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(18778, -2836.9384, 1318.9229, 6.8906,	-10.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 2048, 10249, "ottos2_sfw", "chromepipe2_64HV");
    Unused_Object = CreateDynamicObject_FR(18830, -2931.7956, 1519.8940, 17.1498,	0.0000, 135.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melrgren2_law");
    Unused_Object = CreateDynamicObject_FR(19678, -2990.5126, 1456.3393, 90.5992,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(18830, -3038.4294, 1412.9184, 17.1639,	0.0000, 135.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melrgren2_law");
    Unused_Object = CreateDynamicObject_FR(3524, -2828.4370, 1321.3404, 8.9915,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(3524, -2839.4111, 1310.3651, 8.9915,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(18788, -2809.6201, 1450.1973, 27.4788,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19649, -2857.4738, 1502.2481, 40.6546,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(18788, -2847.9692, 1501.2648, 17.2067,	0.0000, 15.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(18796, -3020.0959, 1329.1312, 16.8057,	0.0000, 10.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(736, -3001.8779, 1493.2742, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -3011.5944, 1483.5578, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -3022.8325, 1472.3221, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2988.7324, 1506.4188, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(18830, -2940.1096, 1528.2077, 17.1498,	0.0000, 135.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melroran2_law");
    Unused_Object = CreateDynamicObject_FR(18830, -3046.7373, 1421.2263, 17.1639,	0.0000, 135.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melroran3_law");
    Unused_Object = CreateDynamicObject_FR(736, -3034.3156, 1460.8383, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19535, -3011.3962, 1493.3911, 7.6943,	0.0000, 0.0000, -135.0000);
    Unused_Object = CreateDynamicObject_FR(19532, -3011.7568, 1493.0397, 7.7043,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 10858, "navyroad_sfse", "ws_sub_pen_conc4");
    Unused_Object = CreateDynamicObject_FR(736, -2977.2412, 1517.9093, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19659, -2821.0856, 1488.3376, 40.6391,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19649, -3025.8701, 1420.9863, 90.6048,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19688, -2883.7563, 1528.5274, 38.2327,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19659, -2821.0856, 1488.3376, 46.0491,	180.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(736, -3045.6303, 1449.5244, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2965.7932, 1529.3572, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -3020.8537, 1492.9136, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -3009.3623, 1504.4051, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19649, -3025.8715, 1363.1492, 90.6021,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19649, -2919.7700, 1527.0270, 68.4166,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19842, -3016.0322, 1499.3436, 17.2842,	90.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3013.6513, 1501.7864, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3022.7316, 1492.7015, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -3024.2561, 1491.1206, 17.2842,	90.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(18830, -2948.4694, 1536.5666, 17.1498,	0.0000, 135.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melroran3_law");
    Unused_Object = CreateDynamicObject_FR(19842, -3007.8171, 1507.5599, 17.2842,	90.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(18830, -3054.9399, 1429.4288, 17.1639,	0.0000, 135.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "melroran2_law");
    Unused_Object = CreateDynamicObject_FR(736, -3032.1704, 1481.5946, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3004.6037, 1510.8305, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2997.9680, 1515.8013, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3031.8122, 1483.6220, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -3032.4697, 1482.9056, 17.2842,	90.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -2999.6020, 1515.7762, 17.2842,	90.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2995.5603, 1519.8731, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -3040.6926, 1474.6827, 17.2842,	90.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3040.8149, 1474.6213, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -3043.5300, 1470.2375, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -2991.4118, 1523.9652, 17.2842,	90.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -2986.6286, 1527.1370, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19689, -2898.3544, 1543.1279, 24.4256,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(984, -2986.4865, 1528.9468, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -3048.9108, 1466.4653, 17.2842,	90.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -3049.8393, 1465.5980, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -2983.2160, 1532.1602, 17.2842,	90.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(736, -3054.9370, 1458.8304, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19647, -3037.5610, 1311.5212, 22.0142,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(736, -2975.0654, 1538.6976, 19.1951,	0.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(984, -2977.4130, 1538.0180, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(19647, -3037.5610, 1311.5212, 27.4842,	180.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(18801, -2786.9548, 1459.2194, 51.1618,	0.0000, 0.0000, 52.4999);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(984, -3056.7050, 1458.7322, 8.3169,	0.0000, 0.0000, -45.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -3057.1193, 1458.2554, 17.2842,	90.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19842, -2975.0595, 1540.3132, 17.2842,	90.0000, 0.0000, 45.0000);
    Unused_Object = CreateDynamicObject_FR(19662, -3047.3715, 1392.0644, 90.5961,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19649, -2835.0410, 1524.8117, 40.6407,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(18794, -2953.4577, 1551.3206, 6.8043,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(18794, -3070.0832, 1434.7248, 6.8043,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(18801, -2771.4997, 1447.3544, 51.1618,	0.0000, 0.0000, 52.4999);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(18788, -2820.6398, 1528.5871, 27.5595,	0.0000, 15.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19689, -2893.4807, 1553.3109, 70.8476,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19681, -3047.1435, 1507.3208, 22.0111,	0.0000, 0.0000, 90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19649, -2924.6169, 1569.3927, 21.9973,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19663, -3071.7297, 1479.3150, 19.7528,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19667, -2848.7836, 1546.4008, 72.4735,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(18796, -2925.6628, 1579.1403, 16.7932,	0.0000, -10.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19649, -3058.7768, 1290.3154, 22.0144,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(18788, -3097.8007, 1407.0096, 17.2143,	0.0000, 15.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(18794, -2748.9912, 1456.1660, 27.4830,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19681, -3042.3122, 1531.6870, 22.0102,	0.0000, 0.0000, -90.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19667, -2840.9343, 1554.2497, 72.4735,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19688, -2878.8930, 1567.8780, 84.6051,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19649, -3017.7536, 1559.6719, 22.0099,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19646, -2832.7338, 1569.5289, 40.6407,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19667, -2833.0971, 1562.0844, 72.4735,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19663, -3107.0859, 1443.9600, 19.7528,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19646, -2839.8000, 1576.5936, 40.6407,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19647, -2908.1943, 1596.7762, 22.0032,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19647, -2908.1943, 1596.7762, 27.4832,	180.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19646, -2846.8515, 1583.6439, 40.6407,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19662, -3076.2758, 1525.0272, 30.5067,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19662, -3076.2758, 1525.0272, 35.9967,	180.0000, 0.0000, 225.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19662, -2996.2736, 1588.5971, 21.9944,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19649, -3097.7929, 1496.0872, 30.4962,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(18788, -3125.1071, 1379.7027, 27.5619,	0.0000, 15.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19662, -2866.4548, 1587.7342, 87.0374,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19649, -2959.9528, 1604.7279, 21.9973,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19689, -2896.0573, 1608.9263, 24.4145,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19661, -2854.2150, 1598.4212, 40.6253,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19662, -2866.4548, 1587.7342, 92.4674,	180.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19646, -3025.6118, 1581.9222, 30.5187,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19647, -3119.0046, 1474.8853, 30.4872,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 256, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19647, -3119.0046, 1474.8853, 35.9072,	180.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19628, -2771.9082, 1556.2198, 42.3431,	0.0000, -15.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19689, -3013.4672, 1594.0605, 32.9506,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19667, -3033.0568, 1582.3111, 62.3376,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19662, -3083.9274, 1547.5430, 30.5067,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19662, -3083.9274, 1547.5430, 35.9566,	180.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19663, -3142.4414, 1408.6046, 19.7528,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19688, -2998.8688, 1608.6538, 46.7339,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(18788, -3136.6657, 1457.1807, 27.4710,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19629, -2720.9572, 1505.2971, 42.3412,	0.0000, -15.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19689, -2998.8515, 1608.6772, 52.1306,	0.0000, 180.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19688, -2881.4655, 1623.5346, 38.2016,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19649, -3062.4218, 1576.4709, 30.5084,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19649, -3094.0749, 1255.0178, 22.0144,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19667, -3040.9118, 1590.1597, 62.3376,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19659, -2996.3955, 1618.6553, 21.9900,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19659, -2996.3955, 1618.6553, 27.4600,	180.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19667, -2866.3420, 1602.9082, 118.8545,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19649, -2972.5717, 1634.9475, 49.1918,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19667, -2858.4868, 1610.7561, 118.8545,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19649, -2972.5717, 1634.9475, 54.5518,	0.0000, 180.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19649, -2832.7133, 1627.3542, 40.6191,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19649, -2872.2548, 1632.3485, 87.0051,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(18801, -3159.1784, 1448.4080, 51.1718,	0.0000, 0.0000, -128.8999);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19646, -3115.2590, 1233.8204, 22.0309,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19649, -2855.1779, 1649.8211, 40.6171,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19663, -3177.8127, 1373.2357, 19.7528,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19628, -3173.8139, 1352.0926, 42.3535,	0.0000, -15.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19646, -3119.2822, 1229.8015, 22.0309,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(18801, -3174.3469, 1460.6472, 51.1718,	0.0000, 0.0000, -128.8999);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19667, -2897.0534, 1665.4299, 32.5101,	90.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19667, -2897.0534, 1665.4299, 43.6101,	90.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19662, -2893.7756, 1661.2684, 86.9825,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19678, -2937.2309, 1670.2735, 49.1652,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19646, -3126.3339, 1222.7469, 22.0309,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19662, -2893.7756, 1661.2684, 92.4325,	180.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19662, -2811.2202, 1656.2666, 40.6201,	0.0000, 0.0000, -225.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(18794, -3196.8254, 1451.9506, 27.5521,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19662, -2826.2607, 1671.3211, 40.6101,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19662, -2826.2607, 1671.3211, 46.0701,	180.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19662, -3141.1198, 1215.3851, 22.0173,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19662, -3141.1198, 1215.3851, 27.4373,	180.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19646, -3155.9116, 1222.7496, 22.0184,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19646, -3156.6691, 1223.5070, 22.0184,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19663, -3213.1726, 1337.8802, 19.7528,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19649, -2872.2880, 1690.1806, 86.9638,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19680, -2901.8852, 1705.6036, 26.9593,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19629, -3224.7338, 1402.9542, 42.3691,	0.0000, -15.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 1024, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19649, -3177.8732, 1244.7167, 22.0015,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19652, -2865.8818, 1719.0909, 36.9346,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19646, -2880.6547, 1726.8038, 26.9190,	0.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19652, -2865.8818, 1719.0909, 56.9546,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19652, -2865.8818, 1719.0909, 76.9545,	0.0000, 0.0000, 135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn01_LAwN");
    Unused_Object = CreateDynamicObject_FR(19649, -3213.2197, 1280.0650, 22.0015,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 3990, "lanroad", "lakerbcol");
    Unused_Object = CreateDynamicObject_FR(19662, -2850.7993, 1719.0977, 86.9642,	0.0000, 0.0000, -225.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19662, -2850.7993, 1719.0977, 92.4042,	180.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19662, -2865.8774, 1734.1824, 32.4191,	180.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19662, -2865.8774, 1734.1824, 26.9691,	0.0000, 0.0000, -135.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 5729, "melrose19_lawn", "malawn02_LAwN");
    Unused_Object = CreateDynamicObject_FR(19662, -3234.7067, 1308.9600, 27.5160,	180.0000, 0.0000, 45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
    Unused_Object = CreateDynamicObject_FR(19662, -3234.7067, 1308.9600, 21.9960,	0.0000, 0.0000, -45.0000);
    SetDynamicObjectMaterial(Unused_Object, 0, 4806, "ground5_las", "newcut3_LAS");
	
	//AEROLV
	CreateDynamicObject_FR(19128, 1637.3299, 1190.1800, 12.4700, 0.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(19128, 1637.3299, 1190.1800, 8.5398, 0.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(19128, 1637.3299, 1190.1800, 16.4500, 0.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(7981, 1624.9798, 1190.1600, 4.8600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19842, 1637.2500, 1205.7900, 12.6598, 0.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(19842, 1637.2398, 1174.6999, 12.6598, 0.0000, -90.0000, -180.0000);
	CreateDynamicObject_FR(8483, 1628.6899, 1173.0998, 2.7400, 0.0000, -90.0000, 315.0000);
	CreateDynamicObject_FR(8483, 1627.6400, 1210.6800, 2.7400, 0.0000, -90.0000, -315.0000);
	CreateDynamicObject_FR(11489, 1632.9499, 1167.4300, 9.5100, 0.0000, 0.0000, -135.0000);
	CreateDynamicObject_FR(11489, 1632.9499, 1214.6098, 9.5100, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(3578, 1632.0998, 1218.7700, 10.5298, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3578, 1621.5500, 1218.7800, 10.5298, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3578, 1610.9898, 1218.7800, 10.5298, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3578, 1600.4100, 1218.7700, 10.5298, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(10271, 1596.7800, 1173.6500, -7.3298, 0.0000, 90.0000, -90.0000);
	CreateDynamicObject_FR(1383, 1590.5000, 1176.5300, -11.6499, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(3578, 1589.9000, 1218.7700, 10.5298, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, 1584.5100, 1218.6700, 9.7798, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1609.0998, 1240.8100, 10.1300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18739, 1609.1198, 1240.8398, 15.1300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1383, 1584.6098, 1218.8498, -1.6900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1625.1198, 1250.2298, 10.1300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18739, 1625.1600, 1250.2198, 15.1300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1383, 1573.7800, 1176.5000, -11.6499, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(8639, 1566.5400, 1180.7298, 19.2600, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(3533, 1593.1800, 1250.4300, 10.1300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18739, 1593.0699, 1250.4200, 15.1300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(7586, 1609.1800, 1259.4399, 15.6800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(726, 1609.2198, 1259.4499, 21.9099, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1625.3000, 1268.7500, 10.1300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18739, 1625.2198, 1268.7298, 15.1300, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18838, 1545.8100, 1179.1500, 4.5700, 90.0000, 0.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(3533, 1593.1700, 1268.7900, 10.1300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18739, 1593.0998, 1268.7800, 15.1300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, 1546.8698, 1218.5898, 9.7798, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1383, 1546.9898, 1218.9000, -2.3199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1609.2398, 1277.9200, 10.1300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18739, 1609.2099, 1277.9599, 15.1300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3578, 1542.0699, 1218.7398, 10.5298, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(6964, 1537.9698, 1179.1899, 9.0200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(6965, 1537.9698, 1179.1899, 12.7600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19128, 1537.3900, 1160.1600, 11.2798, -90.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3472, 1655.9100, 1093.2198, 9.8198, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18838, 1529.9000, 1179.1400, 4.5700, 90.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(979, 1660.3698, 1090.3398, 10.6598, 0.0000, 0.0000, 148.1499);
	CreateDynamicObject_FR(3578, 1531.4798, 1218.7398, 10.5298, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(7392, 1666.2500, 1091.7500, 19.5400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1656.1700, 1088.1800, 10.6598, 0.0000, 0.0000, 271.4400);
	CreateDynamicObject_FR(979, 1668.9399, 1089.2099, 10.6598, 0.0000, 0.0000, 196.1398);
	CreateDynamicObject_FR(3472, 1674.1300, 1091.0600, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1673.9300, 1085.5998, 10.6598, 0.0000, 0.0000, 91.0000);
	CreateDynamicObject_FR(979, 1656.5000, 1080.0000, 10.6598, 0.0000, 0.0000, 273.0100);
	CreateDynamicObject_FR(7392, 1518.7099, 1176.0300, 26.9099, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3472, 1656.3598, 1075.0100, 9.9498, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18826, 1531.0898, 1228.1700, 64.2600, -90.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(978, 1653.6600, 1071.9898, 10.6598, 0.0000, 0.0000, 224.0000);
	CreateDynamicObject_FR(979, 1675.6098, 1076.4599, 10.6598, 0.0000, 0.0000, 112.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1546.9898, 1263.8498, 61.5098, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10056, "bigoldbuild_sfe", "cluckbelld1_law");
	CreateDynamicObject_FR(978, 1646.0000, 1066.0400, 10.6598, 0.0000, 0.0000, 207.5399);
	CreateDynamicObject_FR(979, 1672.6600, 1071.1800, 10.6598, 0.0000, 0.0000, 11.6598);
	CreateDynamicObject_FR(3472, 1678.0100, 1072.0400, 10.1099, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1665.4898, 1066.2500, 10.6598, 0.0000, 0.0000, 56.0000);
	CreateDynamicObject_FR(712, 1544.5898, 1286.5300, 19.1200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1638.8000, 1060.3398, 10.6598, 0.0000, 0.0000, 229.3500);
	CreateDynamicObject_FR(1237, 1661.2099, 1061.5799, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1659.3100, 1059.6999, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18778, 1549.4798, 1295.7500, 11.3198, 0.0000, 0.0000, 60.0000);
	CreateDynamicObject_FR(1237, 1657.7099, 1057.7700, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18778, 1534.2099, 1286.9599, 11.3100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1656.3598, 1055.1600, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(712, 1554.7398, 1304.5998, 19.1200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(9833, 1662.6700, 1055.4898, 6.9200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1635.2800, 1051.4499, 10.6598, 0.0000, 0.0000, 266.6600);
	CreateDynamicObject_FR(1237, 1656.4100, 1052.6700, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1657.5600, 1050.2900, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1659.1899, 1048.0699, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(712, 1523.6500, 1286.5200, 19.1200, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1515.1800, 1263.6999, 61.5098, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	CreateDynamicObject_FR(979, 1664.8698, 1046.8100, 10.6598, 0.0000, 0.0000, 181.2299);
	CreateDynamicObject_FR(978, 1638.4100, 1042.8698, 10.6598, 0.0000, 0.0000, 313.3399);
	CreateDynamicObject_FR(18778, 1549.4798, 1313.3598, 11.3100, 0.0000, 0.0000, 120.0000);
	CreateDynamicObject_FR(979, 1674.0600, 1047.0400, 10.6598, 0.0000, 0.0000, 182.0000);
	CreateDynamicObject_FR(3515, 1534.3000, 1304.5500, 14.5798, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3053, 1534.3000, 1304.5500, 15.6998, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19333, 1534.3000, 1304.5500, -13.4498, 0.0000, 0.0000, -20.0000);
	CreateDynamicObject_FR(19333, 1534.3000, 1304.5500, -13.4498, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1683.8900, 1046.7500, 10.6598, 0.0000, 0.0000, 176.5500);
	CreateDynamicObject_FR(978, 1646.6899, 1037.9798, 10.6598, 0.0000, 0.0000, 346.0000);
	CreateDynamicObject_FR(18778, 1519.0200, 1295.7398, 11.3000, 0.0000, 0.0000, -60.0000);
	CreateDynamicObject_FR(8838, 1477.3800, 1190.4798, 8.3500, 2.9300, 0.0000, -179.5000);
	CreateDynamicObject_FR(8838, 1477.4200, 1185.3800, 8.6099, 2.9300, 0.0000, -179.5000);
	CreateDynamicObject_FR(8838, 1477.4698, 1180.2900, 9.0000, 5.8498, 0.0000, -179.5000);
	CreateDynamicObject_FR(8838, 1477.5100, 1175.2198, 9.6499, 8.7798, 0.0000, -179.5000);
	CreateDynamicObject_FR(978, 1656.8498, 1037.1999, 10.6598, 0.0000, 0.0000, 4.5000);
	CreateDynamicObject_FR(8838, 1477.5600, 1170.1999, 10.5600, 11.7100, 0.0000, -179.5000);
	CreateDynamicObject_FR(9833, 1631.9798, 1034.7198, 9.5298, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1477.5998, 1165.2198, 11.7200, 14.6300, 0.0000, -179.5000);
	CreateDynamicObject_FR(978, 1667.3199, 1037.5998, 10.6598, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1477.6400, 1160.3199, 13.1400, 17.5599, 0.0000, -179.5000);
	CreateDynamicObject_FR(6866, 1553.7298, 1326.0600, -6.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1477.6800, 1155.4898, 14.8000, 20.4899, 0.0000, -179.5000);
	CreateDynamicObject_FR(979, 1692.7198, 1044.1999, 10.6598, 0.0000, 0.0000, 150.1199);
	CreateDynamicObject_FR(712, 1544.5200, 1322.2600, 19.1200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3472, 1657.0400, 1033.7099, 9.8999, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1546.9499, 1313.7298, 64.2600, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(8838, 1477.7198, 1150.7500, 16.7098, 23.4099, 0.0000, -179.5000);
	CreateDynamicObject_FR(978, 1677.1300, 1037.6500, 10.6598, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1477.7700, 1146.1198, 18.8600, 26.3400, 0.0000, -179.5000);
	CreateDynamicObject_FR(3472, 1666.7500, 1033.6899, 9.8999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1683.5200, 1037.4100, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1477.8000, 1141.5998, 21.2399, 29.2700, 0.0000, -179.5000);
	CreateDynamicObject_FR(1237, 1685.3800, 1037.1300, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1635.6700, 1027.2800, 10.6598, 0.0000, 0.0000, 182.6699);
	CreateDynamicObject_FR(8838, 1477.8398, 1137.2099, 23.8500, 32.2000, 0.0000, -179.5000);
	CreateDynamicObject_FR(3472, 1676.5100, 1033.3398, 9.8900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1645.7198, 1027.4300, 10.6598, 0.0000, 0.0000, 178.7700);
	CreateDynamicObject_FR(1237, 1686.8398, 1036.0100, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18778, 1534.2500, 1322.1400, 11.3000, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject_FR(712, 1513.5898, 1304.4499, 19.1200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1477.8800, 1132.9599, 26.6900, 35.1198, 0.0000, -179.5000);
	CreateDynamicObject_FR(978, 1656.5000, 1027.1600, 10.6598, 0.0000, 0.0000, 178.7799);
	CreateDynamicObject_FR(1237, 1687.7298, 1034.5600, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18876, 1595.0898, 1352.0500, 16.0200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1477.9200, 1128.8598, 29.7299, 38.0499, 0.0000, -179.5000);
	CreateDynamicObject_FR(18778, 1519.0000, 1313.3398, 11.3198, 0.0000, 0.0000, 240.0000);
	CreateDynamicObject_FR(978, 1627.5500, 1023.4899, 10.6598, 0.0000, 0.0000, 226.2200);
	CreateDynamicObject_FR(978, 1666.6899, 1026.9399, 10.6998, 0.0000, 0.0000, 178.7799);
	CreateDynamicObject_FR(1237, 1687.7500, 1032.9000, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1698.8698, 1036.5200, 10.6598, 0.0000, 0.0000, 110.6298);
	CreateDynamicObject_FR(1237, 1687.1500, 1031.3698, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1477.9499, 1124.9100, 32.9799, 40.9799, 0.0000, -179.6199);
	CreateDynamicObject_FR(1237, 1685.8800, 1029.8800, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1676.7500, 1027.0200, 10.6598, 0.0000, 0.0000, 178.7799);
	CreateDynamicObject_FR(1237, 1684.5699, 1028.7700, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1682.8199, 1027.8900, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1477.9798, 1121.1500, 36.4300, 43.9000, 0.0000, -179.8000);
	CreateDynamicObject_FR(712, 1523.8299, 1322.4599, 19.1200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1478.0100, 1117.5600, 40.0600, 46.8300, 0.0000, -179.5000);
	CreateDynamicObject_FR(979, 1641.8199, 1016.9699, 10.6598, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1635.7298, 1016.5100, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1651.6800, 1017.0000, 10.6598, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1478.0400, 1114.1600, 43.8698, 49.7598, 0.0000, -179.5000);
	CreateDynamicObject_FR(1237, 1634.5600, 1015.2999, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1624.3698, 1015.2800, 10.6598, 0.0000, 0.0000, 269.0000);
	CreateDynamicObject_FR(7073, 1704.4698, 1031.8199, 28.0900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1661.8000, 1017.0000, 10.6598, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1633.9599, 1014.0598, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1478.0699, 1110.9599, 47.8600, 52.6800, 0.0000, -179.5000);
	CreateDynamicObject_FR(979, 1698.9599, 1026.3900, 10.6598, 0.0000, 0.0000, 67.7500);
	CreateDynamicObject_FR(9833, 1637.0799, 1013.1099, 6.5300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1634.3199, 1012.5100, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1671.4599, 1017.0000, 10.6598, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1515.1700, 1313.6500, 64.2600, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(3472, 1663.3398, 1014.1300, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1478.0998, 1107.9698, 52.0000, 55.6100, 0.0000, -179.5000);
	CreateDynamicObject_FR(1237, 1634.6999, 1011.2199, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1624.1800, 1010.8599, 10.6598, 0.0000, 0.0000, 290.0000);
	CreateDynamicObject_FR(979, 1681.6400, 1017.1198, 10.6598, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1640.2600, 1009.8698, 10.6598, 0.0000, 0.0000, 178.0000);
	CreateDynamicObject_FR(979, 1692.5898, 1019.6400, 10.6598, 0.0000, 0.0000, 24.3500);
	CreateDynamicObject_FR(8838, 1478.1198, 1105.1899, 56.2798, 58.5400, 0.0000, -179.5000);
	CreateDynamicObject_FR(3472, 1671.8900, 1013.4500, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1650.7500, 1009.7899, 10.6598, 0.0000, 0.0000, 180.3399);
	CreateDynamicObject_FR(979, 1661.0200, 1009.6699, 10.6598, 0.0000, 0.0000, 178.8898);
	CreateDynamicObject_FR(9833, 1680.2900, 1013.6300, 6.9299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1478.1400, 1102.6400, 60.7098, 61.4598, 0.0000, -179.5000);
	Unused_Object = CreateDynamicObject_FR(19662, 1509.9599, 1303.0898, 91.5000, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	CreateDynamicObject_FR(979, 1671.0699, 1009.6300, 10.6598, 0.0000, 0.0000, 178.8898);
	Unused_Object = CreateDynamicObject_FR(19670, 1494.7500, 1068.2800, 39.5600, 0.0000, -180.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	CreateDynamicObject_FR(8838, 1478.1700, 1100.3100, 65.2500, 64.3899, 0.0000, -179.5000);
	CreateDynamicObject_FR(978, 1629.9499, 1003.7000, 10.6598, 0.0000, 0.0000, 325.7900);
	CreateDynamicObject_FR(979, 1681.2298, 1009.0900, 10.6598, 0.0000, 0.0000, 174.9900);
	CreateDynamicObject_FR(8838, 1478.1800, 1098.2198, 69.9100, 67.3199, 0.0000, -179.5000);
	CreateDynamicObject_FR(13562, 1703.4300, 1014.5598, 11.2299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18876, 1568.8498, 1370.0000, 16.0200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1638.9000, 999.5900, 10.6598, 0.0000, 0.0000, 342.8800);
	CreateDynamicObject_FR(8838, 1478.1999, 1096.3800, 74.6800, 70.2398, 0.0000, -179.5000);
	CreateDynamicObject_FR(19005, 1442.8000, 1222.0100, 13.0600, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(978, 1648.8000, 998.0900, 10.6598, 0.0000, 0.0000, 359.1400);
	CreateDynamicObject_FR(8838, 1478.2099, 1094.7700, 79.5298, 73.1698, 0.0000, -179.5000);
	CreateDynamicObject_FR(979, 1690.3299, 1005.2999, 10.6598, 0.0000, 0.0000, 140.7500);
	CreateDynamicObject_FR(978, 1658.7700, 998.0200, 10.6598, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1537.9300, 1332.3498, 107.5598, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	CreateDynamicObject_FR(8838, 1478.2298, 1093.4200, 84.4498, 76.0998, 0.0000, -179.5000);
	CreateDynamicObject_FR(978, 1669.4100, 997.9799, 10.6598, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1679.6800, 998.0300, 10.6598, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1478.2298, 1092.3199, 89.4400, 79.0198, 0.0000, -179.5000);
	Unused_Object = CreateDynamicObject_FR(19649, 1546.9399, 1363.6198, 61.5098, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 19527, "cauldron1", "alienliquid1");
	CreateDynamicObject_FR(8838, 1478.2398, 1090.7800, 90.7698, 0.0000, 0.0000, 180.5000);
	CreateDynamicObject_FR(13562, 1645.9599, 990.6198, 11.0798, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1686.5400, 996.8499, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1432.7800, 1223.4100, 7.5598, 352.1700, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1478.2900, 1085.6800, 90.7698, 0.0000, 0.0000, 180.5000);
	CreateDynamicObject_FR(8838, 1432.7800, 1226.8199, 7.3298, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1432.7800, 1230.2198, 7.5598, 7.8298, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1687.4798, 995.0000, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1656.6198, 988.2399, 10.6598, 0.0000, 0.0000, 181.8800);
	CreateDynamicObject_FR(979, 1696.0100, 996.9899, 10.6598, 0.0000, 0.0000, 107.3300);
	CreateDynamicObject_FR(1237, 1687.3100, 993.3698, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1666.6899, 988.5900, 10.6598, 0.0000, 0.0000, 181.1100);
	CreateDynamicObject_FR(8838, 1478.3398, 1080.5699, 90.7698, 0.0000, 0.0000, 180.5000);
	CreateDynamicObject_FR(978, 1647.5300, 985.1900, 10.6598, 0.0000, 0.0000, 217.6699);
	CreateDynamicObject_FR(1237, 1686.8498, 991.9500, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1677.0699, 989.1599, 10.6598, 0.0000, 0.0000, 184.3200);
	Unused_Object = CreateDynamicObject_FR(18809, 1515.1999, 1338.6400, 94.2500, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(1237, 1685.6600, 990.5300, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1684.0500, 989.8400, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, 1478.3698, 1075.4798, 90.7698, 0.0000, 0.0000, 180.5000);
	Unused_Object = CreateDynamicObject_FR(18809, 1474.4000, 1297.8199, 94.2500, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(8838, 1478.4200, 1070.3698, 90.7698, 0.0000, 0.0000, 180.5000);
	Unused_Object = CreateDynamicObject_FR(19670, 1462.0500, 1068.0000, 39.5600, 0.0000, -180.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	CreateDynamicObject_FR(7073, 1701.5200, 991.7100, 28.0900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1640.6198, 977.9400, 10.6598, 0.0000, 0.0000, 234.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1502.4000, 1327.1098, 110.3199, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(3533, 1419.5300, 1212.1098, 13.7700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1419.5400, 1212.1098, 18.0599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1419.5300, 1212.1098, 22.5400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1695.6300, 986.5200, 10.6499, 0.0000, 0.0000, 70.0000);
	CreateDynamicObject_FR(8838, 1478.4599, 1066.6899, 94.3398, 79.0198, 0.0000, -179.5000);
	CreateDynamicObject_FR(18769, 1419.3598, 1221.7800, 17.4500, 0.0000, -90.0000, -180.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1515.1800, 1363.5898, 61.5098, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	CreateDynamicObject_FR(7392, 1479.3100, 1068.4499, 101.7300, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(1237, 1661.7500, 977.1798, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1668.1400, 977.6099, 10.6598, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1419.5699, 1231.6300, 13.7700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1419.5500, 1231.6198, 18.0599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1419.5699, 1231.6300, 22.5000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1659.5998, 975.4000, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1678.5300, 977.1500, 10.6300, 0.0000, 0.0000, 355.3298);
	CreateDynamicObject_FR(1237, 1658.3100, 973.5200, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1688.7600, 978.8599, 10.6400, 0.0000, 0.0000, 26.5900);
	CreateDynamicObject_FR(1237, 1657.1198, 971.4500, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1636.5898, 969.1599, 10.6598, 0.0000, 0.0000, 255.7799);
	Unused_Object = CreateDynamicObject_FR(18809, 1543.1500, 1367.8199, 110.2698, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(1237, 1657.2700, 969.2800, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1438.4399, 1300.4399, 26.3199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18769, 1409.9000, 1212.3498, 17.4300, 0.0000, -90.0000, -270.0000);
	CreateDynamicObject_FR(3533, 1438.4399, 1300.4399, -5.0700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18876, 1580.5300, 1407.3299, 16.0200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(9833, 1664.5500, 969.0499, 6.7300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1435.7800, 1297.3299, 26.3199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1435.7800, 1297.3299, -5.0700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(16776, 1409.8199, 1221.3900, 9.2500, 0.0000, 0.0000, -225.0000);
	CreateDynamicObject_FR(19129, 1409.8498, 1221.7099, 9.7700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1658.0799, 967.7999, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 1409.8498, 1221.7099, 27.3500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1438.3100, 1304.2900, 26.3199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1438.3100, 1304.2900, -5.0700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18769, 1409.9698, 1231.1999, 17.4300, 0.0000, -90.0000, -90.0000);
	CreateDynamicObject_FR(1237, 1659.7900, 966.4400, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1432.0799, 1296.7398, 26.3199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1432.0799, 1296.7398, -5.0700, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1428.4698, 1278.1198, 61.5098, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	CreateDynamicObject_FR(19635, 1433.0600, 1302.3199, 9.7798, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1435.9100, 1307.3000, 26.3199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1435.9100, 1307.3000, -5.0700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(726, 1433.0600, 1302.3199, 30.7999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19278, 1433.0600, 1302.3199, -18.2800, 0.0000, 0.0000, -12.0000);
	CreateDynamicObject_FR(978, 1638.5200, 960.1798, 10.6000, 0.0000, 0.0000, 303.2300);
	CreateDynamicObject_FR(979, 1666.3598, 962.3200, 10.5000, 0.0000, 0.0000, 145.4600);
	CreateDynamicObject_FR(3533, 1428.7099, 1298.7500, 26.3199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1428.7099, 1298.7500, -5.0700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(7392, 1678.9200, 963.6198, 18.1100, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19642, 1464.6800, 1327.0100, 95.1500, 30.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	CreateDynamicObject_FR(3533, 1432.5100, 1307.8199, 26.3199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1432.5100, 1307.8199, -5.0700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19945, 1433.0600, 1302.3199, -32.3800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1400.1899, 1212.0799, 13.7700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1400.1700, 1212.0699, 18.0599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1400.1899, 1212.0799, 22.5000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18769, 1400.4698, 1221.7800, 17.4500, 0.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1427.4200, 1302.3000, 26.3199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1427.4200, 1302.3000, -5.0700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1429.1700, 1306.3299, 26.3199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1429.1700, 1306.3299, -5.0700, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1509.9698, 1374.1800, 91.5000, 0.0000, 0.0000, 180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3615, "beachhut", "ws_decking1");
	CreateDynamicObject_FR(3533, 1400.2600, 1231.4898, 13.7700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1400.2500, 1231.5000, 18.0599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1400.2600, 1231.4898, 22.5000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1671.5699, 957.1599, 10.5200, 0.0000, 0.0000, 127.4598);
	CreateDynamicObject_FR(3498, 1441.9599, 1331.7398, 9.5698, 0.0000, -90.0000, -90.0000);
	CreateDynamicObject_FR(978, 1645.7700, 953.7100, 10.5200, 0.0000, 0.0000, 332.0000);
	CreateDynamicObject_FR(3498, 1437.7198, 1327.5200, 9.5698, 0.0000, -90.0000, -180.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1433.7099, 1313.6500, 64.2600, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19005, 1534.3000, 1409.0898, 12.9700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1654.9499, 949.7199, 10.5100, 0.0000, 0.0000, 339.0000);
	CreateDynamicObject_FR(979, 1673.9000, 951.0700, 10.5100, 0.0000, 0.0000, 103.4498);
	CreateDynamicObject_FR(3498, 1437.6899, 1338.7900, 9.5698, 0.0000, -90.0000, -180.0000);
	CreateDynamicObject_FR(1237, 1659.1400, 947.2500, 9.8198, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1546.9300, 1413.5000, 64.2600, 0.0000, -90.0000, -89.9400);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(3498, 1428.7198, 1327.5100, 9.5698, 0.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1660.4399, 946.3800, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3498, 1437.6899, 1342.4898, 9.5698, 0.0000, -90.0000, -180.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1424.5600, 1297.8398, 91.5000, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	CreateDynamicObject_FR(1237, 1661.3800, 944.9699, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1661.8100, 943.4298, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(7586, 1591.9698, 1436.0600, 5.3800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8397, 1591.9698, 1436.0600, 5.3800, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject_FR(3498, 1437.6899, 1346.6500, 9.5698, 0.0000, -90.0000, -180.0000);
	CreateDynamicObject_FR(1237, 1661.5200, 941.7999, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, 1591.9698, 1436.0600, 44.4700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(979, 1674.1800, 942.4899, 10.5798, 0.0000, 0.0000, 79.8199);
	CreateDynamicObject_FR(1237, 1660.6999, 940.4799, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1425, 1647.6600, 939.0700, 10.2700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(16002, 1652.2900, 939.3800, 12.0900, 0.0000, 0.0000, 176.4199);
	CreateDynamicObject_FR(3498, 1437.6999, 1350.9399, 9.5698, 0.0000, -90.0000, -180.0000);
	CreateDynamicObject_FR(18997, 1591.9698, 1436.0600, 49.4700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1237, 1659.3498, 939.4500, 9.8100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3498, 1433.4599, 1346.7099, 9.5698, 0.0000, -90.0000, -90.0000);
	CreateDynamicObject_FR(1237, 1657.8000, 939.1599, 9.8198, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, 1591.9698, 1436.0600, 54.4700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3498, 1437.6999, 1354.5898, 9.5698, 0.0000, -90.0000, -180.0000);
	CreateDynamicObject_FR(3498, 1437.7398, 1358.8800, 9.5698, 0.0000, -90.0000, -180.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1515.1800, 1413.4599, 64.2600, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(979, 1670.7099, 935.4500, 10.5100, 0.0000, 0.0000, 48.2200);
	Unused_Object = CreateDynamicObject_FR(18809, 1392.9300, 1272.9000, 64.2600, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19005, 1374.0898, 1222.0100, 13.0298, 0.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1474.4399, 1379.4200, 94.2500, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18716, 1583.4300, 1444.5898, 35.0098, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18646, 1583.5799, 1444.6500, 35.0000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19091, 1583.7099, 1444.6800, 35.0600, 0.0000, 0.0000, -139.0000);
	CreateDynamicObject_FR(19091, 1583.6999, 1444.6999, 35.1698, 0.0000, 0.0000, -139.0000);
	CreateDynamicObject_FR(19091, 1583.6800, 1444.7398, 34.9900, 0.0000, 0.0000, -139.0000);
	CreateDynamicObject_FR(19091, 1583.6500, 1444.7900, 35.1599, 0.0000, 0.0000, -139.0000);
	CreateDynamicObject_FR(19091, 1583.6500, 1444.8398, 35.0098, 0.0000, 0.0000, -139.0000);
	CreateDynamicObject_FR(19091, 1583.6198, 1444.8698, 35.0600, 0.0000, 0.0000, -139.0000);
	CreateDynamicObject_FR(3498, 1441.9798, 1368.4200, 9.5698, 0.0000, -90.0000, -90.0000);
	CreateDynamicObject_FR(19091, 1583.6198, 1444.8698, 35.1100, 0.0000, 0.0000, -139.0000);
	CreateDynamicObject_FR(3498, 1437.7500, 1364.1999, 9.5698, 0.0000, -90.0000, -180.0000);
	CreateDynamicObject_FR(979, 1667.1198, 932.1699, 10.5100, 0.0000, 0.0000, 35.0000);
	CreateDynamicObject_FR(3498, 1587.2900, 1446.8199, 35.7299, -99.0000, -5.0000, 115.0000);
	CreateDynamicObject_FR(7073, 1592.4300, 1448.3900, 27.7299, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1424.5100, 1326.9200, 94.2500, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19649, 1543.1600, 1417.6600, 107.5400, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	CreateDynamicObject_FR(3498, 1428.7198, 1358.8800, 9.5698, 0.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(3498, 1424.4599, 1358.7900, 9.5698, 0.0000, -90.0000, -89.9400);
	CreateDynamicObject_FR(3498, 1428.7298, 1364.1899, 9.5698, 0.0000, -90.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1433.7099, 1363.5000, 61.5098, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	CreateDynamicObject_FR(3749, 1647.3800, 922.7500, 15.2898, 0.0000, 0.0000, 357.6700);
	CreateDynamicObject_FR(3498, 1441.9499, 1380.1400, 9.5698, 0.0000, -90.0000, -90.0000);
	CreateDynamicObject_FR(3498, 1437.7198, 1375.9200, 9.5698, 0.0000, -90.0000, -180.0000);
	CreateDynamicObject_FR(8644, 1647.2700, 922.2999, 23.7098, 0.0000, 0.0000, 117.4400);
	CreateDynamicObject_FR(7666, 1647.7398, 921.6900, 22.4799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(6986, 1632.7700, 921.2500, 26.4400, 0.0000, 0.0000, 269.0000);
	CreateDynamicObject_FR(978, 1637.0600, 920.1900, 10.4300, 0.0000, 0.0000, 181.1000);
	CreateDynamicObject_FR(10281, 1647.6300, 920.2600, 17.3500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3498, 1437.7298, 1380.1500, 9.5698, 0.0000, -90.0000, -90.0000);
	CreateDynamicObject_FR(6986, 1662.6098, 920.9099, 25.2500, 0.0000, 0.0000, 91.0000);
	CreateDynamicObject_FR(8397, 1591.8900, 1460.6500, 5.3800, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(7586, 1591.8900, 1460.6500, 5.3800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1658.4898, 918.0800, 10.5100, 0.0000, 0.0000, 105.0000);
	Unused_Object = CreateDynamicObject_FR(19687, 1543.9300, 1448.7800, 33.2098, 0.0000, 90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	CreateDynamicObject_FR(3498, 1433.4898, 1380.1400, 9.5698, 0.0000, -90.0000, -90.0000);
	CreateDynamicObject_FR(978, 1635.0200, 915.8599, 10.5200, 0.0000, 0.0000, 305.5000);
	CreateDynamicObject_FR(18997, 1591.8900, 1460.6500, 44.4700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, 1591.8900, 1460.6500, 49.4700, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19687, 1534.2198, 1448.7800, 23.4500, -180.0000, 0.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10056, "bigoldbuild_sfe", "cluckbelld1_law");
	CreateDynamicObject_FR(18997, 1591.8900, 1460.6500, 54.4700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3851, 1534.2198, 1448.7800, 27.9500, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(3851, 1534.2198, 1448.7800, 31.9500, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(19842, 1534.2198, 1448.8100, 33.5000, 90.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3851, 1534.2198, 1448.7800, 35.9500, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(3498, 1441.9499, 1392.7398, 9.5698, 0.0000, -90.0000, -90.0000);
	CreateDynamicObject_FR(3851, 1534.2198, 1448.7800, 39.9500, 0.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(19687, 1534.1999, 1448.7800, 42.9598, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	Unused_Object = CreateDynamicObject_FR(19661, 1541.6999, 1449.0600, 61.5098, 0.0000, 0.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	Unused_Object = CreateDynamicObject_FR(19662, 1509.9898, 1427.7198, 91.5000, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 19527, "cauldron1", "alienliquid1");
	CreateDynamicObject_FR(2960, 1435.5898, 1388.4200, 9.7500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3498, 1437.7198, 1392.7298, 9.5698, 0.0000, -90.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(19687, 1524.4599, 1448.7800, 33.2098, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightgreen2_32");
	Unused_Object = CreateDynamicObject_FR(19667, 1399.5898, 1303.3800, 123.3300, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	CreateDynamicObject_FR(2960, 1439.8299, 1397.0500, 9.7500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(978, 1637.8800, 907.4298, 10.6000, 0.0000, 0.0000, 271.2398);
	CreateDynamicObject_FR(3498, 1433.4898, 1392.7398, 9.5698, 0.0000, -90.0000, -90.0000);
	CreateDynamicObject_FR(978, 1661.0799, 908.5300, 10.5500, 0.0000, 0.0000, 105.0000);
	CreateDynamicObject_FR(2728, 1634.9100, 906.9199, 13.9399, 89.0699, 179.9900, 271.0000);
	CreateDynamicObject_FR(3498, 1441.9499, 1404.4100, 9.5698, 0.0000, -90.0000, -90.0000);
	CreateDynamicObject_FR(1634, 1737.5500, 921.0999, 10.8800, 0.0000, 0.0000, 271.2500);
	Unused_Object = CreateDynamicObject_FR(19662, 1509.9499, 1448.9898, 61.5098, 0.0000, 0.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	CreateDynamicObject_FR(3498, 1429.2600, 1400.1800, 9.5698, 0.0000, -90.0000, -180.0000);
	CreateDynamicObject_FR(3498, 1433.4898, 1404.4000, 9.5698, 0.0000, -90.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1424.5600, 1379.4200, 91.5000, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	CreateDynamicObject_FR(3498, 1437.7198, 1408.6400, 9.5698, 0.0000, -90.0000, -180.0000);
	CreateDynamicObject_FR(978, 1637.9100, 898.0200, 10.6300, 0.0000, 0.0000, 269.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1357.3398, 1278.1400, 61.5098, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	Unused_Object = CreateDynamicObject_FR(18809, 1474.4300, 1422.4698, 94.2500, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19661, 1520.4898, 1449.0400, 91.5000, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	CreateDynamicObject_FR(978, 1662.0400, 898.7600, 10.6499, 0.0000, 0.0000, 87.1200);
	Unused_Object = CreateDynamicObject_FR(19649, 1374.6098, 1308.9300, 91.5000, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightgreen2_32");
	CreateDynamicObject_FR(3498, 1425.0200, 1404.4000, 9.5698, 0.0000, -90.0000, -90.0000);
	CreateDynamicObject_FR(978, 1637.7500, 888.5399, 10.5500, 0.0000, 0.0000, 269.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1374.6400, 1326.9200, 91.5000, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	CreateDynamicObject_FR(978, 1659.6500, 889.1300, 10.5600, 0.0000, 0.0000, 63.0000);
	Unused_Object = CreateDynamicObject_FR(19653, 1531.1400, 1470.2099, 66.5000, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	CreateDynamicObject_FR(18876, 1580.6500, 1488.7198, 16.0200, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1433.6999, 1413.4200, 64.2600, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19653, 1531.1400, 1470.2099, 76.5000, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	CreateDynamicObject_FR(18779, 1444.6098, 1431.3299, 19.6900, 0.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(19653, 1531.1400, 1470.2099, 86.5000, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	Unused_Object = CreateDynamicObject_FR(18809, 1543.1600, 1467.5400, 110.2698, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18809, 1352.0998, 1313.7700, 64.2600, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18809, 1474.4898, 1454.2099, 64.2600, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18778, 1365.1198, 1353.2700, 11.2398, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(19005, 1534.3398, 1487.4798, 12.9700, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject_FR(19002, 1347.5200, 1323.6300, 11.5798, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19378, 1450.5998, 1451.1700, 29.6298, 0.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(18784, 1347.5000, 1333.4300, 12.2200, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(19002, 1357.6999, 1353.0200, 17.3999, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(18783, 1355.0200, 1353.3800, 4.6999, 0.0000, 90.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1424.5500, 1422.4698, 91.5000, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	CreateDynamicObject_FR(9076, 1433.3900, 1443.7198, 10.9700, 0.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(19667, 1399.5898, 1384.9698, 123.3300, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	CreateDynamicObject_FR(18778, 1369.4499, 1379.1500, 9.8900, -10.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1438.9200, 1448.9798, 61.5098, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	CreateDynamicObject_FR(18783, 1347.5000, 1353.3900, 12.2200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 1347.5000, 1353.3900, 14.6800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18779, 1409.2398, 1431.0998, 19.6900, 0.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(19653, 1472.0400, 1460.2700, 112.5598, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	CreateDynamicObject_FR(18778, 1360.9499, 1379.1500, 9.8900, -10.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1450.8800, 1449.6198, 107.5598, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightgreen2_32");
	Unused_Object = CreateDynamicObject_FR(19649, 1352.0898, 1363.5998, 61.5098, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	Unused_Object = CreateDynamicObject_FR(19653, 1472.0400, 1460.2700, 122.5598, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	CreateDynamicObject_FR(19002, 1357.2500, 1379.3000, 13.9799, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(18783, 1339.9100, 1353.3698, 4.6900, 0.0000, -90.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1374.5898, 1390.5200, 91.5000, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	CreateDynamicObject_FR(19002, 1337.3000, 1353.2600, 17.3999, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(13642, 1441.7600, 1467.8598, 33.2999, 57.0000, -90.0000, 90.0000);
	CreateDynamicObject_FR(13642, 1442.7298, 1469.6500, 32.0699, -38.0000, -90.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(18830, 1351.5000, 1379.3698, 12.1499, 0.0000, -180.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19649, 1324.6400, 1308.9300, 91.5000, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	CreateDynamicObject_FR(19378, 1415.2198, 1451.0000, 29.6298, 0.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(9100, 1433.2500, 1468.4499, -0.5899, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8395, 1433.2500, 1468.4499, -0.5899, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18778, 1365.1600, 1405.6198, 11.2398, 0.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1429.5600, 1449.6198, 107.5598, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	CreateDynamicObject_FR(18778, 1329.3900, 1353.3698, 11.2398, 0.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(18830, 1343.3199, 1379.3698, 12.1499, 0.0000, -180.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18824, 1330.0200, 1338.9798, 94.2500, -90.0000, 40.0998, 85.0998);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19378, 1450.9000, 1485.7600, 29.6298, 0.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(13642, 1424.0699, 1467.6899, 32.0900, -38.0000, -90.0000, 90.0000);
	CreateDynamicObject_FR(13642, 1424.9300, 1469.3900, 33.4000, 57.0000, -90.0000, -90.0000);
	CreateDynamicObject_FR(19002, 1357.6700, 1405.5600, 17.3999, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(19002, 1337.4798, 1379.3100, 13.9799, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(18783, 1354.9300, 1405.3698, 4.6999, 0.0000, 90.0000, 0.0000);
	CreateDynamicObject_FR(8843, 1284.9200, 1254.6600, 9.8400, 0.0000, 0.0000, -26.0000);
	CreateDynamicObject_FR(18778, 1333.6600, 1379.6999, 9.8900, -10.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1450.8800, 1470.9300, 127.5598, 0.0000, 0.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	CreateDynamicObject_FR(8843, 1278.5898, 1223.0400, 9.9399, 0.0000, 9.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1374.6098, 1422.4698, 94.2500, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18783, 1347.3598, 1405.3800, 12.2200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 1347.3598, 1405.3800, 14.6800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8397, 1286.5600, 1288.4499, 15.1099, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19653, 1286.5600, 1288.4499, 16.5400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10056, "bigoldbuild_sfe", "cluckbelld1_law");
	Unused_Object = CreateDynamicObject_FR(19653, 1286.5600, 1288.4499, 26.5400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 19527, "cauldron1", "alienliquid1");
	Unused_Object = CreateDynamicObject_FR(19653, 1286.5600, 1288.4499, 36.5400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	CreateDynamicObject_FR(18778, 1325.1600, 1379.6999, 9.8900, -10.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(19653, 1286.5600, 1288.4499, 46.5400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightgreen2_32");
	Unused_Object = CreateDynamicObject_FR(18809, 1352.0998, 1413.4200, 64.2600, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(9076, 1433.3800, 1492.7700, 10.9700, 0.0000, 0.0000, 270.0000);
	Unused_Object = CreateDynamicObject_FR(19653, 1286.5600, 1288.4499, 56.5400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	CreateDynamicObject_FR(18783, 1339.8498, 1405.3800, 4.6900, 0.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(19002, 1337.0699, 1405.3199, 17.3999, 0.0000, 0.0000, 270.0000);
	Unused_Object = CreateDynamicObject_FR(18824, 1330.0100, 1378.4698, 94.2500, -90.0000, 139.8999, 94.9000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19378, 1415.3100, 1485.7099, 29.6298, 0.0000, -90.0000, 0.0000);
	CreateDynamicObject_FR(18784, 1347.3398, 1425.3199, 12.2200, 0.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1275.9300, 1277.7700, 61.5098, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10056, "bigoldbuild_sfe", "cluckbelld1_law");
	CreateDynamicObject_FR(18778, 1329.8398, 1405.4798, 11.2398, 0.0000, 0.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1424.3199, 1485.1700, 110.2698, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19002, 1347.4599, 1435.0998, 11.5798, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1415.3800, 1476.1600, 130.2500, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18824, 1279.9599, 1320.9898, 94.2500, -90.0000, 40.0998, 85.0998);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19649, 1270.6800, 1313.4100, 61.5098, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	Unused_Object = CreateDynamicObject_FR(19662, 1346.8698, 1448.9200, 61.5098, 0.0000, 0.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	Unused_Object = CreateDynamicObject_FR(19649, 1324.6600, 1422.4499, 91.5000, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	Unused_Object = CreateDynamicObject_FR(19662, 1379.8100, 1481.4000, 127.5598, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10056, "bigoldbuild_sfe", "cluckbelld1_law");
	Unused_Object = CreateDynamicObject_FR(18809, 1270.6700, 1363.3398, 64.2600, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(7191, 1534.7689, 797.7224, 11.5584, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(7191, 1534.7689, 797.7224, 15.4687, 0.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(19649, 1267.9000, 1365.7198, 91.5000, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	CreateDynamicObject_FR(7191, 1490.1120, 797.9279, 11.5584, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(7191, 1490.1120, 797.9279, 15.4687, 0.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1311.3698, 1454.1400, 64.2600, 0.0000, -90.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(7191, 1557.3886, 775.5734, 11.5584, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(7191, 1557.3886, 775.5734, 15.4687, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18824, 1279.9599, 1410.4000, 94.2500, -90.0000, 139.8999, 94.9000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19649, 1270.6800, 1413.2700, 61.5098, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightyellow2_32");
	CreateDynamicObject_FR(7191, 1445.2026, 797.9617, 11.5584, 0.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1275.9300, 1448.9200, 61.5098, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	Unused_Object = CreateDynamicObject_FR(19681, 1307.3598, 1478.5898, 117.5100, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	Unused_Object = CreateDynamicObject_FR(19662, 1548.4000, 1503.1098, 107.5598, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	Unused_Object = CreateDynamicObject_FR(18809, 1583.8498, 1508.3398, 110.2698, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18876, 1568.9000, 1526.0500, 16.0200, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1619.3398, 1513.5699, 107.5598, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	Unused_Object = CreateDynamicObject_FR(19662, 1537.8598, 1513.7298, 107.5598, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	CreateDynamicObject_FR(18779, 1456.9599, 1505.5600, 19.6900, 0.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1502.3299, 1508.4898, 110.2698, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18876, 1595.1400, 1543.9898, 16.0200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18779, 1421.3199, 1505.5998, 19.6900, 0.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1466.7900, 1513.7298, 107.5598, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	Unused_Object = CreateDynamicObject_FR(18809, 1624.5799, 1549.0998, 110.2698, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18809, 1543.0799, 1549.2298, 110.2698, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(13592, 1540.5200, 1565.8498, 19.2399, 0.0000, 0.0000, 8.2898);
	Unused_Object = CreateDynamicObject_FR(18809, 1614.8498, 1557.8199, 130.2500, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(13592, 1540.5400, 1573.3000, 19.2399, 0.0000, 0.0000, 8.2898);
	Unused_Object = CreateDynamicObject_FR(19649, 1564.9698, 1557.7900, 127.5100, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	Unused_Object = CreateDynamicObject_FR(19662, 1419.0799, 1520.7398, 107.5598, 0.0000, 0.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	CreateDynamicObject_FR(620, 1557.4300, 1579.5898, 9.3900, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1461.5600, 1549.2500, 110.2698, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(620, 1524.3100, 1579.1400, 9.3900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(13592, 1540.5799, 1580.6999, 19.2399, 0.0000, 0.0000, 8.2898);
	Unused_Object = CreateDynamicObject_FR(18809, 1515.0699, 1557.7700, 130.2500, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18830, 1566.0600, 1587.6400, 18.0900, 0.0000, -140.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(13592, 1540.5998, 1588.1500, 19.2399, 0.0000, 0.0000, 8.8298);
	Unused_Object = CreateDynamicObject_FR(18809, 1383.5699, 1525.9599, 110.2698, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18830, 1514.1899, 1588.6198, 18.0900, 0.0000, -140.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19649, 1465.1600, 1557.7600, 127.5100, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10056, "bigoldbuild_sfe", "cluckbelld1_law");
	Unused_Object = CreateDynamicObject_FR(18809, 1374.5799, 1516.9798, 130.2500, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(620, 1557.4399, 1595.1899, 9.3900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(13592, 1540.6300, 1595.5500, 19.2399, 0.0000, 0.0000, 8.2898);
	CreateDynamicObject_FR(620, 1524.1098, 1597.6999, 9.3900, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1650.4000, 1563.0600, 127.5598, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	CreateDynamicObject_FR(13592, 1540.6500, 1603.0000, 19.2399, 0.0000, 0.0000, 8.2898);
	CreateDynamicObject_FR(8493, 1541.2298, 1601.0500, 49.0000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(9159, 1541.2298, 1601.0500, 49.0800, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1415.3100, 1557.7700, 130.2500, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19662, 1348.0300, 1531.1999, 107.5598, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	Unused_Object = CreateDynamicObject_FR(19667, 1467.1198, 1574.1198, 139.3399, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	CreateDynamicObject_FR(13592, 1540.6899, 1610.4599, 19.2399, 0.0000, 0.0000, 8.2898);
	Unused_Object = CreateDynamicObject_FR(19649, 1543.0898, 1598.9399, 107.5400, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	Unused_Object = CreateDynamicObject_FR(19662, 1379.8100, 1552.5500, 127.5598, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	Unused_Object = CreateDynamicObject_FR(19653, 1295.1800, 1492.0799, 122.5100, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	Unused_Object = CreateDynamicObject_FR(19662, 1284.5300, 1481.4200, 127.5100, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	CreateDynamicObject_FR(18784, 1444.4000, 1606.0200, 12.1400, 0.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1472.6600, 1598.9499, 110.2698, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18784, 1422.4898, 1606.0200, 12.1400, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(18784, 1349.1999, 1582.5600, 10.8500, 0.0000, 3.0000, 180.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1355.6300, 1563.0898, 127.5298, 0.0000, 0.0000, -270.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	CreateDynamicObject_FR(18784, 1341.7600, 1582.5500, 13.9399, 0.0000, -11.0000, -180.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1342.7900, 1566.7900, 110.2698, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18809, 1279.2800, 1517.0100, 130.2299, 0.0000, -90.0000, -270.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18784, 1335.3800, 1582.5600, 16.2999, 0.0000, -40.0000, -180.0000);
	CreateDynamicObject_FR(18784, 1329.1300, 1582.5500, 28.9099, 0.0000, -59.0000, -180.0000);
	CreateDynamicObject_FR(18784, 1327.8900, 1582.5600, 40.2098, 0.0000, -80.0000, -180.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1320.0300, 1557.8299, 130.2400, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19129, 1337.9898, 1596.9499, 4.6599, 0.0000, 90.0000, -90.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1284.5400, 1552.5998, 127.5000, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	CreateDynamicObject_FR(19129, 1347.9599, 1606.9100, 4.6599, 0.0000, 90.0000, 0.0000);
	CreateDynamicObject_FR(18784, 1327.8800, 1600.0500, 40.2098, 0.0000, -80.0000, -180.0000);
	CreateDynamicObject_FR(7392, 1341.1098, 1606.8299, 24.0900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18783, 1337.9798, 1606.9000, 12.1700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18784, 1327.9100, 1607.5699, 40.2098, 0.0000, -80.0000, -180.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1383.6198, 1607.5600, 110.2698, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19662, 1348.0200, 1602.3299, 107.5598, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3615, "beachhut", "ws_decking1");
	Unused_Object = CreateDynamicObject_FR(18809, 1360.8698, 1598.6600, 130.2299, 0.0000, -90.0000, -270.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19662, 1419.1899, 1612.8000, 107.5598, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	CreateDynamicObject_FR(13831, 1320.7700, 1607.0100, 59.0298, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(19129, 1338.0100, 1616.8800, 4.6599, 0.0000, 90.0000, -270.0000);
	CreateDynamicObject_FR(6863, 1299.4798, 1607.3498, 14.7898, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18784, 1327.8800, 1619.6300, 40.2098, 0.0000, -80.0000, -180.0000);
	CreateDynamicObject_FR(18784, 1349.2700, 1633.0000, 10.8500, 0.0000, 3.0000, 180.0000);
	CreateDynamicObject_FR(18784, 1341.7600, 1632.9898, 13.9399, 0.0000, -11.0000, -180.0000);
	CreateDynamicObject_FR(18784, 1335.3800, 1632.9798, 16.2999, 0.0000, -40.0000, -180.0000);
	CreateDynamicObject_FR(18784, 1329.1300, 1632.9798, 28.9099, 0.0000, -59.0000, -180.0000);
	CreateDynamicObject_FR(18784, 1327.8900, 1632.9698, 40.2098, 0.0000, -80.0000, -180.0000);
	CreateDynamicObject_FR(19072, 1433.4399, 1644.1800, 17.2199, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1366.0998, 1634.1899, 127.5000, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightgreen2_32");
	Unused_Object = CreateDynamicObject_FR(19667, 1478.1999, 1623.7900, 139.3399, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3615, "beachhut", "ws_decking1");
	Unused_Object = CreateDynamicObject_FR(18809, 1401.5998, 1639.4200, 130.2400, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18809, 1424.4200, 1648.4000, 110.2698, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19662, 1437.1098, 1644.6600, 127.5298, 0.0000, 0.0000, -270.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	Unused_Object = CreateDynamicObject_FR(18809, 1483.7600, 1648.6700, 110.2698, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19002, 1433.4000, 1673.3900, 19.4300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18784, 1422.5300, 1682.4300, 11.9300, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(18784, 1444.3398, 1682.4300, 11.9300, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(3080, 1433.5000, 1684.5200, 10.8999, 0.0000, 0.0000, -180.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1529.2800, 1644.6500, 127.5100, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	Unused_Object = CreateDynamicObject_FR(18809, 1543.0998, 1648.8598, 110.2698, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18809, 1442.3398, 1680.2900, 130.2500, 0.0000, -90.0000, -270.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19649, 1624.5799, 1599.0100, 107.5400, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	Unused_Object = CreateDynamicObject_FR(19649, 1564.9200, 1639.4000, 127.5100, 0.0000, 0.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	Unused_Object = CreateDynamicObject_FR(19649, 1424.4200, 1698.3000, 107.5400, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightyellow2_32");
	Unused_Object = CreateDynamicObject_FR(19667, 1489.3100, 1673.5200, 139.3399, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 19527, "cauldron1", "alienliquid1");
	Unused_Object = CreateDynamicObject_FR(18809, 1524.0300, 1680.2198, 130.2500, 0.0000, -90.0000, -270.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18809, 1494.8598, 1698.4399, 110.2698, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19662, 1437.0998, 1715.8598, 127.5298, 0.0000, 0.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	Unused_Object = CreateDynamicObject_FR(19662, 1548.3299, 1684.4000, 107.5598, 0.0000, 0.0000, 270.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3615, "beachhut", "ws_decking1");
	Unused_Object = CreateDynamicObject_FR(18809, 1655.6400, 1598.6300, 130.2500, 0.0000, -90.0000, -270.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18809, 1401.5000, 1721.0998, 130.2400, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19662, 1365.9100, 1726.3398, 127.5100, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightyellow2_32");
	Unused_Object = CreateDynamicObject_FR(18809, 1614.8900, 1639.4000, 130.2500, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19005, 1527.8299, 1717.4698, 12.8500, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1447.5998, 1726.3398, 127.5100, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	Unused_Object = CreateDynamicObject_FR(18809, 1624.5799, 1648.8900, 110.2698, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18830, 1388.4000, 1752.6800, 16.7900, 0.0000, -145.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18809, 1483.2298, 1721.0998, 130.2500, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19662, 1518.8199, 1715.8398, 127.5598, 0.0000, 0.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightyellow2_32");
	Unused_Object = CreateDynamicObject_FR(18809, 1583.8199, 1689.6300, 110.2698, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19662, 1650.4300, 1634.1700, 127.5598, 0.0000, 0.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	Unused_Object = CreateDynamicObject_FR(18809, 1424.4100, 1748.1999, 110.2698, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19667, 1500.4200, 1723.3698, 139.3399, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	CreateDynamicObject_FR(4832, 1355.3800, 1776.2298, 23.6599, 0.0000, 0.0000, 25.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1619.3498, 1684.3900, 107.5598, 0.0000, 0.0000, 180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	CreateDynamicObject_FR(6964, 1528.2099, 1746.8100, 39.2299, 90.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19653, 1528.2099, 1746.8100, 39.2299, -90.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	CreateDynamicObject_FR(6964, 1528.2099, 1746.8100, 39.2299, 90.0000, 0.0000, -180.0000);
	Unused_Object = CreateDynamicObject_FR(18841, 1378.5200, 1776.6999, 41.3400, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18841, 1399.6999, 1776.6999, 41.3400, 0.0000, -180.0000, 0.0599);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18809, 1360.6800, 1761.8698, 130.2500, 0.0000, -90.0000, -270.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18809, 1505.9698, 1748.2298, 110.2698, 0.0000, -90.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18809, 1442.3498, 1761.9200, 130.2500, 0.0000, -90.0000, -270.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(6964, 1528.2099, 1756.8100, 39.2299, 90.0000, 0.0000, -180.0000);
	Unused_Object = CreateDynamicObject_FR(19653, 1528.2099, 1756.8100, 39.2299, -90.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightgreen2_32");
	CreateDynamicObject_FR(6964, 1528.2099, 1756.8100, 39.2299, 90.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(4832, 1392.4200, 1790.2500, 23.6599, 0.0000, 0.0000, -24.9400);
	CreateDynamicObject_FR(6964, 1528.2099, 1766.8100, 39.2299, 90.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19653, 1528.2099, 1766.8100, 39.2299, -90.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	CreateDynamicObject_FR(6964, 1528.2099, 1766.8100, 39.2299, 90.0000, 0.0000, -180.0000);
	Unused_Object = CreateDynamicObject_FR(19662, 1429.6600, 1783.7700, 107.5598, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightyellow2_32");
	Unused_Object = CreateDynamicObject_FR(18809, 1465.1999, 1789.0300, 110.2698, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19662, 1365.9200, 1797.3900, 127.5598, 0.0000, 0.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightyellow2_32");
	Unused_Object = CreateDynamicObject_FR(19662, 1500.7198, 1783.7700, 107.5598, 0.0000, 0.0000, 180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	Unused_Object = CreateDynamicObject_FR(19662, 1437.1198, 1797.3698, 127.5598, 0.0000, 0.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	CreateDynamicObject_FR(19005, 1528.0500, 1796.2500, 12.8500, 0.0000, 0.0000, -180.0000);
	CreateDynamicObject_FR(3279, 983.0900, 1637.2800, 8.0600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3193, 983.4500, 1659.4100, 5.3699, 30.0000, 0.0000, 31.8700);
	CreateDynamicObject_FR(3193, 961.8300, 1634.5998, 7.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3279, 933.9099, 1630.4599, 8.4799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 978.2800, 1715.9399, 7.6199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3279, 990.5000, 1736.3698, 9.1400, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(11441, 925.0399, 1626.7800, 9.3400, 0.0000, 0.0000, 352.5000);
	CreateDynamicObject_FR(18751, 922.2700, 1624.0000, 3.5399, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 978.1400, 1735.6300, 7.6199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 958.4400, 1715.9798, 7.6199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3193, 925.0999, 1651.6500, 7.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 978.0900, 1755.4200, 7.6199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 958.4699, 1735.7500, 7.6199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, 958.4099, 1755.3299, 7.6199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(7696, 942.5700, 1733.1999, 13.2600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3399, 951.8698, 1752.8398, 8.3298, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(18981, 962.1699, 1775.3398, -13.0500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3399, 951.7700, 1761.6500, 12.5100, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(16665, 955.8499, 1772.5000, -3.2599, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18830, 1388.0998, 1806.2700, 16.7900, 0.0000, -145.0000, -270.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(3533, 1457.5799, 1810.2099, 13.9799, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19670, 1457.5799, 1810.2099, -18.2900, 0.0000, -180.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3615, "beachhut", "ws_decking1");
	CreateDynamicObject_FR(3458, 1477.4000, 1808.7298, 36.7299, 272.4299, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, 1401.5799, 1802.6098, 130.2599, 0.0000, -90.0000, -180.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(3458, 1477.4000, 1808.9399, 41.8100, 277.2998, 180.0000, 180.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1810.0100, 46.7798, 287.0299, 180.0000, 180.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1811.9100, 51.5098, 296.7600, 180.0000, 180.0000);
	CreateDynamicObject_FR(3851, 1462.8698, 1817.2500, 63.2900, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(3533, 1497.2099, 1810.3498, 13.9498, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1814.5799, 55.8400, 306.4898, 180.0000, 180.0000);
	Unused_Object = CreateDynamicObject_FR(19670, 1497.2099, 1810.3498, -18.2900, 0.0000, -180.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	CreateDynamicObject_FR(3851, 1474.1800, 1817.2500, 63.2900, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(3851, 1485.4399, 1817.2500, 63.2900, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(19129, 1477.4100, 1824.4000, 9.7798, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18768, 1477.4100, 1824.4000, 9.1700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3851, 1491.9300, 1817.2298, 63.2900, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(3533, 1457.5000, 1838.7298, 13.8400, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19670, 1457.5000, 1838.7298, 13.8400, 0.0000, -180.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3615, "beachhut", "ws_decking1");
	CreateDynamicObject_FR(3458, 1477.4000, 1843.7700, 8.4300, 9.7299, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, 1497.3398, 1838.9000, 13.8400, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19670, 1497.3398, 1838.9000, 13.8400, 0.0000, -180.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	CreateDynamicObject_FR(3458, 1477.4000, 1841.2398, 67.8899, 4.8600, 180.0000, 180.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1848.6899, 9.7100, 19.4598, 0.0000, 0.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1846.2600, 67.0298, 14.6000, 180.0000, 180.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1853.3299, 11.8100, 29.1900, 0.0000, 0.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1851.0600, 65.3398, 24.3199, 180.0000, 180.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1857.5500, 14.6598, 38.9198, 0.0000, 0.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1855.5000, 62.8600, 34.0499, 180.0000, 180.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1861.2198, 18.1800, 48.6500, 0.0000, 0.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1859.4599, 59.6599, 43.7798, 180.0000, 180.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1864.2500, 22.2700, 58.3800, 0.0000, 0.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1862.8199, 55.8400, 53.5098, 180.0000, 180.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1866.5400, 26.8099, 68.1100, 0.0000, 0.0000);
	CreateDynamicObject_FR(3437, 1517.8800, 1854.0699, 8.5200, 0.0000, 90.0000, -20.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1865.4898, 51.5098, 63.2400, 180.0000, 180.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1868.0300, 31.6800, 77.8398, 0.0000, 0.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1867.3900, 46.7798, 72.9700, 180.0000, 180.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1868.6700, 36.7299, 87.5699, 0.0000, 0.0000);
	CreateDynamicObject_FR(3458, 1477.4000, 1868.4599, 41.8100, 82.6998, 180.0000, 180.0000);
	CreateDynamicObject_FR(3437, 1518.1899, 1856.0799, 8.5200, 0.0000, 90.0000, -180.0000);
	CreateDynamicObject_FR(3437, 1517.8598, 1858.0998, 8.5200, 0.0000, 90.0000, -340.0000);
	CreateDynamicObject_FR(3437, 1529.9000, 1856.0799, 8.5200, 0.0000, 90.0000, 0.0000);
	CreateDynamicObject_FR(16662, 944.4500, 1772.7600, -3.1098, 0.0000, 0.0000, 67.6298);
	CreateDynamicObject_FR(3279, 946.7700, 1783.0799, 12.1400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(16782, 942.4699, 1772.2500, -1.8600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(16644, 946.1500, 1790.0998, 30.5300, 0.0000, -20.0000, 90.0000);
	CreateDynamicObject_FR(16644, 946.2100, 1806.2900, 36.4398, 0.0000, -20.0000, 90.0000);
	CreateDynamicObject_FR(18766, 946.0399, 1820.2900, 39.3600, 90.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(18766, 943.1798, 1820.1600, 45.5200, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(18766, 946.0100, 1829.9898, 39.3600, 90.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(18766, 938.6198, 1815.6600, 41.3800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18766, 938.6300, 1815.6899, 45.3600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18766, 946.0200, 1836.4100, 39.3600, 90.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(18766, 943.2000, 1829.4399, 42.0000, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(18766, 943.1699, 1829.5300, 45.4099, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(18766, 943.1400, 1836.7099, 42.0000, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(18766, 943.1099, 1836.7198, 45.3400, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(18766, 929.6798, 1815.6500, 41.3899, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18766, 929.6798, 1815.6500, 45.3300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3193, 935.9298, 1836.6600, 39.6300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18766, 937.6900, 1841.6400, 41.3800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18766, 937.6900, 1841.6400, 46.2798, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18981, 931.4699, 1828.4100, 39.3498, 0.0000, 90.0000, 0.0000);
	CreateDynamicObject_FR(18981, 931.1099, 1827.7298, 47.4398, 0.0000, 90.0000, 0.0000);
	CreateDynamicObject_FR(18981, 930.7800, 1828.5500, 39.3498, 0.0000, 90.0000, 0.0000);
	CreateDynamicObject_FR(18981, 930.8098, 1827.7398, 47.4398, 0.0000, 90.0000, 0.0000);
	CreateDynamicObject_FR(3279, 929.5200, 1828.6800, 6.1700, 0.0000, 20.0000, 0.0000);
	CreateDynamicObject_FR(11441, 924.5100, 1817.7099, 39.8400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18766, 923.2000, 1815.6300, 41.3498, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18766, 923.2000, 1815.6300, 45.3300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18766, 927.8300, 1841.7500, 41.3800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18766, 927.8300, 1841.7500, 46.2598, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(11442, 923.4199, 1837.2900, 39.8400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18766, 923.4699, 1841.7298, 41.3800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18766, 923.3499, 1841.8100, 46.2900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3578, 1774.3800, 1918.5500, 534.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3578, 1774.3800, 1923.5500, 534.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3578, 1774.3698, 1928.5400, 534.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3578, 1777.5600, 1923.8100, 534.4699, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(3578, 1774.4300, 1938.7900, 534.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19842, 1777.3100, 1924.2298, 535.2299, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(3578, 1774.4300, 1943.7900, 534.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3578, 1777.5699, 1934.0699, 534.4699, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(3578, 1774.4100, 1948.7900, 534.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19842, 1776.9100, 1935.8598, 535.2299, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(3578, 1781.5600, 1923.8800, 534.4699, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(3578, 1777.5898, 1943.7099, 534.4699, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(13644, 1781.5500, 1933.8100, 533.6500, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(19842, 1777.3299, 1943.0500, 535.2199, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(3578, 1784.6700, 1918.5300, 534.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3578, 1781.5699, 1934.1300, 534.4699, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(3578, 1784.6700, 1923.5300, 534.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3578, 1785.5699, 1923.4399, 534.4699, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(3578, 1784.6600, 1928.5300, 534.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8331, 1774.5998, 1934.1700, 539.7899, 0.0000, 0.0000, 21.0100);
	CreateDynamicObject_FR(3578, 1781.5799, 1943.7700, 534.4699, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(3578, 1785.5799, 1933.6899, 534.4699, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(3578, 1784.6899, 1938.7700, 534.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3578, 1784.6999, 1943.7700, 534.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3578, 1789.5699, 1923.5000, 534.4699, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(3578, 1785.5898, 1943.8398, 534.4699, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(3578, 1784.7099, 1948.7700, 534.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3578, 1789.5799, 1933.7500, 534.4699, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(8620, 1781.9000, 1911.1098, 542.4000, 0.0000, 0.0000, -30.0000);
	CreateDynamicObject_FR(3578, 1789.5898, 1943.9000, 534.4699, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(13667, 1783.8800, 1914.8299, 542.0999, 0.0000, 0.0000, 70.0000);
	CreateDynamicObject_FR(8620, 1781.7298, 1956.6198, 542.4000, 0.0000, 0.0000, 30.0000);
	CreateDynamicObject_FR(13667, 1783.8199, 1953.0600, 542.1099, 0.0000, 0.0000, -50.0000);
	CreateDynamicObject_FR(7392, 1774.7099, 1933.1198, 556.4600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19334, 1955.6584, 1554.7553, 76.1194, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3472, 1957.7105, 1553.8879, 83.5466, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(9129, 2003.9615, 1544.8933, 35.2783, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(3434, 2006.4956, 1544.7868, 25.5212, 356.8583, 0.0000, 90.0010);
	
	//LV
	CreateDynamicObject_FR(19130, 2019.73279, 1545.16895, 9.90600,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(19130, 2020.19263, 1544.49036, 9.90600,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19128, 2020.51428, 1545.26941, 9.82276,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19130, 2020.70581, 1545.16089, 9.90600,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject_FR(19130, 2020.26660, 1545.77246, 9.90600,   0.00000, 90.00000, -90.00000);
	CreateDynamicObject_FR(18275, 2019.09216, 1545.08398, 11.86660,   0.00000, 0.00000, 70.00000);
	CreateDynamicObject_FR(3524, 2018.70886, 1543.99536, 7.07250,   3.14160, 0.00000, 90.57080);
	CreateDynamicObject_FR(3524, 2018.81665, 1546.60059, 7.07250,   3.14160, 0.00000, 90.57080);
	CreateDynamicObject_FR(3524, 2021.91614, 1543.72266, 7.07250,   3.14160, 0.00000, 90.57080);
	CreateDynamicObject_FR(3524, 2021.87842, 1546.64526, 7.07250,   3.14160, 0.00000, 90.57080);
	CreateDynamicObject_FR(3524, 2023.87183, 1540.10986, 11.31250,   3.14159, 0.00000, 1.57080);
	CreateDynamicObject_FR(3524, 2025.47351, 1550.85181, 11.35938,   3.14159, 0.00000, 1.57080);
	CreateDynamicObject_FR(5992, 2043.45728, 1521.27502, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, 2050.42676, 1521.31531, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, 2062.26465, 1518.82373, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18842, 2068.14429, 1560.15894, 22.20640,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, 2069.12427, 1518.94763, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18836, 2068.04980, 1510.65515, 18.05410,   10.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(5992, 2043.68323, 1600.45667, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, 2050.75000, 1600.43359, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, 2062.65430, 1481.73438, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18809, 2025.40356, 1473.22693, 46.13380,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18836, 2068.19189, 1609.63782, 18.09410,   -10.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(5992, 2069.53369, 1481.96814, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18826, 2090.41479, 1521.04102, 46.18870,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, 1960.45898, 1552.67786, 77.76870,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18826, 1989.90515, 1473.21948, 61.96870,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(9123, 2068.04932, 1461.16431, 14.16560,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(18809, 2075.19434, 1473.30591, 46.13380,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18809, 2024.24414, 1568.21399, 109.25380,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(5992, 2062.46167, 1452.69116, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18826, 2038.66553, 1520.51978, 109.12870,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(5992, 2069.11328, 1453.80334, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18826, 1960.82495, 1489.19861, 77.76870,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18826, 2059.67700, 1552.34680, 109.12870,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18826, 1939.94482, 1520.95764, 77.76870,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, 2010.78430, 1457.41260, 77.76870,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18809, 1974.63147, 1568.35400, 109.25380,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18826, 2110.66650, 1489.27393, 46.14870,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18818, 2125.78345, 1529.19287, 46.20340,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18826, 1939.45605, 1568.55115, 93.46870,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(9123, 2068.15845, 1653.93103, 14.16560,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18826, 2059.53784, 1488.70154, 109.12870,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18809, 2024.10425, 1472.77734, 109.05380,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18826, 2029.29541, 1424.30664, 30.56870,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(18809, 2125.51953, 1487.90491, 46.25380,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18809, 1974.62012, 1472.74646, 109.05380,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(9126, 2056.88745, 1419.47241, 13.94410,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(5992, 2062.78857, 1421.81458, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18809, 1975.27014, 1441.57031, 77.75380,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18858, 2029.08191, 1414.03125, 12.21310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19336, 2053.24829, 1421.83655, 43.61723,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(5992, 2069.00513, 1421.71619, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18826, 1939.86206, 1457.49634, 77.76870,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, 2077.46167, 1424.53210, 46.40870,   90.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1634, 2064.02881, 1410.27576, 10.48010,   0.00000, 0.00000, 178.00000);
	CreateDynamicObject_FR(1634, 2068.15918, 1410.00342, 10.48010,   0.00000, 0.00000, 178.00000);
	CreateDynamicObject_FR(1634, 2072.19873, 1409.86328, 10.48010,   0.00000, 0.00000, 178.00000);
	CreateDynamicObject_FR(3851, 2067.78540, 1406.79382, 14.83650,   0.00000, 0.00000, 85.00000);
	CreateDynamicObject_FR(1634, 2063.63770, 1403.89331, 10.48010,   0.00000, 0.00000, -5.00000);
	CreateDynamicObject_FR(18826, 2045.46631, 1403.63928, 46.40870,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1634, 2067.78857, 1403.54089, 10.48010,   0.00000, 0.00000, -5.00000);
	CreateDynamicObject_FR(18809, 1974.82141, 1440.72925, 109.05380,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(1634, 2071.98950, 1403.34912, 10.48010,   0.00000, 0.00000, -5.00000);
	CreateDynamicObject_FR(18809, 1968.79492, 1415.55310, 77.52250,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, 2125.67822, 1438.20337, 46.25380,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18826, 1939.39172, 1456.63916, 109.08870,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, 2010.09021, 1424.97424, 109.12870,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18809, 2175.31250, 1536.97534, 46.13380,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18826, 2004.20020, 1399.72302, 77.57370,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(9126, 2056.71997, 1384.44580, 13.94410,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(5992, 2050.68213, 1380.45044, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, 2043.41907, 1378.81433, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, 2062.75586, 1381.05676, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18826, 2109.36987, 1403.34900, 46.40870,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(5992, 2068.90552, 1381.26147, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18809, 1919.57556, 1415.62744, 77.52250,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, 1968.82458, 1383.86377, 77.52250,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18826, 1989.59021, 1393.22107, 109.10870,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(9126, 2057.34253, 1363.42896, 13.94410,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16778, 2027.66968, 1357.00830, 5.80130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18778, 2083.07520, 1360.27197, 11.08890,   20.00000, 0.00000, -30.00000);
	CreateDynamicObject_FR(18778, 2082.07983, 1358.38733, 11.08890,   0.00000, 0.00000, -30.00000);
	CreateDynamicObject_FR(18858, 2046.42126, 1349.79321, 11.01310,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18858, 2046.49561, 1349.55688, 11.01310,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(5992, 2050.33252, 1350.43298, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18858, 2046.48743, 1349.22412, 11.01310,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18858, 2046.56873, 1348.89893, 11.01310,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18858, 2046.58179, 1348.53198, 11.01310,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(5992, 2044.07642, 1348.37854, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18858, 2046.60156, 1348.20935, 11.01310,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18858, 2046.70886, 1347.91553, 11.01310,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18858, 2046.70154, 1347.67468, 11.01310,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18858, 2046.71802, 1347.33411, 11.01310,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18858, 2046.67529, 1347.02026, 11.01310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18858, 2046.61206, 1346.60327, 11.01310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, 2004.33850, 1351.88892, 61.63370,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18858, 2046.60242, 1346.21924, 11.01310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18858, 2046.60986, 1345.94629, 11.01310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18858, 2046.69617, 1345.76929, 11.01310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18858, 2046.75903, 1345.53333, 11.01310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18858, 2046.70117, 1345.21619, 11.01310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18858, 2046.60742, 1344.82507, 11.01310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18858, 2046.65967, 1344.54565, 11.01310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18858, 2046.61719, 1344.21509, 11.01310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18858, 2046.64709, 1343.89185, 11.01310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18858, 2046.58984, 1343.52478, 11.01310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18858, 2046.65637, 1343.26636, 11.01310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18858, 2046.60217, 1342.93860, 11.01310,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18809, 2224.46631, 1536.94263, 46.13380,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18826, 1933.49609, 1367.95398, 77.57370,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, 2010.51685, 1361.61731, 109.12870,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18809, 1870.56128, 1415.50745, 77.52250,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, 1968.90308, 1351.97046, 77.52250,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(5992, 2062.35571, 1338.27283, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, 2068.89600, 1338.47473, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18841, 1905.90979, 1383.61731, 93.20010,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18841, 1983.26709, 1335.78430, 45.80140,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16778, 2029.18237, 1330.00269, 5.80130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, 1975.40735, 1345.03528, 104.15380,   0.00000, 80.00000, 0.00000);
	CreateDynamicObject_FR(5992, 2044.19458, 1319.64355, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, 2049.73413, 1320.10693, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18809, 1870.50806, 1383.70117, 77.52250,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19129, 2119.98096, 1333.24963, 9.77650,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, 1926.79541, 1344.82422, 91.07380,   0.00000, 70.00000, 0.00000);
	CreateDynamicObject_FR(5992, 2062.42822, 1310.50549, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, 2068.79395, 1310.40088, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18841, 1884.70020, 1367.64856, 108.88010,   90.44000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, 2004.27356, 1304.27722, 45.45370,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18841, 1835.28894, 1399.57288, 77.50010,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18822, 1918.72253, 1345.00415, 108.75260,   90.00000, 0.00000, 248.00000);
	CreateDynamicObject_FR(18809, 1880.00684, 1344.88513, 74.07380,   0.00000, 70.00000, 0.00000);
	CreateDynamicObject_FR(18778, 2046.20642, 1292.74744, 10.95820,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18809, 2271.93262, 1536.87732, 46.13380,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18822, 1953.75427, 1313.28455, 108.71260,   90.00000, 0.00000, 207.70000);
	CreateDynamicObject_FR(18841, 1983.36487, 1288.17456, 29.80140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18778, 2046.23413, 1284.77515, 10.95820,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19336, 2055.53345, 1281.98279, 43.61723,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2780, 2181.08936, 1332.54773, 45.62284,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, 2096.56348, 1285.95679, 19.15840,   0.85840, 0.00000, 3.14160);
	CreateDynamicObject_FR(18826, 2286.44629, 1584.44812, 46.14870,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, 1841.82861, 1344.75305, 77.04870,   0.00000, -20.00000, 0.00000);
	CreateDynamicObject_FR(5992, 2062.19067, 1271.29529, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, 2068.39771, 1271.69104, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(2780, 2180.83862, 1321.02307, 45.62284,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, 2286.84497, 1632.09741, 61.84870,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, 2307.46509, 1552.77808, 46.14870,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18824, 1919.61096, 1289.96899, 108.68970,   90.00000, 0.00000, -78.50000);
	CreateDynamicObject_FR(2780, 2180.34277, 1303.44360, 45.62284,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18841, 1951.58228, 1284.19080, 124.50010,   0.00000, 0.00000, 150.00000);
	CreateDynamicObject_FR(18826, 2307.33521, 1616.20007, 46.14870,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18822, 1959.33020, 1266.69250, 108.71260,   90.00000, 0.00000, 166.08000);
	CreateDynamicObject_FR(18824, 1919.42603, 1290.15295, 140.30969,   90.00000, 0.00000, -78.50000);
	CreateDynamicObject_FR(18809, 2321.95483, 1632.41980, 77.33380,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18809, 2371.69263, 1632.45593, 77.33380,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(2780, 2179.67358, 1261.26526, 45.62284,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, 2110.88110, 1241.75549, 9.76810,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(5992, 2062.19189, 1237.93835, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, 2068.72363, 1237.61255, -0.42970,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19128, 2110.85718, 1237.78345, 9.76810,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, 2110.82813, 1233.84338, 9.76810,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7392, 2098.75122, 1218.76257, 72.96210,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3851, 2052.93872, 1218.60693, 44.52210,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18802, 2098.47778, 1218.44238, 64.49190,   0.02000, 0.00000, 180.00000);
	CreateDynamicObject_FR(3851, 2039.62756, 1218.67456, 43.54210,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, 2121.43555, 1233.28333, 9.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18790, 2041.33838, 1218.60510, 41.48140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3851, 2029.59302, 1218.85791, 44.22210,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18824, 1897.58984, 1257.14746, 108.68970,   90.00000, 0.00000, 10.62000);
	CreateDynamicObject_FR(19128, 2110.81079, 1229.86133, 9.76810,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18275, 2121.18066, 1231.61194, 11.78030,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18824, 1896.66541, 1257.48132, 140.30969,   90.00000, 0.00000, 8.68000);
	CreateDynamicObject_FR(18802, 1984.12500, 1217.92456, 64.49190,   0.02000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18824, 1930.07092, 1234.73230, 108.68970,   90.00000, 0.00000, 100.00000);
	CreateDynamicObject_FR(19128, 2110.78906, 1225.88635, 9.76810,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, 1924.19519, 1220.22314, 140.14650,   90.00000, 0.00000, 50.00000);
	CreateDynamicObject_FR(18809, 1962.22656, 1188.33716, 140.14650,   90.00000, 0.00000, 50.00000);
	CreateDynamicObject_FR(18780, 2031.83203, 1174.72949, 16.68770,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18841, 1964.25964, 1168.96362, 164.13840,   -60.00000, 0.00000, -40.16000);
	CreateDynamicObject_FR(18841, 1980.32031, 1155.16992, 148.21840,   -60.00000, 0.00000, 139.16000);
	CreateDynamicObject_FR(18841, 1964.25964, 1168.96362, 195.87840,   -60.00000, 0.00000, -40.16000);
	CreateDynamicObject_FR(18841, 1980.28235, 1155.27747, 180.09840,   -60.00000, 0.00000, 139.16000);
	CreateDynamicObject_FR(18841, 1963.82373, 1168.95813, 227.81841,   -60.00000, 0.00000, -40.16000);
	CreateDynamicObject_FR(18780, 2031.87915, 1144.74329, 20.10770,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(18841, 1979.95508, 1155.12671, 211.97839,   -60.00000, 0.00000, 139.16000);
	CreateDynamicObject_FR(19337, 2049.56714, 1136.79907, 68.27107,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18778, 2069.55225, 1149.55310, 10.95820,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18809, 1999.75134, 1157.02527, 235.59810,   90.00000, 0.00000, 50.00000);
	//CreateDynamicObject_FR(7980, 1429.37268, 1511.69617, 11.83840,   356.85840, 0.00000, 90.14160);
	CreateDynamicObject_FR(18858, 2018.37134, 1140.82068, 232.75090,   0.00000, 0.00000, 50.00000);
	CreateDynamicObject_FR(18858, 2019.25793, 1140.32593, 232.47090,   0.00000, 0.00000, 50.00000);
	CreateDynamicObject_FR(18858, 2019.66736, 1139.76611, 232.51089,   0.00000, 0.00000, 50.00000);
	CreateDynamicObject_FR(18778, 2069.64771, 1141.66553, 10.95820,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, 2037.73926, 1125.20581, 226.75810,   -70.00000, 0.00000, 50.00000);
	CreateDynamicObject_FR(18809, 2073.73828, 1095.15564, 209.69810,   -70.00000, 0.00000, 50.00000);
	CreateDynamicObject_FR(18826, 1906.52295, 958.57501, 59.25060,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(8644, 2091.41455, 1080.01917, 208.10480,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19338, 2043.47083, 969.77924, 80.85910,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19686, 2068.73022, 992.55170, 15.60370,   0.00000, 20.00000, 90.00000);
	CreateDynamicObject_FR(18836, 1906.54639, 924.54321, 74.98670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, 1906.62915, 923.29236, 43.44020,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19686, 2068.70605, 968.72009, 15.60370,   0.00000, 20.00000, -90.00000);
	CreateDynamicObject_FR(18789, 2142.35547, 1046.78418, 173.34810,   0.00000, 20.00000, -35.00000);
	CreateDynamicObject_FR(18826, 1954.02026, 908.94482, 43.51060,   90.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(18826, 1922.21191, 887.87488, 43.51060,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18836, 1906.59106, 874.84943, 74.98670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, 1969.82153, 873.62732, 43.44020,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18859, 2007.71936, 883.69409, 16.99280,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7073, 1936.99670, 862.70453, 23.83630,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(7073, 1926.25464, 862.51636, 23.83630,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18790, 2205.90112, 1002.85516, 152.26230,   0.00000, -20.00000, -35.00000);
	CreateDynamicObject_FR(7073, 1915.25012, 862.44623, 23.83630,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3437, 2035.02649, 863.73169, 6.35800,   0.00000, -70.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2035.02649, 863.73169, 6.35800,   0.00000, -60.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2035.02649, 863.73169, 6.35800,   0.00000, -20.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2035.02649, 863.73169, 6.35800,   0.00000, -10.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2035.02649, 863.73169, 6.35800,   0.00000, 70.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2035.02649, 863.73169, 6.35800,   0.00000, 60.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2035.02649, 863.73169, 6.35800,   0.00000, 50.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2035.02649, 863.73169, 6.35800,   0.00000, 40.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2035.02649, 863.73169, 6.35800,   0.00000, 30.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2035.02649, 863.73169, 6.35800,   0.00000, 20.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2035.02649, 863.73169, 6.35800,   0.00000, 10.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2035.02649, 863.73169, 6.35800,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2035.02649, 863.73169, 6.35800,   0.00000, -50.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2035.02649, 863.73169, 6.35800,   0.00000, -40.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2035.02649, 863.73169, 6.35800,   0.00000, -30.00000, 0.00000);
	CreateDynamicObject_FR(3511, 2088.89600, 876.41248, 5.92770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3511, 2127.26807, 892.01678, 5.44770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, 2211.53101, 999.68762, 195.42110,   90.00000, 0.00000, 55.00000);
	CreateDynamicObject_FR(7916, 2106.26440, 873.90839, 10.04840,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7916, 2106.36865, 873.31708, 11.74840,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2080.58496, 862.60480, 6.35800,   0.00000, -70.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2080.58496, 862.60480, 6.35800,   0.00000, -60.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2080.58496, 862.60480, 6.35800,   0.00000, -50.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2080.58496, 862.60480, 6.35800,   0.00000, -40.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2080.58496, 862.60480, 6.35800,   0.00000, -30.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2080.58496, 862.60480, 6.35800,   0.00000, -20.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2080.58496, 862.60480, 6.35800,   0.00000, -10.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2080.58496, 862.60480, 6.35800,   0.00000, 70.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2080.58496, 862.60480, 6.35800,   0.00000, 60.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2080.58496, 862.60480, 6.35800,   0.00000, 30.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2080.58496, 862.60480, 6.35800,   0.00000, 20.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2080.58496, 862.60480, 6.35800,   0.00000, 10.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2080.58496, 862.60480, 6.35800,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2080.58496, 862.60480, 6.35800,   0.00000, 50.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2080.58496, 862.60480, 6.35800,   0.00000, 40.00000, 0.00000);
	CreateDynamicObject_FR(7916, 2109.00293, 874.19708, 10.04840,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16120, 2118.91577, 882.16895, -0.82100,   0.00000, 0.00000, 230.00000);
	CreateDynamicObject_FR(7916, 2108.87427, 873.54236, 10.04840,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3511, 2087.13501, 863.83142, 5.48770,   0.00000, -20.00000, 0.00000);
	CreateDynamicObject_FR(3511, 2087.41553, 863.81592, 5.48770,   0.00000, 20.00000, 0.00000);
	CreateDynamicObject_FR(3511, 2087.41553, 863.81592, 5.48770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3511, 2136.64014, 871.56293, 4.98770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, 1969.63965, 823.90204, 43.44020,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19129, 2228.26123, 979.40619, 201.46330,   180.00000, 0.00000, 50.00000);
	CreateDynamicObject_FR(19129, 2234.23096, 979.54602, 201.46330,   180.00000, 90.00000, 150.00000);
	CreateDynamicObject_FR(620, 1947.49500, 818.77454, 6.20740,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(13666, 1893.55493, 834.03210, 12.86260,   0.00000, 25.00000, 0.00000);
	CreateDynamicObject_FR(13666, 1890.40234, 834.62823, 14.18260,   0.00000, 25.00000, 0.00000);
	CreateDynamicObject_FR(13666, 1887.34460, 835.20337, 15.62260,   0.00000, 25.00000, 0.00000);
	CreateDynamicObject_FR(13666, 1884.33777, 835.67059, 16.84260,   0.00000, 25.00000, 0.00000);
	CreateDynamicObject_FR(13666, 1881.12671, 836.20306, 18.20260,   0.00000, 25.00000, 0.00000);
	CreateDynamicObject_FR(620, 1926.50989, 820.98541, 6.20740,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(13666, 1877.60327, 836.74829, 19.74260,   0.00000, 25.00000, 0.00000);
	CreateDynamicObject_FR(620, 1908.97375, 819.59790, 6.20740,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, 1969.67957, 789.49768, 27.67270,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18778, 2341.68481, 972.99554, 11.05950,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(18778, 2342.69507, 973.07135, 11.05950,   10.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(18778, 2343.61719, 973.05426, 11.05950,   20.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(18778, 2344.24365, 973.10217, 11.05950,   30.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(3749, 1807.62988, 864.61066, 15.26160,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18778, 2344.90674, 973.10663, 11.05950,   40.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(18778, 2345.52930, 973.11432, 11.05950,   50.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(7916, 1854.37659, 797.19202, 13.03690,   0.00000, 0.00000, 200.00000);
	CreateDynamicObject_FR(7916, 1853.03271, 796.24579, 14.71690,   0.00000, 0.00000, 200.00000);
	CreateDynamicObject_FR(7916, 1847.90735, 795.87891, 13.03690,   0.00000, 0.00000, 200.00000);
	CreateDynamicObject_FR(7916, 1849.94592, 792.96155, 16.17690,   0.00000, 0.00000, 200.00000);
	CreateDynamicObject_FR(8620, 1788.41077, 867.10413, 32.55680,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject_FR(16120, 1849.53882, 777.13446, 7.78060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(8620, 1807.37061, 820.60242, 32.47680,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject_FR(16120, 1842.91443, 774.77948, 7.78060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3749, 1787.36523, 821.97675, 15.26160,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18778, 1776.59851, 832.26007, 10.95880,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18858, 1760.94507, 832.86627, 19.21540,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18778, 1746.41846, 833.50208, 9.97880,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(18828, 1761.34619, 845.38318, 148.08900,   0.00000, 0.00000, 0.00000);

	//AEROSF
	CreateDynamicObject_FR(14781, -1133.8299, -177.1199, 14.1300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(6866, -1142.0799, -186.2200, -2.8699, 0.0000, 0.0000, 100.3099);
	CreateDynamicObject_FR(19333, -1122.1899, -168.0500, 14.2799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1133.9000, -186.5399, 13.1000, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject_FR(3528, -1133.9100, -188.0800, 17.5900, 0.0000, 0.0000, -75.0000);
	CreateDynamicObject_FR(3512, -1123.7900, -183.6699, 12.6199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3660, -1123.8199, -184.1399, 14.2799, 0.0000, 0.0000, 196.0000);
	CreateDynamicObject_FR(7910, -1136.4300, -197.5599, 12.7500, -90.0000, 0.0000, 70.0000);
	CreateDynamicObject_FR(18728, -1120.7299, -188.7299, 13.1499, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1113.0600, -180.8899, 13.1000, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject_FR(3528, -1113.5000, -182.4700, 17.5900, 0.0000, 0.0000, -95.0000);
	CreateDynamicObject_FR(3515, -1137.9699, -208.3300, 13.8599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3279, -1102.8000, -176.6100, 12.9099, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1207.2600, -103.0299, 46.4300, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightyellow2_32");
	CreateDynamicObject_FR(3512, -1105.4599, -186.8800, 12.6199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(11413, -1117.0500, -201.1900, 14.5900, 0.0000, 0.0000, -23.0000);
	CreateDynamicObject_FR(11413, -1117.0500, -201.1900, 14.5900, 0.0000, 0.0000, -20.0000);
	CreateDynamicObject_FR(11413, -1117.0500, -201.1900, 14.5900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19128, -1117.1800, -201.3200, 13.5500, 0.0000, 0.0000, -80.0000);
	CreateDynamicObject_FR(19128, -1117.1800, -201.3200, 13.5299, 0.0000, 0.0000, -35.0000);
	CreateDynamicObject_FR(19458, -1117.2099, -201.3500, 13.4899, 0.0000, -90.0000, -80.0000);
	CreateDynamicObject_FR(19458, -1117.2099, -201.3500, 13.4799, 0.0000, -90.0000, 10.0000);
	CreateDynamicObject_FR(19458, -1117.2099, -201.3500, 13.4700, 0.0000, -90.0000, -125.0000);
	CreateDynamicObject_FR(19458, -1117.2099, -201.3500, 13.4600, 0.0000, -90.0000, -35.0000);
	CreateDynamicObject_FR(3660, -1104.4699, -187.2400, 14.2799, 0.0000, 0.0000, 324.7200);
	Unused_Object = CreateDynamicObject_FR(18826, -1182.2900, -78.0599, 33.2599, 0.0000, 0.0000, -135.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(7914, -1130.4899, -216.2500, 12.7399, -90.0000, 0.0000, 145.0000);
	CreateDynamicObject_FR(18728, -1104.5300, -198.1399, 13.1599, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18830, -1239.8599, -179.3000, 21.4500, 0.0000, -140.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(3528, -1097.2500, -193.8699, 17.5900, 0.0000, 0.0000, 195.0000);
	CreateDynamicObject_FR(621, -1095.8100, -193.3999, 13.1000, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject_FR(18728, -1113.8599, -214.3500, 13.1599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3528, -1119.5799, -221.3200, 17.5900, 0.0000, 0.0000, 80.0000);
	CreateDynamicObject_FR(3660, -1098.7199, -203.3399, 14.2799, 0.0000, 0.0000, 74.2600);
	CreateDynamicObject_FR(16113, -1251.2700, -159.7500, 6.0700, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(621, -1119.6999, -222.6900, 13.1000, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(3512, -1098.6099, -204.4199, 12.6199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, -1251.9699, -148.7400, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, -1252.1800, -154.2799, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3660, -1110.4399, -218.2299, 14.2799, 0.0000, 0.0000, 207.6900);
	CreateDynamicObject_FR(3512, -1109.6400, -217.6799, 12.6199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3528, -1102.7500, -212.1199, 17.5900, 0.0000, 0.0000, 135.0000);
	CreateDynamicObject_FR(3533, -1253.9599, -143.6600, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, -1253.6700, -159.3800, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1101.7399, -213.3999, 13.1000, 0.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(19652, -1236.1600, -109.4100, 56.3899, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightyellow2_32");
	CreateDynamicObject_FR(16113, -1256.2399, -132.0500, 6.0700, 0.0000, 0.0000, 354.0400);
	CreateDynamicObject_FR(3533, -1257.5699, -139.5299, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, -1257.1099, -163.6000, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, -1262.3499, -137.1199, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, -1261.6600, -166.5599, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19332, -1267.4399, -151.7100, 12.6999, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19652, -1236.1600, -109.4100, 76.3899, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	CreateDynamicObject_FR(3873, -1267.4399, -151.7100, 20.4099, 0.0000, 0.0000, -109.0000);
	CreateDynamicObject_FR(16776, -1086.8299, -215.8999, 13.1300, 0.0000, 0.0000, -69.0000);
	CreateDynamicObject_FR(3533, -1267.5500, -136.0599, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, -1267.2800, -167.5700, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19945, -1267.4399, -151.7100, -10.3000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19945, -1267.4399, -151.7100, -12.7500, 0.0000, 0.0000, -14.0000);
	CreateDynamicObject_FR(3533, -1272.8800, -136.8999, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, -1272.7199, -166.6499, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, -1277.6400, -139.8600, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, -1277.2600, -163.9100, 30.5100, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18824, -1240.3900, -224.2899, 59.1300, 0.0000, -45.0000, 268.1400);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19652, -1236.1600, -109.4100, 96.3899, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightgreen2_32");
	CreateDynamicObject_FR(16113, -1280.0699, -166.8000, 6.0700, 0.0000, 0.0000, 170.0000);
	CreateDynamicObject_FR(3533, -1281.2299, -144.0099, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, -1281.1199, -159.9499, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, -1282.8199, -154.6499, 30.5100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3533, -1283.0600, -149.2700, 30.5100, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1242.5699, -138.3399, 106.3899, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	CreateDynamicObject_FR(16113, -1286.5899, -140.2799, 6.0700, 0.0000, 0.0000, 79.0299);
	Unused_Object = CreateDynamicObject_FR(18824, -1239.5600, -200.1799, 98.6100, 0.0000, 45.0000, 88.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18859, -1102.5300, -258.1600, 24.5200, 0.0000, 0.0000, 286.0000);
	Unused_Object = CreateDynamicObject_FR(18830, -1294.5400, -124.9300, 21.4500, 0.0000, -140.0000, 135.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18824, -1238.8699, -160.9900, 122.6900, 0.0000, -45.0000, -90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18824, -1229.6899, -264.0000, 47.0400, -90.0000, 0.0000, -317.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19651, -1284.3000, -202.5700, 76.4000, 0.0000, 0.0000, 225.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	Unused_Object = CreateDynamicObject_FR(18824, -1190.7299, -288.7799, 47.0400, -90.0000, 0.0000, -135.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19649, -1277.8800, -173.6399, 106.3899, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 19527, "cauldron1", "alienliquid1");
	Unused_Object = CreateDynamicObject_FR(19651, -1284.3000, -202.5700, 96.4000, 0.0000, 0.0000, 225.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightgreen2_32");
	CreateDynamicObject_FR(18779, -1160.6800, -304.3999, 22.8500, 0.0000, 0.0000, 96.0000);
	Unused_Object = CreateDynamicObject_FR(18824, -1239.0600, -136.8899, 161.8999, 0.0000, 45.0000, 91.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18859, -1094.9699, -299.2900, 24.5000, 0.0000, 0.0000, 275.0000);
	Unused_Object = CreateDynamicObject_FR(18824, -1317.9100, -196.6799, 69.1500, -90.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(11484, -1180.4499, 22.0400, 13.1000, 0.0000, 0.0000, -135.0000);
	CreateDynamicObject_FR(13831, -1001.0499, -197.1399, 21.5699, 0.0000, 0.0000, 279.0000);
	CreateDynamicObject_FR(622, -1297.5500, -36.7099, 13.1099, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19945, -1180.5000, 22.0100, -20.0599, 0.0000, 0.0000, -8.0000);
	CreateDynamicObject_FR(18785, -1290.0000, -18.6000, 14.5799, 0.0000, 0.0000, 267.9700);
	CreateDynamicObject_FR(19005, -1314.5000, -252.6300, 16.2999, 0.0000, 0.0000, 195.7500);
	CreateDynamicObject_FR(18785, -1310.5100, -37.9500, 14.5799, 0.0000, 0.0000, 178.4499);
	Unused_Object = CreateDynamicObject_FR(19649, -1239.8499, -92.9300, 171.1900, 0.0000, 0.0000, 91.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3615, "beachhut", "ws_decking1");
	CreateDynamicObject_FR(3851, -1311.8000, -261.7999, 25.1700, 0.0000, 0.0000, -74.0000);
	CreateDynamicObject_FR(18367, -1252.1400, 16.2399, 31.3099, 18.0000, 0.0000, 316.5499);
	Unused_Object = CreateDynamicObject_FR(19649, -1178.6600, -333.3699, 44.2900, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	Unused_Object = CreateDynamicObject_FR(18824, -1345.7099, -168.8500, 69.1500, -90.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19661, -1246.5899, -7.5199, 111.1900, 0.0000, 0.0000, 181.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 19527, "cauldron1", "alienliquid1");
	Unused_Object = CreateDynamicObject_FR(19652, -1257.0699, -18.3400, 121.1900, 0.0000, 0.0000, 91.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	CreateDynamicObject_FR(18783, -1309.9699, -17.9500, 14.5799, 0.0000, 0.0000, 358.4700);
	CreateDynamicObject_FR(622, -1325.3699, -36.4900, 13.1099, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8397, -1285.3000, -303.5899, -12.5200, 0.0000, 0.0000, 20.0000);
	CreateDynamicObject_FR(18780, -1182.8399, 47.5099, 24.6499, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(3437, -1285.3900, -303.4599, 44.8800, 0.0000, 0.0000, -70.0000);
	CreateDynamicObject_FR(3437, -1285.3900, -303.4599, 56.5600, 0.0000, 0.0000, -70.0000);
	CreateDynamicObject_FR(16776, -1162.2299, -349.0400, 21.1599, 0.0000, 0.0000, -84.0000);
	CreateDynamicObject_FR(3437, -1292.2900, -306.1099, 38.5800, 0.0000, 0.0000, -70.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1240.7199, -43.0299, 171.1900, 0.0000, 0.0000, 91.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightyellow2_32");
	CreateDynamicObject_FR(11484, -1208.6500, 50.2999, 13.1099, 0.0000, 0.0000, 45.0000);
	Unused_Object = CreateDynamicObject_FR(19652, -1257.0699, -18.3400, 141.1900, 0.0000, 0.0000, 91.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	CreateDynamicObject_FR(3437, -1292.2900, -306.1099, 50.0999, 0.0000, 0.0000, -70.0000);
	CreateDynamicObject_FR(19005, -1368.8599, -181.4600, 16.2999, 0.0000, 0.0000, 65.0000);
	CreateDynamicObject_FR(19901, -1240.4200, 42.8199, 23.7500, 0.0000, 14.0000, 315.0000);
	CreateDynamicObject_FR(3437, -1290.6300, -305.5100, 62.1800, 90.0000, 0.0000, -70.0000);
	CreateDynamicObject_FR(19947, -1161.8499, -349.2099, -35.2900, 0.0000, 0.0000, -17.0000);
	CreateDynamicObject_FR(19947, -1161.8499, -349.2099, -35.2900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19945, -1208.5699, 50.3100, -20.0599, 0.0000, 0.0000, -8.0000);
	CreateDynamicObject_FR(7017, -1180.7199, 57.4099, 10.6599, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(18367, -1293.5600, 13.9300, 17.0499, -9.0000, 0.0000, 44.0000);
	CreateDynamicObject_FR(3437, -1297.7800, -308.1099, 32.8800, 90.0000, 0.0000, -70.0000);
	CreateDynamicObject_FR(18785, -1309.3199, 1.3999, 19.5100, 0.0000, 0.0000, 177.8399);
	Unused_Object = CreateDynamicObject_FR(19649, -1282.3199, -2.9000, 111.1800, 0.0000, 0.0000, 181.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	CreateDynamicObject_FR(3437, -1297.7800, -308.1099, 55.5099, 90.0000, 0.0000, -70.0000);
	CreateDynamicObject_FR(3437, -1301.6199, -309.5100, 32.8800, 90.0000, 0.0000, -70.0000);
	CreateDynamicObject_FR(18786, -1365.9599, -79.4000, 15.6599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18859, -1090.7600, -347.7500, 24.5000, 0.0000, 0.0000, 275.0000);
	CreateDynamicObject_FR(1632, -1297.8000, 18.0499, 14.2700, 0.0000, 0.0000, 224.9900);
	CreateDynamicObject_FR(3437, -1301.6199, -309.5100, 62.1800, 90.0000, 0.0000, -70.0000);
	CreateDynamicObject_FR(3437, -1306.3100, -311.2099, 36.8600, 90.0000, 0.0000, -70.0000);
	Unused_Object = CreateDynamicObject_FR(19652, -1257.0699, -18.3400, 161.1900, 0.0000, 0.0000, 91.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightyellow2_32");
	CreateDynamicObject_FR(3437, -1306.3100, -311.2099, 55.5099, 90.0000, 0.0000, -70.0000);
	CreateDynamicObject_FR(3437, -1311.4300, -313.0899, 42.3400, 0.0000, 0.0000, -70.0000);
	CreateDynamicObject_FR(3437, -1312.6199, -313.5100, 32.8800, 90.0000, 0.0000, -70.0000);
	CreateDynamicObject_FR(9078, -1158.3199, -370.9500, 12.8699, 0.0000, 0.0000, 303.2900);
	CreateDynamicObject_FR(18785, -1308.5699, 21.3099, 24.3500, 0.0000, 0.0000, 177.8399);
	CreateDynamicObject_FR(3437, -1311.4300, -313.0899, 50.0800, 0.0000, 0.0000, -70.0000);
	CreateDynamicObject_FR(3437, -1312.6199, -313.5100, 62.1800, 90.0000, 0.0000, -69.9400);
	CreateDynamicObject_FR(18786, -1288.6600, 40.4300, 29.1499, 0.0000, 30.0000, 178.0000);
	CreateDynamicObject_FR(3437, -1318.1099, -315.5299, 38.5800, 0.0000, 0.0000, -70.0000);
	CreateDynamicObject_FR(8397, -1318.2199, -315.6000, -12.5200, 0.0000, 0.0000, 20.0000);
	CreateDynamicObject_FR(3437, -1318.1099, -315.5299, 44.8499, 0.0000, 0.0000, -70.0000);
	Unused_Object = CreateDynamicObject_FR(18824, -1160.6500, 69.8000, 78.8300, 0.0000, 10.0000, -135.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(620, -1385.8800, -86.5299, 13.1300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3437, -1318.1099, -315.5299, 56.5600, 0.0000, 0.0000, -70.0000);
	CreateDynamicObject_FR(19947, -1275.7099, 53.8199, 13.1499, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19947, -1275.7099, 53.8199, 13.1499, 0.0000, 0.0000, -6.0000);
	Unused_Object = CreateDynamicObject_FR(19682, -1319.3800, -5.7600, 111.1900, 0.0000, 0.0000, 225.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	CreateDynamicObject_FR(19002, -1386.7399, -79.0100, 24.6900, 0.0000, 0.0000, 270.3299);
	Unused_Object = CreateDynamicObject_FR(18824, -1190.7199, -378.0000, 47.0400, -90.0000, 0.0000, -225.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(620, -1386.0300, -71.5199, 13.1300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18783, -1303.4300, 40.9300, 15.2100, 0.0000, -29.0000, 358.0000);
	CreateDynamicObject_FR(3851, -1286.0100, -352.1300, 25.1700, 0.0000, 0.0000, -74.0000);
	Unused_Object = CreateDynamicObject_FR(18809, -1347.1199, -30.1100, 113.9300, 0.0000, -90.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19005, -1283.1899, -361.2999, 16.2999, 0.0000, 0.0000, 16.2099);
	CreateDynamicObject_FR(18779, -1163.9699, -391.6600, 22.8500, 0.0000, 0.0000, -85.0000);
	CreateDynamicObject_FR(1632, -1234.0799, 84.7200, 10.8999, 0.0000, 0.0000, 44.0400);
	CreateDynamicObject_FR(7392, -1381.0200, -264.4299, 36.1699, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(1632, -1237.2099, 87.9899, 14.0200, 22.0000, 0.0000, 44.0000);
	CreateDynamicObject_FR(18859, -1092.8699, -386.6099, 24.5200, 0.0000, 0.0000, 263.0000);
	CreateDynamicObject_FR(18786, -1406.1800, -79.1900, 15.5000, 0.0000, 0.0000, 179.5399);
	Unused_Object = CreateDynamicObject_FR(18809, -1382.3699, -65.3600, 113.9300, 0.0000, -90.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18785, -1306.9100, 61.0299, 24.3099, 0.0000, 0.0000, 357.6199);
	CreateDynamicObject_FR(620, -1384.2399, -18.5599, 13.1400, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18830, -1390.0899, -28.9200, 23.2600, 0.0000, -132.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19667, -1388.5400, -272.0400, 24.3899, 0.0000, 0.0000, -230.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	CreateDynamicObject_FR(18997, -1385.1300, -18.6200, 16.1299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1385.1300, -18.6200, 18.6299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1385.1300, -18.6200, 21.1299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(705, -1424.3499, -155.5899, 21.0400, 0.0000, 0.0000, 72.4400);
	CreateDynamicObject_FR(705, -1424.3499, -155.5899, 21.0400, 0.0000, 0.0000, 157.6000);
	CreateDynamicObject_FR(620, -1400.6199, -35.1199, 13.1400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1401.3199, -35.0999, 16.1299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1401.3199, -35.0999, 18.6299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1401.3199, -35.0999, 21.1299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(705, -1417.6500, -221.5200, 21.0400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(705, -1417.6500, -221.5200, 21.0400, 0.0000, 0.0000, 72.4400);
	Unused_Object = CreateDynamicObject_FR(18824, -1230.0699, -402.0899, 47.0400, -90.0000, 0.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18830, -1392.8399, -10.1300, 23.2600, 0.0000, -132.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18785, -1306.0699, 80.7099, 19.4699, 0.0000, 0.0000, 357.6199);
	CreateDynamicObject_FR(18859, -1207.7800, 118.7900, 24.5200, 0.0000, 0.0000, 225.0000);
	CreateDynamicObject_FR(4826, -1434.6600, -189.2899, 27.8899, -180.0000, 0.0000, 5.0000);
	CreateDynamicObject_FR(4826, -1434.6600, -189.2899, 28.3899, 0.0000, 0.0000, 5.0000);
	Unused_Object = CreateDynamicObject_FR(18830, -1409.0400, -26.6900, 23.2600, 0.0000, -132.0000, -135.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(4826, -1434.5699, -189.3300, 36.4199, 0.0000, 0.0000, 5.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1416.5799, -99.5599, 111.1800, 0.0000, 0.0000, -135.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	CreateDynamicObject_FR(620, -1401.2500, -1.2200, 13.1400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1402.0400, -1.2799, 16.1299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1402.0400, -1.2799, 18.6299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1402.0400, -1.2799, 21.1299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(705, -1442.7299, -189.8399, 39.0000, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18830, -1411.7099, -7.5100, 23.2600, 0.0000, -132.0000, 135.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(620, -1418.0500, -18.0000, 13.1300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(705, -1410.0300, -294.3200, 23.8199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1418.4399, -17.6599, 16.1299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1418.4399, -17.6599, 18.6299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1418.4399, -17.6599, 21.1299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18859, -1102.5500, -427.1300, 24.5400, 0.0000, 0.0000, 250.0000);
	CreateDynamicObject_FR(18785, -1305.2199, 100.4599, 14.6000, 0.0000, 0.0000, 357.6199);
	CreateDynamicObject_FR(18859, -1182.8499, 143.7700, 24.5300, 0.0000, 0.0000, 225.0000);
	Unused_Object = CreateDynamicObject_FR(18809, -1451.1500, -134.1399, 113.9300, 0.0000, -90.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18824, -1254.1600, -441.5100, 47.0400, -90.0000, 0.0000, -225.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19005, -1471.2600, -200.8600, 16.2999, 0.0000, 0.0000, 268.0000);
	CreateDynamicObject_FR(16114, -1153.0300, 161.8600, 10.9300, 0.0000, 0.0000, 209.3099);
	CreateDynamicObject_FR(19901, -1482.4699, -100.1999, 17.9400, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(18859, -1120.5200, -467.2600, 24.5599, 0.0000, 0.0000, 242.0000);
	CreateDynamicObject_FR(16114, -1168.8100, 176.6499, 0.2099, 0.0000, 0.0000, 209.3099);
	CreateDynamicObject_FR(16114, -1154.2299, 186.3600, 10.9300, 0.0000, 0.0000, 251.7299);
	Unused_Object = CreateDynamicObject_FR(19649, -1486.2199, -169.2100, 111.1800, 0.0000, 0.0000, -135.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3615, "beachhut", "ws_decking1");
	CreateDynamicObject_FR(18784, -1398.1400, 94.4000, 15.5299, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(19002, -1391.5500, 100.6800, 17.9099, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(18784, -1412.0999, 80.4499, 15.5299, 0.0000, 0.0000, -135.0000);
	CreateDynamicObject_FR(19002, -1420.0600, 72.4199, 17.9099, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(18784, -1384.0000, 108.5400, 15.5299, 0.0000, 0.0000, -135.0000);
	CreateDynamicObject_FR(18784, -1426.2399, 66.3199, 15.5299, 0.0000, 0.0000, 45.0000);
	Unused_Object = CreateDynamicObject_FR(18824, -1293.4799, -465.6000, 47.0400, -90.0000, 0.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19005, -1317.2700, -468.8900, 16.3099, 0.0000, 0.0000, 116.0000);
	CreateDynamicObject_FR(18859, -1144.3000, -502.4599, 24.5699, 0.0000, 0.0000, 230.0000);
	CreateDynamicObject_FR(19005, -1321.2700, 170.9900, 16.3199, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(19005, -1487.0899, 6.3800, 16.3199, 0.0000, 0.0000, -225.0000);
	CreateDynamicObject_FR(621, -1421.9699, 103.3399, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1400.9799, 124.4100, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1443.1199, 82.3499, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1379.8499, 145.6199, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1464.2399, 60.9399, 13.3699, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1427.3100, 108.1800, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightgreen2_32");
	Unused_Object = CreateDynamicObject_FR(19649, -1392.0600, 143.4299, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightgreen2_32");
	CreateDynamicObject_FR(621, -1358.7099, 166.8000, 13.3699, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1462.5400, 72.9499, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightgreen2_32");
	CreateDynamicObject_FR(19129, -1336.3699, -478.2000, 24.1700, 0.0000, 0.0000, 25.0000);
	CreateDynamicObject_FR(621, -1485.0000, 40.0800, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19332, -1293.3100, 199.6199, -2.2599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(9100, -1293.4499, 199.4100, -12.2700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(9104, -1293.4499, 199.4100, -12.2700, 0.0000, 0.0000, -90.0000);
	CreateDynamicObject_FR(19884, -1189.5400, 223.3600, 22.5799, 30.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(8881, -1459.4300, -377.4899, 39.7500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1337.4200, 187.8200, 13.3699, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1356.9200, 178.5700, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	Unused_Object = CreateDynamicObject_FR(19649, -1497.7399, 37.7500, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	CreateDynamicObject_FR(1380, -1373.9000, -469.9299, 37.4799, -90.0000, 0.0000, 27.0000);
	CreateDynamicObject_FR(621, -1316.4200, 209.0399, 13.3699, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, -1305.5400, -510.3500, 47.0400, -90.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(18859, -1175.5400, -539.7500, 24.5699, 0.0000, 0.0000, 230.0000);
	CreateDynamicObject_FR(19005, -1262.5600, 230.1300, 16.3199, 0.0000, 0.0000, -225.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1321.7800, 213.7100, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3615, "beachhut", "ws_decking1");
	CreateDynamicObject_FR(11489, -1216.3499, 243.3600, 13.4300, 0.0000, 0.0000, -135.0000);
	Unused_Object = CreateDynamicObject_FR(18826, -1216.5400, 243.5700, 23.4699, 0.0000, 90.0000, -135.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19884, -1166.3800, 246.5200, 69.3499, 80.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(621, -1295.3499, 229.9400, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18859, -1191.1099, -556.4500, 24.5599, 0.0000, 0.0000, 221.0000);
	CreateDynamicObject_FR(1380, -1352.0400, -512.8200, 37.7299, 90.0000, 0.0000, 27.0000);
	CreateDynamicObject_FR(19129, -1380.3800, -501.1099, 28.4799, 25.0000, 0.0000, -65.0000);
	CreateDynamicObject_FR(621, -1273.8000, 250.6600, 13.3699, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1286.6099, 248.8899, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3615, "beachhut", "ws_decking1");
	CreateDynamicObject_FR(19129, -1403.8800, -502.8699, 24.1700, 0.0000, 0.0000, 25.0000);
	CreateDynamicObject_FR(621, -1253.3699, 272.2799, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, -1304.9699, -559.5999, 16.7199, 0.0000, 25.0000, 22.7999);
	Unused_Object = CreateDynamicObject_FR(19680, -1302.8199, -560.1900, 47.0600, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	CreateDynamicObject_FR(19129, -1394.3199, -520.3900, 24.1700, 0.0000, 0.0000, 25.0000);
	CreateDynamicObject_FR(7089, -1170.3800, 290.7200, 21.4099, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(9159, -1330.2500, -557.5300, 31.2000, 0.0000, 0.0000, 21.7199);
	CreateDynamicObject_FR(8493, -1330.2500, -557.5300, 31.2000, 0.0000, 0.0000, 21.7199);
	Unused_Object = CreateDynamicObject_FR(19649, -1251.4000, 284.1099, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	CreateDynamicObject_FR(621, -1231.8399, 293.2799, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, -1420.7199, -520.0499, 28.4799, 0.0000, 25.0000, 25.0000);
	CreateDynamicObject_FR(1380, -1449.9100, -507.2600, 37.5099, -90.0000, 0.0000, 27.0000);
	Unused_Object = CreateDynamicObject_FR(19682, -1435.2500, -517.6300, 111.1900, 0.0000, 0.0000, 225.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightyellow2_32");
	CreateDynamicObject_FR(19129, -1350.3000, -577.9699, 16.7199, 0.0000, 25.0000, -157.0000);
	CreateDynamicObject_FR(1380, -1428.0600, -550.1699, 37.7299, 90.0000, 0.0000, 27.0000);
	CreateDynamicObject_FR(19129, -1465.6800, -548.9799, 24.1700, 0.0000, 0.0000, 30.1100);
	Unused_Object = CreateDynamicObject_FR(18809, -1462.6999, -541.7000, 113.9300, 0.0000, -90.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19005, -1483.8499, -563.1300, 16.3099, 0.0000, 0.0000, 299.9500);
	Unused_Object = CreateDynamicObject_FR(19661, -1491.3100, -562.9199, 111.1800, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	Unused_Object = CreateDynamicObject_FR(19649, -1302.9699, -610.0200, 47.0800, 0.0000, 0.0000, 89.6900);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	Unused_Object = CreateDynamicObject_FR(19649, -1303.2399, -659.8400, 47.0800, 0.0000, 0.0000, 89.6900);
	SetDynamicObjectMaterial(Unused_Object, 0, 3615, "beachhut", "ws_decking1");
	Unused_Object = CreateDynamicObject_FR(18826, -1303.3800, -695.1199, 33.9799, 0.0000, 0.0000, 90.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(13642, -1317.0699, -720.4199, 1.7200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1631, -1393.4699, -706.1400, 0.6000, 0.0000, 0.0000, 284.5199);
	CreateDynamicObject_FR(8493, -1354.4200, -741.6400, 13.4399, 3.0000, 21.0000, 0.0000);
	CreateDynamicObject_FR(1655, -1377.8900, -753.7500, 0.9399, 0.0000, 0.0000, 266.9500);
	CreateDynamicObject_FR(1655, -1457.1099, -723.5900, 0.9399, 0.0000, 0.0000, 89.9100);
	CreateDynamicObject_FR(18858, -1469.6700, -723.5800, 7.0999, 0.0000, 0.0000, 88.3799);
	CreateDynamicObject_FR(622, -1382.0200, -791.8200, 11.8299, 0.0000, 0.0000, 5.9600);
	CreateDynamicObject_FR(1655, -1481.5500, -723.1300, 0.9399, 0.0000, 0.0000, 266.9500);
	CreateDynamicObject_FR(16118, -1382.0600, -796.9600, -3.2599, 0.0000, 0.0000, 90.9100);
	CreateDynamicObject_FR(1655, -1444.5300, -762.2999, 0.9399, 0.0000, 0.0000, 89.9100);
	CreateDynamicObject_FR(622, -1400.2500, -794.7999, 11.8299, 0.0000, 0.0000, 10.1300);
	Unused_Object = CreateDynamicObject_FR(18826, -1460.8499, -761.7999, 2.2999, -90.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(1607, -1433.7299, -788.3599, 0.6899, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18778, -1212.1700, -891.0300, 129.0899, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject_FR(9052, -1498.7800, -784.9400, 6.8400, 0.0000, 0.0000, 3.4800);
	CreateDynamicObject_FR(8882, -1508.7099, -361.2000, 39.4000, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1520.1899, -541.4600, 111.1800, 0.0000, 0.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 19527, "cauldron1", "alienliquid1");
	Unused_Object = CreateDynamicObject_FR(18809, -1555.3900, -506.2699, 113.9300, 0.0000, -90.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19128, -1592.0300, -499.9599, 32.0400, 83.0800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1591.8000, -500.8299, 35.8400, 69.2300, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1592.0100, -511.0199, 25.0000, 0.0000, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1592.7500, -502.9299, 38.9900, 41.5400, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1593.5300, -500.4100, 28.4599, 55.3800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1594.5600, -505.8999, 40.7700, 13.8500, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1595.1500, -513.1599, 25.9200, -27.6900, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1596.0699, -501.9299, 25.9200, 27.6900, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1596.6600, -509.1900, 40.7700, -13.8500, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1597.6899, -514.6900, 28.4599, -55.3800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1598.9899, -493.8800, 35.8400, 69.2300, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1599.2199, -493.0199, 32.0400, 83.0800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1599.2099, -504.0700, 25.0000, 0.0000, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1598.4599, -512.1699, 38.9900, -41.5400, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1599.9599, -495.9500, 38.9900, 41.5400, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1599.1899, -515.1300, 32.0400, -83.0800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1600.7199, -493.4599, 28.4599, 55.3800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1599.4200, -514.2600, 35.8400, -69.2300, -180.0000, 136.0000);
	CreateDynamicObject_FR(13641, -1522.2600, -721.7899, 1.0800, 0.0000, 0.0000, 180.1100);
	Unused_Object = CreateDynamicObject_FR(19649, -1590.5400, -471.1099, 111.1800, 0.0000, 0.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10056, "bigoldbuild_sfe", "cluckbelld1_law");
	CreateDynamicObject_FR(19128, -1601.7500, -498.9599, 40.7700, 13.8500, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1602.3399, -506.2099, 25.9200, -27.6900, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1603.2600, -494.9899, 25.9200, 27.6900, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1603.8599, -502.2500, 40.7700, -13.8500, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1604.8900, -507.7399, 28.4599, -55.3800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1606.1800, -486.9400, 35.8400, 69.2300, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1606.4200, -486.0700, 32.0400, 83.0800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1606.4000, -497.1300, 25.0000, 0.0000, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1605.6600, -505.2200, 38.9900, -41.5400, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1606.3800, -508.1799, 32.0400, -83.0800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1607.1400, -489.0400, 38.9900, 41.5400, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1606.6099, -507.3200, 35.8400, -69.2300, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1607.9100, -486.5100, 28.4599, 55.3800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1608.9399, -492.0100, 40.7700, 13.8500, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1609.5300, -499.2699, 25.9200, -27.6900, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1610.4599, -488.0400, 25.9200, 27.6900, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1611.0500, -495.2999, 40.7700, -13.8500, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1612.0799, -500.7999, 28.4599, -55.3800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1613.5899, -490.1799, 25.0000, 0.0000, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1612.8499, -498.2699, 38.9900, -41.5400, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1613.3800, -479.9899, 35.8400, 69.2300, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1613.6099, -479.1199, 32.0400, 83.0800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1613.5799, -501.2399, 32.0400, -83.0800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1613.8100, -500.3699, 35.8400, -69.2300, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1614.3299, -482.0899, 38.9900, 41.5400, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1615.1099, -479.5700, 28.4599, 55.3800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1616.1400, -485.0599, 40.7700, 13.8500, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1616.7299, -492.3200, 25.9200, -27.6900, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1617.6500, -481.0899, 25.9200, 27.6900, 0.0000, -44.0000);
	CreateDynamicObject_FR(18859, -1578.7399, -659.8599, 24.2800, 0.0000, 0.0000, -93.0000);
	CreateDynamicObject_FR(19128, -1618.2399, -488.3500, 40.7700, -13.8500, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1619.2700, -493.8500, 28.4599, -55.3800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1620.0400, -491.3299, 38.9900, -41.5400, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1620.7900, -483.2300, 25.0000, 0.0000, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1620.5699, -473.0400, 35.8400, 69.2300, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1620.8000, -472.1799, 32.0400, 83.0800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1620.7700, -494.2900, 32.0400, -83.0800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1621.0000, -493.4200, 35.8400, -69.2300, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1621.5300, -475.1400, 38.9900, 41.5400, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1622.3000, -472.6199, 28.4599, 55.3800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1623.9200, -485.3699, 25.9200, -27.6900, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1623.3299, -478.1199, 40.7700, 13.8500, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1624.8399, -474.1499, 25.9200, 27.6900, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1625.4399, -481.4100, 40.7700, -13.8500, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1626.4699, -486.8999, 28.4599, -55.3800, 0.0000, -44.0000);
	CreateDynamicObject_FR(13641, -1552.1300, -722.9500, 1.0800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19128, -1627.2399, -484.3800, 38.9900, -41.5400, -180.0000, 136.0000);
	CreateDynamicObject_FR(19128, -1627.9799, -476.2900, 25.0000, 0.0000, 0.0000, 316.0000);
	CreateDynamicObject_FR(19128, -1627.9599, -487.3399, 32.0400, -83.0800, 0.0000, -44.0000);
	CreateDynamicObject_FR(19128, -1628.1999, -486.4800, 35.8400, -69.2300, -180.0000, 136.0000);
	Unused_Object = CreateDynamicObject_FR(18809, -1521.0200, -204.0000, 113.9300, 0.0000, -90.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18809, -1625.4899, -436.1700, 113.9300, 0.0000, -90.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19005, -1640.7800, -463.2399, 21.2299, 0.0000, 0.0000, -135.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1555.6400, -238.6399, 111.1800, 0.0000, 0.0000, -135.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	Unused_Object = CreateDynamicObject_FR(19686, -1597.3199, -265.7500, 31.2700, 0.0000, -97.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightgreen2_32");
	Unused_Object = CreateDynamicObject_FR(18809, -1590.7800, -273.7900, 113.9300, 0.0000, -90.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19005, -1583.9699, -237.0500, 16.3400, 0.0000, 0.0000, 135.0000);
	Unused_Object = CreateDynamicObject_FR(19686, -1615.5699, -284.9200, 31.2700, 0.0000, -97.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 19527, "cauldron1", "alienliquid1");
	CreateDynamicObject_FR(18859, -1625.9200, -657.3900, 24.2800, 0.0000, 0.0000, -273.0000);
	Unused_Object = CreateDynamicObject_FR(19686, -1604.9599, -258.1300, 20.4599, 0.0000, -7.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 14803, "bdupsnew", "bdup2_wallpaperc");
	CreateDynamicObject_FR(19842, -1604.6700, -257.4599, 31.5799, 90.0000, 0.0000, 135.0000);
	Unused_Object = CreateDynamicObject_FR(19686, -1605.0300, -257.8399, 42.0600, 0.0000, -187.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightgreen2_32");
	Unused_Object = CreateDynamicObject_FR(19649, -1625.7399, -308.7600, 111.1800, 0.0000, 0.0000, -135.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	Unused_Object = CreateDynamicObject_FR(18836, -1517.7700, -135.5000, 17.9400, 0.0000, -180.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(18836, -1553.0799, -170.8099, 17.9400, 0.0000, -180.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19686, -1624.0500, -276.4200, 20.4599, 0.0000, -7.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	CreateDynamicObject_FR(19842, -1624.2399, -277.3999, 31.5799, 90.0000, 0.0000, 135.0000);
	Unused_Object = CreateDynamicObject_FR(19686, -1623.6099, -277.1199, 42.0600, 0.0000, -187.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	Unused_Object = CreateDynamicObject_FR(19686, -1612.6700, -250.3899, 31.2700, 0.0000, 81.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	CreateDynamicObject_FR(19901, -1588.3900, -206.1199, 17.9400, 0.0000, 0.0000, 45.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1660.4399, -401.2000, 111.1800, 0.0000, 0.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 19527, "cauldron1", "alienliquid1");
	CreateDynamicObject_FR(8832, -1606.1199, -731.7600, -4.1700, 0.0000, -26.0000, 90.0000);
	CreateDynamicObject_FR(19005, -1645.0699, -298.5899, 16.3400, 0.0000, 0.0000, 315.0299);
	Unused_Object = CreateDynamicObject_FR(19686, -1631.6999, -268.5499, 31.2700, 0.0000, 81.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	Unused_Object = CreateDynamicObject_FR(18809, -1660.7900, -343.8200, 113.9300, 0.0000, -90.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19667, -1637.5500, -247.5000, 47.1500, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	Unused_Object = CreateDynamicObject_FR(19661, -1681.9300, -372.2900, 111.1800, 0.0000, 0.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	CreateDynamicObject_FR(18779, -1715.7500, -532.2700, 23.2600, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(18779, -1704.0699, -611.9299, 23.2600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18779, -1715.7500, -552.1900, 54.5099, 0.0000, 50.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(19667, -1697.9100, -292.1400, 47.1500, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	CreateDynamicObject_FR(19129, -1574.9499, -95.2399, 9.9300, 0.0000, 90.0000, -45.0000);
	CreateDynamicObject_FR(18779, -1721.6300, -611.9199, 50.6300, 0.0000, 50.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18822, -1694.4200, -270.1199, 49.8899, -90.0000, 180.0000, -23.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19667, -1579.5899, -91.2900, 41.4099, 0.0000, 0.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	Unused_Object = CreateDynamicObject_FR(18826, -1713.6099, -298.8999, 33.5000, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19667, -1558.9000, -70.9100, 41.4099, 0.0000, 0.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightblue2_32");
	Unused_Object = CreateDynamicObject_FR(18822, -1680.0400, -223.4100, 49.8899, -90.0000, 180.0000, 157.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(19129, -1514.2800, -34.3199, 9.9300, 0.0000, 90.0000, -45.0000);
	CreateDynamicObject_FR(19378, -1588.3599, -96.1500, 26.4099, 0.0000, -90.0000, 45.0000);
	CreateDynamicObject_FR(19005, -1598.0699, -105.6299, 16.3199, 0.0000, 0.0000, -225.0000);
	CreateDynamicObject_FR(19378, -1573.9499, -81.6999, 26.4099, 0.0000, -90.0000, 45.0000);
	CreateDynamicObject_FR(19005, -1613.4799, -121.2099, 16.3199, 0.0000, 0.0000, -45.0000);
	Unused_Object = CreateDynamicObject_FR(19667, -1538.3299, -49.6800, 41.4099, 0.0000, 0.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10023, "bigwhitesfe", "sfe_arch8");
	CreateDynamicObject_FR(9078, -1566.6099, -72.2900, 17.7700, 0.0000, 0.0000, 72.9000);
	CreateDynamicObject_FR(8620, -1549.6700, -57.2299, 10.8199, 0.0000, 0.0000, 315.0000);
	CreateDynamicObject_FR(19335, -1549.5400, -56.9099, 2.5499, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19333, -1549.5400, -56.9099, 2.0499, 0.0000, 0.0000, -20.0000);
	CreateDynamicObject_FR(9078, -1534.7299, -43.8800, 17.7399, 0.0000, 0.0000, 252.3699);
	Unused_Object = CreateDynamicObject_FR(19667, -1516.8199, -28.2000, 41.4099, 0.0000, 0.0000, -45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	CreateDynamicObject_FR(19378, -1527.2700, -34.5200, 26.4099, 0.0000, -90.0000, 45.0000);
	CreateDynamicObject_FR(19378, -1512.6999, -20.1900, 26.4099, 0.0000, -90.0000, 45.0000);
	CreateDynamicObject_FR(19005, -1502.5100, -9.1800, 16.3199, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(621, -1611.9499, -86.5199, 13.3400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1591.0500, -65.1800, 13.3999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1633.3000, -107.6699, 13.3800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1570.0300, -44.2200, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1654.2099, -128.5500, 13.4200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1548.5300, -23.3999, 13.3699, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1603.2099, -67.7099, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10056, "bigoldbuild_sfe", "cluckbelld1_law");
	Unused_Object = CreateDynamicObject_FR(19649, -1638.5500, -103.0500, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7650, "vgnusedcar", "lightpurple2_32");
	CreateDynamicObject_FR(621, -1675.3699, -149.7500, 13.4099, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1527.1400, -2.2200, 13.3699, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1568.0999, -32.6100, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 7555, "bballcpark1", "ws_carparknew2a");
	Unused_Object = CreateDynamicObject_FR(19649, -1673.6899, -138.1999, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 10056, "bigoldbuild_sfe", "cluckbelld1_law");
	CreateDynamicObject_FR(18367, -1707.4399, -182.8999, 12.4899, 0.0000, 0.0000, 147.0000);
	CreateDynamicObject_FR(18367, -1709.3100, -181.6999, 12.4899, 0.0000, 0.0000, 147.0000);
	Unused_Object = CreateDynamicObject_FR(18826, -1718.5899, -183.0099, 33.5099, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	Unused_Object = CreateDynamicObject_FR(19649, -1532.9399, 2.5499, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	CreateDynamicObject_FR(621, -1506.4799, 18.7000, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19091, -1968.3199, 238.9199, 36.0999, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1968.4899, 238.9400, 35.9000, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1968.5400, 238.9499, 36.4000, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1968.6600, 238.9600, 36.0999, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1968.8499, 238.8800, 36.4000, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1968.8399, 238.9199, 35.9000, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1969.0500, 238.8500, 36.0999, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1970.1800, 238.8200, 35.0800, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1970.4100, 238.8600, 34.7799, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1970.4000, 238.8500, 35.3800, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1970.5600, 238.8399, 35.0800, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1970.7800, 238.8099, 34.7799, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1970.7700, 238.8099, 35.3800, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1970.9399, 238.8000, 35.0800, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1972.5999, 238.9299, 36.0999, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1972.7700, 238.8800, 36.4000, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1972.8399, 238.9100, 35.7999, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1972.9499, 238.8699, 36.0999, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1973.1400, 238.7799, 36.4000, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1973.2099, 238.8099, 35.7999, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1973.2900, 238.8200, 36.0999, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1974.8699, 238.9799, 35.0800, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1975.0000, 238.9299, 34.7799, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1975.0200, 238.9299, 35.3800, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1975.2500, 238.9299, 35.0800, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1975.4000, 238.8899, 35.3800, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1975.4100, 238.9199, 34.7700, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(19091, -1975.6300, 238.8999, 35.0800, 0.0000, 0.0000, 102.7300);
	CreateDynamicObject_FR(1568, -1982.5699, 239.0399, 34.1399, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(633, -1983.4100, 239.0899, 34.8400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(14699, -1953.9499, 255.8399, 36.7400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3660, -1987.0999, 239.1300, 35.8800, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject_FR(1568, -1988.3900, 239.0700, 34.1399, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, -1951.5200, 263.0400, 34.4599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8613, -1931.6899, 272.9599, 43.7999, 0.0000, 0.0000, -1.2599);
	CreateDynamicObject_FR(14699, -1954.0200, 263.3999, 36.7400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1568, -1994.6500, 239.2799, 34.1399, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3520, -1986.2800, 245.6499, 34.1599, 0.0000, 0.0000, 268.0199);
	CreateDynamicObject_FR(617, -1996.8100, 239.0099, 34.0800, 0.0000, 0.0000, 359.7999);
	CreateDynamicObject_FR(13645, -2043.3599, 205.1300, 35.9000, -2.0399, 1.9800, 183.5399);
	CreateDynamicObject_FR(9833, -1996.0799, 240.2200, 31.1000, 0.0000, 0.0000, 286.6499);
	CreateDynamicObject_FR(3520, -1990.8299, 246.1399, 34.1599, 0.0000, 0.0000, 268.0199);
	CreateDynamicObject_FR(3520, -1986.0500, 251.2799, 34.1599, 0.0000, 0.0000, 268.0199);
	CreateDynamicObject_FR(9833, -1995.3699, 246.0500, 31.2099, 0.0000, 0.0000, 286.6499);
	CreateDynamicObject_FR(14699, -1954.2399, 272.1099, 36.7400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3660, -1994.5699, 248.4900, 35.8800, 0.0000, 0.0000, 262.5000);
	CreateDynamicObject_FR(3520, -1990.6600, 251.7400, 34.1599, 0.0000, 0.0000, 268.0199);
	CreateDynamicObject_FR(9833, -1994.6500, 251.4700, 31.1100, 0.0000, 0.0000, 286.6499);
	CreateDynamicObject_FR(3520, -1985.7900, 257.7300, 34.1599, 0.0000, 0.0000, 268.0199);
	CreateDynamicObject_FR(7288, -1995.5500, 253.0399, 32.0000, 4.0000, 0.0000, 353.3999);
	CreateDynamicObject_FR(3520, -1990.4100, 258.1000, 34.1599, 0.0000, 0.0000, 268.0199);
	CreateDynamicObject_FR(19129, -1951.5100, 282.9899, 34.4599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(9833, -1993.8100, 257.9599, 31.0000, 0.0000, 0.0000, 286.6499);
	CreateDynamicObject_FR(3520, -1985.3599, 264.2200, 34.1599, 0.0000, 0.0000, 268.0199);
	CreateDynamicObject_FR(3520, -1989.7199, 264.4899, 34.1599, 0.0000, 0.0000, 268.0199);
	CreateDynamicObject_FR(726, -1993.7299, 261.8200, 34.0200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(9833, -1993.0999, 265.0199, 31.1000, 0.0000, 0.0000, 286.6499);
	CreateDynamicObject_FR(3520, -1984.5200, 271.2500, 34.1599, 0.0000, 0.0000, 268.0199);
	CreateDynamicObject_FR(3660, -1992.5200, 267.9899, 35.8800, 0.0000, 0.0000, 265.4400);
	CreateDynamicObject_FR(3520, -1989.0400, 271.5899, 34.1599, 0.0000, 0.0000, 268.0199);
	CreateDynamicObject_FR(3534, -1981.0000, 278.1099, 35.2000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.0000, 278.1099, 35.8100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.0000, 278.1099, 36.5200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(9833, -1992.7800, 270.2500, 31.1100, 0.0000, 0.0000, 286.6499);
	CreateDynamicObject_FR(3534, -1981.0000, 278.1099, 37.1199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.0000, 278.1099, 37.8300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.0000, 278.1099, 38.5299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.0000, 278.1099, 39.2400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.0000, 278.1099, 39.8400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.0000, 278.1099, 40.4500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.0000, 278.1099, 41.0600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(7666, -1981.0300, 278.1400, 42.0900, 0.0000, 0.0000, 32.6699);
	CreateDynamicObject_FR(3520, -1982.5899, 277.9299, 34.1599, 0.0000, 0.0000, 268.0199);
	CreateDynamicObject_FR(18655, -1983.1600, 278.1499, 33.8499, 0.0000, 0.0000, 269.4100);
	CreateDynamicObject_FR(630, -1961.5600, 292.3399, 35.5000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(2818, -1963.0000, 291.7699, 34.4700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19129, -1951.5000, 299.2200, 34.4599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(2818, -1964.9399, 291.7699, 34.4700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3520, -1986.6600, 277.8900, 34.1599, 0.0000, 0.0000, 268.0199);
	CreateDynamicObject_FR(2631, -1963.4599, 293.7500, 34.4199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(630, -1961.5699, 295.2399, 35.5000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(9833, -1992.4000, 275.0199, 31.2099, 0.0000, 0.0000, 286.6499);
	CreateDynamicObject_FR(18654, -1987.8000, 278.1900, 34.1599, 0.0000, 0.0000, 270.3500);
	CreateDynamicObject_FR(2818, -1962.9300, 294.7600, 34.4700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(13645, -2048.8300, 230.1000, 35.0000, 0.0000, 0.0000, 89.3199);
	CreateDynamicObject_FR(2818, -1964.9000, 294.7600, 34.4700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3520, -1990.4699, 277.9400, 34.2599, 0.0000, 0.0000, 268.0199);
	CreateDynamicObject_FR(18653, -1992.1300, 278.2300, 34.2599, 0.0000, 0.0000, 271.4400);
	CreateDynamicObject_FR(806, -1994.0999, 279.0799, 35.7000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(811, -1995.1999, 278.7300, 33.4199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(14467, -1994.0400, 280.3800, 35.0299, 0.0000, 0.0000, 265.6199);
	CreateDynamicObject_FR(3865, -2059.2399, 229.6999, 38.7000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3865, -2060.9899, 229.5500, 35.3499, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3865, -2062.6000, 229.6399, 38.7000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3865, -2064.3701, 229.2200, 35.3499, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.1700, 298.7200, 35.2000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.1700, 298.7200, 35.9099, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.1700, 298.7200, 36.6100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.1700, 298.7200, 37.3199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.1700, 298.7200, 38.0200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.1300, 298.7300, 38.6300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.1700, 298.7200, 39.3400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.1700, 298.7200, 40.1500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.1700, 298.7200, 40.8600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3534, -1981.1700, 298.7200, 41.4500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(7666, -1981.2700, 298.7399, 42.3899, 0.0000, 0.0000, 32.6699);
	CreateDynamicObject_FR(18655, -1982.8800, 298.7300, 34.1500, 0.0000, 0.0000, 89.7799);
	CreateDynamicObject_FR(3865, -2066.0000, 229.2799, 38.7000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3520, -1983.7299, 298.5299, 34.1599, 0.0000, 0.0000, 268.0199);
	CreateDynamicObject_FR(3865, -2067.7099, 229.0200, 35.3499, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18654, -1986.8599, 298.6099, 34.1500, 0.0000, 0.0000, 92.3300);
	CreateDynamicObject_FR(3534, -1986.4200, 299.9899, 34.7900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3520, -1988.9599, 298.5000, 34.1599, 0.0000, 0.0000, 268.0199);
	CreateDynamicObject_FR(3534, -1988.8299, 299.9899, 34.7900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18653, -1990.9599, 298.5899, 34.0600, 0.0000, 0.0000, 88.7600);
	CreateDynamicObject_FR(806, -1992.3699, 297.8699, 36.5099, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(14467, -1993.9000, 296.8999, 35.8400, 0.0000, 0.0000, 272.6700);
	CreateDynamicObject_FR(811, -1993.5699, 298.2200, 34.9399, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1377.6099, 327.3399, 41.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1344.3900, 320.2099, 35.2599, 0.0000, 0.0000, 359.9200);
	CreateDynamicObject_FR(980, -1366.2099, 327.2099, 41.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1338.3000, 320.1700, 35.2599, 0.0000, 0.0000, 359.9200);
	CreateDynamicObject_FR(3095, -1379.1700, 330.8500, 38.0900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1372.9100, 330.8500, 38.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1345.9200, 324.5899, 35.5299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1383.3299, 333.2099, 41.2999, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(980, -1350.1300, 326.0899, 35.3100, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(980, -1354.8000, 327.1600, 41.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1339.9799, 323.6700, 36.4799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1367.8900, 331.2900, 39.2200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1364.0200, 330.8500, 38.0999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1347.2600, 327.1600, 41.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1336.9200, 324.5899, 35.5299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1374.1199, 334.8599, 39.2200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1379.1899, 336.3099, 38.0999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1355.0300, 330.8500, 38.0999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1343.7500, 328.9599, 32.3800, 0.0000, 90.0000, 180.0000);
	CreateDynamicObject_FR(1225, -1379.5200, 337.3599, 39.2200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1389.0200, 339.2500, 41.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1332.5600, 325.7900, 35.2900, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(1225, -1345.1600, 329.8599, 36.2200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1364.9799, 335.5400, 41.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1346.1300, 330.8500, 38.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1349.9699, 332.3699, 35.7999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1345.3199, 332.7399, 35.8100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1356.3299, 335.4200, 41.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1350.0400, 334.2600, 35.5000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1377.0000, 340.4800, 39.2200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1390.3800, 343.1400, 38.0999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1347.5999, 334.4100, 35.0000, -80.0000, -90.0000, 183.3899);
	CreateDynamicObject_FR(980, -1349.1700, 335.4299, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1378.7099, 342.7699, 31.8500, 0.0000, 0.0000, 2.0000);
	CreateDynamicObject_FR(980, -1341.5699, 333.0400, 41.2999, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(3095, -1381.4799, 343.1400, 38.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1394.4599, 345.1000, 41.2999, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(980, -1374.3900, 341.7000, 41.2999, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(1225, -1345.5100, 335.1900, 35.4000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1379.1899, 343.1400, 38.0900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1350.0999, 336.6600, 34.9900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1382.7800, 343.8500, 39.2200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(2898, -1353.0000, 338.0100, 29.0699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1332.5699, 331.5599, 35.3699, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(980, -1341.0400, 334.7000, 35.3699, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(3095, -1336.9300, 333.5700, 35.5299, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(2898, -1348.9200, 338.0100, 29.0699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1388.5200, 346.6000, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(3095, -1346.1300, 336.7799, 38.0999, 0.0000, 0.0000, 358.8800);
	CreateDynamicObject_FR(980, -1367.3299, 343.1499, 31.8500, 0.0000, 0.0000, 2.0000);
	CreateDynamicObject_FR(1225, -1350.1600, 338.9299, 34.5900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1345.6300, 337.8099, 34.8899, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(2898, -1344.8499, 338.0100, 29.0699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1354.9799, 341.1499, 31.8500, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(980, -1380.1199, 347.5599, 41.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1350.4000, 341.1199, 41.2999, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(980, -1343.4499, 341.2699, 31.8500, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(3095, -1390.3800, 351.5000, 38.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1346.0100, 342.3500, 38.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1341.5600, 340.9200, 41.2999, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(980, -1373.6800, 349.7300, 31.8500, 0.0000, 0.0000, 2.0000);
	CreateDynamicObject_FR(980, -1437.6999, 357.1799, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1449.2099, 357.2000, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1460.7099, 357.1799, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1396.5699, 354.6499, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(980, -1357.4100, 347.3299, 31.8500, 0.0000, 0.0000, 43.6500);
	CreateDynamicObject_FR(980, -1467.6800, 357.2099, 37.4300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3502, -1338.8499, 342.1799, 38.8600, 14.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1383.5799, 353.5499, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(980, -1385.9300, 353.3699, 41.2999, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(3502, -1334.9200, 341.8500, 38.9000, 14.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1361.4799, 349.7399, 30.3500, 20.0000, 0.0000, -46.0000);
	CreateDynamicObject_FR(980, -1394.4599, 356.6000, 41.2999, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(3095, -1457.9300, 361.6099, 30.2500, 0.0000, 33.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1461.4799, 361.6000, 32.5600, 0.0000, 33.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1433.3900, 362.1600, 29.0699, 0.0000, 90.0000, 206.5299);
	CreateDynamicObject_FR(3095, -1469.4300, 361.6000, 34.8800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1363.8499, 353.9800, 31.8500, 0.0000, 0.0000, 44.7799);
	CreateDynamicObject_FR(980, -1351.2500, 351.3200, 31.8500, 0.0000, 0.0000, 50.0000);
	CreateDynamicObject_FR(18997, -1430.6300, 363.6700, 29.0699, 0.0000, 90.0000, 206.5299);
	CreateDynamicObject_FR(3502, -1347.7900, 350.6799, 41.4700, 14.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19425, -1429.8000, 364.1199, 29.0799, 0.0000, 0.0000, 296.3500);
	CreateDynamicObject_FR(3095, -1390.3800, 360.2500, 38.0999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19425, -1428.5899, 364.7699, 29.0799, 0.0000, 0.0000, 296.3500);
	CreateDynamicObject_FR(3095, -1469.4499, 364.1199, 34.9000, 0.0000, 20.0000, 270.0000);
	CreateDynamicObject_FR(3502, -1343.7299, 350.5199, 41.4700, 14.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1428.1400, 365.1199, 29.0699, 0.0000, 90.0000, 206.5299);
	CreateDynamicObject_FR(980, -1473.8499, 363.9400, 37.3800, 0.0000, 0.0000, 268.8599);
	CreateDynamicObject_FR(19425, -1427.2700, 365.4500, 29.0799, 0.0000, 0.0000, 296.3500);
	CreateDynamicObject_FR(980, -1396.5000, 362.7799, 31.8500, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(3095, -1355.8499, 355.1700, 33.1899, 20.0000, 0.0000, -46.0000);
	CreateDynamicObject_FR(980, -1441.8900, 366.2000, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1452.5600, 366.2799, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19425, -1425.9699, 366.1300, 29.0799, 0.0000, 0.0000, 296.3500);
	CreateDynamicObject_FR(3502, -1338.8199, 350.4400, 40.9599, 14.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1426.0400, 366.2699, 29.0699, 0.0000, 90.0000, 206.5299);
	CreateDynamicObject_FR(980, -1383.6300, 361.5799, 31.8500, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(980, -1460.5899, 366.3500, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1459.0200, 366.3800, 34.0499, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1343.4399, 352.9100, 31.8500, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(19425, -1424.8299, 366.7300, 29.0799, 0.0000, 0.0000, 296.3500);
	CreateDynamicObject_FR(3502, -1334.8900, 350.1199, 40.9599, 14.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1423.8699, 367.3900, 29.0699, 0.0000, 90.0000, 206.5299);
	CreateDynamicObject_FR(980, -1349.2399, 355.1000, 36.9300, 0.0000, 0.0000, 43.6500);
	CreateDynamicObject_FR(18997, -1421.8800, 368.4100, 29.0699, 0.0000, 90.0000, 206.5299);
	CreateDynamicObject_FR(980, -1385.9300, 364.9200, 41.2999, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(1225, -1469.4100, 369.0400, 35.2200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1466.3100, 369.2600, 35.2200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1419.6999, 369.5299, 29.0699, 0.0000, 90.0000, 206.5299);
	CreateDynamicObject_FR(1225, -1472.3599, 369.3299, 35.2200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(673, -1468.7900, 369.9299, 28.8400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1392.6199, 367.6799, 29.4799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1469.4599, 370.5700, 34.2900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1468.1099, 370.9500, 35.2200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1470.9300, 370.7900, 35.2200, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1394.4599, 368.1300, 41.2999, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(3502, -1347.7900, 359.1900, 42.3300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1355.6800, 362.0599, 34.6399, 0.0000, 0.0000, 44.7799);
	CreateDynamicObject_FR(980, -1416.8499, 372.2699, 31.8500, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(3095, -1349.7700, 361.0499, 34.6899, -0.0199, 0.0000, -46.0000);
	CreateDynamicObject_FR(3095, -1390.3800, 369.0899, 38.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1382.1899, 368.2900, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(3502, -1343.7299, 359.1099, 42.3300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1347.5899, 361.5000, 31.8500, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(980, -1453.3100, 373.9500, 37.4300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1449.4200, 373.9500, 41.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1438.0100, 373.9500, 41.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1460.3399, 373.9500, 37.4300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3502, -1338.8299, 359.0299, 42.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1391.1800, 371.4200, 29.0699, 0.0000, 90.0000, 134.7799);
	CreateDynamicObject_FR(1225, -1392.3000, 372.2900, 29.4799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3502, -1334.8900, 358.9599, 42.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19425, -1393.3800, 373.0299, 29.0799, 0.0000, 0.0000, 42.9700);
	CreateDynamicObject_FR(1225, -1420.6999, 375.5700, 39.0800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1388.1099, 372.8200, 29.4799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1399.6600, 374.3800, 29.4799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1393.4799, 373.6900, 29.0699, 0.0000, 90.0000, 134.7799);
	CreateDynamicObject_FR(19425, -1394.2099, 373.8699, 29.0799, 0.0000, 0.0000, 42.9700);
	CreateDynamicObject_FR(980, -1399.9499, 373.9500, 41.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1469.5600, 376.3800, 34.9000, 0.0000, 20.0000, 90.0000);
	CreateDynamicObject_FR(980, -1341.1400, 363.1199, 37.9700, 0.0000, 0.0000, 43.5999);
	CreateDynamicObject_FR(19425, -1395.1099, 374.7699, 29.0799, 0.0000, 0.0000, 42.9700);
	CreateDynamicObject_FR(980, -1343.4100, 364.4700, 31.8500, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(1225, -1350.1800, 366.2799, 35.6399, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1473.8499, 376.8299, 37.3800, 0.0000, 0.0000, 268.8599);
	CreateDynamicObject_FR(673, -1463.0799, 378.0199, 28.2399, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1451.6600, 378.0299, 36.5400, 0.0000, -21.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1443.1999, 378.0299, 38.0999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1434.2500, 378.0299, 38.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1460.4300, 378.0299, 34.9000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(673, -1423.3199, 378.1000, 29.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19425, -1395.9899, 375.6600, 29.0799, 0.0000, 0.0000, 42.9700);
	CreateDynamicObject_FR(3095, -1425.2600, 378.0299, 38.0999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1395.8199, 376.0100, 29.0699, 0.0000, 90.0000, 134.7799);
	CreateDynamicObject_FR(18997, -1430.9599, 378.2900, 40.0699, 0.0000, 90.0000, 359.2699);
	CreateDynamicObject_FR(3095, -1469.4300, 378.0299, 34.9099, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1428.2500, 378.2900, 40.0699, 0.0000, 90.0000, 359.2699);
	CreateDynamicObject_FR(18997, -1425.5000, 378.2900, 40.0699, 0.0000, 90.0000, 359.2699);
	CreateDynamicObject_FR(1225, -1397.8499, 376.5299, 29.4799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1391.4300, 375.7000, 29.4799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1422.5500, 378.2900, 40.0699, 0.0000, 90.0000, 359.2699);
	CreateDynamicObject_FR(3095, -1416.2800, 378.0299, 38.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1411.1500, 378.0100, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1420.0699, 378.2900, 40.0699, 0.0000, 90.0000, 359.2699);
	CreateDynamicObject_FR(18997, -1416.8599, 378.2900, 40.0699, 0.0000, 90.0000, 359.2699);
	CreateDynamicObject_FR(18997, -1413.6899, 378.2900, 40.0699, 0.0000, 90.0000, 359.2699);
	CreateDynamicObject_FR(3095, -1407.3100, 378.0299, 38.0999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1410.6400, 378.2900, 40.0699, 0.0000, 90.0000, 359.2699);
	CreateDynamicObject_FR(18997, -1407.9699, 378.2900, 40.0699, 0.0000, 90.0000, 359.2699);
	CreateDynamicObject_FR(980, -1420.7800, 379.8299, 31.8500, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(1225, -1350.1800, 368.6199, 35.6399, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3502, -1347.7900, 367.7500, 43.4700, 14.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1343.3000, 367.2900, 34.6699, 0.0000, 0.0000, -46.0000);
	CreateDynamicObject_FR(3095, -1398.5100, 378.0299, 38.1100, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1398.3499, 378.6000, 29.0699, 0.0000, 90.0000, 134.7799);
	CreateDynamicObject_FR(980, -1385.9300, 376.4400, 41.2999, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(1225, -1342.8399, 367.6499, 35.6399, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3502, -1343.7500, 367.4800, 43.4700, 14.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1390.3800, 378.0299, 38.0999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1460.9699, 381.9500, 35.8199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19128, -1345.5100, 369.7399, 29.9899, 30.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1422.4899, 381.6199, 39.0800, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1394.9100, 379.6799, 29.4799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1453.8499, 382.5799, 37.4300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3502, -1338.8699, 367.6000, 43.2500, 14.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1449.0500, 382.5799, 41.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1437.6500, 382.5799, 41.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1401.1800, 381.2699, 29.0699, 0.0000, 90.0000, 134.7799);
	CreateDynamicObject_FR(980, -1467.9200, 382.5799, 37.4300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1355.4799, 373.3900, 34.3100, 0.0000, 0.0000, 312.9500);
	CreateDynamicObject_FR(3502, -1334.9200, 367.3299, 43.2500, 14.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1346.3499, 372.4599, 29.4300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1347.5300, 372.9500, 31.8500, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(980, -1400.0400, 382.5799, 41.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1349.5400, 373.7799, 34.6699, 0.0000, 0.0000, -46.0000);
	CreateDynamicObject_FR(1225, -1344.9699, 372.8800, 29.4300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1341.0400, 371.3900, 38.0200, 0.0000, 0.0000, -45.7599);
	CreateDynamicObject_FR(1225, -1345.7600, 374.0499, 29.4300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1390.9399, 382.4599, 41.2999, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1414.9799, 385.6099, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1341.3900, 372.5100, 43.2700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1344.5300, 374.4500, 29.4300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1350.3499, 375.2999, 45.4500, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(980, -1403.4499, 385.6600, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1343.4100, 376.0000, 31.8500, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(19128, -1345.5100, 376.8099, 29.9899, 30.0000, 0.0000, 180.0000);
	CreateDynamicObject_FR(3095, -1346.1300, 376.6199, 42.3199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1355.4399, 379.8900, 33.1599, 0.0000, -20.0000, -46.0000);
	CreateDynamicObject_FR(980, -1363.3000, 381.7300, 31.8500, 0.0000, 0.0000, 312.9500);
	CreateDynamicObject_FR(1225, -1346.0400, 377.1700, 43.2700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1348.5600, 378.9899, 37.7099, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(621, -1211.0799, 314.6799, 13.3699, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1216.1899, 319.3299, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3096, "bbpcpx", "blugrad32");
	CreateDynamicObject_FR(3095, -1337.1400, 376.6400, 42.3199, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1332.7500, 375.1900, 45.5400, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(19129, -1401.2500, 391.8500, 27.3099, 215.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1353.0500, 383.4299, 33.9500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(3095, -1361.2099, 385.8599, 30.1499, 0.0000, -20.0000, -46.0000);
	CreateDynamicObject_FR(980, -1344.6099, 380.9599, 45.5499, 0.0000, 0.0000, 359.9200);
	CreateDynamicObject_FR(980, -1338.5500, 380.9400, 45.5600, 0.0000, 0.0000, 359.9200);
	CreateDynamicObject_FR(980, -1347.5500, 384.5100, 31.8500, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(980, -1431.9499, 396.2699, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1371.1600, 390.1900, 31.8500, 0.0000, 0.0000, 312.9500);
	CreateDynamicObject_FR(980, -1357.1099, 387.5000, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(980, -1343.4300, 387.4899, 31.8500, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(1225, -1401.4200, 397.5199, 29.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(673, -1404.8699, 398.1900, 22.6399, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(673, -1427.0799, 400.2699, 22.6399, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1424.7900, 400.3800, 29.0699, 0.0000, 90.0000, 359.2699);
	CreateDynamicObject_FR(980, -1363.8199, 394.1600, 31.8500, 0.0000, 0.0000, 315.8299);
	CreateDynamicObject_FR(18997, -1422.1400, 400.3800, 29.0699, 0.0000, 90.0000, 359.2699);
	CreateDynamicObject_FR(18997, -1419.5799, 400.3800, 29.0699, 0.0000, 90.0000, 359.2699);
	CreateDynamicObject_FR(1225, -1423.2900, 400.4700, 29.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1417.0899, 400.3800, 29.0699, 0.0000, 90.0000, 359.2699);
	CreateDynamicObject_FR(18997, -1414.5799, 400.3800, 29.0699, 0.0000, 90.0000, 359.2699);
	CreateDynamicObject_FR(19425, -1422.4000, 400.6000, 29.0799, 0.0000, 0.0000, 89.0100);
	CreateDynamicObject_FR(19425, -1421.2299, 400.6000, 29.0799, 0.0000, 0.0000, 89.0100);
	CreateDynamicObject_FR(19425, -1419.9699, 400.6000, 29.0799, 0.0000, 0.0000, 89.0100);
	CreateDynamicObject_FR(19425, -1418.6899, 400.6000, 29.0799, 0.0000, 0.0000, 89.0100);
	CreateDynamicObject_FR(18997, -1411.8699, 400.3800, 29.0699, 0.0000, 90.0000, 359.2699);
	CreateDynamicObject_FR(980, -1387.2199, 398.4100, 31.8500, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(19425, -1417.3499, 400.6000, 29.0799, 0.0000, 0.0000, 89.0100);
	CreateDynamicObject_FR(980, -1441.5899, 400.3999, 31.8500, 0.0000, 0.0000, -47.0000);
	CreateDynamicObject_FR(19425, -1416.0699, 400.6000, 29.0799, 0.0000, 0.0000, 89.0100);
	CreateDynamicObject_FR(980, -1379.1199, 398.4599, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(980, -1351.6999, 394.3900, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(980, -1343.5500, 393.7600, 31.8500, 0.0000, 0.0000, 110.0000);
	CreateDynamicObject_FR(673, -1404.5600, 402.3200, 22.6399, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1401.3299, 402.9100, 29.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1371.0000, 401.2500, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(18997, -1350.7500, 399.8599, 29.0699, 0.0000, 90.0000, 90.0000);
	CreateDynamicObject_FR(980, -1431.8499, 404.7600, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1350.8199, 402.0499, 29.0699, 0.0000, 90.0000, 90.0000);
	CreateDynamicObject_FR(621, -1189.5899, 335.8399, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1352.3399, 402.9899, 29.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(13831, -1152.0400, 306.9500, 18.7399, 0.0000, 0.0000, -135.0000);
	CreateDynamicObject_FR(1225, -1346.4699, 403.1600, 29.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1350.8000, 404.1099, 29.0699, 0.0000, 90.0000, 90.0000);
	CreateDynamicObject_FR(19129, -1401.2399, 408.2500, 27.3099, -215.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19425, -1350.8499, 405.1099, 29.0799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1451.2399, 404.6000, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(19425, -1350.8599, 406.2099, 29.0799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1350.7800, 406.2500, 29.0699, 0.0000, 90.0000, 90.0000);
	CreateDynamicObject_FR(980, -1387.2299, 409.3900, 31.8500, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(980, -1379.1199, 409.3699, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(19425, -1350.8499, 407.3099, 29.0799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1458.3900, 404.7200, 33.5600, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1354.7800, 408.0299, 29.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1459.5999, 404.6900, 34.2700, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1460.8100, 404.7099, 35.2000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1350.7900, 408.3699, 29.0699, 0.0000, 90.0000, 90.0000);
	CreateDynamicObject_FR(19425, -1350.8399, 408.6199, 29.0799, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1348.7900, 408.4400, 29.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1461.7299, 404.7000, 35.7000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1441.5500, 408.9700, 31.8500, 0.0000, 0.0000, -47.0000);
	CreateDynamicObject_FR(980, -1468.3599, 404.4400, 38.7700, 0.0000, 0.0000, 359.1799);
	CreateDynamicObject_FR(18997, -1350.7500, 410.7900, 29.0699, 0.0000, 90.0000, 90.0000);
	CreateDynamicObject_FR(1225, -1353.1199, 412.2000, 29.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(673, -1463.4899, 406.9200, 27.5900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1346.6999, 412.0400, 29.4699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(7089, -1140.8199, 320.2699, 21.4099, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(18997, -1350.8100, 413.1600, 29.0699, 0.0000, 90.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1181.0200, 354.4899, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 19527, "cauldron1", "alienliquid1");
	CreateDynamicObject_FR(18997, -1350.8599, 415.5799, 29.0699, 0.0000, 90.0000, 90.0000);
	CreateDynamicObject_FR(980, -1359.8199, 416.4299, 31.8500, 0.0000, 0.0000, 2.0000);
	CreateDynamicObject_FR(621, -1168.6300, 356.7699, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1454.6999, 408.9200, 30.2900, 0.0000, 33.0000, 0.0000);
	CreateDynamicObject_FR(980, -1369.3499, 420.0100, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(980, -1340.5400, 420.1300, 31.8500, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(980, -1350.5899, 421.2200, 31.8500, 0.0000, 0.0000, 55.0000);
	CreateDynamicObject_FR(3095, -1458.9699, 408.9200, 33.0600, 0.0000, 33.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1343.1600, 424.0899, 29.6700, 0.0000, -30.0000, 359.7999);
	CreateDynamicObject_FR(18997, -1341.2900, 424.8699, 29.0699, 0.0000, 90.0000, 90.0000);
	CreateDynamicObject_FR(980, -1395.4200, 424.1400, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1341.2299, 427.1000, 29.0699, 0.0000, 90.0000, 90.0000);
	CreateDynamicObject_FR(980, -1451.2199, 413.1799, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1356.8199, 428.9899, 30.1499, 0.0000, 20.0000, -46.0000);
	CreateDynamicObject_FR(3095, -1343.1700, 429.3699, 29.6700, 0.0000, -30.0000, 359.7999);
	CreateDynamicObject_FR(980, -1377.5100, 428.1499, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(18997, -1341.3499, 429.6000, 29.0699, 0.0000, 90.0000, 95.0000);
	CreateDynamicObject_FR(980, -1351.3199, 429.9299, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(980, -1385.6400, 428.2200, 31.8500, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(673, -1463.6700, 410.3999, 27.5900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1466.8900, 408.9200, 35.4099, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1339.8199, 431.8399, 32.2400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1341.5200, 432.1799, 29.0699, 0.0000, 90.0000, 97.0000);
	CreateDynamicObject_FR(18997, -1341.7299, 434.5599, 29.0699, 0.0000, 90.0000, 97.0000);
	CreateDynamicObject_FR(980, -1405.2900, 428.2600, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(621, -1148.0799, 377.7999, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1343.6800, 435.7900, 29.6700, 0.0000, -32.0000, 10.0000);
	CreateDynamicObject_FR(1225, -1340.5899, 436.1099, 32.2400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1362.6199, 435.0599, 33.2200, 0.0000, 20.0000, -46.0000);
	CreateDynamicObject_FR(18997, -1341.9300, 436.8500, 29.0699, 0.0000, 90.0000, 99.0000);
	CreateDynamicObject_FR(3095, -1345.3499, 438.7200, 29.6700, 0.0000, -34.0000, 30.0000);
	CreateDynamicObject_FR(18997, -1342.8599, 439.2399, 29.0699, 0.0000, 90.0000, 110.0000);
	CreateDynamicObject_FR(980, -1359.4200, 438.0400, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(1225, -1342.5600, 439.6400, 32.2400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1377.5200, 436.3599, 31.8500, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(980, -1367.5799, 438.1300, 31.8500, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(3095, -1347.2800, 440.7000, 29.6700, 0.0000, -34.0000, 45.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1145.8399, 389.6700, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 1373, "traincross", "rednwhite");
	CreateDynamicObject_FR(3095, -1386.9899, 435.8099, 30.1599, 20.0000, 0.0000, -46.0000);
	CreateDynamicObject_FR(980, -1371.5300, 438.1199, 37.3100, 0.0000, 0.0000, -45.7599);
	CreateDynamicObject_FR(18997, -1344.3299, 441.6700, 29.0699, 0.0000, 90.0000, 125.0000);
	CreateDynamicObject_FR(1225, -1344.7199, 442.2900, 32.2400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1345.9599, 443.3399, 29.0699, 0.0000, 90.0000, 135.0000);
	CreateDynamicObject_FR(3095, -1350.8800, 443.0000, 29.6700, 0.0000, -34.0000, 60.0000);
	CreateDynamicObject_FR(3095, -1368.5500, 441.1900, 34.7299, 0.0000, 0.0000, -46.0000);
	CreateDynamicObject_FR(1225, -1347.3900, 444.4299, 32.2400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1347.9899, 444.7999, 29.0699, 0.0000, 90.0000, 145.0000);
	CreateDynamicObject_FR(3095, -1354.4599, 444.2200, 29.6700, 0.0000, -32.0000, 75.0000);
	CreateDynamicObject_FR(980, -1398.9599, 436.1499, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1350.1199, 446.0100, 29.0699, 0.0000, 90.0000, 155.0000);
	CreateDynamicObject_FR(3095, -1358.7399, 444.8999, 29.6700, 0.0000, -30.0000, 85.0000);
	CreateDynamicObject_FR(1225, -1350.7700, 446.3500, 32.2400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1361.4399, 445.0599, 29.6700, 0.0000, -30.0000, 90.0000);
	CreateDynamicObject_FR(980, -1365.3499, 444.3599, 38.0200, 0.0000, 0.0000, -45.7599);
	CreateDynamicObject_FR(18997, -1352.6300, 446.9200, 29.0699, 0.0000, 90.0000, 165.0000);
	CreateDynamicObject_FR(3095, -1380.9000, 441.6900, 33.2299, 20.0000, 0.0000, -46.0000);
	CreateDynamicObject_FR(980, -1369.3900, 444.4599, 31.8500, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(18997, -1354.8800, 447.3399, 29.0699, 0.0000, 90.0000, 170.0000);
	CreateDynamicObject_FR(980, -1388.6700, 440.1000, 31.2900, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(11489, -1092.8499, 367.3699, 13.4300, 0.0000, 0.0000, -135.0000);
	Unused_Object = CreateDynamicObject_FR(18826, -1092.6700, 367.1400, 23.4699, 0.0000, 90.0000, -135.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(1225, -1355.4599, 447.6300, 32.2400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1357.1300, 447.5499, 29.0699, 0.0000, 90.0000, 175.0000);
	CreateDynamicObject_FR(18997, -1359.0100, 447.6400, 29.0699, 0.0000, 90.0000, 175.0000);
	CreateDynamicObject_FR(18997, -1361.1700, 447.6300, 29.0699, 0.0000, 90.0000, 180.0000);
	CreateDynamicObject_FR(18997, -1363.0699, 447.6199, 29.0699, 0.0000, 90.0000, 180.0000);
	CreateDynamicObject_FR(1225, -1359.5899, 448.1400, 32.2400, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1126.7199, 398.8800, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1377.0500, 444.3200, 35.7000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1370.7700, 446.9500, 35.7000, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1385.0100, 443.7600, 35.5800, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(3095, -1374.7800, 447.6400, 34.7299, 0.0000, 0.0000, -46.0000);
	CreateDynamicObject_FR(980, -1370.6199, 449.7799, 38.0200, 0.0000, 0.0000, -45.7599);
	CreateDynamicObject_FR(980, -1413.4599, 436.3999, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(980, -1408.6999, 440.1900, 31.8500, 0.0000, 0.0000, -45.0000);
	CreateDynamicObject_FR(980, -1377.0400, 451.7600, 37.9700, 0.0000, 0.0000, 45.0000);
	CreateDynamicObject_FR(673, -1464.6700, 415.5199, 27.5900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1471.3699, 410.2799, 38.7599, 0.0000, 0.0000, 268.8599);
	CreateDynamicObject_FR(1225, -1465.0899, 415.0400, 36.3300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1491, -1422.2700, 440.4800, 29.0799, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(1491, -1422.2700, 440.4800, 31.5100, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(980, -1462.6199, 417.6600, 38.2599, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(980, -1423.3000, 440.4800, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1469.4200, 414.7099, 36.3300, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1418.4499, 444.2999, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(673, -1424.9300, 442.2300, 22.6399, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(673, -1469.2500, 415.6099, 27.5900, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1431.8100, 439.1900, 31.8500, 0.0000, 0.0000, 13.1899);
	CreateDynamicObject_FR(1491, -1422.2800, 444.2900, 29.0799, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(1491, -1422.2800, 444.2900, 31.4799, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject_FR(1225, -1429.3900, 441.1000, 29.4500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(621, -1105.3699, 419.9100, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1466.8900, 417.9200, 35.4099, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1110.5899, 424.9200, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3615, "beachhut", "ws_decking1");
	CreateDynamicObject_FR(1395, -1073.6500, 397.6799, 37.8300, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject_FR(1225, -1440.0799, 438.6600, 29.4500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1429.9599, 444.2999, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1395, -1094.8000, 418.8299, 37.8300, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject_FR(8838, -1081.8800, 410.8200, 11.9300, 352.6499, 0.0000, 135.0000);
	CreateDynamicObject_FR(980, -1471.2199, 417.6799, 38.7500, 0.0000, 0.0000, 268.8599);
	CreateDynamicObject_FR(18997, -1438.2700, 441.3900, 29.0699, 0.0000, 90.0000, 0.0000);
	CreateDynamicObject_FR(8838, -1078.3299, 414.3699, 12.9099, 345.3099, 0.0000, 135.0000);
	CreateDynamicObject_FR(19425, -1440.6700, 441.4500, 29.0799, 0.0000, 0.0000, 89.0100);
	CreateDynamicObject_FR(18997, -1441.3199, 441.3900, 29.0699, 0.0000, 90.0000, 0.0000);
	CreateDynamicObject_FR(8838, -1083.6899, 409.0100, 91.5199, 356.3299, 180.0000, 315.0000);
	CreateDynamicObject_FR(8838, -1074.8900, 417.8099, 14.5200, 337.9599, 0.0000, 135.0000);
	CreateDynamicObject_FR(19425, -1442.0899, 441.4800, 29.0799, 0.0000, 0.0000, 89.0100);
	CreateDynamicObject_FR(8838, -1080.0899, 412.6099, 90.8600, 348.9800, 180.0000, 315.0000);
	CreateDynamicObject_FR(8838, -1071.6199, 421.0799, 16.7500, 330.6099, 0.0000, 135.0000);
	CreateDynamicObject_FR(1225, -1443.3399, 441.3500, 29.4500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1440.0000, 444.1600, 29.4500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, -1076.5899, 416.1099, 89.5599, 341.6300, 180.0000, 315.0000);
	CreateDynamicObject_FR(8838, -1068.5799, 424.1199, 19.5400, 323.2699, 0.0000, 135.0000);
	CreateDynamicObject_FR(8838, -1073.2299, 419.4700, 87.6399, 334.2900, 180.0000, 315.0000);
	CreateDynamicObject_FR(621, -1083.8599, 440.6099, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8838, -1065.8199, 426.8800, 22.8700, 315.9200, 0.0000, 135.0000);
	CreateDynamicObject_FR(18997, -1444.2700, 441.3900, 29.0699, 0.0000, 90.0000, 0.0000);
	CreateDynamicObject_FR(8838, -1070.0699, 422.6300, 85.1200, 326.9400, 180.0000, 315.0000);
	CreateDynamicObject_FR(8838, -1063.3900, 429.3099, 26.6599, 308.5700, 0.0000, 135.0000);
	CreateDynamicObject_FR(8838, -1067.1700, 425.5299, 82.0599, 319.5899, 180.0000, 315.0000);
	CreateDynamicObject_FR(8838, -1061.3100, 431.3900, 30.8600, 301.2200, 0.0000, 135.0000);
	CreateDynamicObject_FR(8838, -1064.5600, 428.1400, 78.4899, 312.2399, 180.0000, 315.0000);
	CreateDynamicObject_FR(8838, -1059.6400, 433.0599, 35.4099, 293.8800, 0.0000, 135.0000);
	CreateDynamicObject_FR(8838, -1062.3000, 430.3999, 74.4800, 304.8999, 180.0000, 315.0000);
	CreateDynamicObject_FR(8838, -1058.3800, 434.3200, 40.2200, 286.5299, 0.0000, 135.0000);
	CreateDynamicObject_FR(8838, -1060.4200, 432.2799, 70.0999, 297.5499, 180.0000, 315.0000);
	CreateDynamicObject_FR(8838, -1057.5799, 435.1199, 45.2200, 279.1799, 0.0000, 135.0000);
	CreateDynamicObject_FR(8838, -1058.9599, 433.7399, 65.4100, 290.2000, 180.0000, 315.0000);
	CreateDynamicObject_FR(8838, -1057.2299, 435.4700, 50.3199, 271.8399, 0.0000, 135.0000);
	CreateDynamicObject_FR(8838, -1057.9200, 434.7799, 60.5000, 282.8599, 180.0000, 315.0000);
	CreateDynamicObject_FR(8838, -1057.3499, 435.3500, 55.4399, 275.5100, 180.0000, 315.0000);
	Unused_Object = CreateDynamicObject_FR(19649, -1075.3599, 460.1400, 18.2900, 0.0000, 0.0000, 45.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 19527, "cauldron1", "alienliquid1");
	CreateDynamicObject_FR(19425, -1444.8499, 441.5599, 29.0799, 0.0000, 0.0000, 89.0100);
	CreateDynamicObject_FR(19425, -1446.1300, 441.5599, 29.0799, 0.0000, 0.0000, 89.0100);
	CreateDynamicObject_FR(621, -1063.3100, 461.4899, 13.3699, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1446.6800, 441.3900, 29.0699, 0.0000, 90.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1450.2500, 437.8299, 29.4500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18997, -1449.4599, 441.3900, 29.0699, 0.0000, 90.0000, 0.0000);
	CreateDynamicObject_FR(1225, -1449.6800, 444.5400, 29.4500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(980, -1456.8000, 436.9100, 31.8500, 0.0000, 0.0000, 358.3099);
	CreateDynamicObject_FR(980, -1462.5100, 431.2999, 31.8500, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject_FR(3095, -1466.8900, 426.2500, 33.5699, 0.0000, 25.0000, 90.0000);
	CreateDynamicObject_FR(980, -1455.7700, 446.1400, 31.8500, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3095, -1466.8900, 434.3900, 29.7600, 0.0000, 25.0000, 90.0000);
	CreateDynamicObject_FR(980, -1471.1300, 429.0700, 31.8500, 0.0000, 0.0000, 90.0000);
	Unused_Object = CreateDynamicObject_FR(18824, -1043.8100, 491.7099, 33.1100, 0.0000, -45.0000, -135.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(980, -1465.4300, 446.1400, 31.8500, 0.0000, 0.0000, 0.0000);
	Unused_Object = CreateDynamicObject_FR(18809, -1035.2900, 500.2399, 77.7399, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(980, -1471.1300, 440.5100, 31.8500, 0.0000, 0.0000, 270.0000);
	Unused_Object = CreateDynamicObject_FR(18843, -1035.2900, 500.2399, 151.6300, 0.0000, 0.0000, 0.0000);
	SetDynamicObjectMaterial(Unused_Object, 0, 3902, "libertyhi3", "glass2_64");
	CreateDynamicObject_FR(3511, -910.2265, 491.9104, 0.7289, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18778, -922.9592, 513.6937, 1.3702, 0.0000, 0.0000, 231.0119);
	CreateDynamicObject_FR(18783, -912.2202, 504.9536, -1.7600, 0.0000, 0.0000, 321.5881);
	CreateDynamicObject_FR(10757, -911.8618, 506.2893, 2.0513, 0.0000, 0.0000, 8.9784);
	CreateDynamicObject_FR(18783, -898.1205, 493.8038, -1.7600, 0.0000, 0.0000, 321.5881);
	CreateDynamicObject_FR(10757, -899.4200, 496.8687, 2.0513, 0.0000, 0.0000, 8.9784);
	CreateDynamicObject_FR(18778, -887.3619, 485.2566, 1.3702, 0.0000, 0.0000, 51.0000);
	CreateDynamicObject_FR(3511, -899.2290, 506.0758, 0.7289, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18778, -1213.7884, 755.6138, 1.3306, 0.0000, 0.0000, 3.4932);
	CreateDynamicObject_FR(3511, -1204.9760, 760.7614, 0.7289, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3511, -1223.1281, 759.4199, 0.7289, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3364, -1212.8496, 764.7343, 0.3858, 0.0000, 0.0000, 273.8219);
	CreateDynamicObject_FR(18783, -1214.6719, 769.2704, -2.1062, 0.0000, 0.0000, 3.4626);
	CreateDynamicObject_FR(3364, -1213.5555, 772.4921, 0.3858, 0.0000, 0.0000, 273.8219);
	CreateDynamicObject_FR(3364, -1214.3229, 780.6056, 0.3858, 0.0000, 0.0000, 273.8219);
	CreateDynamicObject_FR(18783, -1215.7623, 786.8107, -2.1062, 0.0000, 0.0000, 3.4626);
	CreateDynamicObject_FR(3511, -995.9802, 790.7420, 0.7289, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18778, -985.9373, 792.0133, 1.3306, 0.0000, 0.0000, 35.8692);
	CreateDynamicObject_FR(3364, -1215.3814, 788.9812, 0.3858, 0.0000, 0.0000, 273.8219);
	CreateDynamicObject_FR(18778, -717.5109, 566.5670, 1.4607, 0.0000, 0.0000, 254.2389);
	CreateDynamicObject_FR(10757, -992.7364, 799.9816, 2.0513, 0.0000, 0.0000, 159.3759);
	CreateDynamicObject_FR(18783, -993.9153, 803.0693, -1.9012, 0.0000, 0.0000, 35.9248);
	CreateDynamicObject_FR(3511, -981.3931, 801.3062, 0.7289, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(10757, -998.2420, 806.7641, 2.0513, 0.0000, 0.0000, 159.3759);
	CreateDynamicObject_FR(3511, -1207.6248, 797.1129, 0.7289, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(10757, -1003.4411, 813.8300, 2.0513, 0.0000, 0.0000, 159.3759);
	CreateDynamicObject_FR(3511, -1225.3369, 795.9213, 0.7289, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(18783, -1005.6202, 819.2713, -1.9012, 0.0000, 0.0000, 35.9248);
	CreateDynamicObject_FR(3511, -1018.3316, 821.3228, 0.7289, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(10757, -1006.0442, 819.7244, 2.0513, 0.0000, 0.0000, 159.3759);
	CreateDynamicObject_FR(18778, -1216.5047, 800.5892, 1.3813, 0.0000, 0.0000, 183.5334);
	CreateDynamicObject_FR(3511, -684.3051, 548.7967, 0.7289, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(8493, -691.3052, 574.7552, 16.8899, 0.0000, 0.0000, 346.0903);
	CreateDynamicObject_FR(18778, -678.5239, 555.8369, 1.3774, 0.0000, 0.0000, 75.6345);
	CreateDynamicObject_FR(18778, -1013.4146, 830.0277, 0.9035, 0.0000, 0.0000, 215.9665);
	CreateDynamicObject_FR(3511, -680.2395, 564.9058, 0.7289, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject_FR(3511, -1003.6740, 831.9174, 0.7289, 0.0000, 0.0000, 0.0000);

	//SF
	CreateDynamicObject_FR(19129, -2046.52271, 476.87039, 34.10600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(9833, -2036.30298, 476.82077, 37.00750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3534, -2040.43420, 468.96408, 35.41130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3534, -2047.67676, 468.93582, 35.41130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3532, -2044.24463, 467.21631, 34.85040,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3660, -2046.08777, 467.51907, 36.57480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3524, -2053.34912, 475.25497, 35.84280,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3532, -2038.13684, 466.29300, 34.85040,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3524, -2053.39453, 474.50259, 34.92280,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3524, -2053.51294, 475.93820, 36.80280,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3524, -2053.58740, 476.86160, 36.94280,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3524, -2053.66553, 477.87479, 36.80280,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3524, -2053.73486, 478.67371, 35.84280,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3524, -2053.81665, 479.42938, 34.92280,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3532, -2051.22290, 467.35446, 34.85040,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19128, -2042.60828, 488.73666, 34.12170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, -2046.32043, 488.32877, 34.12170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3534, -2053.39648, 469.03448, 35.41130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, -2038.63062, 488.56781, 34.12170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3534, -2035.24854, 464.49600, 35.41130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3525, -2045.26025, 489.97934, 36.54060,   0.00000, -20.00000, 0.00000);
	CreateDynamicObject_FR(3525, -2045.00330, 490.04486, 36.54060,   0.00000, 20.00000, 0.00000);
	CreateDynamicObject_FR(6865, -2055.76563, 478.98517, 40.45200,   0.00000, 0.00000, 129.02000);
	CreateDynamicObject_FR(19128, -2050.15649, 488.46930, 34.12170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3528, -2036.91162, 488.13858, 42.36330,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(3532, -2037.06812, 462.07504, 34.85040,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3532, -2057.27637, 471.35559, 34.85040,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3660, -2058.07520, 476.02765, 36.57480,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject_FR(19128, -2042.41699, 492.21967, 34.12170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, -2046.32056, 492.17758, 34.12170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, -2038.52625, 492.16257, 34.12170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, -2054.11694, 488.62808, 34.12170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3749, -2037.10291, 492.24219, 39.75500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, -2026.75623, 483.90750, 34.10600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3533, -2056.09277, 464.40686, 35.36626,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, -2050.31030, 492.34653, 34.12170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18783, -2046.15479, 458.29047, 31.74000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3525, -2029.95325, 489.88440, 36.54060,   0.00000, -20.00000, 0.00000);
	CreateDynamicObject_FR(3525, -2029.87109, 489.89081, 36.54060,   0.00000, 20.00000, 0.00000);
	CreateDynamicObject_FR(19128, -2056.62793, 488.80927, 34.12170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3534, -2034.72107, 458.74939, 35.41130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, -2046.54846, 457.04529, 34.10600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3533, -2053.88574, 459.80579, 35.36626,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, -2026.75330, 464.10818, 34.10600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, -2054.12695, 492.46304, 34.12170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3532, -2036.76416, 456.97885, 34.85040,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3533, -2050.62695, 457.28860, 35.36626,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3660, -2037.29285, 456.39819, 36.57480,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19128, -2055.09375, 492.45554, 34.12170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(4206, -2047.06824, 455.89774, 34.56980,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3528, -2023.06055, 475.73724, 42.36330,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(4206, -2048.60205, 455.80014, 34.56980,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3533, -2046.50720, 454.80612, 35.36626,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3534, -2034.82861, 454.89822, 35.41130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3528, -2036.22693, 496.63016, 42.36330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3533, -2037.39087, 454.07599, 35.36626,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(987, -2028.39722, 493.77469, 33.92030,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, -2065.59058, 476.80960, 34.10600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(987, -2058.14233, 493.77847, 33.92030,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7916, -2054.03589, 455.18683, 35.27330,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(3512, -2057.61206, 495.17142, 33.80770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3749, -2018.77502, 475.56345, 39.75500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(7073, -2055.09277, 487.87457, 52.42970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(6865, -2030.61963, 454.77328, 40.45200,   0.00000, 0.00000, -129.02000);
	CreateDynamicObject_FR(7916, -2059.26123, 455.81335, 36.11330,   0.02000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18783, -2065.97388, 464.33997, 31.74000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(987, -2016.93188, 482.48489, 33.92030,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(4206, -2058.29590, 453.84637, 34.56980,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(16667, -2054.89697, 451.48251, 34.71130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(4206, -2067.97827, 465.09146, 34.56980,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(13667, -2021.58704, 491.65063, 46.27500,   0.00000, -20.00000, -90.00000);
	CreateDynamicObject_FR(3528, -2014.68005, 474.97144, 42.36330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7916, -2064.92578, 456.89395, 36.63330,   0.02000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19129, -2066.07056, 457.07065, 34.10600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7916, -2062.10889, 452.16965, 35.61330,   0.00000, 0.00000, 100.00000);
	CreateDynamicObject_FR(7916, -2064.82837, 453.91019, 35.61330,   0.00000, 0.00000, 200.00000);
	CreateDynamicObject_FR(7073, -2023.27490, 455.51782, 52.42970,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3512, -2014.33679, 493.37485, 33.80770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(987, -2017.36621, 453.98535, 33.92030,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3512, -2014.03552, 454.72357, 33.80770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7916, -2058.93848, 441.83362, 35.27330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(16667, -2075.67578, 456.21295, 34.71130,   0.00000, 0.00000, 50.00000);
	CreateDynamicObject_FR(19129, -2016.61096, 444.25964, 54.22600,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19129, -2016.61096, 444.25961, 74.22600,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18780, -1983.84009, 487.52139, 35.52340,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18778, -1983.88843, 443.89380, 36.12370,   20.00000, 0.00000, -150.00000);
	CreateDynamicObject_FR(18780, -1974.76428, 487.48672, 35.52340,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18778, -1982.29175, 441.31958, 39.56370,   40.00000, 0.00000, -150.00000);
	CreateDynamicObject_FR(18778, -1981.18176, 439.74289, 43.62370,   60.00000, 0.00000, -150.00000);
	CreateDynamicObject_FR(19129, -2016.61096, 444.25961, 94.22600,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18778, -1985.03589, 422.26736, 36.12370,   20.00000, 0.00000, -40.00000);
	CreateDynamicObject_FR(18778, -1982.54712, 425.26443, 40.80370,   40.00000, 0.00000, -40.00000);
	CreateDynamicObject_FR(18778, -1981.40015, 426.54111, 45.72370,   60.00000, 0.00000, -40.00000);
	CreateDynamicObject_FR(19129, -1951.10449, 512.60773, 47.93040,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, -2125.05347, 478.23013, 117.55280,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18826, -2125.14819, 526.13916, 101.91280,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19129, -1931.09070, 512.49536, 47.93040,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18841, -2146.05347, 494.33191, 101.71850,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18841, -2125.80981, 445.92880, 148.56760,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18809, -2160.61206, 542.21765, 101.70610,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18842, -2160.57861, 478.06427, 133.36340,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2161.17847, 446.03299, 132.76610,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18837, -2126.18921, 407.92981, 164.42081,   90.00000, 0.00000, -142.64000);
	CreateDynamicObject_FR(18841, -2146.79956, 429.87918, 164.30760,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -2122.85962, 372.23102, 164.18610,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16120, -2069.88379, 292.55313, 33.48280,   0.00000, 0.00000, 50.00000);
	CreateDynamicObject_FR(7073, -1971.13354, 302.68066, 51.60700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3511, -1979.94092, 298.37823, 34.20453,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -2210.20972, 542.09155, 101.70610,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2210.21094, 477.87686, 133.10609,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18836, -2210.28467, 446.06290, 132.93010,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3511, -1980.50537, 278.34909, 34.20453,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7073, -1969.90881, 276.35568, 51.60700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -2122.85498, 322.39240, 164.10609,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, -2259.94873, 520.83960, 54.66010,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19129, -1981.08826, 261.63095, 34.15306,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, -2224.52344, 589.78137, 101.91280,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18841, -2245.35522, 461.96451, 132.98759,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, -2245.27368, 557.96063, 101.91280,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18842, -2259.85913, 556.05817, 70.44030,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7073, -1968.43701, 253.71680, 51.60700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18778, -2125.13989, 293.44916, 160.71581,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19001, -2094.20996, 242.19780, 44.61450,   0.00000, -2.00000, 90.00000);
	CreateDynamicObject_FR(18779, -2038.66260, 236.36360, 37.78010,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3511, -1995.75525, 240.28119, 34.20453,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18876, -1990.08093, 241.23541, 33.71550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18876, -1982.75220, 241.40527, 33.71550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19134, -1995.90881, 238.41150, 29.26340,   18.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19134, -1995.77161, 238.38437, 29.60340,   18.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19134, -1995.56775, 238.38116, 30.30340,   18.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19134, -1995.67395, 238.36320, 29.96340,   18.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18842, -2259.78198, 605.65704, 70.44030,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18818, -2259.86841, 613.50623, 101.89920,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, -1981.62402, 214.94844, 62.62360,   90.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(5992, -2010.55566, 205.13487, 16.43730,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, -2004.64270, 205.29233, 16.43730,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(8397, -1987.23755, 206.33778, 35.28430,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19129, -2110.83618, 208.24312, 34.23795,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, -2259.70483, 640.78040, 86.13280,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(18778, -1965.98865, 200.99640, 59.13740,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18876, -2034.43469, 181.24693, 27.82437,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18841, -2135.67090, 196.55849, 65.25730,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject_FR(18809, -2119.83057, 196.36713, 100.39530,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18818, -1989.82117, 179.48959, 62.87910,   90.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(5992, -2010.62109, 176.93150, 16.43730,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, -2004.32397, 176.86432, 16.43730,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18826, -1962.95801, 179.18394, 47.34360,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18835, -2119.70020, 196.46477, 135.97160,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18876, -2034.80603, 169.68404, 27.82437,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(5992, -1994.00732, 157.68733, 16.43730,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, -1989.91858, 157.61130, 16.43730,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(7315, -1978.26746, 137.75160, 57.95440,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(5992, -2004.46924, 147.89087, 16.43730,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, -2010.61731, 148.09039, 16.43730,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, -1994.40808, 137.10478, 16.43730,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, -1990.05725, 137.06409, 16.43730,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18836, -1997.63391, 130.18370, 62.79220,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(5992, -2004.55408, 122.89481, 16.43730,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(5992, -2010.12744, 122.43870, 16.43730,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18826, -1997.33289, 94.93730, 46.72200,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(11156, -2057.48633, -91.31558, 34.49219,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3453, -2051.94092, -158.45891, 37.23220,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject_FR(987, -2053.47632, -164.79564, 34.23060,   0.00000, 0.00000, -40.00000);
	CreateDynamicObject_FR(987, -2051.27197, -167.24916, 34.23060,   0.00000, 0.00000, -40.00000);
	CreateDynamicObject_FR(987, -2062.32690, -172.44447, 34.23060,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject_FR(3452, -2036.25012, -182.44582, 36.73120,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(987, -2043.05896, -185.86015, 34.23060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18781, -1735.43860, -147.55006, 8.44820,   -10.00000, 0.00000, 230.00000);
	CreateDynamicObject_FR(3852, -1684.11658, -160.60168, 14.50781,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3852, -1676.06384, -153.07866, 14.50781,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3852, -1678.13440, -155.22954, 14.50781,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3852, -1681.36694, -158.45056, 14.50781,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3852, -1678.93750, -156.15891, 14.50781,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(987, -2061.53711, -183.68811, 34.23060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3453, -2053.03442, -266.09561, 37.23220,   0.00000, 0.00000, -50.00000);
	CreateDynamicObject_FR(987, -2043.90234, -256.02509, 34.23060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(987, -2052.44019, -259.20264, 34.23060,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject_FR(987, -2061.77808, -252.70950, 34.23060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(987, -2043.98535, -244.70035, 34.23060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(987, -2061.86743, -251.43391, 34.23060,   0.00000, 0.00000, -40.00000);
	CreateDynamicObject_FR(3452, -2036.14929, -241.18271, 36.73120,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(987, -2061.79272, -241.27640, 34.23060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3452, -2069.46069, -241.88615, 36.73120,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(987, -2043.79907, -232.86496, 34.23060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(987, -2061.93164, -229.86275, 34.23060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(987, -2043.72742, -221.22617, 34.23060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3452, -2036.20313, -211.83835, 36.73120,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(987, -2061.94287, -218.25305, 34.23060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(987, -2043.46985, -209.38148, 34.23060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3452, -2069.59009, -212.60941, 36.73120,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(987, -2061.89819, -206.71973, 34.23060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(987, -2043.29773, -197.59973, 34.23060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(987, -2061.71582, -195.35388, 34.23060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3452, -2069.43774, -183.38983, 36.73120,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(18809, -2309.40186, 605.52539, 101.70610,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2359.05762, 605.60193, 101.70610,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2408.94604, 605.66705, 101.70610,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2458.10059, 605.57813, 101.70610,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2506.85010, 605.68188, 101.70610,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2556.11426, 605.59558, 101.70610,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2605.16553, 605.64233, 101.70610,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2654.64819, 605.54260, 101.70610,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18826, -2669.75439, 653.22845, 101.91280,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18826, -2670.08691, 716.92877, 101.91280,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18826, -2690.20020, 621.42487, 101.91280,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, -2669.31396, 749.05902, 133.27280,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18826, -2690.95850, 685.05847, 101.91280,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, -2690.23584, 732.94403, 117.55280,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -2704.71313, 764.96997, 133.08611,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2754.57275, 764.98798, 133.08611,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2804.37720, 765.10199, 133.08611,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18837, -2840.58911, 768.71777, 132.89040,   90.00000, 50.00000, 0.00000);
	CreateDynamicObject_FR(18809, -2846.48413, 804.49542, 133.08611,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -2846.49536, 854.32758, 133.08611,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -2846.25049, 903.84521, 133.08611,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -2846.53516, 953.17603, 133.08611,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -2846.72827, 1002.80737, 133.08611,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -2846.87866, 1052.20581, 133.08611,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -2846.86963, 1101.37537, 133.08611,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -2846.91968, 1150.67456, 133.08611,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -2756.35303, 1189.56140, 133.08611,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2805.88574, 1189.52820, 133.08611,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2706.82910, 1189.48962, 133.08611,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18837, -2841.43677, 1185.84277, 133.19260,   90.00000, -50.00000, 0.00000);
	CreateDynamicObject_FR(18809, -2657.36133, 1189.46973, 133.08611,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2608.41992, 1189.51624, 133.08611,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2559.46875, 1189.80127, 133.08611,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2510.46851, 1189.95129, 133.08611,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2461.32349, 1190.29797, 133.08611,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2411.82983, 1190.22681, 133.08611,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -2363.17993, 1190.15991, 133.08611,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18778, -2334.19482, 1189.51794, 129.46960,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(16120, -1935.96143, 1129.22034, 45.77340,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18778, -1702.47510, 1187.73145, 24.57640,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(18778, -1694.87524, 1187.61560, 23.77640,   12.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(8397, -1657.11743, 1310.59619, 14.55980,   0.00000, 0.00000, 50.00000);
	CreateDynamicObject_FR(18841, -1638.64075, 1166.74048, 47.76520,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18841, -1638.12085, 1132.29993, 47.76520,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18841, -1635.31238, 1150.21350, 32.68520,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8397, -1638.41675, 1291.47412, 14.55980,   0.00000, 0.00000, 50.00000);
	CreateDynamicObject_FR(3528, -1777.47412, 963.04260, 35.77400,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(3524, -1779.15503, 958.37195, 26.56300,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3528, -1761.05420, 963.06458, 35.77400,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(3524, -1773.75391, 958.24036, 26.56300,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18822, -1593.96826, 1255.21777, 27.18610,   0.00000, -40.00000, -140.00000);
	CreateDynamicObject_FR(18995, -1591.73340, 1292.97754, 64.97840,   90.00000, 0.00000, 50.00000);
	CreateDynamicObject_FR(18841, -1589.70190, 1312.81238, 64.67920,   90.00000, 0.00000, -44.46000);
	CreateDynamicObject_FR(3528, -1746.31812, 962.49658, 35.77400,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(18817, -1576.25647, 1272.37817, 59.14600,   40.00000, 0.00000, 140.00000);
	CreateDynamicObject_FR(19129, -1773.84802, 949.33710, 23.71734,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18859, -1562.22546, 1192.04358, 15.18660,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(3528, -1730.63538, 962.32635, 35.77400,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(19129, -1758.89124, 950.34729, 23.71734,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3524, -1734.30103, 957.34235, 26.56300,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3524, -1728.64758, 957.60510, 26.56300,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -1551.97607, 1300.90576, 64.66840,   90.00000, 0.00000, 50.00000);
	CreateDynamicObject_FR(18841, -1535.68860, 1265.82434, 65.05920,   90.00000, 0.00000, 140.00000);
	CreateDynamicObject_FR(19129, -1738.98132, 949.00281, 23.71734,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7392, -1501.45190, 987.94452, 13.82880,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7392, -1500.97620, 958.48431, 13.82880,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18778, -1674.26331, 923.72504, 25.09960,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(18859, -1501.10486, 917.83453, 17.23970,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(7392, -1502.68726, 879.93988, 13.82880,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7392, -1504.36963, 851.98413, 13.82880,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18778, -1520.90649, 813.40277, 21.34850,   90.00000, 0.00000, -108.00000);
	CreateDynamicObject_FR(18778, -1523.58362, 814.30328, 8.48850,   20.00000, 0.00000, -108.00000);
	CreateDynamicObject_FR(18778, -1519.86230, 813.01617, 15.90850,   70.00000, 0.00000, -108.00000);
	CreateDynamicObject_FR(18778, -1520.51428, 813.22253, 12.36850,   40.00000, 0.00000, -108.00000);
	CreateDynamicObject_FR(18780, -1489.75122, 810.70306, 6.15540,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(7073, -1492.12476, 775.96057, 22.39540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, -1499.98694, 766.20569, 6.13670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18858, -1492.90234, 766.64856, 8.63690,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -1470.39880, 766.86072, 19.02230,   70.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(7392, -1493.32092, 753.37958, 13.82880,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -1424.54895, 767.06439, 35.56230,   70.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18826, -1360.59497, 798.25659, 27.80770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, -1493.67834, 709.95380, 6.15881,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18841, -1389.87817, 751.14441, 43.49810,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19129, -1533.11987, 690.09009, 6.15881,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, -1513.45532, 690.18011, 6.15881,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18841, -1339.65442, 782.41968, 43.89810,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18841, -1410.77869, 719.23438, 43.49810,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, -1493.73840, 690.14520, 6.15881,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -1325.10742, 798.18872, 11.64230,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18826, -1360.91174, 750.59991, 43.84770,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, -1533.04688, 670.30078, 6.15881,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, -1513.21765, 670.22876, 6.15881,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, -1493.40247, 670.05688, 6.15881,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -1375.35168, 702.94806, 43.88230,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18841, -1340.03174, 718.84442, 43.89810,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18809, -1275.23950, 798.19714, 11.64230,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18826, -1211.83008, 766.47595, 27.40190,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, -1225.94751, 798.06427, 11.64230,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18826, -1190.75366, 782.20703, 11.62190,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18809, -1176.54297, 766.48029, 43.18230,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -1126.88269, 766.52240, 43.18230,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -1078.51196, 766.49103, 43.18230,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18841, -1064.08911, 719.01038, 43.17810,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18841, -1043.43335, 750.73920, 43.17810,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18809, -1028.83289, 703.12823, 43.18230,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -979.69141, 703.41309, 43.18230,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -931.13892, 703.37238, 43.18230,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -881.08032, 703.25629, 36.60230,   -75.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18809, -847.28650, 703.22247, 27.52230,   -75.00000, 0.00000, 90.00000);


	//LS PLAYA
	CreateDynamicObject_FR(8397, 360.25000, -1852.94995, -19.48000,   -18.00000, 5.00000, 178.69000);
	CreateDynamicObject_FR(8397, 360.57999, -1856.07996, -27.83000,   -18.00000, 5.00000, 178.69000);
	CreateDynamicObject_FR(8397, 360.64001, -1860.08997, -32.23000,   -18.00000, 5.00000, 178.49001);
	CreateDynamicObject_FR(8397, 354.67999, -1841.71997, -19.48000,   -18.00000, 5.00000, 0.00000);
	CreateDynamicObject_FR(8397, 353.57999, -1839.01001, -28.39000,   -18.00000, 5.00000, 0.00000);
	CreateDynamicObject_FR(18830, 345.95001, -1853.13000, 6.34000,   0.00000, -155.00000, 179.69000);
	CreateDynamicObject_FR(8397, 352.82999, -1836.51001, -36.55000,   -18.00000, 5.00000, 0.00000);
	CreateDynamicObject_FR(18830, 346.10001, -1841.27002, 6.34000,   0.00000, -155.00000, 179.69000);
	CreateDynamicObject_FR(641, 334.76999, -1891.43005, -1.56000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(641, 323.25000, -1890.38000, -1.53000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(641, 311.60001, -1889.84998, -1.45000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(641, 300.79999, -1889.27002, -1.51000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(620, 274.25000, -1775.40002, 2.82000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, 267.34000, -1774.17004, -32.15000,   0.00000, -13.00000, 360.00000);
	CreateDynamicObject_FR(8621, 259.79999, -1771.89001, 7.89000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, 263.98999, -1774.28003, -36.00000,   0.00000, -13.00000, 360.00000);
	CreateDynamicObject_FR(8397, 260.57001, -1774.17004, -31.54000,   0.00000, 0.00000, 359.60999);
	CreateDynamicObject_FR(8397, 260.44000, -1774.18994, -39.48000,   0.00000, -13.00000, 360.00000);
	CreateDynamicObject_FR(8397, 259.82001, -1774.15002, -40.24000,   0.00000, -13.00000, 177.97000);
	CreateDynamicObject_FR(8397, 257.20001, -1774.04004, -36.30000,   0.00000, -13.00000, 178.07001);
	CreateDynamicObject_FR(10838, 232.71001, -1881.90002, 17.29000,   0.00000, 0.00000, 87.63000);
	CreateDynamicObject_FR(8397, 254.07001, -1773.80005, -32.77000,   0.00000, -13.00000, 178.07001);
	CreateDynamicObject_FR(620, 245.21001, -1774.50000, 2.31000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18780, 201.10001, -1858.08997, 2.08000,   0.00000, 0.00000, 202.52000);
	CreateDynamicObject_FR(18780, 201.10001, -1858.08997, 2.08000,   0.00000, 0.00000, 187.09000);
	CreateDynamicObject_FR(18780, 201.10001, -1858.08997, 2.08000,   0.00000, 0.00000, 234.39000);
	CreateDynamicObject_FR(18780, 201.10001, -1858.08997, 2.08000,   0.00000, 0.00000, 218.27000);
	CreateDynamicObject_FR(18779, 184.75999, -1824.07996, 8.03000,   0.00000, 0.00000, 0.09000);
	CreateDynamicObject_FR(18779, 181.25000, -1792.81006, 12.82000,   0.00000, 0.00000, 340.70999);
	CreateDynamicObject_FR(18780, 137.50000, -1827.18994, 12.46000,   0.00000, 0.00000, 180.30000);
	CreateDynamicObject_FR(18780, 137.27000, -1818.42004, 12.46000,   0.00000, 0.00000, 180.30000);
	CreateDynamicObject_FR(18780, 137.28999, -1808.66003, 12.46000,   0.00000, 0.00000, 180.30000);
	CreateDynamicObject_FR(18830, 130.52000, -1826.02002, 11.73000,   -180.00000, 3.00000, 359.81000);
	CreateDynamicObject_FR(18830, 130.41000, -1814.30005, 11.73000,   -180.00000, 3.00000, 359.81000);
	CreateDynamicObject_FR(18830, 130.44000, -1809.38000, 11.73000,   -180.00000, 3.00000, 359.81000);
	CreateDynamicObject_FR(18228, 125.03000, -1808.30005, -7.12000,   0.00000, 0.00000, 71.92000);
	CreateDynamicObject_FR(18228, 113.66000, -1808.63000, 1.77000,   0.00000, 0.00000, 65.64000);
	CreateDynamicObject_FR(18228, 106.90000, -1809.57996, 8.38000,   0.00000, 0.00000, 42.96000);
	CreateDynamicObject_FR(18228, 106.90000, -1809.57996, -1.10000,   0.00000, 0.00000, 42.96000);
	CreateDynamicObject_FR(18228, 106.90000, -1809.57996, -11.37000,   0.00000, 0.00000, 42.96000);
	CreateDynamicObject_FR(18228, 106.90000, -1809.57996, -22.25000,   0.00000, 0.00000, 42.96000);
	CreateDynamicObject_FR(18228, 106.90000, -1809.57996, -30.42000,   0.00000, 0.00000, 42.96000);
	CreateDynamicObject_FR(19129, 93.41000, -1825.35999, 40.93000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18783, 93.40000, -1823.52002, 38.48000,   0.00000, 0.00000, 0.62000);
	CreateDynamicObject_FR(18228, 106.90000, -1809.57996, -40.89000,   0.00000, 0.00000, 42.96000);
	CreateDynamicObject_FR(18783, 93.39000, -1811.94995, 38.48000,   0.00000, 0.00000, 0.62000);
	CreateDynamicObject_FR(19129, 93.37000, -1805.43005, 40.93000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7916, 87.71000, -1829.13000, 43.35000,   25.00000, 0.00000, 170.12000);
	CreateDynamicObject_FR(7916, 87.71000, -1829.13000, 47.39000,   25.00000, 0.00000, 170.12000);
	CreateDynamicObject_FR(18228, 84.54000, -1840.57996, 38.59000,   0.00000, 0.00000, 326.38000);
	CreateDynamicObject_FR(7916, 82.42000, -1827.45996, 47.39000,   25.00000, 0.00000, 170.12000);
	CreateDynamicObject_FR(7916, 82.15000, -1827.21997, 49.02000,   25.00000, 0.00000, 170.12000);
	CreateDynamicObject_FR(18228, 77.74000, -1798.45996, 37.36000,   0.00000, 0.00000, 158.00000);
	CreateDynamicObject_FR(18228, 77.74000, -1798.45996, 32.74000,   0.00000, 0.00000, 158.00000);
	CreateDynamicObject_FR(7916, 73.10000, -1834.12000, 43.00000,   0.00000, 0.00000, 80.02000);
	CreateDynamicObject_FR(18228, 77.74000, -1798.45996, 27.25000,   0.00000, 0.00000, 158.00000);
	CreateDynamicObject_FR(19129, 73.67000, -1825.30005, 40.93000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18783, 73.68000, -1823.67004, 38.48000,   0.00000, 0.00000, 0.62000);
	CreateDynamicObject_FR(18228, 77.74000, -1798.45996, 22.06000,   0.00000, 0.00000, 158.00000);
	CreateDynamicObject_FR(7916, 73.19000, -1828.34998, 43.00000,   0.00000, 0.00000, 80.02000);
	CreateDynamicObject_FR(18228, 77.74000, -1798.45996, 17.89000,   0.00000, 0.00000, 158.00000);
	CreateDynamicObject_FR(18228, 77.82000, -1798.40002, 12.35000,   0.00000, 0.00000, 158.00000);
	CreateDynamicObject_FR(18228, 77.74000, -1798.45996, 12.35000,   0.00000, 0.00000, 158.00000);
	CreateDynamicObject_FR(18783, 73.56000, -1812.07996, 38.48000,   0.00000, 0.00000, 0.62000);
	CreateDynamicObject_FR(19129, 73.93000, -1805.54004, 40.93000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18752, 78.20000, -1823.56995, -23.43000,   0.00000, 0.00000, 87.66000);
	CreateDynamicObject_FR(7916, 70.98000, -1813.66003, 43.35000,   25.00000, 0.00000, 12.69000);
	CreateDynamicObject_FR(7916, 70.56000, -1811.83997, 43.35000,   25.00000, 0.00000, 12.69000);
	CreateDynamicObject_FR(7916, 69.79000, -1815.31006, 43.35000,   25.00000, 0.00000, 12.69000);
	CreateDynamicObject_FR(7916, 66.67000, -1829.13000, 48.30000,   0.00000, 0.00000, 89.30000);
	CreateDynamicObject_FR(7916, 65.36000, -1829.96997, 49.02000,   25.00000, 0.00000, 82.60000);
	CreateDynamicObject_FR(7916, 65.26000, -1812.68005, 43.35000,   25.00000, 0.00000, 12.69000);
	CreateDynamicObject_FR(7916, 60.90000, -1824.54004, 48.30000,   0.00000, 0.00000, 78.94000);
	CreateDynamicObject_FR(18228, 51.68000, -1812.65002, 39.48000,   0.00000, 0.00000, 46.08000);
	//LS PLAYA KARAOKE
	CreateDynamicObject_FR(16088, 259.99261, -1780.52563, 3.78014,   0.00002, 0.00000, 90.49992);
	CreateDynamicObject_FR(16088, 260.04330, -1786.33545, 3.78014,   0.00002, 0.00000, 90.49992);
	CreateDynamicObject_FR(10244, 251.18002, -1779.11243, 1.04014,   -0.00002, 0.00000, -89.49992);
	CreateDynamicObject_FR(974, 264.48633, -1785.50659, 1.72014,   0.00000, 0.00002, 0.50000);
	CreateDynamicObject_FR(974, 264.46243, -1782.76672, 4.49014,   89.99999, 90.25000, -89.74996);
	CreateDynamicObject_FR(974, 257.82654, -1785.56470, 1.72014,   0.00000, 0.00002, 0.50000);
	CreateDynamicObject_FR(974, 257.80264, -1782.82483, 4.49014,   89.99999, 90.25000, -89.74996);
	CreateDynamicObject_FR(974, 255.92661, -1785.58130, 1.72014,   0.00000, 0.00002, 0.50000);
	CreateDynamicObject_FR(974, 255.90271, -1782.84143, 4.49014,   89.99999, 90.25000, -89.74996);
	CreateDynamicObject_FR(3851, 259.61081, -1780.31897, 8.72014,   0.00002, 0.00000, 90.49992);
	CreateDynamicObject_FR(3851, 259.61081, -1780.31897, 6.46014,   0.00002, 0.00000, 90.49992);
	CreateDynamicObject_FR(3851, 261.91769, -1783.38892, 11.89014,   0.00002, 90.00000, 90.49992);
	CreateDynamicObject_FR(3851, 260.25079, -1780.31348, 8.72014,   0.00002, 0.00000, 90.49992);
	CreateDynamicObject_FR(18648, 259.02234, -1780.49414, 7.96014,   66.99996, 179.99998, -89.49995);
	CreateDynamicObject_FR(18092, 259.86850, -1784.62683, 4.89014,   0.00000, -0.00002, -179.49995);
	CreateDynamicObject_FR(14820, 260.89938, -1784.73779, 5.48014,   0.00000, -0.00002, -179.49995);
	CreateDynamicObject_FR(1841, 261.73257, -1785.09070, 4.57014,   0.00002, 0.00000, 90.49992);
	CreateDynamicObject_FR(1841, 258.02304, -1785.15295, 4.57014,   0.00002, 0.00000, 90.49992);
	CreateDynamicObject_FR(2229, 265.86530, -1784.23450, 4.57014,   -0.00001, 0.00002, -32.50000);
	CreateDynamicObject_FR(2232, 254.15132, -1787.26685, 9.75014,   25.00001, 0.00002, 33.49998);
	CreateDynamicObject_FR(2229, 254.73894, -1784.70154, 4.57014,   0.00001, 0.00002, 33.50000);
	CreateDynamicObject_FR(2229, 265.76245, -1785.05554, 4.57014,   -0.00001, 0.00002, -32.50000);
	CreateDynamicObject_FR(2229, 254.96283, -1783.99963, 4.57014,   0.00001, 0.00002, 33.50000);
	CreateDynamicObject_FR(2229, 265.09833, -1786.88135, 11.91013,   25.00000, 0.00003, 0.49999);
	CreateDynamicObject_FR(2232, 265.83890, -1786.94482, 9.83013,   24.99999, 0.00002, -32.50000);
	CreateDynamicObject_FR(2229, 263.58801, -1786.85449, 11.91013,   25.00000, 0.00003, 0.49999);
	CreateDynamicObject_FR(2229, 264.01813, -1786.86072, 11.91013,   25.00000, 0.00003, 0.49999);
	CreateDynamicObject_FR(2229, 264.55814, -1786.86609, 11.91013,   25.00000, 0.00003, 0.49999);
	CreateDynamicObject_FR(2229, 257.71692, -1786.75574, 11.91013,   25.00000, 0.00003, 0.49999);
	CreateDynamicObject_FR(2229, 257.09689, -1786.75122, 11.91013,   25.00000, 0.00003, 0.49999);
	CreateDynamicObject_FR(2229, 256.48676, -1786.73657, 11.91013,   25.00000, 0.00003, 0.49999);
	CreateDynamicObject_FR(2229, 255.97665, -1786.73096, 11.91013,   25.00000, 0.00003, 0.49999);
	CreateDynamicObject_FR(18648, 260.19232, -1780.48389, 8.77014,   1.99998, 179.99998, -89.49995);
	CreateDynamicObject_FR(18648, 259.90182, -1780.48645, 7.96014,   1.99998, 179.99998, -89.49995);
	CreateDynamicObject_FR(18648, 261.14224, -1780.47559, 7.96014,   66.99996, 179.99998, -89.49995);
	CreateDynamicObject_FR(18648, 262.32227, -1780.46533, 8.77014,   1.99998, 179.99998, -89.49995);
	CreateDynamicObject_FR(18648, 262.20227, -1780.46631, 8.35014,   18.99998, 179.99998, -89.49995);
	CreateDynamicObject_FR(18648, 262.16223, -1780.46667, 7.64014,   -19.00002, 179.99998, -89.49995);
	CreateDynamicObject_FR(18646, 260.14313, -1785.15442, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.17288, -1785.14294, 4.68014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.07303, -1785.15381, 4.69013,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 258.97305, -1785.15466, 4.90014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 258.96304, -1785.15479, 4.89014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 258.96304, -1785.15479, 4.69013,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.50278, -1785.12000, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 260.13293, -1785.13452, 5.00014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 260.13293, -1785.13452, 4.78014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.07303, -1785.15381, 4.90014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.17288, -1785.14294, 4.90014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 260.13293, -1785.13452, 4.90014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 260.13303, -1785.14453, 4.67014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.27298, -1785.14209, 5.00014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.27298, -1785.14209, 4.90014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 258.96304, -1785.15479, 4.79014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.27298, -1785.14209, 4.68014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.84274, -1785.11707, 4.68014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 258.97305, -1785.15466, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.07303, -1785.15381, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.17288, -1785.14294, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.27298, -1785.14209, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 260.02304, -1785.14551, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.82281, -1785.12720, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 260.30258, -1785.10315, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.50278, -1785.12000, 5.00014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.50278, -1785.12000, 4.90014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.51279, -1785.11987, 4.78014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 260.64258, -1785.09021, 4.67014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 260.64252, -1785.08020, 4.78014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 260.44244, -1785.08191, 4.90014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 260.64267, -1785.10022, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 260.53247, -1785.09119, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 260.42258, -1785.10205, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.50296, -1785.14001, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.61295, -1785.13904, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.71292, -1785.13818, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.82291, -1785.13721, 5.10014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.82291, -1785.13721, 5.00014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.83273, -1785.11719, 4.90014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.83273, -1785.11719, 4.78014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.82281, -1785.12720, 4.67014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.71292, -1785.13818, 4.68014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.61295, -1785.13904, 4.68014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 259.51279, -1785.11987, 4.68014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 260.64252, -1785.08020, 4.90014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(18646, 260.54242, -1785.08105, 4.90014,   89.99999, 90.49001, -89.66995);
	CreateDynamicObject_FR(3850, 263.42346, -1788.61597, 3.79014,   0.00002, 0.00000, 90.49992);
	CreateDynamicObject_FR(3850, 260.00354, -1788.64587, 3.79014,   0.00002, 0.00000, 90.49992);
	CreateDynamicObject_FR(3850, 256.55374, -1788.67590, 3.79014,   0.00002, 0.00000, 90.49992);
	CreateDynamicObject_FR(18643, 267.55066, -1781.40979, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 255.60016, -1787.13428, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(19419, 261.19598, -1785.48523, 3.79014,   89.99999, 90.25000, -89.74996);
	CreateDynamicObject_FR(19420, 262.75598, -1785.47168, 3.79014,   89.99999, 90.25000, -89.74996);
	CreateDynamicObject_FR(19420, 258.82617, -1785.51599, 3.79014,   89.99999, 90.25000, -89.74996);
	CreateDynamicObject_FR(19419, 257.21625, -1785.53003, 3.79014,   89.99999, 90.25000, -89.74996);
	CreateDynamicObject_FR(18653, 264.76282, -1785.41809, 2.80014,   0.00001, 0.00001, 45.49997);
	CreateDynamicObject_FR(19348, 259.85535, -1784.26685, 5.63014,   -0.00002, 134.99998, -89.49995);
	CreateDynamicObject_FR(19435, 267.72159, -1784.94836, 3.74014,   89.99999, 90.25000, -89.74996);
	CreateDynamicObject_FR(19435, 267.69138, -1781.48853, 3.74014,   89.99999, 90.25000, -89.74996);
	CreateDynamicObject_FR(3851, 260.25079, -1780.31348, 6.46014,   0.00002, 0.00000, 90.49992);
	CreateDynamicObject_FR(3851, 267.49756, -1783.34033, 6.25014,   89.99999, 90.25000, -89.74996);
	CreateDynamicObject_FR(3851, 257.79785, -1783.42493, 11.89014,   0.00002, 90.00000, 90.49992);
	CreateDynamicObject_FR(1649, 252.34969, -1783.65259, 9.13014,   0.00002, 0.00000, 90.49992);
	CreateDynamicObject_FR(1649, 252.28963, -1783.65308, 10.25014,   0.00002, 0.00000, 90.49992);
	CreateDynamicObject_FR(1649, 252.34969, -1783.65259, 9.13014,   -0.00002, 0.00000, -89.49992);
	CreateDynamicObject_FR(1649, 252.28963, -1783.65308, 10.25014,   -0.00002, 0.00000, -89.49992);
	CreateDynamicObject_FR(2224, 259.22156, -1786.13257, 2.92014,   -0.00001, 0.00001, -44.49999);
	CreateDynamicObject_FR(18653, 255.43915, -1785.41479, 2.80014,   0.00002, -0.00001, 120.49992);
	CreateDynamicObject_FR(18654, 254.05994, -1787.11768, 5.25014,   0.00002, -0.00001, 120.49992);
	CreateDynamicObject_FR(18654, 266.05920, -1786.98303, 5.25014,   0.00001, 0.00001, 45.49997);
	CreateDynamicObject_FR(19435, 247.28134, -1781.57666, 4.82014,   0.00000, 0.00002, 0.50000);
	CreateDynamicObject_FR(19435, 247.66878, -1780.13318, 4.82014,   -0.00001, 0.00002, -31.49998);
	CreateDynamicObject_FR(19435, 247.29408, -1783.03662, 4.82014,   0.00000, 0.00002, 0.50000);
	CreateDynamicObject_FR(19435, 247.30769, -1784.59644, 4.82014,   0.00000, 0.00002, 0.50000);
	CreateDynamicObject_FR(18643, 264.89114, -1787.20300, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.59332, -1785.14954, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.52170, -1784.96008, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.70895, -1784.64844, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.71982, -1784.74841, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.57544, -1784.24963, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.56186, -1783.83972, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.52478, -1783.03003, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.51300, -1782.83008, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.58865, -1782.31934, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.56250, -1781.61963, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.56427, -1781.81958, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.53827, -1783.42993, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.56369, -1784.04956, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.55011, -1783.63989, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.53653, -1783.22998, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.60040, -1782.51941, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.58688, -1782.11938, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.57513, -1781.91943, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18643, 267.69632, -1784.34851, 12.05014,   0.00000, 90.00003, 0.50000);
	CreateDynamicObject_FR(18646, 260.64270, -1785.10315, 5.00010,   90.00000, 90.49000, -89.67000);
	CreateDynamicObject_FR(18648, 257.69241, -1780.50574, 8.77014,   1.99998, 179.99998, -89.49995);
	CreateDynamicObject_FR(18648, 257.66238, -1780.50598, 8.27123,   -25.50001, 179.99998, -89.49995);
	CreateDynamicObject_FR(18648, 257.66238, -1780.50598, 7.43394,   25.49998, 179.99998, -89.49995);
	CreateDynamicObject_FR(19609, 260.04837, -1781.71069, 4.48746,   0.00000, 0.00002, 0.50000);
	CreateDynamicObject_FR(19608, 260.03506, -1783.32043, 12.09560,   0.00000, -179.99998, 0.49997);
	CreateDynamicObject_FR(19893, 259.49405, -1784.81775, 5.39591,   0.00000, -0.00002, 165.04688);
	CreateDynamicObject_FR(19610, 257.44193, -1776.50439, 4.98236,   0.00000, 0.00002, 0.50000);

	//FERRISWHEEL
	Ferriswheel_Base = CreateObject(19894, 288.5600, -1870.6224, 30.5, 0.0, 0.0, 180.0);
	
	new Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 0.62, -2.00, 24.97, 79.99, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 0.00, -2.00, 14.50, 0.00, -0.00, 179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 0.62, 2.00, 24.97, 79.99, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 0.00, 2.00, 14.50, 0.00, -0.00, 179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 8.31, -2.00, 23.56, 61.99, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 4.48, -2.00, 13.79, 0.00, -17.99, 179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 8.31, 2.00, 23.56, 61.99, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 4.48, 2.00, 13.79, 0.00, -17.99, 179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 15.18, -2.00, 19.84, 44.00, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 8.52, -2.00, 11.73, 0.00, -35.99, 179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 15.18, 2.00, 19.84, 44.00, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 8.52, 2.00, 11.73, 0.00, -35.99, 179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 20.57, -2.00, 14.17, 25.99, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 11.73, -2.00, 8.52, 0.00, -54.00, 179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 20.57, 2.00, 14.17, 25.99, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 11.73, 2.00, 8.52, 0.00, -54.00, 179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 23.94, -2.00, 7.12, 8.00, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 13.79, -2.00, 4.48, 0.00, -71.99, 179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 23.94, 2.00, 7.12, 8.00, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 13.79, 2.00, 4.48, 0.00, -71.99, 179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 24.97, -2.00, -0.62, -9.99, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 14.50, -2.00, 0.00, 0.00, -89.99, 179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 24.97, 2.00, -0.62, -9.99, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 14.50, 2.00, 0.00, 0.00, -89.99, 179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 23.56, -2.00, -8.31, -28.00, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 13.79, -2.00, -4.48, 0.00, -107.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 23.56, 2.00, -8.31, -28.00, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 13.79, 2.00, -4.48, 0.00, -107.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 19.84, -2.00, -15.18, -45.99, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 11.73, -2.00, -8.52, 0.00, -125.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 19.84, 2.00, -15.18, -45.99, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 11.73, 2.00, -8.52, 0.00, -125.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 14.17, -2.00, -20.57, -63.99, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 8.52, -2.00, -11.73, 0.00, -143.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 14.17, 2.00, -20.57, -63.99, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 8.52, 2.00, -11.73, 0.00, -143.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 7.12, -2.00, -23.94, -81.99, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 4.48, -2.00, -13.79, 0.00, -161.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 7.12, 2.00, -23.94, -81.99, 179.99, -90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 4.48, 2.00, -13.79, 0.00, -161.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -0.62, -2.00, -24.97, -79.99, 0.00, 90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 0.00, -2.00, -14.50, 0.00, -179.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -0.62, 2.00, -24.97, -79.99, 0.00, 90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, 0.00, 2.00, -14.50, 0.00, -179.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -8.31, -2.00, -23.56, -61.99, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -4.48, -2.00, -13.79, -0.00, 161.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -8.31, 2.00, -23.56, -61.99, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -4.48, 2.00, -13.79, -0.00, 161.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -15.18, -2.00, -19.84, -44.00, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -8.52, -2.00, -11.73, -0.00, 143.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -15.18, 2.00, -19.84, -44.00, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -8.52, 2.00, -11.73, -0.00, 143.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -20.57, -2.00, -14.17, -25.99, -0.00, 90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -11.73, -2.00, -8.52, -0.00, 125.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -20.57, 2.00, -14.17, -25.99, -0.00, 90.00, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -11.73, 2.00, -8.52, -0.00, 125.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -23.94, -2.00, -7.12, -7.99, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -13.79, -2.00, -4.48, -0.00, 107.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -23.94, 2.00, -7.12, -7.99, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -13.79, 2.00, -4.48, -0.00, 107.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -24.97, -2.00, 0.62, 9.99, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -14.50, -2.00, -0.00, -0.00, 89.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -24.97, 2.00, 0.62, 9.99, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -14.50, 2.00, -0.00, -0.00, 89.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -23.56, -2.00, 8.31, 28.00, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -13.79, -2.00, 4.48, -0.00, 71.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -23.56, 2.00, 8.31, 28.00, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -13.79, 2.00, 4.48, -0.00, 71.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -19.84, -2.00, 15.18, 45.99, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -11.73, -2.00, 8.52, -0.00, 54.00, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -19.84, 2.00, 15.18, 45.99, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -11.73, 2.00, 8.52, -0.00, 54.00, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -14.17, -2.00, 20.57, 63.99, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -8.52, -2.00, 11.73, -0.00, 35.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -14.17, 2.00, 20.57, 63.99, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -8.52, 2.00, 11.73, -0.00, 35.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -7.12, -2.00, 23.94, 81.99, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -4.48, -2.00, 13.79, -0.00, 17.99, -179.99, true);
	Ferriswheel_unused = CreateObject(968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -7.12, 2.00, 23.94, 81.99, -0.00, 89.99, true);
	Ferriswheel_unused = CreateObject(3398, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	SetObjectMaterial(Ferriswheel_unused, 0, 19128, "dancefloors", "DanceFloor1", 0xFFFFFFFF);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -4.48, 2.00, 13.79, -0.00, 17.99, -179.99, true);
	
	//CABINAS
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, 0.00, 0.00, 25.00, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, 7.72, 0.00, 23.77, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, 14.69, 0.00, 20.22, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, 20.22, 0.00, 14.69, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, 23.77, 0.00, 7.72, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, 25.00, 0.00, 0.00, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, 23.77, 0.00, -7.72, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, 20.22, 0.00, -14.69, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, 14.69, 0.00, -20.22, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, 7.72, 0.00, -23.77, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, 0.00, 0.00, -25.00, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, -7.72, 0.00, -23.77, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, -14.69, 0.00, -20.22, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, -20.22, 0.00, -14.69, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, -23.77, 0.00, -7.72, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, -25.00, 0.00, -0.00, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, -23.77, 0.00, 7.72, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, -20.22, 0.00, 14.69, 0.0, 0.0, 0.0, false);
	AttachObjectToObject(CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0), Ferriswheel_Base, -14.69, 0.00, 20.22, 0.0, 0.0, 0.0, false);
	Ferriswheel_unused = CreateObject(19316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 800.0);
	AttachObjectToObject(Ferriswheel_unused, Ferriswheel_Base, -7.72, 0.00, 23.77, 0.0, 0.0, 0.0, false);
	
	//BASE 
	Ferriswheel_unused = CreateDynamicObjectEx(18980, 279.940155, -1866.104248, 23.984199, 14.999999, 45.000038, -0.000010, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "samporange", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(18980, 297.061706, -1866.104248, 23.984191, 14.999999, -44.999961, -0.000010, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "samporange", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(18980, 314.669708, -1861.548461, 6.977291, 14.999999, -44.999961, -0.000010, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "samporange", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(18980, 262.332092, -1861.548461, 6.977291, 14.999999, 45.000038, -0.000010, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "samporange", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(18980, 297.061706, -1875.358032, 23.984191, -14.999999, -44.999961, 0.000010, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "samporange", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(18980, 279.940124, -1875.358032, 23.984191, -14.999999, 45.000038, 0.000010, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "samporange", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(18980, 314.669708, -1879.913818, 6.977291, -14.999999, -44.999961, 0.000010, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "samporange", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(18980, 262.332092, -1879.913818, 6.977291, -14.999999, 45.000038, 0.000010, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "samporange", 0xFFFFFFFF);
	
	Ferriswheel_unused = CreateDynamicObjectEx(1454, 288.500915, -1873.559082, 30.5, 0.000000, 0.000038, 0.000000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF); SetDynamicObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(1454, 288.500915, -1872.231079, 30.5, 0.000000, 0.000038, 0.000000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF); SetDynamicObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(1454, 288.500915, -1871.231079, 30.5, 0.000000, 0.000038, 0.000000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF); SetDynamicObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(1454, 288.500915, -1870.231079, 30.5, 0.000000, 0.000038, 0.000000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF); SetDynamicObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(1454, 288.500915, -1868.903076, 30.5, 0.000000, 0.000038, 0.000000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF); SetDynamicObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(1454, 288.500915, -1867.903076, 30.5, 0.000000, 0.000038, 0.000000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF); SetDynamicObjectMaterial(Ferriswheel_unused, 1, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	
	Ferriswheel_unused = CreateDynamicObjectEx(18980, 274.89755, -1860.07471, 1.44091,   15.00000, -45.00000, 0.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "red", 0xFFFFFFFF); 
	Ferriswheel_unused = CreateDynamicObjectEx(18980, 302.39761, -1860.07471, 1.44090,   15.00000, 45.00000, 0.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "red", 0xFFFFFFFF); 
	Ferriswheel_unused = CreateDynamicObjectEx(18980, 302.39761, -1881.41382, 1.44090,   -15.00000, 45.00000, 0.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "red", 0xFFFFFFFF); 
	Ferriswheel_unused = CreateDynamicObjectEx(18980, 274.89761, -1881.41382, 1.44090,   -15.00000, -45.00000, 0.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 18646, "matcolours", "red", 0xFFFFFFFF); 
	
	CreateDynamicObjectEx(18762, 306.87421, -1863.61890, 5.65116,   45.00000, 90.00000, 90.00000, 800.0, 800.0);
	CreateDynamicObjectEx(18762, 306.87421, -1868.61890, 5.65120,   45.00000, 90.00000, 90.00000, 800.0, 800.0);
	CreateDynamicObjectEx(18762, 306.87421, -1873.61890, 5.65120,   45.00000, 90.00000, 90.00000, 800.0, 800.0);
	CreateDynamicObjectEx(18762, 306.87421, -1878.11890, 5.65120,   45.00000, 90.00000, 90.00000, 800.0, 800.0);
	CreateDynamicObjectEx(18762, 270.55420, -1878.11890, 5.65120,   -45.00000, 90.00000, 90.00000, 800.0, 800.0);
	CreateDynamicObjectEx(18762, 270.55420, -1873.61890, 5.65120,   -45.00000, 90.00000, 90.00000, 800.0, 800.0);
	CreateDynamicObjectEx(18762, 270.55420, -1868.61890, 5.65120,   -45.00000, 90.00000, 90.00000, 800.0, 800.0);
	CreateDynamicObjectEx(18762, 270.55420, -1863.61890, 5.65120,   -45.00000, 90.00000, 90.00000, 800.0, 800.0);

	Ferriswheel_unused = CreateDynamicObjectEx(18878, 288.56000, -1870.62244, 16.88390,   0.00000, 0.00000, 0.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 3, 0, "null", "null", 0xFFFFFFFF);
	
	Ferriswheel_unused = CreateDynamicObjectEx(18846, 288.500915, -1873.559082, 31.64999, 89.999992, 90.000030, -89.999961, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7278, "vegasnlod2", "casinolights5_256n", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(18846, 288.500915, -1867.983154, 31.64999, 89.999992, -89.999977, -89.999961, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7278, "vegasnlod2", "casinolights5_256n", 0xFFFFFFFF);
	
	/*Ferriswheel_unused = CreateDynamicObjectEx(3037, 288.5153, -1866.0356, 31.4142, 0.0000, 0.0000, 90.0000, 800.0, 800.0);
	SetDynamicObjectMaterialText(Ferriswheel_unused, 0, "LEGACYFR", 90, "Calibri", 75, 1, -65281, -16468988, 1);*/
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 288.68188, -1865.94080, 31.78080,   0.00000, 90.00000, 180.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 289.50089, -1865.94080, 30.64538,   180.00000, 0.00000, 0.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 289.50089, -1865.94080, 32.88730,   0.00000, 0.00000, 0.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 288.50089, -1865.94080, 33.65450,   0.00000, 90.00000, 180.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 291.50089, -1865.94080, 33.65450,   0.00000, 90.00000, 180.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 292.60590, -1865.94080, 32.89930,   0.00000, 0.00000, 0.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 291.86292, -1865.94080, 31.78080,   0.00000, 90.00000, 180.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 291.08890, -1865.94080, 30.64540,   180.00000, 0.00000, 0.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 292.56589, -1865.94080, 29.92620,   0.00000, 90.00000, 0.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 286.50089, -1865.94080, 32.88730,   0.00000, 0.00000, 0.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 286.50089, -1865.94080, 30.64540,   180.00000, 0.00000, 0.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 285.21991, -1865.94080, 33.65450,   0.00000, 90.00000, 180.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 284.32489, -1865.94080, 32.89930,   0.00000, 0.00000, 0.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 285.11990, -1865.94080, 31.78080,   0.00000, 90.00000, 180.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 285.33890, -1865.94080, 30.73012,   0.00000, -45.00000, 180.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 283.66690, -1865.94080, 29.99820,   0.00000, 92.50000, 180.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);
	Ferriswheel_unused = CreateDynamicObjectEx(9131, 293.30789, -1865.94080, 29.92620,   0.00000, 90.00000, 0.00000, 800.0, 800.0);
	SetDynamicObjectMaterial(Ferriswheel_unused, 0, 7315, "vgnfremnt1", "casinolightsblu_128", 0xFFFFFFFF);

	CreateDynamicObjectEx(3472, 265.71387, -1855.19250, 2.04079,   0.00000, 0.00000, 35.71992, 800.0);
	CreateDynamicObjectEx(3472, 311.21390, -1855.19250, 2.04080,   0.00000, 0.00000, 332.35178, 800.0);
	
	RotateFerrisWheel();
	
	CreatePartyTruck(260.6281, -1843.9381, 4.8835, 246.3439);
	CreatePartyTruck(260.6281, -1836.9381, 4.8835, 246.3439);
	CreatePartyTruck(260.6281, -1830.4381, 4.8835, 246.3439);
	CreatePartyTruck(314.1281, -1843.9381, 4.8835, -246.3439);
	CreatePartyTruck(314.1281, -1836.9381, 4.8835, -246.3439);
	CreatePartyTruck(314.1281, -1830.4381, 4.8835, -246.3439);
	
	

	//Drift y Rampa Drift
	CreateDynamicObject_FR(19273, -319.56589, 1534.60925, 76.20954,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1341, -318.39999, 1535.59998, 75.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19906, -324.73920, 1536.30078, 78.02490,   -82.00000, -1.00000, 359.59393);
	CreateDynamicObject_FR(19273, -328.64890, 1534.57922, 76.54585,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19339, -329.77582, 1533.93042, 75.62723,   -2.00000, 68.00000, -91.00000);
	CreateDynamicObject_FR(19906, -315.74609, 1536.45630, 78.02490,   -82.00000, -1.00000, 358.97870);
	CreateDynamicObject_FR(1687, -323.33313, 1538.90857, 80.97616,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19872, -324.61121, 1542.28613, 74.44024,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19906, -333.76147, 1536.44922, 78.02490,   -82.00000, -1.00000, 0.00000);
	CreateDynamicObject_FR(19905, -320.56876, 1542.80005, 74.36967,   0.00000, 0.00000, 0.09863);
	CreateDynamicObject_FR(1341, -310.70001, 1535.50000, 75.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19817, -315.74112, 1541.28638, 74.69090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19273, -310.25934, 1534.64185, 76.53713,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(10281, -310.97412, 1534.51453, 80.31357,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18075, -320.50854, 1542.65112, 80.11533,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19273, -337.08572, 1534.54883, 76.49394,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18075, -330.75754, 1542.92749, 80.11582,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19903, -321.47385, 1545.91260, 74.78850,   0.00000, 0.00000, -120.00000);
	CreateDynamicObject_FR(19872, -334.04175, 1541.88440, 73.30781,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19903, -331.33640, 1544.32751, 74.43266,   0.00000, 0.00000, -120.00000);
	CreateDynamicObject_FR(3524, -338.95435, 1534.71960, 76.59447,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1692, -331.96484, 1543.22363, 81.00140,   0.00000, 0.00000, 270.67270);
	CreateDynamicObject_FR(1687, -323.69199, 1546.56567, 80.97616,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19906, -306.72498, 1536.94080, 78.02490,   -82.00000, -1.00000, 358.97870);
	CreateDynamicObject_FR(1696, -307.64935, 1538.84790, 81.17810,   0.00000, 0.00000, 90.18381);
	CreateDynamicObject_FR(19903, -312.50284, 1545.76367, 74.78850,   0.00000, 0.00000, -120.00000);
	CreateDynamicObject_FR(18075, -309.72363, 1543.10913, 80.07170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -326.84436, 1510.96472, 75.24240,   0.00000, 0.00000, 0.33718);
	CreateDynamicObject_FR(11711, -337.74960, 1542.45837, 76.96530,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject_FR(19899, -324.07370, 1549.62634, 74.54552,   0.00000, 0.00000, 270.63550);
	CreateDynamicObject_FR(979, -316.73083, 1510.99353, 75.24240,   0.00000, 0.00000, 0.33718);
	CreateDynamicObject_FR(19815, -320.02725, 1550.08923, 76.10072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19327, -319.97485, 1550.08398, 77.37281,   0.00000, 0.00000, 1.00000);
	CreateDynamicObject_FR(19317, -324.03531, 1550.18164, 78.30577,   0.00000, 89.00000, 0.00000);
	CreateDynamicObject_FR(19327, -327.97882, 1549.99341, 77.37281,   0.00000, 0.00000, 1.00000);
	CreateDynamicObject_FR(19815, -328.07169, 1550.07568, 76.12444,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19899, -315.96936, 1549.66699, 74.51344,   -1.26000, 0.12000, 270.63550);
	CreateDynamicObject_FR(19815, -327.98099, 1550.25354, 76.36299,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3472, -342.54916, 1539.13281, 74.06526,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3472, -315.13297, 1509.54736, 74.31946,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(11711, -331.53909, 1550.06921, 77.05875,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19786, -337.81610, 1546.28552, 76.52870,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19899, -303.19058, 1541.13770, 74.53089,   0.00000, 0.00000, 180.09311);
	CreateDynamicObject_FR(1696, -307.68222, 1545.83716, 81.19217,   0.00000, 0.00000, 90.18381);
	CreateDynamicObject_FR(19815, -312.07077, 1550.10168, 76.10931,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3472, -332.84116, 1509.23486, 74.06526,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -311.48306, 1509.77441, 74.55714,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19899, -335.24615, 1549.63184, 74.54871,   0.00000, 0.00000, 270.22943);
	CreateDynamicObject_FR(19327, -311.93579, 1550.38220, 78.57127,   0.00000, 0.00000, 0.12359);
	CreateDynamicObject_FR(1412, -299.52573, 1534.93542, 75.66170,   0.00000, 0.00000, 174.12613);
	CreateDynamicObject_FR(979, -337.04755, 1510.88953, 75.24240,   0.00000, 0.00000, 0.33718);
	CreateDynamicObject_FR(19903, -304.38437, 1545.53442, 74.50317,   0.00000, 0.00000, -132.00000);
	CreateDynamicObject_FR(1237, -310.92944, 1508.62476, 74.55676,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19899, -308.20074, 1549.69617, 74.53753,   0.00000, 0.00000, 270.33246);
	CreateDynamicObject_FR(3524, -308.85266, 1509.11389, 76.55423,   0.00000, 0.00000, 179.55788);
	CreateDynamicObject_FR(19815, -302.73410, 1545.86365, 76.60803,   0.00000, -4.00000, -90.00000);
	CreateDynamicObject_FR(1327, -298.56509, 1538.42200, 74.43922,   0.00000, 88.00000, 0.00000);
	CreateDynamicObject_FR(1327, -298.31339, 1538.28955, 75.79020,   0.00000, 0.00000, -32.00000);
	CreateDynamicObject_FR(7390, -298.60001, 1538.69995, 79.40000,   0.00000, 0.00000, 306.00000);
	CreateDynamicObject_FR(3552, -308.95746, 1507.67615, 76.97553,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1768, -305.11594, 1550.01001, 74.54050,   0.00000, 0.00000, 332.75775);
	CreateDynamicObject_FR(1358, -298.19977, 1541.93933, 75.69190,   0.00000, 0.00000, 355.04691);
	CreateDynamicObject_FR(1237, -308.86337, 1506.44824, 74.56123,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -308.78915, 1505.50977, 74.56743,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -308.71664, 1504.59277, 74.57352,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1412, -300.70328, 1548.90564, 75.66171,   0.00000, 0.00000, 315.28885);
	CreateDynamicObject_FR(979, -305.61142, 1553.91077, 75.24240,   0.00000, 0.00000, 135.83307);
	CreateDynamicObject_FR(1412, -297.03397, 1545.23596, 75.66171,   0.00000, 0.00000, 314.26755);
	CreateDynamicObject_FR(1237, -308.64099, 1503.63611, 74.57985,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3578, -303.04468, 1507.17664, 73.65125,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(14467, -293.39999, 1537.00000, 77.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16091, -302.08655, 1507.82690, 74.17225,   0.00000, 0.00000, 90.54655);
	CreateDynamicObject_FR(1237, -308.61133, 1502.72473, 74.58590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -293.90524, 1541.05225, 74.55210,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3552, -301.97253, 1507.76526, 81.43398,   0.00000, 91.00000, 1.12846);
	CreateDynamicObject_FR(979, -347.18796, 1510.79895, 75.24240,   0.00000, 0.00000, 0.33718);
	CreateDynamicObject_FR(1237, -302.46536, 1506.43726, 74.43104,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -293.10196, 1540.23462, 74.55268,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1412, -293.39413, 1541.52356, 75.66171,   0.00000, 0.00000, 314.26755);
	CreateDynamicObject_FR(1237, -308.63110, 1501.64636, 74.59309,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -311.09082, 1559.53992, 75.24240,   0.00000, 0.00000, 133.00000);
	CreateDynamicObject_FR(1237, -292.46234, 1539.63904, 74.55318,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -302.46796, 1505.44604, 74.55676,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3035, -291.45471, 1535.88440, 74.55422,   0.00000, 0.00000, 13.76618);
	CreateDynamicObject_FR(3578, -299.35852, 1507.20264, 73.65225,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1412, -290.48773, 1535.34814, 75.66170,   0.00000, 0.00000, 194.69290);
	CreateDynamicObject_FR(1237, -308.60333, 1500.50537, 74.60117,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -302.37308, 1504.16174, 74.55676,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3578, -299.20413, 1507.26575, 69.76435,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -302.23798, 1503.01001, 74.55676,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1412, -289.73795, 1537.80212, 75.66171,   0.00000, 0.00000, 314.26755);
	CreateDynamicObject_FR(3524, -295.05905, 1509.03882, 76.55423,   0.00000, 0.00000, 179.55788);
	CreateDynamicObject_FR(11095, -302.92401, 1501.55420, 79.45765,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject_FR(1237, -294.39429, 1509.48962, 74.55676,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -295.20523, 1508.38501, 74.55676,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3472, -351.22794, 1509.58362, 74.06526,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3552, -294.98254, 1507.91089, 76.76080,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -295.46082, 1506.54663, 74.61462,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, -291.34274, 1512.37671, 75.40425,   0.00000, 0.00000, 41.40862);
	CreateDynamicObject_FR(979, -317.31631, 1566.17712, 75.24240,   0.00000, 0.00000, 133.00000);
	CreateDynamicObject_FR(1237, -295.54337, 1505.51843, 74.61462,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, -289.37195, 1514.19116, 75.40425,   0.00000, 0.00000, 41.40862);
	CreateDynamicObject_FR(8620, -352.65741, 1530.33337, 97.38630,   0.00000, 0.00000, 268.99094);
	CreateDynamicObject_FR(1237, -295.46860, 1504.40247, 74.61462,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -297.32837, 1557.76563, 74.34669,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, -307.89987, 1495.46851, 72.67956,   0.00000, 0.00000, 101.94323);
	CreateDynamicObject_FR(979, -307.85471, 1495.07166, 75.26781,   0.00000, 0.00000, 275.52167);
	CreateDynamicObject_FR(1231, -287.69250, 1515.26135, 76.24520,   0.00000, 0.00000, -44.00000);
	CreateDynamicObject_FR(3465, -293.98303, 1555.00220, 75.76357,   0.00000, 0.00000, -47.00000);
	CreateDynamicObject_FR(1237, -295.49777, 1503.34668, 74.61462,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3465, -292.54211, 1553.59155, 75.76357,   0.00000, 0.00000, -47.00000);
	CreateDynamicObject_FR(3465, -300.26541, 1561.46814, 75.76357,   0.00000, 0.00000, -47.00000);
	CreateDynamicObject_FR(1237, -295.46161, 1502.33325, 74.61462,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3465, -301.68930, 1562.74634, 75.76357,   0.00000, 0.00000, -47.00000);
	CreateDynamicObject_FR(1237, -295.39502, 1501.42078, 74.61462,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -295.36530, 1500.39685, 74.61462,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, -282.72769, 1520.34021, 75.40425,   0.00000, 0.00000, 43.48970);
	CreateDynamicObject_FR(979, -317.43686, 1572.63672, 75.24240,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject_FR(1231, -280.38904, 1521.69678, 76.24520,   0.00000, 0.00000, -41.96000);
	CreateDynamicObject_FR(978, -295.04953, 1495.32153, 75.48915,   0.00000, 0.00000, 94.56149);
	CreateDynamicObject_FR(712, -307.45242, 1488.29065, 83.11551,   0.00000, 0.00000, 286.13467);
	CreateDynamicObject_FR(978, -276.09644, 1526.59570, 75.40425,   0.00000, 0.00000, 43.48970);
	CreateDynamicObject_FR(979, -313.17139, 1576.88220, 75.24240,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject_FR(19876, -289.21713, 1565.89636, 76.31750,   0.00000, 0.00000, 44.99609);
	CreateDynamicObject_FR(1231, -272.59183, 1529.11877, 76.24520,   0.00000, 0.00000, -41.96000);
	CreateDynamicObject_FR(712, -293.95401, 1489.15527, 83.11551,   0.00000, 0.00000, 286.13467);
	CreateDynamicObject_FR(979, -306.49957, 1481.18579, 75.14040,   0.00000, 3.00000, 275.57562);
	CreateDynamicObject_FR(978, -269.25668, 1533.06128, 75.40425,   0.00000, 0.00000, 43.48970);
	CreateDynamicObject_FR(979, -287.77182, 1571.22388, 75.24240,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject_FR(979, -281.33539, 1564.81213, 75.24240,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject_FR(978, -293.77701, 1482.90552, 75.17068,   0.00000, 0.00000, 94.61855);
	CreateDynamicObject_FR(979, -275.13095, 1558.55457, 75.24240,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject_FR(979, -294.29639, 1577.74365, 75.24240,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject_FR(979, -306.68054, 1583.39465, 75.24240,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject_FR(1231, -265.15787, 1536.09033, 76.24520,   0.00000, 0.00000, -41.96000);
	CreateDynamicObject_FR(979, -300.33194, 1583.80786, 75.24240,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject_FR(979, -268.67279, 1552.10559, 75.24240,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject_FR(712, -306.69943, 1474.07117, 83.11551,   0.00000, 0.00000, 286.13467);
	CreateDynamicObject_FR(16139, -324.54742, 1472.62671, 59.18480,   357.00000, 0.00000, 289.27420);
	CreateDynamicObject_FR(978, -262.58334, 1539.37988, 75.40425,   0.00000, 0.00000, 43.48970);
	CreateDynamicObject_FR(712, -292.81934, 1476.31482, 83.11551,   0.00000, 0.00000, 286.13467);
	CreateDynamicObject_FR(979, -262.66571, 1546.07788, 75.24240,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject_FR(16139, -348.98578, 1476.38269, 49.26484,   357.00000, 0.00000, 144.76529);
	CreateDynamicObject_FR(1231, -258.43246, 1542.27222, 76.24520,   0.00000, 0.00000, -41.96000);
	CreateDynamicObject_FR(979, -305.34592, 1466.62793, 74.42200,   0.00000, 3.00000, 275.39392);
	CreateDynamicObject_FR(978, -292.71591, 1469.86292, 74.56990,   0.00000, -4.00000, 95.12739);
	CreateDynamicObject_FR(19841, -369.39563, 1482.28845, 62.94220,   -8.00000, 0.00000, 10.00000);
	CreateDynamicObject_FR(1237, -353.53540, 1470.42297, 63.05825,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -354.67627, 1470.77649, 63.00712,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -352.39865, 1469.43567, 63.12023,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -351.36111, 1468.80627, 63.18785,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -350.30994, 1468.14050, 63.25557,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -355.95654, 1470.96875, 62.88479,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3511, -342.31506, 1465.00867, 63.14698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -349.21375, 1467.28796, 63.32187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -357.11072, 1471.10010, 62.91362,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -348.05234, 1466.31458, 63.39038,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -358.27890, 1471.14319, 62.85793,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -346.74597, 1465.38464, 63.46773,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -359.41898, 1471.16748, 62.79695,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -345.29800, 1464.23828, 63.51566,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -360.62802, 1471.16199, 62.71651,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -344.32767, 1463.16125, 63.61407,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -361.84726, 1471.22693, 62.62877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -343.47623, 1461.91699, 63.73010,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -363.06641, 1471.14771, 62.53043,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(712, -305.21240, 1460.09265, 83.11551,   0.00000, 0.00000, 286.13467);
	CreateDynamicObject_FR(1237, -342.61575, 1460.69653, 63.84180,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -364.39966, 1471.10132, 62.42584,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -341.74509, 1459.44275, 63.94360,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -365.86389, 1470.92456, 62.30231,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(712, -291.50665, 1462.68042, 82.91047,   0.00000, 0.00000, 286.13467);
	CreateDynamicObject_FR(1237, -367.12512, 1470.76648, 62.19116,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19841, -378.19116, 1480.56604, 62.94220,   -8.00000, 0.00000, 10.00000);
	CreateDynamicObject_FR(1237, -368.24890, 1470.59412, 62.08937,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -369.38901, 1470.41833, 61.95150,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -370.49918, 1470.10950, 61.85651,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -338.49530, 1454.48560, 65.35480,   0.00000, 6.00000, 120.00000);
	CreateDynamicObject_FR(1237, -371.81760, 1469.67932, 61.76859,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -304.01535, 1452.95581, 73.60889,   0.00000, 3.00000, 275.39392);
	CreateDynamicObject_FR(1237, -372.99286, 1469.28809, 61.64860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -356.72943, 1457.88391, 63.19981,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, -291.49603, 1455.57092, 73.75473,   0.00000, -3.00000, 94.72820);
	CreateDynamicObject_FR(1237, -358.07263, 1458.27747, 63.07310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -355.75113, 1456.99487, 63.48480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -374.10089, 1468.75281, 61.53162,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -359.48215, 1458.49316, 62.97376,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -355.00851, 1455.82788, 63.77121,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -360.79205, 1458.53467, 62.85621,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19841, -385.46997, 1478.58374, 62.94220,   -8.00000, 0.00000, 10.00000);
	CreateDynamicObject_FR(1237, -375.39331, 1468.15002, 61.39722,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -354.19263, 1454.53076, 63.94006,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -362.37735, 1458.49780, 62.68048,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -353.42728, 1453.23035, 64.10773,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -363.67728, 1458.33691, 62.54261,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -376.65039, 1467.48450, 61.28094,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -365.00656, 1458.39783, 62.34418,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -352.60242, 1452.05762, 64.35385,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -334.21939, 1446.45093, 66.32570,   0.00000, 6.00000, -244.00000);
	CreateDynamicObject_FR(1237, -377.71280, 1466.74500, 61.18531,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -366.28735, 1458.20532, 62.14509,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -351.81635, 1450.78809, 64.35385,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -367.52249, 1457.85120, 61.92087,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(712, -304.22659, 1446.17114, 83.11551,   0.00000, 0.00000, 286.13467);
	CreateDynamicObject_FR(1237, -378.73770, 1465.96021, 61.08932,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -368.85135, 1457.42456, 61.66991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -379.80997, 1465.19238, 60.99239,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -369.69791, 1456.84167, 61.47372,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -348.89151, 1446.33081, 65.63790,   0.00000, -5.00000, -62.00000);
	CreateDynamicObject_FR(1237, -380.88507, 1464.09290, 60.86392,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(712, -290.33496, 1447.40540, 83.11551,   0.00000, 0.00000, 286.13467);
	CreateDynamicObject_FR(3472, -364.95602, 1452.74878, 59.90353,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -371.01239, 1456.03162, 61.20993,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -381.89108, 1462.90332, 60.78946,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -371.89328, 1454.90234, 60.93649,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -382.77014, 1461.56738, 60.70934,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -372.65576, 1453.84106, 60.85569,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -372.56393, 1453.71851, 60.76078,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -330.25021, 1438.25623, 66.99120,   0.00000, 4.00000, -244.00000);
	CreateDynamicObject_FR(979, -303.07690, 1439.48438, 73.60889,   0.00000, 3.00000, 274.47772);
	CreateDynamicObject_FR(1237, -373.06610, 1452.53052, 60.63374,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -383.65128, 1460.37842, 60.64135,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -344.75040, 1438.51746, 66.62340,   0.00000, -8.00000, -62.00000);
	CreateDynamicObject_FR(1237, -373.26245, 1451.34143, 60.58733,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -384.17242, 1458.97791, 60.54448,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, -290.21146, 1440.30811, 69.57742,   0.00000, 0.00000, 93.86734);
	CreateDynamicObject_FR(978, -290.24503, 1439.98816, 73.14567,   0.00000, -3.00000, 94.72820);
	CreateDynamicObject_FR(1237, -373.37183, 1450.07202, 60.54519,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -384.91528, 1457.50842, 60.50261,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -373.15384, 1448.79175, 60.45526,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -372.95190, 1447.56433, 60.37806,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -385.20126, 1456.17346, 60.47779,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -372.66153, 1446.42395, 60.31372,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -385.61911, 1454.75208, 60.56448,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -372.16721, 1445.30713, 60.26167,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(712, -303.00281, 1432.73621, 81.21819,   0.00000, 0.00000, 286.13467);
	CreateDynamicObject_FR(979, -326.71750, 1430.22693, 67.73710,   0.00000, 6.00000, 113.00000);
	CreateDynamicObject_FR(1237, -385.89993, 1453.32275, 60.42312,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -386.16595, 1452.25232, 60.41322,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -340.76120, 1430.42236, 67.59760,   0.00000, -4.00000, 294.34741);
	CreateDynamicObject_FR(1237, -386.44193, 1451.11121, 60.40029,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(712, -289.02509, 1433.18884, 81.21819,   0.00000, 0.00000, 286.13467);
	CreateDynamicObject_FR(979, -370.17889, 1440.10718, 60.26711,   0.00000, -3.00000, 114.30527);
	CreateDynamicObject_FR(1237, -386.20801, 1449.76855, 60.36636,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -385.93555, 1448.39502, 60.32924,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -385.57358, 1447.16821, 60.28728,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -385.37018, 1445.90186, 60.25645,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, -291.58441, 1428.67932, 68.37504,   0.00000, 0.00000, 91.46777);
	CreateDynamicObject_FR(3511, -386.73193, 1446.02698, 59.33695,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -301.57086, 1425.36218, 72.67522,   0.00000, 3.00000, 272.73505);
	CreateDynamicObject_FR(1237, -385.06161, 1444.46533, 60.22786,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -384.71094, 1442.81152, 60.16674,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -322.99869, 1421.75378, 68.87770,   0.00000, 8.00000, 116.00000);
	CreateDynamicObject_FR(979, -366.45102, 1431.67981, 59.76040,   0.00000, -3.00000, 113.00000);
	CreateDynamicObject_FR(979, -336.95834, 1422.01794, 68.41530,   0.00000, -6.00000, 294.40146);
	CreateDynamicObject_FR(978, -289.02847, 1425.48523, 72.43256,   0.00000, -3.00000, 94.72820);
	CreateDynamicObject_FR(979, -382.23981, 1437.21533, 60.34930,   0.00000, 0.00000, -66.00000);
	CreateDynamicObject_FR(3379, -302.10001, 1420.40002, 71.50000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(712, -302.18832, 1419.40833, 80.49684,   0.00000, 0.00000, 286.13467);
	CreateDynamicObject_FR(3379, -288.10001, 1421.19995, 71.60000,   0.00000, 0.00000, 184.00000);
	CreateDynamicObject_FR(979, -362.71170, 1423.55042, 59.32680,   0.00000, -2.00000, 117.00000);
	CreateDynamicObject_FR(11500, -304.97217, 1416.61694, 68.84729,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -378.68674, 1429.20178, 60.05990,   0.00000, 4.00000, -66.00000);
	CreateDynamicObject_FR(979, -318.82599, 1413.72339, 69.89310,   0.00000, 6.00000, -240.00000);
	CreateDynamicObject_FR(979, -333.07269, 1413.92407, 69.40900,   0.00000, -7.00000, -62.00000);
	CreateDynamicObject_FR(712, -288.24069, 1418.13599, 80.49684,   0.00000, 0.00000, 286.13467);
	CreateDynamicObject_FR(979, -301.35651, 1412.99487, 72.26919,   0.00000, 3.00000, 267.20975);
	CreateDynamicObject_FR(979, -358.47824, 1415.72473, 58.81650,   0.00000, -3.00000, 120.00000);
	CreateDynamicObject_FR(979, -374.78409, 1421.01672, 59.35980,   0.00000, 4.00000, -62.00000);
	CreateDynamicObject_FR(979, -315.69171, 1408.41138, 70.53092,   0.00000, 6.00000, 120.99065);
	CreateDynamicObject_FR(1237, -405.80698, 1448.45239, 35.13434,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -406.91757, 1449.41528, 34.98837,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3472, -375.07886, 1419.49597, 57.70483,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -408.21735, 1450.26636, 34.83668,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -402.15512, 1443.39172, 36.43310,   0.00000, 6.00000, -238.00000);
	CreateDynamicObject_FR(1237, -301.56665, 1407.93335, 71.49928,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -409.30862, 1450.90637, 34.72599,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -328.81488, 1406.05261, 70.25240,   0.00000, -4.00000, 299.02203);
	CreateDynamicObject_FR(1237, -410.38327, 1451.58643, 34.60052,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -411.49344, 1452.39648, 34.48500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -301.94473, 1406.66394, 71.26369,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -413.01962, 1452.81995, 34.33869,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, -288.57346, 1409.01648, 72.05248,   0.00000, -1.00000, 86.11029);
	CreateDynamicObject_FR(1237, -414.21054, 1453.20654, 34.22659,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -312.93710, 1404.13745, 70.54160,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -397.92587, 1435.56860, 37.23240,   0.00000, 4.00000, 116.00000);
	CreateDynamicObject_FR(1237, -302.37369, 1405.08850, 71.27262,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -415.60953, 1453.71631, 34.09688,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -353.92169, 1407.87720, 58.29450,   0.00000, -4.00000, 120.00000);
	CreateDynamicObject_FR(979, -370.37021, 1412.72583, 58.96280,   0.00000, 0.00000, -62.00000);
	CreateDynamicObject_FR(1237, -311.97272, 1402.84644, 70.79507,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -416.87921, 1453.97449, 33.96665,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -303.25314, 1403.48035, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -418.21381, 1454.12646, 33.87338,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -304.07953, 1402.62378, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -311.18094, 1401.76636, 70.94073,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -310.10403, 1401.55432, 71.05400,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -305.15161, 1401.98242, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -308.90784, 1401.33789, 71.14094,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -306.40396, 1401.56384, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -419.47055, 1454.28687, 33.78428,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -307.52933, 1401.25378, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -393.98123, 1427.32727, 38.06100,   0.00000, 6.00000, 116.00000);
	CreateDynamicObject_FR(1237, -420.90808, 1454.39331, 33.70422,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, -324.71100, 1399.36243, 71.24126,   0.00000, -4.00000, 301.00000);
	CreateDynamicObject_FR(1237, -422.05344, 1454.18994, 33.61041,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -440.52890, 1485.98315, 33.80170,   0.00000, 0.00000, 93.44770);
	CreateDynamicObject_FR(1237, -423.29468, 1454.10461, 33.51854,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -366.09399, 1404.94189, 58.49330,   0.00000, 4.00000, -60.00000);
	CreateDynamicObject_FR(3511, -290.57224, 1400.33105, 69.87893,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -424.53998, 1453.89966, 33.44655,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -349.31464, 1399.89612, 57.66980,   0.00000, -4.00000, 120.00000);
	CreateDynamicObject_FR(979, -389.93295, 1419.21130, 38.99160,   0.00000, 6.00000, 117.00000);
	CreateDynamicObject_FR(1237, -426.11407, 1453.81799, 33.39771,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3472, -325.38354, 1394.94409, 70.80000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -414.70291, 1439.20898, 35.22743,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -415.60342, 1440.00854, 34.95620,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -321.05179, 1394.36218, 70.80264,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -411.72089, 1435.08240, 36.56550,   0.00000, -6.00000, -62.00000);
	CreateDynamicObject_FR(1237, -291.84973, 1397.81921, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -416.80798, 1440.39893, 34.73984,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -427.55789, 1453.32678, 33.31863,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -417.87424, 1440.97717, 34.44584,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -320.11075, 1393.56042, 70.76587,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -439.50919, 1471.81274, 33.79850,   0.00000, 0.00000, 94.60430);
	CreateDynamicObject_FR(1237, -292.67966, 1396.42102, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -419.41071, 1441.45215, 34.09540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -318.80243, 1392.53101, 70.91295,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -429.06171, 1453.17395, 33.26575,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -293.54205, 1395.04614, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -420.83923, 1441.44202, 33.84358,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -317.55844, 1391.54260, 70.96085,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -407.49908, 1426.92517, 37.53300,   0.00000, -6.00000, -63.00000);
	CreateDynamicObject_FR(1237, -294.67563, 1394.10010, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -430.53262, 1452.68140, 33.17675,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -385.85440, 1410.97437, 40.01550,   0.00000, 6.00000, -244.00000);
	CreateDynamicObject_FR(979, -361.60590, 1397.26782, 57.94230,   0.00000, 4.00000, -60.00000);
	CreateDynamicObject_FR(1237, -295.72903, 1393.13086, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -422.19321, 1441.35828, 33.61425,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -316.39868, 1390.58044, 71.07143,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -296.74213, 1392.18030, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -315.10709, 1389.68591, 71.14986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -431.90796, 1451.98108, 33.12559,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -423.36273, 1440.88245, 33.51509,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -344.82861, 1392.12927, 57.08580,   0.00000, -4.00000, 120.00000);
	CreateDynamicObject_FR(1237, -297.91406, 1391.29761, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -299.15521, 1390.77209, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -300.41873, 1390.19983, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -313.58008, 1388.69324, 71.20468,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -312.00778, 1388.54797, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -301.70291, 1389.63171, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -433.16772, 1451.28174, 33.03666,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -310.49857, 1388.52026, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -437.35889, 1456.89734, 33.90252,   0.00000, 0.00000, 100.01482);
	CreateDynamicObject_FR(1237, -305.95587, 1388.84753, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -403.36478, 1418.78687, 38.47330,   0.00000, -6.00000, -63.00000);
	CreateDynamicObject_FR(1237, -309.02591, 1388.51489, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -303.07959, 1389.20947, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -424.91266, 1440.25464, 33.38898,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -304.49686, 1388.92639, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -307.41309, 1388.51855, 71.28059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3511, -321.42612, 1387.50171, 69.87893,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -434.37601, 1450.69580, 32.97503,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -426.26984, 1439.66809, 33.32021,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -381.85416, 1402.81055, 41.10110,   0.00000, 8.00000, -244.00000);
	CreateDynamicObject_FR(1237, -435.54214, 1450.12549, 32.91280,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -427.27811, 1438.92407, 33.31519,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, -452.21179, 1477.97107, 34.20680,   0.00000, 0.00000, 274.34891);
	CreateDynamicObject_FR(3472, -360.74051, 1390.59033, 57.05433,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -357.22861, 1389.28967, 57.27250,   0.00000, 4.00000, -62.00000);
	CreateDynamicObject_FR(1237, -428.43991, 1438.01941, 33.28959,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -399.39597, 1410.50720, 39.53130,   0.00000, -6.00000, -66.00000);
	CreateDynamicObject_FR(1237, -429.18729, 1437.07068, 33.26375,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -340.47000, 1384.51086, 56.57430,   0.00000, -3.00000, 120.00000);
	CreateDynamicObject_FR(1237, -429.92264, 1435.98633, 33.22441,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -430.40213, 1434.84229, 33.22441,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -377.88400, 1394.70972, 42.44670,   0.00000, 8.00000, 116.00000);
	CreateDynamicObject_FR(978, -450.79871, 1463.06543, 33.89480,   0.00000, 0.00000, 278.17160);
	CreateDynamicObject_FR(1237, -430.82178, 1433.75500, 33.22441,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -395.41443, 1402.33960, 40.66390,   0.00000, -8.00000, -62.00000);
	CreateDynamicObject_FR(1237, -431.30215, 1432.44922, 33.22441,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -353.05511, 1381.52368, 56.70480,   -2.00000, 2.00000, -60.00000);
	CreateDynamicObject_FR(979, -336.10349, 1376.68481, 56.07430,   0.00000, -3.00000, 120.00000);
	CreateDynamicObject_FR(979, -374.16061, 1386.96191, 43.63497,   0.00000, 8.00000, 115.35760);
	CreateDynamicObject_FR(978, -448.21490, 1447.79053, 33.38470,   0.00000, 3.00000, 280.00000);
	CreateDynamicObject_FR(979, -391.41809, 1394.22229, 41.76370,   0.00000, -6.00000, -65.00000);
	CreateDynamicObject_FR(3505, -371.55206, 1382.83118, 43.38332,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -348.53629, 1373.85620, 56.27760,   0.00000, 2.00000, -60.00000);
	CreateDynamicObject_FR(978, -445.03455, 1434.46167, 32.95508,   0.00000, 0.00000, 285.35181);
	CreateDynamicObject_FR(979, -387.48071, 1386.01721, 42.71840,   0.00000, -6.00000, -63.00000);
	CreateDynamicObject_FR(979, -369.83838, 1378.33643, 44.52699,   0.00000, 7.00000, 115.75156);
	CreateDynamicObject_FR(979, -331.55429, 1368.70593, 55.48960,   0.00000, -4.00000, 119.00000);
	CreateDynamicObject_FR(1649, -445.52390, 1430.13916, 27.40249,   0.00000, 0.00000, 15.01389);
	CreateDynamicObject_FR(979, -383.48441, 1378.16956, 43.68100,   0.00000, -6.00000, -62.00000);
	CreateDynamicObject_FR(979, -343.89484, 1365.71350, 55.90880,   0.00000, 5.00000, -62.00000);
	CreateDynamicObject_FR(979, -365.64279, 1370.51172, 45.61830,   0.00000, 5.00000, 122.00000);
	CreateDynamicObject_FR(979, -327.08389, 1360.51904, 54.90510,   0.00000, -4.00000, 120.00000);
	CreateDynamicObject_FR(979, -379.29269, 1370.34131, 44.72240,   0.00000, -7.00000, -62.00000);
	CreateDynamicObject_FR(979, -360.99673, 1362.67822, 46.53060,   0.00000, 6.00000, 120.00000);
	CreateDynamicObject_FR(979, -339.63171, 1357.97144, 54.99680,   0.00000, 6.00000, -61.00000);
	CreateDynamicObject_FR(979, -375.13589, 1362.56726, 45.72610,   0.00000, -6.00000, -62.00000);
	CreateDynamicObject_FR(979, -322.42969, 1352.42078, 54.32750,   0.00000, -3.00000, 120.00000);
	CreateDynamicObject_FR(979, -356.67139, 1354.85474, 47.57959,   0.00000, 7.00000, -242.00000);
	CreateDynamicObject_FR(979, -335.57571, 1350.88953, 54.55060,   0.00000, 2.00000, -59.00000);
	CreateDynamicObject_FR(979, -370.74188, 1354.47461, 46.75670,   0.00000, -6.00000, -62.00000);
	CreateDynamicObject_FR(3472, -376.23993, 1354.15808, 45.46935,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -318.15576, 1344.30200, 53.90520,   0.00000, -3.00000, 116.00000);
	CreateDynamicObject_FR(16139, -342.11804, 1347.76868, 37.02342,   0.00000, 0.00000, 274.00000);
	CreateDynamicObject_FR(979, -352.33224, 1346.66479, 48.66860,   0.00000, 6.00000, 117.70042);
	CreateDynamicObject_FR(979, -331.38330, 1343.27527, 54.32893,   0.00000, 0.00000, -62.00000);
	CreateDynamicObject_FR(979, -366.40918, 1346.65955, 47.81510,   0.00000, -7.00000, -60.00000);
	CreateDynamicObject_FR(979, -328.78433, 1337.68445, 54.00420,   -2.00000, 4.00000, -66.00000);
	CreateDynamicObject_FR(979, -347.71716, 1338.65295, 49.51503,   0.00000, 4.00000, -238.00000);
	CreateDynamicObject_FR(979, -314.74869, 1335.56860, 53.60470,   0.00000, -3.00000, 106.00000);
	CreateDynamicObject_FR(1237, -186.58719, 1389.64929, 64.29570,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -362.03720, 1338.93262, 48.85100,   0.00000, -5.00000, -60.00000);
	CreateDynamicObject_FR(1237, -327.17792, 1333.28467, 53.19714,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1238, -324.17252, 1333.66455, 48.39896,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -326.85645, 1331.95996, 53.11916,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -326.43802, 1330.52515, 53.04877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -313.10461, 1330.23682, 52.90441,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -342.50821, 1331.01782, 50.21230,   0.00000, 4.00000, 126.92231);
	CreateDynamicObject_FR(1237, -326.22208, 1329.00549, 52.99281,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -313.30029, 1328.83704, 52.90441,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -357.37823, 1331.35059, 49.66640,   0.00000, -5.00000, -57.00000);
	CreateDynamicObject_FR(1237, -326.23724, 1327.68701, 52.85142,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -313.45660, 1327.49597, 52.90441,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3472, -330.66885, 1327.44299, 51.71781,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -326.28510, 1326.23718, 52.69195,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -339.28906, 1327.02393, 50.20749,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -313.53021, 1326.21228, 52.82860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -338.29752, 1325.97217, 50.29076,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -326.48459, 1324.86707, 52.47134,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -313.66159, 1324.75806, 52.82860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -337.38165, 1325.14160, 50.17482,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -327.21783, 1323.68323, 52.20632,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -336.22647, 1324.08325, 50.51177,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -313.84311, 1323.32495, 52.75149,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -334.94339, 1323.12976, 50.67439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -328.30719, 1322.70117, 51.87754,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -333.60675, 1322.66797, 50.83743,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -329.60217, 1324.04517, 38.62057,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -329.59006, 1322.02026, 51.51934,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -332.34332, 1322.16907, 51.01312,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -331.04877, 1321.96484, 51.23005,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -314.00333, 1321.76855, 52.65512,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -352.38181, 1323.77136, 50.32820,   0.00000, -2.00000, -56.00000);
	CreateDynamicObject_FR(1237, -314.46921, 1320.32458, 52.53944,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -315.29193, 1319.12048, 52.50090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -316.07639, 1317.93237, 52.42379,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -316.71597, 1316.60254, 52.33513,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -346.71091, 1316.87939, 50.63590,   0.00000, -2.00000, -45.00000);
	CreateDynamicObject_FR(1237, -317.60120, 1315.30298, 52.22547,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -318.50339, 1314.04199, 52.13412,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -319.62442, 1313.12317, 51.99058,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -320.88037, 1312.32251, 51.92468,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -342.50436, 1313.22913, 50.70772,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -322.25095, 1311.59229, 51.74163,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -341.10455, 1312.27197, 50.70772,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -339.62817, 1311.52637, 50.70772,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -323.84985, 1310.75757, 51.74163,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -337.88559, 1310.87756, 50.80601,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -325.65231, 1310.03772, 51.74163,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -336.36984, 1310.23352, 50.90004,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -327.47827, 1309.52734, 51.47581,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -329.31931, 1309.50171, 51.37339,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -330.95480, 1309.49109, 51.30512,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -332.78656, 1309.46753, 51.14793,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1237, -334.71576, 1309.55103, 51.03506,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, -410.39700, 1739.48999, 41.78070,   0.00000, 2.00000, 257.38669);
	CreateDynamicObject_FR(978, -407.93930, 1747.35608, 42.14890,   0.00000, 4.00000, 247.21291);
	CreateDynamicObject_FR(978, -404.34760, 1755.19373, 42.76290,   0.00000, 4.00000, 242.68449);
	CreateDynamicObject_FR(710, -73.84000, 1514.93994, 39.40000,   0.00000, 0.00000, 0.31000);
	CreateDynamicObject_FR(978, -433.91794, 1756.22913, 71.89458,   0.00000, 0.00000, 29.60186);
	CreateDynamicObject_FR(979, -441.15674, 1753.06934, 70.16451,   0.00000, 0.00000, 10.88246);
	CreateDynamicObject_FR(978, -441.32681, 1753.24585, 71.89458,   0.00000, 0.00000, 13.24853);
	CreateDynamicObject_FR(18228, -76.35000, 1518.67004, 18.11000,   0.00000, 0.00000, 86.28000);
	CreateDynamicObject_FR(18228, -77.23000, 1559.15002, 18.51000,   0.00000, 0.00000, 45.73000);
	CreateDynamicObject_FR(978, -427.13574, 1761.39490, 71.97329,   0.00000, 0.00000, 42.36019);
	CreateDynamicObject_FR(978, -449.25131, 1752.20154, 71.79155,   0.00000, 0.00000, 0.27280);
	CreateDynamicObject_FR(978, -421.44876, 1767.67285, 71.97329,   0.00000, 0.00000, 54.19941);
	CreateDynamicObject_FR(18228, -71.28000, 1515.88000, 11.74000,   0.00000, 0.00000, 63.34000);
	CreateDynamicObject_FR(978, -457.67831, 1753.88733, 71.89351,   0.00000, 2.00000, 337.00000);
	CreateDynamicObject_FR(978, -417.69247, 1775.54578, 71.61851,   0.00000, 4.00000, 74.00000);
	CreateDynamicObject_FR(978, -462.39813, 1755.98706, 71.89351,   0.00000, 2.00000, 331.49542);
	CreateDynamicObject_FR(18228, -64.90000, 1497.07996, 18.11000,   0.00000, 0.00000, 86.28000);
	CreateDynamicObject_FR(710, -61.11000, 1496.33997, 39.40000,   0.00000, 0.00000, 0.31000);
	CreateDynamicObject_FR(979, -371.76279, 1790.49634, 47.36920,   0.00000, -5.00000, 74.00000);
	CreateDynamicObject_FR(18225, -63.27000, 1560.20996, 21.24000,   0.00000, 0.00000, 108.83000);
	CreateDynamicObject_FR(710, -55.47000, 1512.88000, 39.40000,   0.00000, 0.00000, 0.31000);
	CreateDynamicObject_FR(978, -416.30069, 1784.43701, 70.90028,   0.00000, 6.00000, 87.00000);
	CreateDynamicObject_FR(19841, -54.70000, 1551.64001, 37.53000,   0.00000, 0.00000, 70.93000);
	CreateDynamicObject_FR(19129, -59.16000, 1545.52002, 11.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, -467.90686, 1760.68018, 72.30461,   0.00000, 4.00000, 306.69418);
	CreateDynamicObject_FR(18228, -62.16000, 1584.63000, 15.62000,   0.00000, 0.00000, 15.72000);
	CreateDynamicObject_FR(710, -53.18000, 1502.26001, 32.96000,   0.00000, 0.00000, 0.31000);
	CreateDynamicObject_FR(979, -370.23041, 1799.59412, 48.08520,   0.00000, -4.00000, 88.00000);
	CreateDynamicObject_FR(19841, -50.79000, 1557.33997, 35.30000,   0.00000, 0.00000, 70.93000);
	CreateDynamicObject_FR(978, -416.60870, 1793.43909, 69.98320,   0.00000, 6.00000, 96.65310);
	CreateDynamicObject_FR(710, -52.04000, 1479.72998, 39.72000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18228, -56.81000, 1481.03003, 10.53000,   0.00000, 0.00000, 98.64000);
	CreateDynamicObject_FR(726, -52.63000, 1533.32996, 11.59000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(710, -47.16000, 1493.25000, 40.93000,   0.00000, 0.00000, 0.31000);
	CreateDynamicObject_FR(7916, -43.09000, 1511.55005, 17.40000,   0.00000, 0.00000, 98.57000);
	CreateDynamicObject_FR(710, -41.13000, 1496.23999, 29.34000,   0.00000, 0.00000, 0.31000);
	CreateDynamicObject_FR(7916, -42.43000, 1501.06995, 17.40000,   0.00000, 0.00000, 117.66000);
	CreateDynamicObject_FR(710, -42.28000, 1471.57996, 42.67000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, -40.01000, 1545.50000, 11.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19840, -41.81000, 1473.90002, 34.91000,   0.00000, 0.00000, 150.57001);
	CreateDynamicObject_FR(19841, -38.26000, 1546.26001, 14.66000,   0.00000, 0.00000, 50.66000);
	CreateDynamicObject_FR(18228, -40.11000, 1579.10999, 17.47000,   0.00000, 0.00000, 7.68000);
	CreateDynamicObject_FR(18228, -47.09000, 1470.69995, 18.11000,   0.00000, 0.00000, 103.94000);
	CreateDynamicObject_FR(19842, -42.52000, 1478.34998, 25.31000,   -13.00000, 0.00000, 304.00000);
	CreateDynamicObject_FR(19841, -33.86000, 1552.67004, 14.66000,   0.00000, 0.00000, 72.19000);
	CreateDynamicObject_FR(18225, -36.52000, 1589.56995, 16.27000,   0.00000, 0.00000, 88.00000);
	CreateDynamicObject_FR(19841, -31.86000, 1559.54004, 14.66000,   0.00000, 0.00000, 77.22000);
	CreateDynamicObject_FR(18228, -41.10000, 1465.57996, 15.78000,   0.00000, 0.00000, 103.94000);
	CreateDynamicObject_FR(710, -33.54000, 1464.28003, 42.67000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(710, -30.13000, 1474.14001, 40.93000,   0.00000, 0.00000, 0.31000);
	CreateDynamicObject_FR(7916, -30.27000, 1489.12000, 14.82000,   0.00000, 0.00000, 127.28000);
	CreateDynamicObject_FR(18228, -28.50000, 1584.57996, 12.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7916, -26.43000, 1484.10999, 14.82000,   0.00000, 0.00000, 127.28000);
	CreateDynamicObject_FR(19129, -20.26000, 1545.46997, 11.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, -20.22000, 1525.63000, 11.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(710, -23.37000, 1476.26001, 29.34000,   0.00000, 0.00000, 0.31000);
	CreateDynamicObject_FR(19129, -20.34000, 1565.35999, 11.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(9123, -17.88000, 1521.10999, 16.94000,   0.00000, 0.00000, 269.48999);
	CreateDynamicObject_FR(19129, -20.32000, 1505.72998, 11.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3524, -11.47000, 1560.34998, 39.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(710, -20.43000, 1466.56995, 34.53000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, -9.12000, 1564.73999, 38.72000,   -90.00000, 0.00000, 359.09000);
	CreateDynamicObject_FR(3524, -7.06000, 1560.57996, 39.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(726, -23.52000, 1456.06995, 24.12000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(710, -22.55000, 1451.88000, 34.53000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, -10.20000, 1562.31006, 21.29000,   0.00000, 90.00000, 180.41000);
	CreateDynamicObject_FR(2780, -12.69000, 1560.05005, 11.51000,   -70.00000, 0.00000, 303.41000);
	CreateDynamicObject_FR(3920, -5.21000, 1559.51001, 40.57000,   0.00000, 0.00000, 1.63000);
	CreateDynamicObject_FR(3920, -5.22000, 1564.59998, 40.38000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3920, -5.18000, 1559.20996, 35.38000,   0.00000, 0.00000, 1.63000);
	CreateDynamicObject_FR(3458, -9.03000, 1561.31995, 21.07000,   0.00000, 90.00000, 271.45001);
	CreateDynamicObject_FR(19128, -5.12000, 1564.80005, 38.72000,   -90.00000, 0.00000, 1.21000);
	CreateDynamicObject_FR(3458, -9.09000, 1563.28003, 21.18000,   0.00000, 90.00000, 89.07000);
	CreateDynamicObject_FR(3920, -5.22000, 1564.59998, 35.75000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18830, -10.43000, 1571.57996, 18.43000,   0.00000, -145.00000, 271.41000);
	CreateDynamicObject_FR(3458, -7.96000, 1562.12000, 21.07000,   0.00000, 90.00000, 0.77000);
	CreateDynamicObject_FR(3524, -2.56000, 1560.66003, 39.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3920, -2.66000, 1564.59998, 40.38000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3920, -0.64000, 1559.56006, 40.46000,   0.00000, 0.00000, 1.63000);
	CreateDynamicObject_FR(19128, -1.24000, 1564.82996, 38.72000,   -90.00000, 0.00000, 1.21000);
	CreateDynamicObject_FR(3920, -0.64000, 1559.56006, 35.38000,   0.00000, 0.00000, 1.63000);
	CreateDynamicObject_FR(3524, 2.53000, 1560.56995, 39.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, 2.71000, 1564.95996, 38.72000,   -90.00000, 0.00000, 1.21000);
	CreateDynamicObject_FR(18228, -21.81000, 1444.97998, 5.35000,   0.00000, 0.00000, 109.01000);
	CreateDynamicObject_FR(19129, -0.43000, 1545.44995, 11.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, -0.55000, 1565.32996, 11.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, 6.68000, 1565.02002, 38.72000,   -90.00000, 0.00000, 1.21000);
	CreateDynamicObject_FR(3524, 7.71000, 1560.71997, 39.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18830, 0.96000, 1571.88000, 18.43000,   0.00000, -145.00000, 271.41000);
	CreateDynamicObject_FR(3920, 6.45000, 1564.80005, 35.75000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 8.44000, 1562.79004, 39.64000,   0.00000, 0.00000, 1.43000);
	CreateDynamicObject_FR(3458, 8.46000, 1561.81995, 38.40000,   90.00000, 0.00000, 1.54000);
	CreateDynamicObject_FR(3458, 8.44000, 1562.84998, 37.30000,   -180.00000, 0.00000, 1.04000);
	CreateDynamicObject_FR(3458, 8.61000, 1563.57996, 38.40000,   90.00000, 0.00000, 181.23000);
	CreateDynamicObject_FR(18228, -16.33000, 1443.29004, 5.35000,   0.00000, 0.00000, 109.01000);
	CreateDynamicObject_FR(3920, 10.40312, 1559.85242, 40.46000,   0.00000, 0.00000, 1.63000);
	CreateDynamicObject_FR(3920, 10.09000, 1565.13000, 40.38000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, 10.61000, 1565.20996, 38.72000,   -90.00000, 0.00000, 1.21000);
	CreateDynamicObject_FR(3920, 11.83000, 1559.96997, 35.38000,   0.00000, 0.00000, 1.63000);
	CreateDynamicObject_FR(3524, 13.37000, 1560.71997, 39.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18784, -1.57000, 1605.42004, 26.78000,   0.00000, -13.00000, 268.00000);
	CreateDynamicObject_FR(19885, 7.99000, 1505.72998, 12.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, 14.51000, 1565.21997, 38.72000,   -90.00000, 0.00000, 1.21000);
	CreateDynamicObject_FR(3920, 15.34000, 1565.18994, 35.75000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18228, 2.31000, 1587.45996, 6.10000,   0.00000, 0.00000, 327.87000);
	CreateDynamicObject_FR(3524, 18.14000, 1561.05005, 39.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19128, 18.13000, 1565.26001, 38.72000,   -90.00000, 0.00000, 1.21000);
	CreateDynamicObject_FR(18830, 12.66000, 1572.19995, 18.43000,   0.00000, -145.00000, 271.41000);
	CreateDynamicObject_FR(3920, 22.38000, 1560.26001, 40.46000,   0.00000, 0.00000, 1.63000);
	CreateDynamicObject_FR(19884, 8.24000, 1460.71997, 15.79000,   -19.00000, 0.00000, 1.00000);
	CreateDynamicObject_FR(19128, 21.90000, 1565.40002, 38.72000,   -90.00000, 0.00000, 1.21000);
	CreateDynamicObject_FR(3920, 22.46000, 1560.15002, 35.38000,   0.00000, 0.00000, 1.63000);
	CreateDynamicObject_FR(3920, 22.48000, 1565.31995, 40.38000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3524, 23.71000, 1561.28003, 39.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3920, 22.41000, 1565.43994, 35.75000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, 19.40000, 1545.34998, 11.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18228, 8.61000, 1590.58997, 8.41000,   0.00000, 0.00000, 327.87000);
	CreateDynamicObject_FR(19128, 25.89000, 1565.54004, 38.72000,   -90.00000, 0.00000, 1.21000);
	CreateDynamicObject_FR(19129, 19.34000, 1565.14001, 11.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3524, 28.21000, 1561.41003, 39.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18228, 3.73000, 1433.33997, 7.04000,   0.00000, 0.00000, 152.45000);
	CreateDynamicObject_FR(3458, 25.03000, 1563.21997, 21.04000,   0.00000, 90.00000, 180.88000);
	CreateDynamicObject_FR(3458, 26.08000, 1562.27002, 21.04000,   0.00000, 90.00000, 270.38000);
	CreateDynamicObject_FR(3458, 26.23000, 1564.01001, 21.04000,   0.00000, 90.00000, 93.91000);
	CreateDynamicObject_FR(19073, 9.04000, 1418.69995, 43.60000,   -38.00000, 0.00000, 1.00000);
	CreateDynamicObject_FR(3458, 27.09000, 1563.19995, 21.04000,   0.00000, 90.00000, 0.33000);
	CreateDynamicObject_FR(18830, 24.36000, 1572.56006, 18.43000,   0.00000, -145.00000, 271.41000);
	CreateDynamicObject_FR(18228, 17.24000, 1590.76001, 8.41000,   0.00000, 0.00000, 327.87000);
	CreateDynamicObject_FR(18784, 17.83000, 1604.68994, 26.81000,   0.00000, -13.00000, 268.00000);
	CreateDynamicObject_FR(19129, 31.85000, 1525.34998, 11.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(9123, 33.79000, 1520.94995, 17.36000,   0.00000, 0.00000, 269.48999);
	CreateDynamicObject_FR(19129, 31.87000, 1505.44995, 11.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2780, 29.81000, 1561.28003, 11.51000,   -70.00000, 0.00000, 93.64000);
	CreateDynamicObject_FR(18228, 25.22000, 1591.47998, 8.41000,   0.00000, 0.00000, 327.87000);
	CreateDynamicObject_FR(710, 40.50000, 1471.68005, 39.37000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, 39.16000, 1545.33997, 11.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7916, 42.15000, 1501.93994, 15.89000,   0.00000, 0.00000, 244.13000);
	CreateDynamicObject_FR(710, 36.57000, 1450.09998, 39.37000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(726, 40.69000, 1474.10999, 24.12000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(710, 41.40000, 1463.73999, 39.37000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(710, 41.53000, 1458.69995, 39.37000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(726, 43.41000, 1536.92004, 11.59000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(710, 35.03000, 1437.79004, 39.37000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19841, 43.96000, 1566.53003, 32.59000,   0.00000, 0.00000, 308.69000);
	CreateDynamicObject_FR(19129, 39.29000, 1565.20996, 11.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19841, 43.30000, 1565.51001, 22.62000,   0.00000, 0.00000, 308.69000);
	CreateDynamicObject_FR(7916, 47.47000, 1511.09998, 15.89000,   0.00000, 0.00000, 257.42999);
	CreateDynamicObject_FR(19841, 46.79000, 1562.26001, 31.90000,   0.00000, 0.00000, 316.95999);
	CreateDynamicObject_FR(19841, 46.62000, 1561.79004, 28.42000,   0.00000, 0.00000, 316.66000);
	CreateDynamicObject_FR(710, 51.57000, 1502.64001, 28.75000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7916, 49.56000, 1503.31006, 15.89000,   0.00000, 0.00000, 244.13000);
	CreateDynamicObject_FR(7916, 51.28000, 1519.93005, 15.89000,   0.00000, 0.00000, 257.42999);
	CreateDynamicObject_FR(710, 57.90000, 1520.79004, 37.46000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(710, 55.06000, 1489.96997, 31.02000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18228, 40.20000, 1447.37000, 11.21000,   0.00000, 0.00000, 196.67000);
	CreateDynamicObject_FR(19073, 9.77000, 1376.23999, 76.78000,   -38.00000, 0.00000, 1.00000);
	CreateDynamicObject_FR(710, 54.21000, 1468.77002, 39.37000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(710, 57.08000, 1480.22998, 39.37000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18228, 54.14000, 1466.71997, 18.84000,   0.00000, 0.00000, 174.53000);
	CreateDynamicObject_FR(710, 64.06000, 1511.01001, 37.46000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(710, 65.54000, 1493.44995, 40.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18225, 60.28000, 1572.81006, 16.27000,   0.00000, 0.00000, 9.51000);
	CreateDynamicObject_FR(710, 72.11000, 1529.00000, 37.46000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18228, 69.33000, 1490.31006, 17.50000,   0.00000, 0.00000, 227.03000);
	CreateDynamicObject_FR(710, 74.66000, 1504.90002, 37.46000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(710, 71.97000, 1476.54004, 39.37000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18228, 71.72000, 1510.58997, 17.75000,   0.00000, 0.00000, 227.03000);
	CreateDynamicObject_FR(18228, 70.78000, 1495.12000, 12.32000,   0.00000, 0.00000, 225.71001);
	CreateDynamicObject_FR(18228, 73.22000, 1537.93994, 17.66000,   0.00000, 0.00000, 246.03000);
	CreateDynamicObject_FR(18225, 68.89000, 1569.19995, 16.27000,   0.00000, 0.00000, 9.51000);
	CreateDynamicObject_FR(18228, 78.96000, 1528.39001, 12.32000,   0.00000, 0.00000, 245.92999);
	CreateDynamicObject_FR(19073, 10.59000, 1332.81006, 110.83000,   -38.00000, 0.00000, 1.00000);
	CreateDynamicObject_FR(19073, 11.29000, 1290.92004, 143.56000,   -38.00000, 0.00000, 1.00000);
	CreateDynamicObject_FR(19073, 11.99000, 1249.28003, 176.14000,   -38.00000, 0.00000, 0.68000);
	CreateDynamicObject_FR(19070, 12.30000, 1202.12000, 207.75999,   -40.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(901, -8.97000, 1170.82996, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, 33.39000, 1168.93005, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, -8.32000, 1166.46997, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, 33.74000, 1158.63000, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, -7.44000, 1155.23999, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(19885, 12.34000, 1147.83997, 222.39000,   0.00000, 0.00000, 0.01000);
	CreateDynamicObject_FR(901, 34.36000, 1148.91003, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, -7.08000, 1146.39001, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, 34.38000, 1139.31995, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, -7.81000, 1135.67004, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, 33.74000, 1130.92004, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, -8.88000, 1126.39001, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, 34.12000, 1122.02002, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, -8.94000, 1116.70996, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, 32.59000, 1112.93005, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, -8.39000, 1106.35999, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, 32.77000, 1104.89001, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, -8.29000, 1098.39001, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, 33.00000, 1093.52002, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, -8.09000, 1091.38000, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(19885, 12.28000, 1089.16003, 222.39000,   0.00000, 0.00000, 0.01000);
	CreateDynamicObject_FR(901, 32.42000, 1086.05005, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, -7.57000, 1082.92004, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(3461, -3.91000, 1082.34998, 228.45000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3461, 29.56000, 1079.10999, 228.45000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(901, 32.55000, 1076.52002, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, -8.22000, 1076.21997, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(7916, 20.41000, 1075.57996, 226.73000,   0.00000, 0.00000, 179.84000);
	CreateDynamicObject_FR(710, 31.50000, 1077.59998, 236.56000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(710, -9.05000, 1077.81995, 236.56000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(901, -7.99000, 1070.56995, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(8557, 11.16000, 1076.43005, 242.27000,   -90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19841, 19.56000, 1069.85999, 226.00999,   -32.00000, -1.00000, 190.05000);
	CreateDynamicObject_FR(901, 31.58000, 1068.98999, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(19841, -4.58000, 1069.26001, 226.94000,   -32.00000, -1.00000, 169.78000);
	CreateDynamicObject_FR(19841, 7.06000, 1066.78003, 230.42999,   0.00000, 0.00000, 187.88000);
	CreateDynamicObject_FR(901, -7.94000, 1065.60999, 223.80000,   0.00000, 0.00000, 66.00000);
	CreateDynamicObject_FR(901, 28.56000, 1063.66003, 223.80000,   0.00000, 0.00000, 333.39001);
	CreateDynamicObject_FR(901, 12.15000, 1062.07996, 223.80000,   0.00000, 0.00000, 333.39001);
	CreateDynamicObject_FR(901, 22.28000, 1061.63000, 223.80000,   0.00000, 0.00000, 333.39001);
	CreateDynamicObject_FR(901, 2.90000, 1061.78003, 223.80000,   0.00000, 0.00000, 333.39001);
	CreateDynamicObject_FR(774, 29.15000, 1062.57996, 226.83000,   0.00000, 0.00000, 13.79000);
	CreateDynamicObject_FR(901, 13.54000, 1060.27002, 223.80000,   0.00000, 0.00000, 333.39001);
	CreateDynamicObject_FR(18228, 5.88000, 1059.39001, 222.48000,   0.00000, 0.00000, 141.11000);
	CreateDynamicObject_FR(901, 2.77000, 1058.90002, 223.80000,   0.00000, 0.00000, 333.39001);
	CreateDynamicObject_FR(774, -8.24000, 1060.31006, 226.83000,   0.00000, 0.00000, 317.60999);
	CreateDynamicObject_FR(978, -472.15942, 1768.16772, 72.91061,   0.00000, 4.00000, 292.44540);
	CreateDynamicObject_FR(978, -474.08270, 1776.35681, 73.41866,   0.00000, 4.00000, 272.90427);
	CreateDynamicObject_FR(978, -474.43359, 1785.12097, 74.02267,   0.00000, 4.00000, 271.37885);
	CreateDynamicObject_FR(979, -370.66190, 1808.63367, 48.79425,   0.00000, -4.00000, 96.08373);
	CreateDynamicObject_FR(979, -372.01511, 1817.79053, 49.40129,   0.00000, -4.00000, 102.16748);
	CreateDynamicObject_FR(979, -373.97659, 1826.76843, 50.01038,   0.00000, -4.00000, 103.18871);
	CreateDynamicObject_FR(979, -439.63840, 1900.62891, 58.64500,   0.00000, -7.00000, 259.56439);

	// PARKOUR 1
	CreateDynamicObject_FR(1571, 1366.144531, -1899.866699, 433.457703, 0.000000, 0.000000, 2.000000);
	CreateDynamicObject_FR(1571, 1366.514160, -1899.856323, 433.452362, 0.000000, 0.000000, 2.000000);
	CreateDynamicObject_FR(1571, 1366.082397, -1897.145142, 433.457703, 0.000000, 0.000000, 2.000000);
	CreateDynamicObject_FR(1571, 1366.549072, -1897.118164, 433.452362, 0.000000, 0.000000, 2.000000);
	CreateDynamicObject_FR(886, 1367.770264, -1900.185181, 434.788177, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1571, 1362.546021, -1899.992310, 433.457703, 0.000000, 0.000000, 2.000000);
	CreateDynamicObject_FR(1571, 1362.475952, -1897.218140, 433.457703, 0.000000, 0.000000, 2.000000);
	CreateDynamicObject_FR(4857, 1364.604858, -1894.259033, 437.112335, 0.000000, 0.000000, 91.000000);
	CreateDynamicObject_FR(1407, 1371.579224, -1896.500610, 434.891663, -91.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(18245, 1428.853271, -1896.694580, 446.550446, 0.000000, 0.000000, 360.000000);
	CreateDynamicObject_FR(12990, 1466.230469, -1885.994507, 435.480896, 0.000000, -4.000000, -91.000000);
	CreateDynamicObject_FR(974, 1376.040527, -2001.791626, 452.877197, -90.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(974, 1389.327026, -2001.830078, 452.877197, -90.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(974, 1376.048218, -2007.194824, 452.877197, -90.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(974, 1382.666992, -2007.254517, 452.877197, -90.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3287, 1369.304443, -2008.100342, 455.525696, 0.000000, 0.000000, 91.000000);
	CreateDynamicObject_FR(3287, 1362.457886, -2008.199951, 455.525696, 0.000000, 0.000000, 91.000000);
	CreateDynamicObject_FR(3287, 1355.491821, -2008.374146, 455.525696, 0.000000, 0.000000, 91.000000);
	CreateDynamicObject_FR(4882, 1416.806030, -1996.296143, 457.306610, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(974, 1396.030762, -2007.321167, 452.877197, -90.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(974, 1376.063110, -2012.764771, 452.877197, -90.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3631, 1354.532837, -2013.268066, 455.650787, 0.000000, 0.000000, 89.000000);
	CreateDynamicObject_FR(974, 1389.328979, -2012.686890, 452.877197, -90.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(12978, 1489.167480, -1886.114014, 429.078888, 0.000000, 0.000000, -2.000000);
	CreateDynamicObject_FR(3631, 1354.345093, -2022.946899, 455.650787, 0.000000, 0.000000, 89.000000);
	CreateDynamicObject_FR(3631, 1360.567261, -2025.625366, 455.650787, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(13562, 1496.647949, -1922.427856, 421.273071, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(12978, 1500.207520, -1895.077759, 429.078888, 0.000000, 0.000000, -2.000000);
	CreateDynamicObject_FR(3502, 1363.298096, -2031.414185, 456.529266, 14.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(13562, 1498.766479, -1929.464355, 421.273071, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3743, 1503.095337, -1909.057373, 432.214386, 0.000000, 0.000000, -181.000000);
	CreateDynamicObject_FR(3571, 1496.694946, -1942.641602, 426.780212, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(13562, 1503.517090, -1919.114258, 421.273071, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3571, 1496.811035, -1947.541382, 425.962250, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3502, 1363.239258, -2039.959595, 454.374847, 14.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(13562, 1504.454468, -1935.204102, 421.273071, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(13562, 1507.206543, -1926.449585, 421.273071, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3571, 1506.342773, -1941.260742, 426.780212, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3631, 1363.213501, -2044.667358, 451.234741, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3578, 1501.144775, -1957.791382, 427.545898, -4.000000, 18.000000, 88.000000);
	CreateDynamicObject_FR(3571, 1506.334839, -1943.866211, 425.222382, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1394, 1488.262695, -1982.274170, 427.128265, 20.000000, 0.000000, 93.000000);
	CreateDynamicObject_FR(3571, 1504.400391, -1951.670776, 425.501495, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3631, 1363.203735, -2046.912109, 451.234741, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3585, 1504.359985, -1962.044678, 428.117401, -18.000000, 1.000000, 6.000000);
	CreateDynamicObject_FR(3578, 1507.435425, -1956.832153, 427.300659, -4.000000, 18.000000, 88.000000);
	CreateDynamicObject_FR(3631, 1363.289429, -2050.752441, 452.279724, 0.000000, -22.000000, -89.000000);
	CreateDynamicObject_FR(3585, 1504.717163, -1963.945801, 428.479431, 0.000000, 1.000000, 6.000000);
	CreateDynamicObject_FR(3585, 1504.582397, -1968.614136, 427.309448, -2.000000, -17.000000, 91.000000);
	CreateDynamicObject_FR(3585, 1504.865601, -1978.686035, 425.987793, -2.000000, -3.000000, 91.000000);
	CreateDynamicObject_FR(978, 1363.195801, -2058.657959, 454.044830, 97.000000, 0.000000, -91.000000);
	CreateDynamicObject_FR(978, 1363.049194, -2067.812012, 454.044830, 97.000000, 0.000000, -91.000000);
	CreateDynamicObject_FR(978, 1362.898926, -2077.127441, 454.044830, 97.000000, 0.000000, -91.000000);
	CreateDynamicObject_FR(3472, 1371.600464, -2085.662598, 453.494507, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(19128, 1363.047485, -2085.640137, 454.299164, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3472, 1354.688110, -2085.674072, 453.494507, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(19128, 1367.019775, -2089.520752, 454.299164, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(19128, 1359.049194, -2089.624023, 454.299164, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(18783, 1362.944092, -2093.565186, 451.807404, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(19128, 1363.013550, -2093.444336, 454.299164, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(19128, 1367.000000, -2097.360596, 454.299164, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(19128, 1359.005371, -2097.376221, 454.299164, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(19128, 1363.019531, -2101.192627, 454.299164, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3472, 1373.890137, -2104.898682, 453.494507, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3472, 1351.984985, -2104.805664, 453.494507, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3877, 1382.819214, -2104.682617, 454.304718, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3877, 1342.870361, -2104.674072, 454.304718, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3472, 1391.455078, -2104.585693, 453.494507, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3472, 1334.942749, -2104.911133, 453.494507, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(7586, 1362.661255, -2112.218994, 449.461884, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(18783, 1363.072144, -2113.549072, 451.807404, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(18783, 1382.856567, -2113.498535, 451.807404, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(18783, 1343.182495, -2113.585938, 451.805267, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3472, 1391.425659, -2121.960938, 453.494507, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3472, 1334.490234, -2121.790283, 453.494507, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(8483, 1361.125610, -2126.518555, 460.245911, 0.000000, 0.000000, 85.000000);
	CreateDynamicObject_FR(8881, 1360.939209, -2158.414063, 481.105225, 0.000000, 0.000000, 117.000000);
	
	//PARKOUR 2
	CreateDynamicObject_FR(3753, -3949.43628, 1557.79370, -6.08004,   90.00000, -2.00000, -4.00000);
	CreateDynamicObject_FR(3753, -3944.20044, 1606.77673, -6.01219,   90.00000, -2.00000, -184.18004);
	CreateDynamicObject_FR(3753, -3951.72754, 1535.12891, -6.02915,   90.00000, -2.00000, -4.00000);
	CreateDynamicObject_FR(3753, -3954.19043, 1512.44409, -5.92737,   90.00000, -2.00000, -4.00000);
	CreateDynamicObject_FR(3630, -3924.42480, 1546.90955, 5.07485,   0.00000, 0.00000, -276.12006);
	CreateDynamicObject_FR(3630, -3921.45679, 1546.58923, 8.02404,   0.00000, 0.00000, -276.12006);
	CreateDynamicObject_FR(3630, -3918.50708, 1546.28198, 10.97915,   0.00000, 0.00000, -276.12006);
	CreateDynamicObject_FR(3630, -3915.58887, 1545.97083, 13.93525,   0.00000, 0.00000, -276.12006);
	CreateDynamicObject_FR(2932, -3912.56836, 1545.71509, 16.90110,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject_FR(2934, -3909.54639, 1545.36560, 19.78604,   0.00000, 0.00000, -6.78000);
	CreateDynamicObject_FR(2935, -3905.79224, 1542.86279, 22.68716,   0.00000, 0.00000, -123.83996);
	CreateDynamicObject_FR(2935, -3899.90259, 1538.86963, 25.49614,   0.00000, 0.00000, -123.83996);
	CreateDynamicObject_FR(3073, -3900.70996, 1472.36328, 21.63544,   0.00000, 0.00000, -303.72000);
	CreateDynamicObject_FR(3073, -3894.07471, 1534.80347, 28.47809,   0.00000, 0.00000, -487.07971);
	CreateDynamicObject_FR(1386, -3885.81177, 1526.14600, 33.67139,   0.00000, 0.00000, -140.33990);
	CreateDynamicObject_FR(1437, -3877.69482, 1516.09766, 29.75064,   171.00000, -84.00000, 116.60001);
	CreateDynamicObject_FR(1437, -3881.30029, 1520.63330, 30.02173,   100.00000, 1.00000, 37.60001);
	CreateDynamicObject_FR(2934, -3922.87598, 1531.99438, -6.40956,   0.00000, 0.00000, -6.30000);
	CreateDynamicObject_FR(3062, -3884.51318, 1523.44385, 28.51338,   0.00000, 0.00000, 38.64001);
	CreateDynamicObject_FR(3062, -3883.59668, 1522.32690, 30.02304,   90.00000, -1.00000, 41.01998);
	CreateDynamicObject_FR(1437, -3877.73730, 1516.08276, 29.75064,   171.00000, -84.00000, 116.60001);
	CreateDynamicObject_FR(1437, -3877.63916, 1516.12732, 29.75064,   171.00000, -84.00000, 116.60001);
	CreateDynamicObject_FR(1437, -3877.77881, 1516.03943, 29.75064,   171.00000, -84.00000, 116.60001);
	CreateDynamicObject_FR(1237, -3874.53735, 1511.93250, 29.68339,   0.00000, 178.00000, 0.00000);
	CreateDynamicObject_FR(1237, -3875.15503, 1511.57361, 29.68339,   0.00000, 178.00000, 0.00000);
	CreateDynamicObject_FR(1237, -3874.58838, 1511.04980, 29.74252,   0.00000, 178.00000, 0.00000);
	CreateDynamicObject_FR(3091, -3872.99219, 1510.14453, 29.71459,   90.00000, 3.00000, -47.70000);
	CreateDynamicObject_FR(3091, -3872.21216, 1506.29456, 29.71459,   90.00000, 3.00000, -135.60001);
	CreateDynamicObject_FR(19872, -3875.65527, 1503.43604, 27.98504,   0.00000, 0.00000, -42.66000);
	CreateDynamicObject_FR(2893, -3881.77881, 1498.15808, 31.53192,   0.00000, 0.00000, -222.89999);
	CreateDynamicObject_FR(2893, -3880.36475, 1496.97278, 31.53192,   0.00000, 0.00000, -222.89999);
	CreateDynamicObject_FR(2934, -3885.27710, 1493.75732, 32.95854,   0.00000, 0.00000, -44.63999);
	CreateDynamicObject_FR(3091, -3888.34033, 1489.86328, 31.53368,   90.00000, 3.00000, -135.60001);
	CreateDynamicObject_FR(3091, -3890.62500, 1487.38306, 31.53368,   90.00000, 3.00000, -135.60001);
	CreateDynamicObject_FR(5153, -3893.42944, 1484.76099, 30.59244,   0.00000, 0.00000, 49.43999);
	CreateDynamicObject_FR(5153, -3896.04004, 1481.72644, 28.85720,   0.00000, 0.00000, 49.43999);
	CreateDynamicObject_FR(5153, -3898.52344, 1478.87195, 26.79458,   0.00000, -10.00000, 49.00000);
	CreateDynamicObject_FR(5153, -3900.78687, 1476.28442, 24.51522,   0.00000, -10.00000, 49.00000);
	CreateDynamicObject_FR(3073, -3894.07471, 1534.80347, 28.47809,   0.00000, 0.00000, -487.07971);
	CreateDynamicObject_FR(3073, -3895.10864, 1468.05164, 21.64510,   0.00000, 0.00000, -303.72000);
	CreateDynamicObject_FR(3567, -3888.11841, 1474.09375, 26.76132,   30.00000, -2.00000, -37.26002);
	CreateDynamicObject_FR(650, -3892.14307, 1468.59509, 23.59351,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(650, -3891.46045, 1469.57373, 24.26375,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(650, -3890.34839, 1470.93005, 25.08543,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(650, -3889.39185, 1472.38770, 26.47732,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(650, -3886.54272, 1476.15271, 29.26462,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(650, -3888.18872, 1474.04590, 27.61079,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1437, -3869.25488, 1470.36951, 33.76724,   100.00000, 1.00000, 48.10002);
	CreateDynamicObject_FR(1437, -3887.06470, 1429.95581, 32.09097,   324.00000, 4.00000, 25.85999);
	CreateDynamicObject_FR(2991, -3847.79858, 1449.00098, 30.58025,   0.00000, 0.00000, -121.19999);
	CreateDynamicObject_FR(3593, -3853.57739, 1441.10559, 28.73913,   0.00000, 0.00000, -219.96001);
	CreateDynamicObject_FR(3594, -3859.54907, 1438.10730, 28.06548,   0.00000, 0.00000, -66.12001);
	CreateDynamicObject_FR(3594, -3867.86646, 1435.28198, 27.99323,   0.00000, 178.00000, -72.36004);
	CreateDynamicObject_FR(3593, -3873.89282, 1432.89697, 29.25233,   0.00000, 0.00000, -249.23999);
	CreateDynamicObject_FR(3594, -3878.57495, 1431.12524, 29.15376,   0.00000, 178.00000, -72.36004);
	CreateDynamicObject_FR(3593, -3884.78540, 1428.78503, 30.77509,   0.00000, 0.00000, -249.23999);
	CreateDynamicObject_FR(3593, -3893.40552, 1446.07703, 41.15475,   0.00000, 0.00000, -337.91989);
	CreateDynamicObject_FR(3593, -3896.35571, 1451.63770, 43.01585,   0.00000, 0.00000, -337.91989);
	CreateDynamicObject_FR(3593, -3902.23901, 1449.73486, 45.55954,   0.00000, 0.00000, -434.75992);
	CreateDynamicObject_FR(3593, -3902.23901, 1449.73486, 45.55954,   0.00000, 0.00000, -434.75992);
	CreateDynamicObject_FR(3593, -3908.76563, 1447.39673, 47.13380,   0.00000, 0.00000, -434.75992);
	CreateDynamicObject_FR(18451, -3909.07031, 1442.38330, 48.08119,   0.00000, 0.00000, -160.01997);
	CreateDynamicObject_FR(3502, -3907.15894, 1436.82935, 49.90889,   0.00000, 0.00000, 19.08001);
	CreateDynamicObject_FR(3502, -3904.88257, 1428.36414, 44.59254,   0.00000, 0.00000, 19.08001);
	CreateDynamicObject_FR(3502, -3901.92334, 1417.99255, 44.85250,   0.00000, 0.00000, 19.08001);
	CreateDynamicObject_FR(3502, -3895.33716, 1395.35400, 44.85250,   -41.00000, 4.00000, 17.00000);
	CreateDynamicObject_FR(18783, -3889.18457, 1379.06580, 55.95280,   0.00000, 0.00000, 13.68000);
	CreateDynamicObject_FR(18783, -3884.51196, 1359.68542, 55.97258,   0.00000, 0.00000, 13.68000);
	CreateDynamicObject_FR(18783, -3865.25708, 1364.37891, 55.97258,   0.00000, 0.00000, 13.68000);
	CreateDynamicObject_FR(18783, -3869.93311, 1383.77991, 55.97258,   0.00000, 0.00000, 13.68000);
	CreateDynamicObject_FR(18783, -3863.36255, 1357.05493, 67.18932,   0.00000, -90.00000, -75.70000);
	CreateDynamicObject_FR(18783, -3882.59497, 1352.21826, 67.18932,   0.00000, -90.00000, -75.70000);
	CreateDynamicObject_FR(18750, -3884.32837, 1355.73633, 77.25567,   94.00000, 2.00000, -170.16005);
	CreateDynamicObject_FR(18783, -3908.56104, 1374.37549, 55.96727,   0.00000, 0.00000, 13.68000);
	CreateDynamicObject_FR(18783, -3903.92114, 1355.22839, 55.96727,   0.00000, 0.00000, 13.68000);
	CreateDynamicObject_FR(18783, -3923.10059, 1350.30420, 55.96727,   0.00000, 0.00000, 13.68000);
	CreateDynamicObject_FR(18783, -3927.83252, 1369.69690, 55.96727,   0.00000, 0.00000, 13.68000);
	CreateDynamicObject_FR(18783, -3850.62012, 1388.49951, 55.97258,   0.00000, 0.00000, 13.68000);
	CreateDynamicObject_FR(18783, -3845.90771, 1369.20605, 55.97258,   0.00000, 0.00000, 13.68000);
	CreateDynamicObject_FR(18783, -3844.03882, 1362.00061, 67.18932,   0.00000, -90.00000, -75.70000);
	CreateDynamicObject_FR(18783, -3901.91748, 1347.41455, 67.18932,   0.00000, -90.00000, -75.70000);
	CreateDynamicObject_FR(18783, -3921.35815, 1342.35303, 67.18932,   0.00000, -90.00000, -75.70000);
	CreateDynamicObject_FR(18783, -3921.35815, 1342.35303, 87.02529,   0.00000, -90.00000, -75.70000);
	CreateDynamicObject_FR(18783, -3901.91162, 1347.35486, 86.97981,   0.00000, -90.00000, -75.70000);
	CreateDynamicObject_FR(18783, -3882.59497, 1352.21826, 87.01015,   0.00000, -90.00000, -75.70000);
	CreateDynamicObject_FR(18783, -3863.36255, 1357.05493, 87.00461,   0.00000, -90.00000, -75.70000);
	CreateDynamicObject_FR(18783, -3844.03882, 1362.00061, 86.91601,   0.00000, -90.00000, -75.70000);
	CreateDynamicObject_FR(2934, -3882.80762, 1481.00977, 31.26075,   0.00000, 0.00000, -38.09997);
	CreateDynamicObject_FR(1437, -3864.76245, 1466.46606, 33.76720,   100.00000, 0.00000, 48.00000);
	CreateDynamicObject_FR(1437, -3895.56274, 1393.45752, 49.86317,   324.00000, 4.00000, -258.47992);
	CreateDynamicObject_FR(1437, -3895.46289, 1450.68445, 42.33966,   324.00000, 4.00000, 108.23998);
	CreateDynamicObject_FR(1437, -3889.57178, 1436.66907, 38.99107,   324.00000, 4.00000, 25.85999);
	CreateDynamicObject_FR(1437, -3888.44458, 1433.63611, 35.90996,   324.00000, 4.00000, 25.85999);
	CreateDynamicObject_FR(1437, -3899.26074, 1393.10071, 53.45582,   324.00000, 4.00000, -258.47992);
	CreateDynamicObject_FR(1437, -3902.69458, 1392.51282, 56.48481,   324.00000, 4.00000, -167.45992);
	CreateDynamicObject_FR(3567, -3888.11841, 1474.09375, 26.76132,   30.00000, -2.00000, -37.26002);
	CreateDynamicObject_FR(650, -3872.13281, 1473.03003, 33.07342,   0.00000, 88.00000, -42.72002);
	CreateDynamicObject_FR(650, -3876.80737, 1476.85571, 33.52759,   0.00000, 88.00000, -42.72002);
	CreateDynamicObject_FR(650, -3880.10840, 1479.72974, 33.52759,   0.00000, 88.00000, -42.72002);
	CreateDynamicObject_FR(1437, -3860.15723, 1462.32300, 33.76720,   100.00000, 0.00000, 48.00000);
	CreateDynamicObject_FR(1437, -3855.56055, 1458.18762, 33.76720,   100.00000, 0.00000, 48.00000);
	CreateDynamicObject_FR(1437, -3851.85034, 1454.82703, 33.76720,   100.00000, 0.00000, 47.04000);
	CreateDynamicObject_FR(3502, -3898.95947, 1409.46704, 44.85250,   0.00000, 0.00000, 19.08001);

	
	//DRIFT3
	CreateDynamicObject_FR(8420, 3030.171875, 2344.557617, 3.000000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(4176, 3002.364502, 2314.445801, 8.457600, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(3940, 3001.341064, 2357.887939, 6.083150, 0.000000, 0.000000, 269.994995);
	CreateDynamicObject_FR(5729, 3045.536377, 2295.825195, 6.547400, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(3940, 3009.307861, 2370.016113, 6.060150, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3037.526367, 2388.987305, 2.032200, 354.996002, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3028.542725, 2388.988770, 2.032200, 354.996002, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3019.543701, 2388.993896, 2.032200, 355.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3940, 3004.973145, 2385.208008, 6.060150, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(4589, 3023.046387, 2393.389648, 2.868450, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(5134, 3086.729248, 2361.779053, 6.613090, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(5709, 3058.369141, 2389.314697, 11.912600, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3036.222656, 2397.956787, 2.512530, 0.000000, 0.000000, 210.000000);
	CreateDynamicObject_FR(972, 3007.838623, 2395.153809, 2.512530, 0.000000, 0.000000, 35.000000);
	CreateDynamicObject_FR(4018, 3039.287354, 2403.897461, 0.000000, 0.000000, 0.000000, 305.000000);
	CreateDynamicObject_FR(5267, 3111.356445, 2357.340820, 8.759000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3023.251953, 2417.647461, 2.512530, 0.000000, 0.000000, 215.000000);
	CreateDynamicObject_FR(5296, 3121.427734, 2325.577148, 8.734800, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(972, 2995.598877, 2417.545166, 2.512530, 0.000000, 0.000000, 20.000000);
	CreateDynamicObject_FR(10308, 3104.022461, 2396.349365, 34.750000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3015.404297, 2439.071045, 2.512530, 0.000000, 0.000000, 190.000000);
	CreateDynamicObject_FR(3095, 3136.598389, 2362.592285, 8.532380, 0.000000, 3.999000, 0.000000);
	CreateDynamicObject_FR(970, 3132.436279, 2376.054932, 9.915720, 0.000000, 3.999000, 0.000000);
	CreateDynamicObject_FR(3095, 3136.598633, 2371.592773, 8.532380, 0.000000, 3.999000, 0.000000);
	CreateDynamicObject_FR(9131, 3139.626709, 2366.811035, 9.931460, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(970, 3136.584229, 2376.057129, 9.630520, 0.000000, 4.000000, 0.000000);
	CreateDynamicObject_FR(4176, 3144.660156, 2346.698242, 10.837800, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(970, 3140.742676, 2376.073242, 9.254720, 0.000000, 7.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3145.528809, 2362.589600, 7.671980, 0.000000, 7.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3145.485840, 2371.596680, 7.603180, 0.000000, 8.000000, 0.000000);
	CreateDynamicObject_FR(4011, 3148.249023, 2303.465820, 2.197800, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(5709, 3100.098633, 2432.392334, 11.618200, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(970, 3144.868408, 2376.072021, 8.708720, 0.000000, 7.998000, 0.000000);
	CreateDynamicObject_FR(978, 3142.344482, 2390.353271, 2.988090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(970, 3148.959473, 2376.073975, 8.133520, 0.000000, 7.998000, 0.000000);
	CreateDynamicObject_FR(3095, 3154.442383, 2362.585938, 6.578380, 0.000000, 6.993000, 0.000000);
	CreateDynamicObject_FR(978, 3146.822510, 2385.887451, 2.988090, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(3095, 3154.376221, 2371.603027, 6.353180, 0.000000, 7.998000, 0.000000);
	CreateDynamicObject_FR(978, 3129.889160, 2416.443604, 2.988090, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(970, 3153.088135, 2376.067871, 7.550720, 0.000000, 7.998000, 0.000000);
	CreateDynamicObject_FR(978, 3146.811523, 2394.846680, 2.988090, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(5725, 3021.777344, 2463.797852, 12.246090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(972, 3013.910156, 2463.192383, 2.512530, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(978, 3151.291748, 2390.373047, 2.988090, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(970, 3157.181396, 2376.069336, 6.978720, 0.000000, 8.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3161.353760, 2362.582764, 5.872980, 0.000000, 5.000000, 0.000000);
	CreateDynamicObject_FR(978, 3144.153809, 2406.781006, 2.988090, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3940, 3166.473877, 2337.636963, 9.448950, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(970, 3159.219971, 2378.073730, 6.414320, 0.000000, 7.998000, 90.000000);
	CreateDynamicObject_FR(970, 3159.189453, 2379.365967, 6.253320, 0.000000, 7.998000, 90.000000);
	CreateDynamicObject_FR(3095, 3167.444092, 2346.186523, 5.740980, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(978, 3143.777588, 2411.480957, 2.988090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(970, 3159.189453, 2383.482422, 5.664320, 0.000000, 7.998000, 90.000000);
	CreateDynamicObject_FR(3095, 3163.277344, 2371.601074, 5.095580, 0.000000, 7.998000, 0.000000);
	CreateDynamicObject_FR(5725, 2989.530762, 2462.304199, 11.701080, 0.000000, 0.000000, 269.994995);
	CreateDynamicObject_FR(3095, 3163.561523, 2371.599609, 5.095580, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3167.443359, 2355.174805, 5.740980, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(970, 3159.187500, 2387.609131, 5.089120, 0.000000, 7.998000, 90.000000);
	CreateDynamicObject_FR(3095, 3167.440430, 2362.686768, 5.740000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(8040, 3150.139648, 2406.475586, 3.353200, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(978, 3144.136963, 2416.179443, 2.988090, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(3095, 3163.538330, 2380.352295, 4.445180, 352.000000, 8.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3163.579834, 2380.476563, 4.474580, 352.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(970, 3159.185791, 2391.712402, 4.523320, 0.000000, 7.998000, 90.000000);
	CreateDynamicObject_FR(970, 3159.190186, 2395.848389, 3.949720, 0.000000, 7.998000, 90.000000);
	CreateDynamicObject_FR(3095, 3163.537842, 2389.235352, 3.193780, 351.996002, 7.998000, 0.000000);
	CreateDynamicObject_FR(3095, 3163.591553, 2389.382080, 3.221580, 351.996002, 0.000000, 0.000000);
	CreateDynamicObject_FR(970, 3159.192383, 2399.937500, 3.370120, 0.000000, 7.998000, 90.000000);
	CreateDynamicObject_FR(3095, 3163.541748, 2398.063721, 1.951580, 351.996002, 7.998000, 0.000000);
	CreateDynamicObject_FR(3095, 3163.594971, 2398.277100, 1.969980, 351.996002, 0.000000, 0.000000);
	CreateDynamicObject_FR(3940, 3118.486084, 2454.611816, -0.803850, 179.994995, 270.000000, 0.000000);
	CreateDynamicObject_FR(972, 3015.215576, 2487.709961, 2.512530, 0.000000, 0.000000, 175.000000);
	CreateDynamicObject_FR(3998, 3180.815918, 2390.224854, 0.000000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3940, 3191.610352, 2337.697266, 9.522550, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(3940, 3118.570068, 2470.311768, -0.803850, 179.994995, 270.000000, 0.000000);
	CreateDynamicObject_FR(3998, 3186.221680, 2388.126953, 0.000000, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(3940, 3171.467773, 2434.240234, 3.175350, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3998, 3180.672607, 2423.405518, 0.000000, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(978, 3033.410156, 2508.283936, 2.988090, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(978, 3029.465332, 2508.281982, 2.988090, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(6997, 3203.820801, 2376.442383, 11.060800, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(4233, 3002.961670, 2509.518555, 2.493800, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(978, 3037.882080, 2512.763916, 2.988090, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(978, 3024.978271, 2512.753418, 2.988090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(3998, 3186.339844, 2427.465820, 0.000000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3980, 3089.542969, 2506.088867, 10.147920, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(978, 3037.889160, 2517.025391, 2.988090, 0.000000, 0.000000, 269.994995);
	CreateDynamicObject_FR(978, 3024.975830, 2516.997559, 2.988090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(978, 3033.405762, 2521.498291, 2.988090, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(978, 3029.450684, 2521.492188, 2.988090, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(5296, 3223.696289, 2325.553711, 8.734800, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(5725, 2989.279297, 2522.274414, 11.701080, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(3095, 3175.098633, 2469.322754, 2.176580, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3175.104492, 2473.280518, 2.185780, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(8040, 3031.629883, 2533.815430, 3.311800, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(978, 3036.333740, 2534.909912, 3.310090, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(978, 3026.953369, 2534.914307, 3.310090, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(9131, 3173.823242, 2478.799805, 3.097260, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3940, 3144.207031, 2502.962158, -0.339850, 179.994995, 0.000000, 0.000000);
	CreateDynamicObject_FR(12850, 3163.296387, 2489.814697, 2.708200, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3184.087646, 2469.757813, 2.194980, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(978, 3037.698486, 2538.223877, 3.310090, 0.000000, 0.000000, 315.000000);
	CreateDynamicObject_FR(978, 3025.581299, 2538.219727, 3.310090, 0.000000, 0.000000, 45.000000);
	CreateDynamicObject_FR(3095, 3175.105469, 2482.190674, 1.799380, 355.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3184.104980, 2473.264404, 2.185780, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3940, 3167.297607, 2489.565674, -0.339850, 179.994995, 0.000000, 179.994995);
	CreateDynamicObject_FR(978, 3028.359863, 2540.983154, 3.310090, 0.000000, 0.000000, 44.994999);
	CreateDynamicObject_FR(978, 3034.861328, 2541.043457, 3.310090, 0.000000, 0.000000, 315.000000);
	CreateDynamicObject_FR(4048, 3237.997559, 2305.930420, 12.434000, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(9131, 3173.834229, 2487.328369, 3.097260, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3940, 3210.801758, 2446.382813, 2.416350, 179.994995, 0.000000, 270.000000);
	CreateDynamicObject_FR(4650, 3131.792969, 2519.925781, 2.529640, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(4233, 3205.513672, 2456.139648, 2.748400, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(3095, 3184.100586, 2482.194580, 1.799380, 354.996002, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3175.102783, 2491.177979, 1.412980, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(9131, 3173.830322, 2494.393311, 3.097260, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3940, 3118.482422, 2531.638672, -0.857850, 179.994995, 270.000000, 0.000000);
	CreateDynamicObject_FR(3940, 3167.381836, 2504.026855, -0.339850, 179.994995, 0.000000, 180.000000);
	CreateDynamicObject_FR(3095, 3184.099854, 2491.169922, 1.412980, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3175.111084, 2500.174316, 1.412980, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(9131, 3173.845215, 2503.029297, 3.097260, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3184.104248, 2500.162598, 1.412980, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3940, 3235.915039, 2446.297852, 2.416350, 179.994995, 0.000000, 270.000000);
	CreateDynamicObject_FR(3940, 3063.118896, 2570.286377, -0.799650, 179.994995, 270.000000, 90.000000);
	CreateDynamicObject_FR(3940, 3118.493652, 2556.773193, -0.913050, 179.994995, 270.000000, 0.000000);
	CreateDynamicObject_FR(12923, 3156.811768, 2541.456055, 7.105600, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3276.693359, 2338.706055, 2.512530, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(9922, 3225.131592, 2482.174561, 32.411060, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(3940, 3143.951416, 2553.736084, -1.394000, 180.000000, 280.000000, 180.000000);
	CreateDynamicObject_FR(3940, 3109.376953, 2570.325195, -0.937650, 179.994995, 270.000000, 90.000000);
	CreateDynamicObject_FR(972, 3281.297363, 2312.126953, 2.512530, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(5140, 3283.072510, 2342.754395, 8.769760, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(4233, 3057.250732, 2583.316162, 2.493800, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(3940, 3258.592773, 2446.234375, 2.453150, 179.994995, 0.000000, 270.000000);
	CreateDynamicObject_FR(9922, 3231.905273, 2489.676758, 32.411060, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(5837, 3033.962158, 2593.164795, 4.107170, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1553, 3037.179443, 2593.369873, 1.308540, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1553, 3039.900391, 2593.369385, 1.308540, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1553, 3042.722656, 2593.370361, 1.308540, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1553, 3045.545410, 2593.373047, 1.308540, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1553, 3048.359863, 2593.372070, 1.308540, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(5837, 3052.121094, 2593.729736, 4.116370, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3034.723877, 2597.935303, 1.654800, 355.994995, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3043.713379, 2597.933594, 1.654800, 356.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3052.703613, 2597.895996, 1.654800, 355.994995, 0.000000, 0.000000);
	CreateDynamicObject_FR(3940, 3081.799805, 2597.536377, 5.467800, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(972, 3301.158936, 2339.539551, 2.512530, 0.000000, 0.000000, 275.000000);
	CreateDynamicObject_FR(978, 3211.159424, 2536.582275, 2.988090, 0.000000, 0.000000, 135.000000);
	CreateDynamicObject_FR(3095, 3281.991699, 2443.422607, 2.245380, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(978, 3219.017334, 2533.343750, 2.988090, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(3095, 3034.721191, 2606.920898, 1.351200, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3043.719727, 2606.924805, 1.351200, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(978, 3207.896484, 2544.439453, 2.988090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(3095, 3052.714111, 2606.926758, 1.351200, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(978, 3221.249512, 2533.340820, 2.988090, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(972, 3306.551758, 2314.706055, 2.512530, 0.000000, 0.000000, 100.000000);
	CreateDynamicObject_FR(3940, 3031.572266, 2608.304688, -1.324250, 179.994995, 279.997986, 179.994995);
	CreateDynamicObject_FR(972, 3054.995850, 2608.616699, 1.992730, 0.000000, 0.000000, 5.000000);
	CreateDynamicObject_FR(17536, 3065.749756, 2607.420654, 13.805400, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(17521, 3151.346191, 2583.348877, 5.753000, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(17543, 3104.574463, 2601.442383, 4.836800, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(3095, 3287.247803, 2444.200684, 2.236180, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(4650, 3244.272217, 2514.875244, 2.175440, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(17542, 3131.495850, 2595.847168, 6.461020, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(972, 3278.043945, 2469.696533, 2.512530, 0.000000, 0.000000, 280.000000);
	CreateDynamicObject_FR(9131, 3217.047119, 2545.316406, 3.284410, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(978, 3207.892578, 2553.810547, 2.988090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(4652, 3181.762207, 2572.368896, 2.020460, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(17521, 3162.680176, 2583.771729, 5.385000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(3095, 3034.721680, 2615.920654, 1.351200, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3043.719727, 2615.920898, 1.351200, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3052.711670, 2615.925293, 1.351200, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3297.473389, 2441.869141, 0.434530, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(978, 3207.890625, 2563.184082, 2.988090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(972, 3071.501465, 2620.017334, 1.992730, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(8040, 3207.775146, 2564.464111, 2.918090, 0.000000, 0.000000, 269.994995);
	CreateDynamicObject_FR(972, 3129.518066, 2606.849609, 1.992730, 0.000000, 0.000000, 60.000000);
	CreateDynamicObject_FR(972, 3084.315918, 2620.092773, 1.992730, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(972, 3151.005371, 2599.747314, 1.992730, 0.000000, 0.000000, 82.000000);
	CreateDynamicObject_FR(7419, 3315.994873, 2403.132080, -3.521400, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(972, 3324.978760, 2343.160889, 2.512530, 0.000000, 0.000000, 284.000000);
	CreateDynamicObject_FR(972, 3107.791260, 2616.439453, 1.992730, 0.000000, 0.000000, 75.000000);
	CreateDynamicObject_FR(978, 3207.892578, 2572.569336, 2.988090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(4648, 3118.645508, 2619.477295, 2.127270, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(972, 3331.061279, 2320.333496, 2.512530, 0.000000, 0.000000, 105.000000);
	CreateDynamicObject_FR(3697, 3283.062744, 2497.781006, 6.296000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3308.878174, 2453.958008, 2.512530, 0.000000, 0.000000, 110.000000);
	CreateDynamicObject_FR(972, 3301.263916, 2475.904541, 2.512530, 0.000000, 0.000000, 292.000000);
	CreateDynamicObject_FR(4651, 3338.482422, 2363.377686, 2.781970, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(3095, 3266.296143, 2528.757324, 1.592380, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(978, 3207.891357, 2581.953125, 2.988090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(972, 3347.154541, 2351.468018, 2.512530, 0.000000, 0.000000, 300.000000);
	CreateDynamicObject_FR(978, 3248.488525, 2553.447266, 2.988090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(3095, 3266.466797, 2537.734863, 1.592380, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3354.781738, 2329.367920, 2.512530, 0.000000, 0.000000, 115.000000);
	CreateDynamicObject_FR(8040, 3244.303711, 2564.455078, 2.913490, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(3095, 3266.099854, 2546.728760, 1.592380, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(978, 3248.482666, 2562.796875, 2.988090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(4589, 3325.012451, 2475.994385, 3.213450, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3606, 3308.457520, 2500.838623, 5.541400, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3331.650635, 2464.993408, 2.512530, 0.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(972, 3364.613281, 2366.228760, 2.512530, 0.000000, 0.000000, 325.000000);
	CreateDynamicObject_FR(972, 3321.735107, 2487.434570, 2.512530, 0.000000, 0.000000, 310.000000);
	CreateDynamicObject_FR(3306, 3285.115479, 2537.423340, 3.860600, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3265.531250, 2554.729492, 1.587780, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3265.706299, 2556.470459, 1.592380, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3940, 3276.175293, 2549.194580, -1.198250, 180.000000, 270.000000, 90.000000);
	CreateDynamicObject_FR(972, 3376.027588, 2343.569092, 2.512530, 0.000000, 0.000000, 130.000000);
	CreateDynamicObject_FR(978, 3248.480225, 2572.158203, 2.988090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(972, 3376.041748, 2386.957764, 2.512530, 0.000000, 0.000000, 340.000000);
	CreateDynamicObject_FR(972, 3389.680908, 2361.613525, 2.512530, 0.000000, 0.000000, 150.000000);
	CreateDynamicObject_FR(3940, 3287.052490, 2548.198730, -1.032650, 179.994995, 270.000000, 90.000000);
	CreateDynamicObject_FR(972, 3380.828857, 2409.803467, 2.512530, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3265.231445, 2565.459717, 1.592380, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3352.767822, 2478.636230, 2.512530, 0.000000, 0.000000, 125.000000);
	CreateDynamicObject_FR(978, 3228.369385, 2589.792969, 2.988090, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(3095, 3321.947754, 2522.105469, 1.831580, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(978, 3248.477783, 2581.537354, 2.988090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(972, 3342.940430, 2501.608887, 2.512530, 0.000000, 0.000000, 295.000000);
	CreateDynamicObject_FR(3095, 3265.697510, 2574.452881, 1.592380, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3380.857178, 2434.666504, 2.512530, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(978, 3248.244629, 2586.340332, 2.988090, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(3309, 3285.119629, 2562.790283, 3.860400, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(9131, 3236.530518, 2592.721436, 3.284410, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(16006, 3192.715088, 2611.505859, 1.017590, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(5725, 3375.438965, 2455.948975, 12.246090, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(972, 3398.963867, 2385.398193, 2.512530, 0.000000, 0.000000, 165.000000);
	CreateDynamicObject_FR(978, 3231.687744, 2597.808838, 2.988090, 0.000000, 0.000000, 225.000000);
	CreateDynamicObject_FR(972, 3348.437256, 2506.260742, 2.512530, 0.000000, 0.000000, 280.000000);
	CreateDynamicObject_FR(3456, 3328.769043, 2528.729980, 5.471000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3380.878906, 2459.482666, 2.512530, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3321.413818, 2538.089111, 1.840780, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3404.345459, 2409.976318, 2.512530, 0.000000, 0.000000, 170.000000);
	CreateDynamicObject_FR(972, 3380.837891, 2472.650146, 2.512530, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3373.903320, 2483.872070, 2.512530, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(978, 3248.481934, 2591.001465, 2.988090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(3095, 3266.394043, 2583.438477, 1.592380, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(4652, 3392.694336, 2458.248291, 2.776000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(978, 3239.688721, 2601.118896, 2.988090, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(3940, 3157.045898, 2623.540771, 5.467800, 0.000000, 0.000000, 265.000000);
	CreateDynamicObject_FR(978, 3258.298828, 2596.466553, 2.988090, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(10606, 3356.779297, 2525.612061, 11.595620, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(3095, 3266.722168, 2592.429443, 1.592380, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(4652, 3308.692383, 2572.333984, 2.324060, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(3308, 3285.114502, 2587.729980, 3.858800, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3306, 3331.095703, 2561.200195, 3.865200, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(978, 3253.608398, 2601.169434, 2.988090, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(3095, 3266.369873, 2601.418945, 1.592380, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3215.200195, 2617.160889, 1.992730, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(972, 3272.051758, 2601.679199, 1.992730, 0.000000, 0.000000, 68.000000);
	CreateDynamicObject_FR(4552, 3424.914795, 2478.412842, 14.865800, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(18239, 3366.254150, 2551.919189, 2.500000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3249.788086, 2611.255859, 1.992730, 0.000000, 0.000000, 65.000000);
	CreateDynamicObject_FR(972, 3227.786377, 2617.070557, 1.992730, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(11469, 3375.751221, 2555.447998, 2.816000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3307, 3331.087891, 2586.172852, 3.865000, 0.000000, 0.000000, 179.994995);
	CreateDynamicObject_FR(4648, 3245.765381, 2619.414551, 2.449270, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(3940, 3405.139160, 2554.529785, 2.540550, 179.994995, 0.000000, 0.000000);
	CreateDynamicObject_FR(10425, 3356.209717, 2589.972656, 10.719400, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(4233, 3391.809814, 2570.160400, 2.835800, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(3599, 3320.774170, 2611.890137, 8.150400, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(972, 3283.247803, 2624.458740, 1.992730, 0.000000, 0.000000, 257.000000);
	CreateDynamicObject_FR(4141, 3424.050781, 2565.405762, 13.771400, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3599, 3309.116211, 2621.280273, 8.150400, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(6907, 3414.164307, 2585.805664, 2.513800, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3406.520508, 2593.848877, 2.438780, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3940, 3290.480469, 2631.781982, 5.661000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(972, 3261.516846, 2633.703613, 1.992730, 0.000000, 0.000000, 240.000000);
	CreateDynamicObject_FR(3095, 3415.514893, 2593.848633, 2.438780, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3406.518799, 2602.835693, 2.429580, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3424.492676, 2593.847900, 2.438780, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3349.863037, 2623.671631, 1.992730, 0.000000, 0.000000, 250.000000);
	CreateDynamicObject_FR(3095, 3415.508301, 2602.831299, 2.429580, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3338.771240, 2630.367676, 1.992730, 0.000000, 0.000000, 240.000000);
	CreateDynamicObject_FR(4648, 3329.889893, 2633.482666, 2.873900, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(3095, 3424.505615, 2602.838867, 2.429580, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3095, 3406.516602, 2611.833984, 2.415780, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3313.997803, 2637.198975, 1.992730, 0.000000, 0.000000, 265.000000);
	CreateDynamicObject_FR(3095, 3415.504395, 2611.825439, 2.415780, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3244.812500, 2640.498047, 1.992730, 0.000000, 0.000000, 259.997009);
	CreateDynamicObject_FR(3095, 3424.467773, 2611.820801, 2.415780, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(17536, 3349.475098, 2650.023438, 14.665600, 0.000000, 0.000000, 65.000000);
	CreateDynamicObject_FR(972, 3340.475830, 2651.467041, 1.992730, 0.000000, 0.000000, 259.997009);
	CreateDynamicObject_FR(3998, 3262.387695, 2649.827637, 4.185800, 0.000000, 0.000000, 80.000000);
	CreateDynamicObject_FR(17536, 3191.796875, 2632.603027, 13.805400, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3315.991699, 2655.794678, 1.992730, 0.000000, 0.000000, 260.000000);
	CreateDynamicObject_FR(7596, 3384.340332, 2657.947998, 7.098200, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(972, 3311.850342, 2662.974854, 1.992730, 0.000000, 0.000000, 305.000000);
	CreateDynamicObject_FR(1675, 3227.136719, 2645.624023, 5.609000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3275.453369, 2664.476563, 1.992730, 0.000000, 0.000000, 240.000000);
	CreateDynamicObject_FR(972, 3315.291992, 2669.787354, 1.992730, 0.000000, 0.000000, 340.000000);
	CreateDynamicObject_FR(1675, 3175.886230, 2626.747070, 5.052400, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3275.072021, 2666.586426, 1.992730, 0.000000, 0.000000, 210.000000);
	CreateDynamicObject_FR(1675, 3227.148193, 2654.371094, 5.618200, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3819, 3294.629395, 2676.158203, 3.629950, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(9922, 3381.273682, 2677.538330, -28.644140, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(839, 3296.279053, 2683.046387, 4.004500, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3230.548828, 2664.838379, 1.992730, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(972, 3231.847412, 2665.450684, 1.992730, 0.000000, 0.000000, 330.000000);
	CreateDynamicObject_FR(972, 3203.884521, 2651.420410, 1.992730, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(972, 3319.290283, 2689.157959, 1.992730, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3940, 3254.126221, 2676.373779, 5.513800, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(972, 3229.805664, 2667.614014, 1.992730, 0.000000, 0.000000, 300.000000);
	CreateDynamicObject_FR(7605, 3294.562012, 2688.967285, 2.572470, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(615, 3291.260254, 2689.092285, 2.650590, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(838, 3295.801758, 2694.039307, 5.303300, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3819, 3294.178955, 2702.352539, 3.629950, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(972, 3315.854492, 2707.859863, 1.992730, 0.000000, 0.000000, 30.000000);
	CreateDynamicObject_FR(3940, 3254.930664, 2701.461914, 5.467800, 0.000000, 0.000000, 269.994995);
	CreateDynamicObject_FR(972, 3305.270996, 2719.302246, 1.992730, 0.000000, 0.000000, 60.000000);
	CreateDynamicObject_FR(972, 3275.491455, 2713.125488, 1.992730, 0.000000, 0.000000, 150.000000);
	CreateDynamicObject_FR(746, 3220.190430, 2686.723877, 2.632480, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(16092, 3221.362305, 2688.898193, 2.472600, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3270.394287, 2713.348145, 1.992730, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(972, 3293.640137, 2721.757813, 1.992730, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(972, 3283.172852, 2718.871826, 1.992730, 0.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(972, 3186.049805, 2664.997559, 1.992730, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(745, 3210.430176, 2685.041016, 2.480400, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(7605, 3210.701172, 2688.927734, 2.402270, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(747, 3214.823486, 2692.686768, 2.480400, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3183.831055, 2671.191406, 1.992730, 0.000000, 0.000000, 240.000000);
	CreateDynamicObject_FR(972, 3233.864502, 2708.134766, 1.992730, 0.000000, 0.000000, 29.997999);
	CreateDynamicObject_FR(744, 3205.349609, 2692.077148, 2.480400, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(16092, 3200.628174, 2688.927734, 2.472600, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(972, 3227.660400, 2710.557617, 1.992730, 0.000000, 0.000000, 60.000000);
	CreateDynamicObject_FR(972, 3181.159912, 2677.151123, 1.992730, 0.000000, 0.000000, 210.000000);
	CreateDynamicObject_FR(3698, 3140.178711, 2630.006592, 4.750000, 0.000000, 0.000000, 325.000000);
	CreateDynamicObject_FR(972, 3213.382813, 2713.316650, 1.992730, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(972, 3178.217773, 2686.788818, 1.992730, 0.000000, 0.000000, 180.000000);
	CreateDynamicObject_FR(972, 3192.180176, 2708.959717, 1.992730, 0.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(972, 3181.026367, 2700.536865, 1.992730, 0.000000, 0.000000, 150.000000);
	CreateDynamicObject_FR(3783, 3123.056152, 2638.700439, 4.339000, 0.000000, 0.000000, 340.000000);
	CreateDynamicObject_FR(3980, 3140.124023, 2718.756836, 10.147920, 0.000000, 0.000000, 270.000000);
	CreateDynamicObject_FR(3820, 3106.068848, 2646.444336, 6.512400, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(4101, 3038.271484, 2700.193115, 19.437550, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(3980, 3058.279297, 2799.260254, 10.155720, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(4648, 3014.084229, 2640.980713, 2.122670, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(5708, 2977.869141, 2636.671875, 12.499720, 0.000000, 0.000000, 0.000000);
	
	//CHILLIAD
	CreateDynamicObject_FR(3461, -2343.78003, -1608.62000, 484.20999,   0.00000, 0.00000, 57.00000);
	CreateDynamicObject_FR(19128, -2340.94995, -1608.18994, 482.78000,   0.00000, 0.00000, 57.00000);
	CreateDynamicObject_FR(3461, -2343.31006, -1607.82996, 484.20999,   0.00000, 0.00000, 57.00000);
	CreateDynamicObject_FR(3461, -2342.75000, -1606.93994, 484.20999,   0.00000, 0.00000, 57.00000);
	CreateDynamicObject_FR(3461, -2342.28003, -1606.08997, 484.20999,   0.00000, 0.00000, 57.00000);
	CreateDynamicObject_FR(3461, -2341.75000, -1605.35999, 484.20999,   0.00000, 0.00000, 57.00000);
	CreateDynamicObject_FR(710, -2353.71997, -1612.47998, 495.89001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(710, -2357.75000, -1631.15002, 495.89001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(11491, -2334.60010, -1600.10999, 483.75000,   0.00000, 0.52000, 54.44000);
	CreateDynamicObject_FR(710, -2352.87012, -1647.53003, 495.89001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(11490, -2343.65991, -1593.71997, 482.22000,   0.00000, 0.52000, 54.88000);
	CreateDynamicObject_FR(3532, -2330.75000, -1591.75000, 483.10999,   0.00000, 0.00000, -30.80000);
	CreateDynamicObject_FR(3532, -2329.42993, -1592.29004, 483.10999,   0.00000, 0.00000, -30.80000);
	CreateDynamicObject_FR(710, -2347.87012, -1590.17004, 495.89001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3532, -2329.38989, -1589.89001, 483.10999,   0.00000, 0.00000, -30.80000);
	CreateDynamicObject_FR(3532, -2327.07007, -1588.80005, 483.10999,   0.00000, 0.00000, -30.80000);
	CreateDynamicObject_FR(3532, -2327.52002, -1586.91003, 483.10999,   0.00000, 0.00000, -30.80000);
	CreateDynamicObject_FR(3532, -2326.19995, -1587.37000, 483.10999,   0.00000, 0.00000, -30.80000);
	CreateDynamicObject_FR(8397, -2383.32007, -1624.79004, 475.17999,   -14.85000, -10.27000, 11.91000);
	CreateDynamicObject_FR(710, -2342.33008, -1664.95996, 495.89001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -2378.85010, -1598.20996, 475.17999,   -14.85000, 0.00000, 12.32000);
	CreateDynamicObject_FR(710, -2310.41992, -1592.48999, 489.01001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18858, -2305.47998, -1593.88000, 483.95999,   0.00000, 0.00000, -206.89999);
	CreateDynamicObject_FR(710, -2301.53003, -1597.79004, 489.01001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(711, -2294.06006, -1611.19995, 488.29001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -2394.10010, -1633.14001, 475.17999,   19.85000, 0.00000, 12.32000);
	CreateDynamicObject_FR(710, -2339.96997, -1571.50000, 495.89001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(710, -2329.37988, -1674.29004, 489.01001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(711, -2286.17993, -1622.23999, 488.29001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18858, -2324.46997, -1677.13000, 483.95999,   0.00000, 0.00000, -196.74001);
	CreateDynamicObject_FR(710, -2319.59009, -1677.53003, 489.01001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(711, -2282.61011, -1644.10999, 488.29001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -2407.83008, -1621.96997, 485.04001,   -2.93000, 0.00000, 12.32000);
	CreateDynamicObject_FR(18830, -2277.90991, -1631.97998, 487.39999,   0.00000, -148.84000, 189.89000);
	CreateDynamicObject_FR(711, -2284.32007, -1657.30005, 487.72000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18824, -2294.34009, -1576.33997, 496.07999,   0.00000, -50.33000, 237.70000);
	CreateDynamicObject_FR(18824, -2329.95996, -1697.03003, 496.51999,   0.00000, -49.83000, -285.44000);
	CreateDynamicObject_FR(8397, -2274.97998, -1628.27002, 443.53000,   14.85000, 0.00000, 12.32000);
	CreateDynamicObject_FR(8397, -2273.12012, -1634.18005, 443.53000,   -14.85000, 0.00000, 12.32000);
	CreateDynamicObject_FR(18824, -2279.12012, -1552.53003, 531.96002,   0.00000, 127.58000, 237.70000);
	CreateDynamicObject_FR(18824, -2331.46997, -1723.78003, 533.37000,   0.00000, 129.92000, -261.10001);
	CreateDynamicObject_FR(18789, -2228.39990, -1571.37000, 481.34000,   0.00000, 0.00000, 35.95000);
	CreateDynamicObject_FR(18789, -2208.44995, -1662.12000, 481.72000,   2.26000, 0.00000, -8.71000);
	CreateDynamicObject_FR(726, -2260.39990, -1737.28003, 486.32001,   0.00000, 0.00000, -47.96000);
	CreateDynamicObject_FR(18809, -2255.61011, -1513.88000, 541.40997,   0.44000, 90.00000, 239.47000);
	CreateDynamicObject_FR(18824, -2336.46997, -1765.38000, 543.59003,   90.00000, 145.84000, 0.00000);
	CreateDynamicObject_FR(9131, -2240.15967, -1745.79663, 480.88040,   -45.00000, 0.00000, -47.96000);
	CreateDynamicObject_FR(9131, -2240.11011, -1745.68994, 483.32999,   0.00000, 990.00000, 40.32000);
	CreateDynamicObject_FR(9131, -2239.46997, -1745.15002, 482.57999,   0.00000, 0.00000, -47.96000);
	CreateDynamicObject_FR(9131, -2237.35864, -1743.29553, 481.82999,   0.00000, 990.00000, 40.32000);
	CreateDynamicObject_FR(9131, -2239.46997, -1745.15002, 480.97000,   0.00000, 0.00000, -47.96000);
	CreateDynamicObject_FR(9131, -2240.99927, -1746.34473, 482.53424,   0.00000, 0.00000, -47.96000);
	CreateDynamicObject_FR(9131, -2237.51001, -1743.54004, 483.32999,   0.00000, 990.00000, 40.32000);
	CreateDynamicObject_FR(9131, -2236.62988, -1742.77002, 482.56000,   0.00000, 0.00000, -47.96000);
	CreateDynamicObject_FR(9131, -2236.62988, -1742.77002, 480.97000,   0.00000, 0.00000, -47.96000);
	CreateDynamicObject_FR(9131, -2235.60010, -1741.84998, 480.97000,   0.00000, 0.00000, -47.96000);
	CreateDynamicObject_FR(9131, -2234.93994, -1741.30005, 483.32999,   0.00000, 990.00000, 40.32000);
	CreateDynamicObject_FR(9131, -2234.51001, -1740.87000, 480.25000,   0.00000, 990.00000, 40.32000);
	CreateDynamicObject_FR(9131, -2234.47998, -1740.89001, 481.72000,   0.00000, 990.00000, 40.32000);
	CreateDynamicObject_FR(9131, -2233.92993, -1740.41003, 482.60001,   0.00000, 0.00000, -47.96000);
	CreateDynamicObject_FR(18824, -2371.27002, -1795.88000, 543.57001,   90.00000, 305.84000, 18.08000);
	CreateDynamicObject_FR(18809, -2230.28003, -1470.88000, 541.34998,   0.44000, 90.00000, 239.47000);
	CreateDynamicObject_FR(18788, -2167.48999, -1527.37000, 481.16000,   0.00000, -13.86000, 35.95000);
	CreateDynamicObject_FR(18788, -2160.69995, -1522.48999, 482.70001,   0.00000, -25.41000, 35.95000);
	CreateDynamicObject_FR(18788, -2153.81006, -1517.52002, 485.78000,   0.00000, -34.26000, 35.95000);
	CreateDynamicObject_FR(18809, -2376.00000, -1841.93994, 543.57001,   90.00000, 305.84000, 63.71000);
	CreateDynamicObject_FR(18809, -2204.89990, -1427.82996, 541.34998,   0.44000, 90.00000, 239.47000);
	CreateDynamicObject_FR(18789, -2083.66162, -1678.78467, 427.03610,   2.00000, 47.00000, -8.16000);
	CreateDynamicObject_FR(18809, -2367.87988, -1889.89001, 543.57001,   90.00000, 305.84000, 63.71000);
	CreateDynamicObject_FR(18809, -2179.51001, -1384.81995, 541.34998,   0.44000, 90.00000, 239.47000);
	CreateDynamicObject_FR(18809, -2154.12012, -1341.78003, 541.34998,   0.44000, 90.00000, 239.47000);
	CreateDynamicObject_FR(1632, -2139.59009, -1316.51001, 537.37000,   0.44000, 0.00000, -27.61000);
	CreateDynamicObject_FR(18789, -1981.92700, -1689.52771, 317.46841,   2.00000, 47.00000, -8.16000);
	CreateDynamicObject_FR(18824, -2371.84009, -1936.13000, 543.57001,   90.00000, 145.84000, 0.00000);
	CreateDynamicObject_FR(18809, -2413.35010, -1956.84998, 543.57001,   90.00000, 305.84000, 156.14999);
	CreateDynamicObject_FR(18809, -2462.19995, -1967.21997, 543.57001,   90.00000, 305.84000, 156.14999);
	CreateDynamicObject_FR(1632, -2490.79004, -1973.44995, 539.87000,   2.88000, 0.00000, 103.98000);
	CreateDynamicObject_FR(18789, -1880.41516, -1701.04163, 207.97610,   2.00000, 47.00000, 350.91110);
	CreateDynamicObject_FR(18789, -1782.25427, -1713.04407, 102.10780,   2.00000, 47.00000, 350.91110);
	CreateDynamicObject_FR(18830, -1723.06665, -1726.28784, 51.60813,   0.00000, -200.00000, 348.05301);
	CreateDynamicObject_FR(18830, -1720.90686, -1715.32898, 51.60813,   0.00000, -200.00000, 348.53299);
	CreateDynamicObject_FR(9131, -2240.11011, -1745.68994, 481.72675,   0.00000, 990.00000, 40.32000);

	//Liberty City LC
	LinkVehicleToInterior(AddStaticVehicleEx(405, -757.4554, 504.6992, 1372.0, 274.0, 25, 1, FR_VEHICLES_RESPAWN_TIME), 1);
	LinkVehicleToInterior(AddStaticVehicleEx(405, -758.0460, 508.1261, 1372.0, 94.0, 25, 1, FR_VEHICLES_RESPAWN_TIME), 1);
	LinkVehicleToInterior(AddStaticVehicleEx(405, -789.5652, 485.4703, 1382.0, 270.0, 53, 1, FR_VEHICLES_RESPAWN_TIME), 1);
	
	CreateDynamicObject_FR(972, -716.50000, 503.29999, 1370.69995,   0.00000, 0.00000, 340.00000);
	CreateDynamicObject_FR(972, -726.70001, 483.39999, 1370.69995,   0.00000, 0.00000, 325.00000);
	CreateDynamicObject_FR(972, -743.00000, 467.79999, 1368.69995,   7.00000, 0.00000, 305.00000);
	CreateDynamicObject_FR(972, -763.00000, 456.00000, 1365.90002,   9.00000, 0.00000, 298.00000);
	CreateDynamicObject_FR(972, -783.00000, 449.79999, 1362.30005,   10.00000, 0.00000, 277.00000);
	CreateDynamicObject_FR(972, -807.00000, 448.50000, 1355.00000,   10.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(972, -826.50000, 448.00000, 1352.00000,   10.00000, 0.00000, 272.00000);
	CreateDynamicObject_FR(972, -851.00000, 440.00000, 1349.00000,   7.00000, 0.00000, 300.00000);
	CreateDynamicObject_FR(972, -889.90002, 443.70001, 1343.00000,   7.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(5013, -725.65216, 562.02350, 1371.09912,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(4848, -874.10443, 435.15048, 1349.46594,   0.00000, 0.00000, 0.00010);
	CreateDynamicObject_FR(4848, -855.98230, 435.17410, 1354.28503,   0.00000, 0.00000, 0.00010);
	CreateDynamicObject_FR(4848, -804.67163, 480.66504, 1361.18628,   0.00000, 11.17270, 180.00000);
	CreateDynamicObject_FR(4848, -834.64172, 480.66406, 1355.24756,   0.00000, 11.17270, 180.00000);
	CreateDynamicObject_FR(4848, -806.04553, 480.36514, 1373.52942,   0.00000, 0.85940, 180.00000);
	CreateDynamicObject_FR(4848, -756.11145, 518.32141, 1375.09412,   0.00000, 0.85940, 180.85950);
	CreateDynamicObject_FR(4848, -772.10083, 518.26373, 1379.73389,   0.00000, 0.85940, 180.00000);
	CreateDynamicObject_FR(4848, -793.71021, 518.11725, 1384.03760,   0.00000, 0.85940, 180.00000);
	CreateDynamicObject_FR(17531, -864.99530, 482.23560, 1351.66699,   359.14059, 0.85940, 270.00000);
	CreateDynamicObject_FR(13132, -914.07361, 508.13242, 1349.23706,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8428, -910.62762, 440.31259, 1349.08862,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(4848, -855.64502, 438.94522, 1345.90784,   0.00000, 354.84341, 0.00010);
	CreateDynamicObject_FR(4848, -875.45441, 438.74728, 1343.99121,   0.00000, 353.98389, 0.00010);
	CreateDynamicObject_FR(1505, -848.60852, 441.33716, 1351.96558,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1505, -858.61267, 441.43713, 1351.07922,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1505, -868.58929, 441.38852, 1349.96509,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1505, -878.57697, 441.31354, 1349.04712,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1505, -888.61578, 441.28854, 1348.00635,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(9949, -703.43860, 550.05652, 1382.98987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(5013, -900.72742, 513.12018, 1346.01257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(4848, -884.36694, 531.00616, 1349.64880,   0.00000, 0.00000, 270.00009);
	CreateDynamicObject_FR(4848, -883.88995, 550.30005, 1349.68445,   0.00000, 0.00000, 270.00009);
	CreateDynamicObject_FR(5013, -900.68457, 593.99841, 1346.01746,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(4848, -875.27350, 499.45978, 1348.13440,   0.00000, 0.00000, 0.00010);
	CreateDynamicObject_FR(4848, -884.32770, 488.43655, 1348.08813,   2.57830, 0.00000, 90.00000);
	CreateDynamicObject_FR(4848, -734.82800, 572.85748, 1367.38354,   0.00000, 0.00000, 90.00010);
	CreateDynamicObject_FR(734, -732.62860, 472.51477, 1370.28540,   0.00000, 0.00000, 314.99991);
	CreateDynamicObject_FR(733, -716.28467, 492.07434, 1366.06433,   0.00000, 0.00000, 213.74989);
	CreateDynamicObject_FR(728, -719.14594, 500.96744, 1371.29956,   0.00000, 0.00000, 213.74989);
	CreateDynamicObject_FR(4848, -846.88275, 587.40253, 1347.23767,   0.00000, 6.87550, 179.14059);
	CreateDynamicObject_FR(4848, -850.96704, 589.09735, 1353.54834,   0.00000, 6.87550, 180.00000);
	CreateDynamicObject_FR(4848, -824.48364, 587.99133, 1355.55127,   0.00000, 0.85940, 180.00000);
	CreateDynamicObject_FR(4848, -796.85699, 588.04541, 1361.39185,   0.00000, 9.45380, 180.00000);
	CreateDynamicObject_FR(4848, -775.65662, 588.05328, 1367.13757,   0.00000, 9.45380, 180.00000);
	CreateDynamicObject_FR(4848, -756.10828, 588.04260, 1370.78674,   0.00000, 9.45380, 180.00000);
	CreateDynamicObject_FR(4848, -883.01410, 510.68707, 1348.03491,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(4848, -884.49377, 515.00787, 1343.09607,   354.84341, 0.00000, 90.00000);
	CreateDynamicObject_FR(4848, -754.29993, 578.76953, 1363.45349,   0.00000, 16.32930, 180.00000);
	CreateDynamicObject_FR(3361, -847.85779, 440.79346, 1352.26050,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3361, -857.86292, 440.70117, 1351.19885,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3361, -867.89496, 440.73868, 1350.16858,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3361, -877.88824, 440.86353, 1349.35876,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3361, -887.78589, 440.72260, 1348.14514,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(4848, -738.69635, 542.28003, 1367.55286,   0.00000, 0.00000, 90.00010);
	CreateDynamicObject_FR(13006, -941.91632, 546.66711, 1345.82849,   0.00000, 0.00000, 271.71890);
	CreateDynamicObject_FR(10063, -924.53107, 590.26447, 1359.22534,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18240, -929.70819, 567.41705, 1345.96118,   0.00000, 0.00000, 270.00031);
	CreateDynamicObject_FR(18240, -944.67828, 533.11877, 1345.78625,   0.00000, 0.00000, 91.71890);
	CreateDynamicObject_FR(10063, -901.03912, 609.32300, 1359.15686,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(4848, -875.03705, 586.98468, 1343.83032,   0.00000, 6.87550, 179.14059);
	CreateDynamicObject_FR(823, -821.30188, 576.97577, 1355.51318,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1506, -908.65448, 510.71671, 1346.18164,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(1506, -890.68188, 541.32599, 1346.20691,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(4848, -756.05023, 519.41351, 1375.23120,   0.00000, 0.85940, 0.00010);
	CreateDynamicObject_FR(5017, -917.12091, 488.68082, 1349.39050,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1506, -910.03668, 496.85544, 1346.12427,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(4848, -926.39319, 517.13666, 1347.42249,   0.00000, 0.00000, 0.00010);
	CreateDynamicObject_FR(4848, -884.88916, 600.67474, 1342.46350,   0.00000, 0.00000, 270.00009);
	CreateDynamicObject_FR(734, -750.75818, 447.28873, 1363.65051,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(4848, -744.25311, 550.31622, 1374.57910,   89.38140, 0.00000, 90.00010);
	CreateDynamicObject_FR(4848, -744.22400, 532.37921, 1374.72852,   90.24080, 0.00000, 90.00010);
	CreateDynamicObject_FR(4848, -744.25458, 587.67615, 1374.55408,   90.24080, 0.00000, 90.00010);
	CreateDynamicObject_FR(4848, -747.03979, 550.15448, 1374.92871,   89.38140, 0.00000, 270.00009);
	CreateDynamicObject_FR(4880, -715.17157, 596.16962, 1376.88989,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(733, -764.17572, 446.85501, 1364.11829,   0.00000, 0.00000, 281.24991);
	CreateDynamicObject_FR(4848, -925.89142, 478.26486, 1347.07764,   356.56229, 0.00000, 0.00010);
	CreateDynamicObject_FR(8171, -720.70001, 598.00000, 1370.88000,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8000, -849.00000, 670.00000, 1351.40002,   0.00000, 168.80000, 0.00000);
	CreateDynamicObject_FR(8000, -880.00000, 670.00000, 1349.00000,   0.00000, 174.30000, 0.00000);
	CreateDynamicObject_FR(8172, -891.00000, 550.00000, 1345.84998,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8000, -900.00000, 595.90002, 1342.90002,   0.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(8000, -1020.00000, 662.73999, 1336.80005,   0.00000, 174.20000, 0.00000);
	CreateDynamicObject_FR(8171, -960.59998, 513.15002, 1340.87000,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8171, -907.69897, 375.80301, 1338.90002,   5.80000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8171, -907.69897, 397.00299, 1340.85999,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8171, -887.69897, 347.00299, 1340.85999,   0.00000, 180.00000, 220.00000);
	CreateDynamicObject_FR(8171, -869.29901, 406.50299, 1333.19995,   0.00000, 202.80000, 0.00000);
	CreateDynamicObject_FR(8000, -788.70001, 359.39999, 1335.00000,   0.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(8000, -705.62598, 369.10001, 1327.09998,   203.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8171, -960.70001, 375.18399, 1334.00000,   185.71001, 0.00000, 0.00000);
	CreateDynamicObject_FR(8000, -1014.46997, 290.52802, 1337.90002,   0.00000, 180.00000, 90.00000);
	CreateDynamicObject_FR(8171, -1000.52002, 443.14999, 1338.88000,   0.00000, 174.30000, 0.00000);
	CreateDynamicObject_FR(8171, -1020.52002, 443.14999, 1336.88000,   0.00000, 174.30000, 0.00000);
	CreateDynamicObject_FR(8000, -1020.32001, 497.01099, 1337.85999,   0.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(8000, -1088.21997, 547.01099, 1337.85999,   0.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(8171, -1130.50000, 596.75000, 1332.76001,   0.00000, 170.80000, 270.00000);
	CreateDynamicObject_FR(8000, -1138.21997, 697.01099, 1332.69995,   0.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(8000, -1218.21997, 547.01099, 1337.85706,   0.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(8000, -1218.21997, 327.01099, 1337.85999,   0.00000, 180.00000, 90.00000);
	CreateDynamicObject_FR(8171, -1271.50000, 596.75000, 1335.94995,   0.00000, 180.00000, 90.00000);
	CreateDynamicObject_FR(8171, -1311.50000, 546.75000, 1335.94995,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8171, -1311.50000, 408.50000, 1335.94995,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8171, -1311.50000, 278.50000, 1335.94995,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8171, -1218.19995, 277.39999, 1335.90002,   0.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(8172, -1201.00000, 259.50000, 1335.94995,   0.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(8172, -1119.50000, 359.89999, 1335.84998,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8172, -1113.71997, 339.79999, 1335.64001,   0.00000, 179.20000, 0.00000);
	CreateDynamicObject_FR(8171, -930.59998, 512.90302, 1343.94995,   0.00000, 174.30000, 0.00000);
	CreateDynamicObject_FR(8171, -950.59998, 512.90302, 1341.91797,   0.00000, 174.30000, 0.00000);
	CreateDynamicObject_FR(8171, -998.56000, 562.90002, 1332.17004,   0.00000, 154.00000, 0.00000);
	CreateDynamicObject_FR(8171, -1008.56000, 562.90002, 1335.93994,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8171, -1042.82996, 646.00000, 1335.90002,   0.00000, 180.00000, 0.00000);

	//Cannon LV
	CreateDynamicObject_FR(10281, 1974.239990, 1899.160034, 123.199997, 0.000000, 0.000000, 30.000000);
	CreateDynamicObject_FR(18778, 2001.750000, 1852.520020, 122.129997, 354.920013, 0.000000, 210.000000);
	CreateDynamicObject_FR(18851, 2016.290039, 1827.250000, 126.019997, 0.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(18997, 2030.969971, 1801.790039, 124.489998, 0.000000, 90.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2013.270020, 1832.459961, 119.459999, 0.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2012.369995, 1831.939941, 119.570000, 12.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2011.510010, 1831.439941, 119.900002, 24.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2010.729980, 1830.989990, 120.419998, 36.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2010.060059, 1830.599976, 121.120003, 48.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2009.520020, 1830.290039, 121.959999, 60.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2009.160034, 1830.079956, 122.919998, 72.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2008.969971, 1829.969971, 123.940002, 84.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2008.969971, 1829.969971, 124.989998, 84.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2009.160034, 1830.079956, 126.010002, 72.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2009.520020, 1830.290039, 126.959999, 60.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2010.060059, 1830.599976, 127.809998, 48.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2010.729980, 1830.989990, 128.509995, 36.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2011.510010, 1831.439941, 129.029999, 24.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2012.369995, 1831.939941, 129.350006, 12.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2013.270020, 1832.459961, 129.460007, 0.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2014.180054, 1832.979980, 129.350006, 348.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2015.040039, 1833.469971, 129.029999, 336.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2015.819946, 1833.930054, 128.509995, 324.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2016.489990, 1834.310059, 127.809998, 312.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2017.020020, 1834.619995, 126.959999, 300.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2017.390015, 1834.829956, 126.010002, 288.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2017.579956, 1834.939941, 124.989998, 276.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2017.579956, 1834.939941, 123.940002, 276.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2017.390015, 1834.829956, 122.919998, 288.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2017.020020, 1834.619995, 121.959999, 300.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2016.489990, 1834.310059, 121.120003, 312.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2015.819946, 1833.930054, 120.419998, 324.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2015.040039, 1833.469971, 119.900002, 336.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2014.180054, 1832.979980, 119.570000, 348.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2023.250000, 1815.180054, 119.480003, 0.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(18674, 2033.829956, 1802.189941, 114.029999, 0.000000, 0.000000, 37.990002);
	CreateDynamicObject_FR(19129, 2022.349976, 1814.660034, 119.589996, 12.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2021.489990, 1814.160034, 119.910004, 24.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2020.699951, 1813.709961, 120.430000, 36.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2020.030029, 1813.319946, 121.129997, 48.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2019.500000, 1813.010010, 121.980003, 60.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2019.130005, 1812.800049, 122.930000, 72.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2018.939941, 1812.689941, 123.959999, 84.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2018.939941, 1812.689941, 125.000000, 84.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2019.130005, 1812.800049, 126.019997, 72.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2019.500000, 1813.010010, 126.980003, 60.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2020.030029, 1813.319946, 127.830002, 48.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2020.699951, 1813.709961, 128.520004, 36.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2021.489990, 1814.160034, 129.050003, 24.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2022.349976, 1814.660034, 129.369995, 12.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2023.250000, 1815.180054, 129.479996, 0.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2024.150024, 1815.699951, 129.369995, 348.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2025.010010, 1816.189941, 129.050003, 336.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2025.800049, 1816.650024, 128.520004, 324.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2026.469971, 1817.040039, 127.830002, 312.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2027.000000, 1817.339966, 126.980003, 300.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2027.369995, 1817.550049, 126.019997, 288.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2027.560059, 1817.660034, 125.000000, 276.000000, 180.000000, 300.000000);
	CreateDynamicObject_FR(19129, 2027.560059, 1817.660034, 123.959999, 276.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2027.369995, 1817.550049, 122.930000, 288.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2027.000000, 1817.339966, 121.980003, 300.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2026.469971, 1817.040039, 121.129997, 312.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2025.800049, 1816.650024, 120.430000, 324.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2025.010010, 1816.189941, 119.910004, 336.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(19129, 2024.150024, 1815.699951, 119.589996, 348.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(3578, 1978.719971, 1896.979980, 121.570000, 0.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(3578, 1974.609985, 1894.510010, 121.580002, 0.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(3578, 1979.650024, 1885.760010, 120.709999, 0.000000, 350.000000, 120.000000);
	CreateDynamicObject_FR(3578, 1983.739990, 1888.250000, 120.709999, 0.000000, 350.000000, 120.000000);
	CreateDynamicObject_FR(3578, 1983.780029, 1879.030029, 120.239998, 0.000000, 0.000000, 122.500000);
	CreateDynamicObject_FR(3578, 1987.469971, 1881.329956, 120.239998, 0.000000, 0.000000, 117.500000);
	CreateDynamicObject_FR(3578, 1987.189941, 1867.750000, 120.250000, 0.000000, 0.000000, 140.000000);
	CreateDynamicObject_FR(3578, 1995.530029, 1872.680054, 120.250000, 0.000000, 0.000000, 100.000000);
	CreateDynamicObject_FR(3578, 1994.599976, 1872.650024, 120.250000, 0.000000, 0.000000, 90.000000);
	CreateDynamicObject_FR(3578, 1987.660034, 1868.530029, 120.250000, 0.000000, 0.000000, 150.000000);
	CreateDynamicObject_FR(3578, 1994.060059, 1861.959961, 120.250000, 0.000000, 0.000000, 140.000000);
	CreateDynamicObject_FR(3578, 1989.270020, 1870.380005, 120.239998, 0.000000, 0.000000, 122.500000);
	CreateDynamicObject_FR(3578, 1992.199951, 1872.209961, 120.239998, 0.000000, 0.000000, 117.500000);
	CreateDynamicObject_FR(3578, 1997.089966, 1863.719971, 120.250000, 0.000000, 0.000000, 100.000000);
	CreateDynamicObject_FR(1383, 2015.689941, 1828.290039, 96.959999, 0.000000, 306.109985, 120.000000);
	CreateDynamicObject_FR(1383, 2009.630005, 1838.780029, 94.699997, 0.000000, 318.250000, 119.989998);
	CreateDynamicObject_FR(1383, 2005.439941, 1846.050049, 88.059998, 0.000000, 337.929993, 119.989998);
	CreateDynamicObject_FR(7588, 2083.590088, 1917.770020, 14.020000, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(7588, 1963.260010, 1857.890015, 124.760002, 0.000000, 0.000000, 30.690001);
	CreateDynamicObject_FR(10444, 1963.790039, 1884.119995, 118.709999, 0.000000, 0.000000, 210.000000);
	CreateDynamicObject_FR(10444, 1951.280029, 1876.910034, 118.709999, 0.000000, 0.000000, 210.000000);
	CreateDynamicObject_FR(10444, 1966.469971, 1850.660034, 118.709999, 0.000000, 0.000000, 210.000000);
	CreateDynamicObject_FR(10444, 1978.989990, 1857.859985, 118.709999, 0.000000, 0.000000, 210.000000);
	CreateDynamicObject_FR(10444, 1987.910034, 1837.119995, 118.709999, 0.000000, 0.000000, 120.000000);
	CreateDynamicObject_FR(3508, 1971.050049, 1876.640015, 123.599998, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(619, 1948.189941, 1873.209961, 122.589996, 0.000000, 0.000000, 186.759995);
	CreateDynamicObject_FR(619, 1949.699951, 1847.979980, 127.019997, 0.000000, 0.000000, 130.710007);
	CreateDynamicObject_FR(619, 1979.439941, 1829.170044, 124.739998, 0.000000, 0.000000, 199.000000);
	CreateDynamicObject_FR(620, 1947.790039, 1856.400024, 119.459999, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(620, 1967.729980, 1837.400024, 126.730003, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(620, 1955.719971, 1892.939941, 121.809998, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(18809, 2041.300049, 1783.930054, 124.449997, 0.000000, 90.000000, 120.000000);
	CreateDynamicObject_FR(8171, 2038.520020, 1789.089966, 123.489998, 180.000000, 0.000000, 210.000000);
	CreateDynamicObject_FR(18809, 2058.820068, 1753.589966, 124.449997, 0.000000, 90.000000, 120.000000);
	CreateDynamicObject_FR(18779, 2085.280029, 1720.020020, 130.020004, 0.000000, 350.429993, 120.000000);
	CreateDynamicObject_FR(18997, 2046.079956, 1775.660034, 124.489998, 0.000000, 90.000000, 120.000000);
	CreateDynamicObject_FR(18997, 2041.000000, 1784.449951, 124.489998, 0.000000, 90.000000, 120.000000);
	CreateDynamicObject_FR(18997, 2036.020020, 1793.109985, 124.489998, 0.000000, 90.000000, 120.000000);
	CreateDynamicObject_FR(18997, 2051.030029, 1767.079956, 124.489998, 0.000000, 90.000000, 120.000000);
	CreateDynamicObject_FR(18997, 2056.050049, 1758.420044, 124.489998, 0.000000, 90.000000, 120.000000);
	CreateDynamicObject_FR(18997, 2061.020020, 1749.780029, 124.489998, 0.000000, 90.000000, 120.000000);
	CreateDynamicObject_FR(18997, 2066.050049, 1741.079956, 124.489998, 0.000000, 90.000000, 120.000000);
	CreateDynamicObject_FR(18674, 2051.270020, 1777.849976, 114.029999, 0.000000, 0.000000, 37.990002);
	CreateDynamicObject_FR(18674, 2061.820068, 1745.469971, 114.029999, 0.000000, 0.000000, 37.990002);
	CreateDynamicObject_FR(14553, 2082.429932, 1712.209961, 117.980003, 350.489990, 0.000000, 30.000000);
	
	//Chilliad Coaster
	CreateDynamicObject_FR(18779, -2237.822510, -1726.835083, 482.953430, 0.000000, 348.401733, 117.123474);
	CreateDynamicObject_FR(18784, -2224.823730, -1763.234009, 473.942017, 320.176758, 14.191467, 207.984772);
	CreateDynamicObject_FR(18784, -2125.213379, -1774.958374, 442.694427, 0.000000, 358.598755, 330.605957);
	CreateDynamicObject_FR(18784, -2218.322998, -1771.424805, 466.473999, -31.355688, 18.234709, -133.785767);
	CreateDynamicObject_FR(18784, -2208.698730, -1778.659302, 460.200714, -24.134373, 18.066740, -121.566498);
	CreateDynamicObject_FR(18784, -2196.800293, -1784.609253, 455.038269, -18.629383, 15.992685, -112.242104);
	CreateDynamicObject_FR(18784, -2183.477051, -1788.946533, 450.902802, -14.444444, 13.124475, -103.908424);
	CreateDynamicObject_FR(18784, -2169.578125, -1791.343140, 447.710419, -11.125307, 10.039331, -95.221161);
	CreateDynamicObject_FR(18784, -2155.953125, -1791.470703, 445.377258, -8.285134, 7.168734, -84.853859);
	CreateDynamicObject_FR(18784, -2143.450928, -1789.001221, 443.819458, -5.589315, 2.914667, -71.163826);
	CreateDynamicObject_FR(18784, -2132.921387, -1783.606567, 442.953156, -2.746788, 1.636275, -52.483437);
	CreateDynamicObject_FR(18784, -2169.404541, -1600.481201, 404.879883, 10.546722, 13.804016, 15.965942);
	CreateDynamicObject_FR(18784, -2120.256104, -1762.381714, 441.588257, -8.988359, 2.294710, -12.698011);
	CreateDynamicObject_FR(18784, -2118.696289, -1748.415283, 438.555328, -14.761462, 6.227066, 0.557142);
	CreateDynamicObject_FR(18784, -2119.999756, -1733.303223, 434.082489, -17.658060, 9.365671, 10.028841);
	CreateDynamicObject_FR(18784, -2123.632324, -1717.290039, 428.656525, -18.636454, 11.652354, 16.471920);
	CreateDynamicObject_FR(18784, -2129.059814, -1700.619751, 422.764282, -18.329102, 13.263148, 20.693090);
	CreateDynamicObject_FR(18784, -2135.747803, -1683.536743, 416.892517, -17.014597, 14.281058, 23.255260);
	CreateDynamicObject_FR(18784, -2143.162598, -1666.285278, 411.528107, -14.723774, 14.806761, 24.482349);
	CreateDynamicObject_FR(18784, -2150.770020, -1649.109741, 407.157806, -11.291840, 14.939905, 24.506594);
	CreateDynamicObject_FR(18784, -2158.035400, -1632.254395, 404.268463, -6.353358, 14.754717, 23.290112);
	CreateDynamicObject_FR(18784, -2164.425049, -1615.963379, 403.346893, 0.682644, 14.324065, 20.605621);
	CreateDynamicObject_FR(18784, -2188.891846, -1536.609497, 392.545990, 31.544128, 15.976379, 202.213242);
	CreateDynamicObject_FR(18784, -2316.005615, -1352.366699, 348.362640, 0.000000, 56.978546, 258.666138);
	CreateDynamicObject_FR(18784, -2192.372559, -1528.005859, 387.518799, 25.535408, 19.240549, -159.178238);
	CreateDynamicObject_FR(18784, -2196.350830, -1517.656738, 382.705536, 21.415194, 22.198093, -159.511032);
	CreateDynamicObject_FR(18784, -2200.847412, -1505.853027, 378.125061, 18.434431, 25.014139, -159.211899);
	CreateDynamicObject_FR(18784, -2205.883545, -1492.885498, 373.796295, 16.175753, 27.750999, -158.458542);
	CreateDynamicObject_FR(18784, -2211.479736, -1479.045044, 369.738129, 14.392913, 30.434938, -157.323395);
	CreateDynamicObject_FR(18784, -2217.657227, -1464.622559, 365.969482, 12.930733, 33.076832, -155.823547);
	CreateDynamicObject_FR(18784, -2224.437012, -1449.908691, 362.509216, 11.684157, 35.679958, -153.939713);
	CreateDynamicObject_FR(18784, -2231.839844, -1435.194458, 359.376251, 10.575980, 38.243317, -151.622177);
	CreateDynamicObject_FR(18784, -2239.886719, -1420.770630, 356.589478, 9.543717, 40.763252, -148.790543);
	CreateDynamicObject_FR(18784, -2248.598389, -1406.928101, 354.167786, 8.531123, 43.234421, -145.329681);
	CreateDynamicObject_FR(18784, -2257.996094, -1393.957642, 352.130066, 7.482391, 45.650795, -141.084366);
	CreateDynamicObject_FR(18784, -2268.100586, -1382.150269, 350.495239, 6.338955, 48.007198, -135.856461);
	CreateDynamicObject_FR(18784, -2278.932861, -1371.796509, 349.282196, 5.041209, 50.302147, -129.414871);
	CreateDynamicObject_FR(18784, -2290.513916, -1363.187500, 348.509796, 3.541049, 52.542873, -121.538307);
	CreateDynamicObject_FR(18784, -2302.864502, -1356.613892, 348.196991, 1.833034, 54.752869, -112.119484);
	CreateDynamicObject_FR(18784, -2329.350586, -1349.857056, 348.633575, 0.732738, 52.854221, -97.106644);
	CreateDynamicObject_FR(18784, -2341.525391, -1348.435181, 348.636047, 1.293679, 48.657883, -92.685127);
	CreateDynamicObject_FR(18784, -2353.409912, -1347.850708, 348.450012, 1.425763, 44.363125, -88.976257);
	CreateDynamicObject_FR(18784, -2365.884033, -1347.853394, 348.155396, 1.010138, 40.023438, -86.705956);
	CreateDynamicObject_FR(18784, -2379.827148, -1348.192749, 347.832153, 0.138517, 35.707108, -85.991310);
	CreateDynamicObject_FR(18784, -2396.119141, -1348.618530, 347.560181, -0.992696, 31.426292, -86.475418);
	CreateDynamicObject_FR(19002, -2174.985840, -1583.562866, 406.735046, 0.000000, 0.000000, 14.696929);
	CreateDynamicObject_FR(19002, -2176.158447, -1578.828369, 406.735046, 0.000000, 0.000000, 14.694213);
	CreateDynamicObject_FR(19002, -2177.566162, -1574.425049, 406.500458, 0.000000, 0.000000, 14.694213);
	CreateDynamicObject_FR(19002, -2179.208496, -1569.787109, 406.265869, 0.000000, 0.000000, 14.694213);
	CreateDynamicObject_FR(19002, -2180.381592, -1565.522217, 405.796692, 0.000000, 0.000000, 14.694213);
	CreateDynamicObject_FR(19002, -2181.788574, -1561.767578, 405.796692, 0.000000, 0.000000, 14.694213);
	CreateDynamicObject_FR(18228, -2100.092773, -1774.101074, 440.939667, 2.713256, 0.000000, 210.317154);
	CreateDynamicObject_FR(1225, -2120.899170, -1782.510132, 444.832428, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1225, -2114.280273, -1764.036865, 442.984894, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1225, -2113.266602, -1755.163330, 441.193390, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1225, -2141.888916, -1797.560669, 446.149139, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(758, -2135.017090, -1687.251343, 417.116791, 0.000000, 0.000000, 240.163147);
	CreateDynamicObject_FR(758, -2135.016602, -1687.250977, 417.116791, 0.000000, 0.000000, 240.161133);
	CreateDynamicObject_FR(879, -2235.168945, -1436.730469, 358.414612, 0.000000, 346.433655, 0.000000);
	CreateDynamicObject_FR(880, -2289.386719, -1359.430664, 353.329681, 0.000000, 51.552032, 112.865112);
	CreateDynamicObject_FR(18784, -2415.639893, -1348.880249, 347.419464, 357.797974, 27.154358, 272.307129);
	CreateDynamicObject_FR(18784, -2474.629395, -1354.424683, 330.884674, 20.469666, 20.327454, 272.576172);
	CreateDynamicObject_FR(18784, -2692.676270, -1415.013794, 270.478210, 0.000000, 43.412231, 311.613281);
	CreateDynamicObject_FR(18784, -2486.137451, -1354.984131, 326.650726, 20.257929, 21.900070, -86.253838);
	CreateDynamicObject_FR(18784, -2498.754639, -1355.866211, 322.078094, 19.997471, 23.500235, -85.157059);
	CreateDynamicObject_FR(18784, -2512.303955, -1357.093994, 317.252472, 19.684252, 25.108982, -84.073967);
	CreateDynamicObject_FR(18784, -2526.608154, -1358.690430, 312.259491, 19.311377, 26.713217, -82.961380);
	CreateDynamicObject_FR(18784, -2541.490479, -1360.678833, 307.184875, 18.869190, 28.302826, -81.783081);
	CreateDynamicObject_FR(18784, -2556.773438, -1363.082153, 302.114288, 18.344868, 29.869200, -80.504555);
	CreateDynamicObject_FR(18784, -2572.279785, -1365.923340, 297.133362, 17.721546, 31.404440, -79.089355);
	CreateDynamicObject_FR(18784, -2587.833008, -1369.225708, 292.327820, 16.977043, 32.900974, -77.495987);
	CreateDynamicObject_FR(18784, -2603.255371, -1373.012329, 287.783356, 16.081944, 34.351513, -75.674675);
	CreateDynamicObject_FR(18784, -2618.369873, -1377.306152, 283.585602, 14.996923, 35.749428, -73.563515);
	CreateDynamicObject_FR(18784, -2632.999756, -1382.130249, 279.820251, 13.669004, 37.089787, -71.083679);
	CreateDynamicObject_FR(18784, -2646.967529, -1387.507813, 276.572968, 12.026631, 38.371635, -68.133255);
	CreateDynamicObject_FR(18784, -2660.096191, -1393.461792, 273.929443, 9.973880, 39.602459, -64.579720);
	CreateDynamicObject_FR(18784, -2672.208740, -1400.015503, 271.975372, 7.385789, 40.806541, -60.252144);
	CreateDynamicObject_FR(18784, -2683.127686, -1407.191772, 270.796387, 4.111299, 42.039677, -54.936836);
	CreateDynamicObject_FR(18784, -2763.856689, -1640.598145, 251.006531, 16.836182, 28.455353, 10.071655);
	CreateDynamicObject_FR(18784, -2700.897949, -1423.377686, 270.654327, -0.386560, 43.087948, -43.190067);
	CreateDynamicObject_FR(18784, -2708.999756, -1433.098633, 270.884491, -0.506644, 42.664646, -38.826462);
	CreateDynamicObject_FR(18784, -2716.899902, -1444.049805, 271.117340, -0.413917, 42.167732, -35.042568);
	CreateDynamicObject_FR(18784, -2724.516113, -1456.104126, 271.301453, -0.141452, 41.611938, -31.657244);
	CreateDynamicObject_FR(18784, -2731.766113, -1469.134644, 271.385468, 0.292063, 41.005161, -28.537390);
	CreateDynamicObject_FR(18784, -2738.567871, -1483.014526, 271.317993, 0.878143, 40.350384, -25.581242);
	CreateDynamicObject_FR(18784, -2744.839355, -1497.616821, 271.047638, 1.615847, 39.646580, -22.707108);
	CreateDynamicObject_FR(18784, -2750.498047, -1512.814453, 270.523010, 2.510093, 38.888897, -19.845633);
	CreateDynamicObject_FR(18784, -2755.462158, -1528.480591, 269.692749, 3.570534, 38.068398, -16.934349);
	CreateDynamicObject_FR(18784, -2759.649414, -1544.488281, 268.505463, 4.810631, 37.171307, -13.913664);
	CreateDynamicObject_FR(18784, -2762.977539, -1560.710571, 266.909760, 6.246629, 36.177910, -10.723821);
	CreateDynamicObject_FR(18784, -2765.364258, -1577.020508, 264.854248, 7.896033, 35.061008, -7.302604);
	CreateDynamicObject_FR(18784, -2766.727783, -1593.291260, 262.287567, 9.775131, 33.784096, -3.583851);
	CreateDynamicObject_FR(18784, -2766.985840, -1609.395630, 259.158295, 11.894985, 32.299488, 0.502901);
	CreateDynamicObject_FR(18784, -2766.056152, -1625.206909, 255.415085, 14.255329, 30.547125, 5.030910);
	CreateDynamicObject_FR(18784, -2761.744873, -1652.328613, 249.129822, 359.994629, 21.706116, 13.562500);
	CreateDynamicObject_FR(18784, -2760.244629, -1660.539795, 249.543991, 352.182892, 16.433958, 10.425781);
	CreateDynamicObject_FR(18784, -2737.226074, -1752.767456, 214.454834, 31.544128, 15.976379, 14.318084);
	CreateDynamicObject_FR(18784, -2733.160645, -1767.856934, 205.222839, 29.132462, 15.354956, 14.312382);
	CreateDynamicObject_FR(18784, -2729.244385, -1782.321777, 197.373535, 25.834484, 14.650730, 14.473229);
	CreateDynamicObject_FR(18784, -2725.367432, -1796.411499, 190.924072, 21.640320, 13.890974, 14.806639);
	CreateDynamicObject_FR(19001, -2446.308350, -1352.688232, 343.681854, 346.433716, 0.000000, 98.582672);
	CreateDynamicObject_FR(19001, -2447.011475, -1352.332031, 345.287140, 345.959778, 211.079849, 91.590271);
	CreateDynamicObject_FR(19002, -2445.517090, -1350.991943, 342.734283, 0.000000, 0.000000, 277.244873);
	CreateDynamicObject_FR(18821, -2750.196533, -1697.989990, 249.131729, 359.106842, 99.445007, 285.533203);
	CreateDynamicObject_FR(745, -2546.238770, -1367.147461, 303.143860, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(750, -2588.898438, -1367.938354, 291.923035, 24.390228, 357.020630, 12.084320);
	CreateDynamicObject_FR(18228, -2697.045166, -1459.799194, 261.086121, 0.000000, 0.000000, 204.212036);
	CreateDynamicObject_FR(18228, -2666.361572, -1428.080566, 261.086121, 0.000000, 0.000000, 180.241089);
	CreateDynamicObject_FR(18228, -2716.534180, -1494.650635, 261.086121, 0.000000, 0.000000, 228.175659);
	CreateDynamicObject_FR(747, -2725.664795, -1453.135986, 271.560944, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1225, -2751.383545, -1694.163574, 247.385788, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1225, -2725.866699, -1471.465454, 268.379089, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1225, -2588.147461, -1367.727173, 292.410980, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1225, -2544.096191, -1367.327271, 304.210480, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(745, -2768.120361, -1568.656494, 266.211090, 343.720398, 0.000000, 314.326538);
	CreateDynamicObject_FR(18784, -2708.045654, -1854.010010, 179.467850, 0.160888, 11.181091, 17.378113);
	CreateDynamicObject_FR(18784, -2721.419434, -1810.375732, 185.891617, 16.664803, 13.121072, 15.299639);
	CreateDynamicObject_FR(18784, -2717.289795, -1824.463745, 182.293320, 11.171480, 12.391575, 15.921436);
	CreateDynamicObject_FR(18784, -2712.868652, -1838.925415, 180.146347, 5.538019, 11.740329, 16.629496);
	CreateDynamicObject_FR(18784, -2705.008057, -1863.975220, 180.846237, 0.000000, 29.845917, 105.629883);
	CreateDynamicObject_FR(18784, -2670.306885, -1969.951416, 150.356400, 39.823242, 14.191467, 17.481201);
	CreateDynamicObject_FR(18784, -2659.368652, -2033.579346, 122.789330, 10.836669, 356.812622, 4.132873);
	CreateDynamicObject_FR(18784, -2667.177490, -1980.917114, 141.232361, 36.948189, 12.050716, 14.376791);
	CreateDynamicObject_FR(18784, -2665.125732, -1989.774536, 135.029678, 30.546368, 10.090752, 10.304437);
	CreateDynamicObject_FR(18784, -2663.734863, -1997.996338, 130.916214, 21.348486, 7.481497, 6.550231);
	CreateDynamicObject_FR(18784, -2662.589111, -2007.055786, 128.059769, 13.872887, 4.119376, 4.467963);
	CreateDynamicObject_FR(18784, -2661.272461, -2018.425781, 125.628197, 10.776041, 0.427602, 3.941357);
	CreateDynamicObject_FR(18784, -2600.685303, -2173.760986, 89.120514, 6.656372, 52.504639, 70.319336);
	CreateDynamicObject_FR(18784, -2658.514404, -2042.924927, 120.983086, 11.030084, 2.150365, -0.095489);
	CreateDynamicObject_FR(18784, -2658.264648, -2052.503906, 119.061111, 11.183712, 7.213803, -2.853817);
	CreateDynamicObject_FR(18784, -2658.409424, -2062.249756, 117.039696, 11.344506, 12.016180, -4.268725);
	CreateDynamicObject_FR(18784, -2658.739014, -2072.095703, 114.935104, 11.539996, 16.561203, -4.434036);
	CreateDynamicObject_FR(18784, -2659.043213, -2081.974854, 112.763641, 11.780444, 20.840731, -3.392162);
	CreateDynamicObject_FR(18784, -2659.112061, -2091.820801, 110.541580, 12.059170, 24.831263, -1.131942);
	CreateDynamicObject_FR(18784, -2658.736084, -2101.566406, 108.285202, 12.349538, 28.494841, 2.401832);
	CreateDynamicObject_FR(18784, -2657.705078, -2111.145264, 106.010796, 12.599368, 31.786137, 7.283266);
	CreateDynamicObject_FR(18784, -2655.809082, -2120.490479, 103.734642, 12.726693, 34.671093, 13.554908);
	CreateDynamicObject_FR(18784, -2652.838135, -2129.535400, 101.473030, 12.626469, 37.161301, 21.146624);
	CreateDynamicObject_FR(18784, -2648.582520, -2138.213135, 99.242233, 12.200988, 39.354641, 29.786169);
	CreateDynamicObject_FR(18784, -2642.832031, -2146.457275, 97.058548, 11.412475, 41.446808, 38.970520);
	CreateDynamicObject_FR(18784, -2635.377197, -2154.200684, 94.938248, 10.321836, 43.676792, 48.068092);
	CreateDynamicObject_FR(18784, -2626.007568, -2161.376953, 92.897614, 9.069626, 46.230438, 56.515770);
	CreateDynamicObject_FR(18784, -2614.513672, -2167.919434, 90.952942, 7.810207, 49.181217, 63.969124);
	CreateDynamicObject_FR(18784, -2467.180664, -2187.948975, 57.738937, 356.011841, 13.435455, 91.394714);
	CreateDynamicObject_FR(18784, -2584.231445, -2179.281982, 86.288345, 12.598484, 48.125320, 73.334778);
	CreateDynamicObject_FR(18784, -2569.401611, -2183.323242, 82.203110, 17.650818, 43.487431, 76.969841);
	CreateDynamicObject_FR(18784, -2555.673584, -2186.096924, 77.331703, 20.958649, 38.587646, 80.971413);
	CreateDynamicObject_FR(18784, -2542.524902, -2187.813721, 72.141006, 21.884640, 33.568497, 84.879082);
	CreateDynamicObject_FR(18784, -2529.432617, -2188.685547, 67.097885, 20.181589, 28.698904, 88.165466);
	CreateDynamicObject_FR(18784, -2515.874756, -2188.923340, 62.669243, 16.035564, 24.232130, 90.454369);
	CreateDynamicObject_FR(18784, -2501.328369, -2188.739014, 59.321949, 10.035428, 20.270979, 91.645592);
	CreateDynamicObject_FR(18784, -2485.271240, -2188.343750, 57.522884, 3.056306, 16.737169, 91.875610);
	CreateDynamicObject_FR(18768, -2695.410889, -1893.161011, 190.621887, 270.000000, 0.000000, 194.696899);
	CreateDynamicObject_FR(18769, -2702.747070, -1905.403564, 190.608093, 0.000000, 90.000000, 13.566284);
	CreateDynamicObject_FR(18768, -2690.373047, -1913.939209, 190.621887, 270.000000, 0.000000, 14.939239);
	CreateDynamicObject_FR(18769, -2684.041992, -1900.491211, 190.608093, 0.000000, 90.000000, 13.562622);
	CreateDynamicObject_FR(18769, -2692.764648, -1902.800293, 180.460175, 0.000000, 0.000000, 14.696777);
	CreateDynamicObject_FR(18769, -2692.764648, -1902.799805, 199.980774, 0.000000, 0.000000, 14.694213);
	CreateDynamicObject_FR(18228, -2626.216553, -2110.839111, 86.186745, 0.000000, 0.000000, 264.130493);
	CreateDynamicObject_FR(18228, -2611.833496, -2141.329346, 86.186745, 0.000000, 0.000000, 284.251282);
	CreateDynamicObject_FR(18228, -2574.124023, -2156.360596, 80.003059, 0.000000, 0.000000, 308.216583);
	CreateDynamicObject_FR(1225, -2621.772949, -2156.218994, 88.886765, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1225, -2635.943115, -2143.090820, 93.197197, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1225, -2719.363525, -1833.700562, 180.411118, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1225, -2718.624023, -1808.195557, 186.072083, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(1225, -2708.556152, -1847.569946, 179.357330, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject_FR(9831, -2687.709229, -1893.505127, 174.044128, 277.218018, 1.309783, 16.235077);
	CreateDynamicObject_FR(9831, -2700.850830, -1896.998291, 174.044128, 277.212524, 1.307373, 16.232300);
	CreateDynamicObject_FR(9831, -2694.878418, -1895.252930, 170.917465, 277.212524, 1.307373, 16.232300);
	CreateDynamicObject_FR(9831, -2696.149902, -1916.937744, 170.917465, 277.212524, 1.307373, 16.232300);
	CreateDynamicObject_FR(9831, -2689.110840, -1914.854980, 170.917465, 277.212524, 1.307373, 16.232300);
	CreateDynamicObject_FR(9831, -2682.034912, -1912.984619, 170.917465, 277.212524, 1.307373, 16.232300);
	CreateDynamicObject_FR(7392, -2670.659912, -2122.097168, 107.310638, 341.029236, 2.869232, 301.015015);
	CreateDynamicObject_FR(7392, -2659.631592, -2147.796387, 103.088043, 341.026611, 2.867431, 311.867493);
	CreateDynamicObject_FR(7392, -2641.164063, -2167.909912, 98.781067, 341.021118, 2.861938, 323.847046);
	CreateDynamicObject_FR(18228, -2126.276611, -1808.676025, 440.939667, 2.708129, 0.000000, 170.069824);
	
	//NEWMAPS
	//HALF PIPE
	CreateDynamicObject_FR(18693, 742.81567, 1711.70068, 7.59240,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18803, 2881.36011, -320.88000, 2.64000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3867, 2954.88989, -304.54001, 13.18000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.88989, -287.79001, 13.18000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.88989, -271.06000, 13.18000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.88989, -254.31000, 13.18000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.88989, -237.56000, 13.18000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.88989, -254.31000, 35.65000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.88989, -237.57001, 35.65000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.89990, -271.01999, 28.14000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.89990, -287.76999, 20.67000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.89990, -237.57001, 43.13000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.88989, -337.10999, 13.18000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.88989, -353.85999, 13.18000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.88989, -370.60001, 13.18000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.88989, -387.32999, 13.18000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.88989, -404.09000, 13.18000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.89990, -353.85999, 20.67000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.89990, -370.59000, 28.16000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.89990, -387.32999, 35.66000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.89990, -404.07999, 35.66000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.87988, -404.07999, 58.15000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(7392, 2954.33008, -306.76999, 34.84000,   352.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(7073, 2955.34009, -332.73999, 43.80000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -318.32999, 1.45000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -308.10999, 2.09000,   7.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -298.06000, 4.01000,   14.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -288.32999, 7.17000,   21.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -279.06000, 11.53000,   28.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -270.42001, 17.01000,   36.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -262.54001, 23.54000,   43.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -255.53000, 31.00000,   50.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -249.50999, 39.28000,   57.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -244.58000, 48.25000,   64.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -240.82001, 57.76000,   72.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -238.27000, 67.67000,   79.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -236.99001, 77.83000,   86.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -313.20999, 1.61000,   3.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -303.06000, 2.89000,   10.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -293.14001, 5.43000,   18.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -283.63000, 9.20000,   25.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -274.66000, 14.13000,   32.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -266.38000, 20.15000,   39.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -258.92001, 27.16000,   46.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -252.39000, 35.04000,   54.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -246.91000, 43.68000,   61.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -242.55000, 52.94000,   68.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -239.39000, 62.68000,   75.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -237.47000, 72.73000,   82.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -236.83000, 82.95000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -328.54999, 1.61000,   356.39999, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -338.70001, 2.89000,   -10.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -348.62000, 5.44000,   -18.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -358.13000, 9.21000,   -25.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -367.10001, 14.14000,   -32.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -375.38000, 20.15000,   -39.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -382.84000, 27.16000,   -46.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -389.37000, 35.05000,   306.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -394.85001, 43.69000,   -61.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -399.20999, 52.95000,   -68.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -402.37000, 62.68000,   -75.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -404.29001, 72.74000,   277.20001, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 2976.55005, -404.92999, 82.95000,   -90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -323.42999, 1.45000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -333.64999, 2.09000,   -7.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -343.70001, 4.01000,   -14.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -353.44000, 7.17000,   -21.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -362.70001, 11.53000,   -28.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -371.34000, 17.02000,   324.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -379.22000, 23.54000,   -43.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -386.23001, 31.00000,   -50.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -392.25000, 39.28000,   -57.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -397.17999, 48.25000,   -64.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -400.94000, 57.77000,   -72.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -403.48999, 67.68000,   -79.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 2976.55005, -404.76999, 77.83000,   -86.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3867, 2954.88989, -237.55000, 58.12000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3867, 2954.88989, -237.55000, 73.09000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(8493, 2918.81006, -372.26999, 17.06000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8493, 2918.81006, -269.17999, 17.06000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8620, 2892.20996, -307.06000, -7.62000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8620, 2892.20996, -334.47000, -7.62000,   0.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(8620, 2933.10010, -334.47000, -7.62000,   0.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(8620, 2933.10010, -307.42001, -7.62000,   0.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(648, 2914.17993, -302.48999, -5.17000,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject_FR(648, 2909.67993, -342.25000, -5.17000,   0.00000, 0.00000, 230.00000);
	CreateDynamicObject_FR(621, 2865.40991, -330.85999, -2.96000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, 2865.40991, -312.26001, -2.96000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3867, 2954.87988, -404.07999, 73.13000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -323.42999, 1.45000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -318.32999, 1.45000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -308.10999, 2.09000,   7.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -298.06000, 4.01000,   14.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -288.32001, 7.17000,   21.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -279.06000, 11.53000,   28.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -270.42001, 17.01000,   36.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -262.54001, 23.54000,   43.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -255.53000, 31.00000,   50.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -249.50999, 39.28000,   57.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -244.58000, 48.25000,   64.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -240.81000, 57.76000,   72.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -238.27000, 67.67000,   79.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -236.99001, 77.83000,   86.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -313.20999, 1.61000,   3.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -303.06000, 2.89000,   10.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -293.14001, 5.43000,   18.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -283.63000, 9.20000,   25.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -274.66000, 14.13000,   32.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -266.38000, 20.15000,   39.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -258.92001, 27.16000,   46.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -252.39000, 35.04000,   54.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -246.91000, 43.68000,   61.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -242.55000, 52.94000,   68.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -239.39000, 62.68000,   75.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -237.47000, 72.73000,   82.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -236.83000, 82.95000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -333.64999, 2.09000,   -7.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -343.70001, 4.01000,   -14.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -353.44000, 7.17000,   -21.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -362.70001, 11.53000,   -28.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -371.34000, 17.02000,   -36.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -379.22000, 23.54000,   -43.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -386.23001, 31.00000,   -50.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -392.25000, 39.28000,   -57.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -397.17999, 48.25000,   -64.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -400.94000, 57.77000,   -72.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -403.48999, 67.68000,   -79.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3016.94995, -404.76999, 77.83000,   -86.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -328.54999, 1.61000,   -3.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -338.70001, 2.89000,   -10.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -348.62000, 5.44000,   -18.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -358.13000, 9.21000,   -25.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -367.10001, 14.14000,   -32.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -375.38000, 20.15000,   -39.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -382.84000, 27.16000,   -46.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -389.37000, 35.05000,   -54.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -394.85001, 43.69000,   -61.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -399.20999, 52.95000,   -68.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -402.37000, 62.68000,   -75.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -404.29001, 72.74000,   -82.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3016.94995, -404.92999, 82.95000,   -90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -323.42999, 1.45000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -318.32999, 1.45000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -308.10999, 2.09000,   7.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -298.06000, 4.01000,   14.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -288.32001, 7.17000,   21.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -279.06000, 11.53000,   28.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -270.42001, 17.01000,   36.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -262.54001, 23.54000,   43.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -255.53000, 31.00000,   50.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -249.50999, 39.28000,   57.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -244.58000, 48.25000,   64.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -240.82001, 57.76000,   72.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -238.27000, 67.67000,   79.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -236.99001, 77.83000,   86.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -313.20999, 1.61000,   3.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -303.06000, 2.89000,   10.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -293.14001, 5.43000,   18.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -283.63000, 9.20000,   25.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -274.66000, 14.13000,   32.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -266.38000, 20.15000,   39.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -258.92001, 27.16000,   46.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -252.39000, 35.04000,   54.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -246.91000, 43.68000,   61.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -242.55000, 52.94000,   68.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -239.39000, 62.68000,   75.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -237.47000, 72.73000,   82.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -236.83000, 82.95000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -328.54999, 1.61000,   -3.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -338.70001, 2.89000,   -10.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -348.62000, 5.44000,   -18.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -358.13000, 9.21000,   -25.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -367.10001, 14.14000,   -32.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -375.38000, 20.15000,   -39.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -382.84000, 27.16000,   -46.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -389.37000, 35.05000,   -54.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -394.85001, 43.69000,   -61.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -399.20999, 52.95000,   -68.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -402.37000, 62.68000,   -75.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -404.29001, 72.74000,   -82.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3057.34009, -404.92999, 82.95000,   270.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -333.64999, 2.09000,   -7.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -343.70001, 4.01000,   -14.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -353.44000, 7.17000,   -21.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -362.70001, 11.53000,   -28.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -371.34000, 17.02000,   -36.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -379.22000, 23.54000,   -43.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -386.23001, 31.00000,   -50.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -392.25000, 39.28000,   -57.60000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -397.17999, 48.25000,   -64.80000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -400.94000, 57.77000,   -72.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -403.48999, 67.68000,   -79.20000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3458, 3057.34009, -404.76999, 77.83000,   -86.40000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8357, 3097.53003, -320.42001, 85.53000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18754, 3078.04004, -320.89001, -38.88000,   0.00000, 270.00000, 0.00000);
	CreateDynamicObject_FR(8355, 3025.50000, -218.34000, 85.51000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18754, 3117.04004, -320.89001, -38.88000,   0.00000, 269.98999, 0.00000);
	CreateDynamicObject_FR(8355, 3025.50000, -423.39001, 85.51000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3873, 3107.27002, -204.33000, 80.85000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3873, 3107.27002, -204.33000, 47.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3873, 3107.27002, -204.33000, 14.36000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3873, 3107.27002, -435.76001, 80.85000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3873, 3107.27002, -435.76001, 14.38000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3873, 3107.27002, -435.76001, 47.67000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18859, 3143.86011, -246.94000, 97.60000,   1.50000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18859, 3143.86011, -295.73001, 97.60000,   1.50000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18859, 3143.86011, -344.51999, 97.60000,   1.50000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18859, 3143.86011, -393.31000, 97.60000,   1.50000, 0.00000, 270.00000);

	//Helix
	CreateDynamicObject_FR(8040, 2157.88989, 2219.12988, 282.22000,   0.00000, 0.00000, 270.29001);
	CreateDynamicObject_FR(18450, 2160.00000, 2075.00000, 175.00000,   20.00000, 5.38000, -91.84000);
	CreateDynamicObject_FR(18450, 2159.53003, 2082.52002, 175.67000,   20.00000, 5.38000, -84.64000);
	CreateDynamicObject_FR(18450, 2158.11011, 2089.91992, 176.33000,   20.00000, 5.38000, -77.44000);
	CreateDynamicObject_FR(18450, 2155.79004, 2097.09009, 177.00000,   20.00000, 5.38000, -70.24000);
	CreateDynamicObject_FR(18450, 2152.58008, 2103.90991, 177.67000,   20.00000, 5.38000, -63.04000);
	CreateDynamicObject_FR(18450, 2148.54004, 2110.27002, 178.33000,   20.00000, 5.38000, -55.84000);
	CreateDynamicObject_FR(18450, 2143.73999, 2116.07007, 179.00000,   20.00000, 5.38000, -48.64000);
	CreateDynamicObject_FR(18450, 2138.25000, 2121.22998, 179.67000,   20.00000, 5.38000, -41.44000);
	CreateDynamicObject_FR(18450, 2132.14990, 2125.65991, 180.33000,   20.00000, 5.38000, -34.24000);
	CreateDynamicObject_FR(18450, 2125.55005, 2129.29004, 181.00000,   20.00000, 5.38000, -27.04000);
	CreateDynamicObject_FR(18450, 2118.54004, 2132.06006, 181.67000,   20.00000, 5.38000, -19.84000);
	CreateDynamicObject_FR(18450, 2111.23999, 2133.93994, 182.33000,   20.00000, 5.38000, -12.64000);
	CreateDynamicObject_FR(18450, 2103.77002, 2134.87988, 183.00000,   20.00000, 5.38000, -5.44000);
	CreateDynamicObject_FR(18450, 2096.22998, 2134.87988, 183.67000,   20.00000, 5.38000, 1.76000);
	CreateDynamicObject_FR(18450, 2088.76001, 2133.93994, 184.33000,   20.00000, 5.38000, 8.96000);
	CreateDynamicObject_FR(18450, 2081.45996, 2132.06006, 185.00000,   20.00000, 5.38000, 16.16000);
	CreateDynamicObject_FR(18450, 2074.44995, 2129.29004, 185.67000,   20.00000, 5.38000, 23.36000);
	CreateDynamicObject_FR(18450, 2067.85010, 2125.65991, 186.33000,   20.00000, 5.38000, 30.56000);
	CreateDynamicObject_FR(18450, 2061.75000, 2121.22998, 187.00000,   20.00000, 5.38000, 37.76000);
	CreateDynamicObject_FR(18450, 2056.26001, 2116.07007, 187.67000,   20.00000, 5.38000, 44.96000);
	CreateDynamicObject_FR(18450, 2051.45996, 2110.27002, 188.33000,   20.00000, 5.38000, 52.16000);
	CreateDynamicObject_FR(18450, 2047.42004, 2103.90991, 189.00000,   20.00000, 5.38000, 59.36000);
	CreateDynamicObject_FR(18450, 2044.20996, 2097.09009, 189.67000,   20.00000, 5.38000, 66.56000);
	CreateDynamicObject_FR(18450, 2041.89001, 2089.91992, 190.33000,   20.00000, 5.38000, 73.76000);
	CreateDynamicObject_FR(18450, 2040.46997, 2082.52002, 191.00000,   20.00000, 5.38000, 80.96000);
	CreateDynamicObject_FR(18450, 2040.00000, 2075.00000, 191.67000,   20.00000, 5.38000, 88.16000);
	CreateDynamicObject_FR(18450, 2040.46997, 2067.47998, 192.33000,   20.00000, 5.38000, 95.36000);
	CreateDynamicObject_FR(18450, 2041.89001, 2060.08008, 193.00000,   20.00000, 5.38000, 102.56000);
	CreateDynamicObject_FR(18450, 2044.20996, 2052.90991, 193.67000,   20.00000, 5.38000, 109.76000);
	CreateDynamicObject_FR(18450, 2047.42004, 2046.08997, 194.33000,   20.00000, 5.38000, 116.96000);
	CreateDynamicObject_FR(18450, 2051.45996, 2039.72998, 195.00000,   20.00000, 5.38000, 124.16000);
	CreateDynamicObject_FR(18450, 2056.26001, 2033.93005, 195.67000,   20.00000, 5.38000, 131.36000);
	CreateDynamicObject_FR(18450, 2061.75000, 2028.77002, 196.33000,   20.00000, 5.38000, 138.56000);
	CreateDynamicObject_FR(18450, 2067.85010, 2024.33997, 197.00000,   20.00000, 5.38000, 145.75999);
	CreateDynamicObject_FR(18450, 2074.44995, 2020.70996, 197.67000,   20.00000, 5.38000, 152.96001);
	CreateDynamicObject_FR(18450, 2081.45996, 2017.93994, 198.33000,   20.00000, 5.38000, 160.16000);
	CreateDynamicObject_FR(18450, 2088.76001, 2016.06006, 199.00000,   20.00000, 5.38000, 167.36000);
	CreateDynamicObject_FR(18450, 2096.22998, 2015.12000, 199.67000,   20.00000, 5.38000, 174.56000);
	CreateDynamicObject_FR(18450, 2103.77002, 2015.12000, 200.33000,   20.00000, 5.38000, 181.75999);
	CreateDynamicObject_FR(18450, 2111.23999, 2016.06006, 201.00000,   20.00000, 5.38000, 188.96001);
	CreateDynamicObject_FR(18450, 2118.54004, 2017.93994, 201.67000,   20.00000, 5.38000, 196.16000);
	CreateDynamicObject_FR(18450, 2125.55005, 2020.70996, 202.33000,   20.00000, 5.38000, 203.36000);
	CreateDynamicObject_FR(18450, 2132.14990, 2024.33997, 203.00000,   20.00000, 5.38000, 210.56000);
	CreateDynamicObject_FR(18450, 2138.25000, 2028.77002, 203.67000,   20.00000, 5.38000, 217.75999);
	CreateDynamicObject_FR(18450, 2143.73999, 2033.93005, 204.33000,   20.00000, 5.38000, 224.96001);
	CreateDynamicObject_FR(18450, 2148.54004, 2039.72998, 205.00000,   20.00000, 5.38000, 232.16000);
	CreateDynamicObject_FR(18450, 2152.58008, 2046.08997, 205.67000,   20.00000, 5.38000, 239.36000);
	CreateDynamicObject_FR(18450, 2155.79004, 2052.90991, 206.33000,   20.00000, 5.38000, 246.56000);
	CreateDynamicObject_FR(18450, 2158.11011, 2060.08008, 207.00000,   20.00000, 5.38000, 253.75999);
	CreateDynamicObject_FR(18450, 2159.53003, 2067.47998, 207.67000,   20.00000, 5.38000, 260.95999);
	CreateDynamicObject_FR(18450, 2160.00000, 2075.00000, 208.33000,   20.00000, 5.38000, 268.16000);
	CreateDynamicObject_FR(18450, 2159.53003, 2082.52002, 209.00000,   20.00000, 5.38000, 275.35999);
	CreateDynamicObject_FR(18450, 2158.11011, 2089.91992, 209.67000,   20.00000, 5.38000, 282.56000);
	CreateDynamicObject_FR(18450, 2155.79004, 2097.09009, 210.33000,   20.00000, 5.38000, 289.76001);
	CreateDynamicObject_FR(18450, 2152.58008, 2103.90991, 211.00000,   20.00000, 5.38000, 296.95999);
	CreateDynamicObject_FR(18450, 2148.54004, 2110.27002, 211.67000,   20.00000, 5.38000, 304.16000);
	CreateDynamicObject_FR(18450, 2143.73999, 2116.07007, 212.33000,   20.00000, 5.38000, 311.35999);
	CreateDynamicObject_FR(18450, 2138.25000, 2121.22998, 213.00000,   20.00000, 5.38000, 318.56000);
	CreateDynamicObject_FR(18450, 2132.14990, 2125.65991, 213.67000,   20.00000, 5.38000, 325.76001);
	CreateDynamicObject_FR(18450, 2125.55005, 2129.29004, 214.33000,   20.00000, 5.38000, 332.95999);
	CreateDynamicObject_FR(18450, 2118.54004, 2132.06006, 215.00000,   20.00000, 5.38000, 340.16000);
	CreateDynamicObject_FR(18450, 2111.23999, 2133.93994, 215.67000,   20.00000, 5.38000, 347.35999);
	CreateDynamicObject_FR(18450, 2103.77002, 2134.87988, 216.33000,   20.00000, 5.38000, 354.56000);
	CreateDynamicObject_FR(18450, 2096.22998, 2134.87988, 217.00000,   20.00000, 5.38000, 361.76001);
	CreateDynamicObject_FR(18450, 2088.76001, 2133.93994, 217.67000,   20.00000, 5.38000, 368.95999);
	CreateDynamicObject_FR(18450, 2081.45996, 2132.06006, 218.33000,   20.00000, 5.38000, 376.16000);
	CreateDynamicObject_FR(18450, 2074.44995, 2129.29004, 219.00000,   20.00000, 5.38000, 383.35999);
	CreateDynamicObject_FR(18450, 2067.85010, 2125.65991, 219.67000,   20.00000, 5.38000, 390.56000);
	CreateDynamicObject_FR(18450, 2061.75000, 2121.22998, 220.33000,   20.00000, 5.38000, 397.76001);
	CreateDynamicObject_FR(18450, 2056.26001, 2116.07007, 221.00000,   20.00000, 5.38000, 404.95999);
	CreateDynamicObject_FR(18450, 2051.45996, 2110.27002, 221.67000,   20.00000, 5.38000, 412.16000);
	CreateDynamicObject_FR(18450, 2047.42004, 2103.90991, 222.33000,   20.00000, 5.38000, 419.35999);
	CreateDynamicObject_FR(18450, 2044.20996, 2097.09009, 223.00000,   20.00000, 5.38000, 426.56000);
	CreateDynamicObject_FR(18450, 2041.89001, 2089.91992, 223.67000,   20.00000, 5.38000, 433.76001);
	CreateDynamicObject_FR(18450, 2040.46997, 2082.52002, 224.33000,   20.00000, 5.38000, 440.95999);
	CreateDynamicObject_FR(18450, 2040.00000, 2075.00000, 225.00000,   20.00000, 5.38000, 448.16000);
	CreateDynamicObject_FR(18450, 2040.46997, 2067.47998, 225.67000,   20.00000, 5.38000, 455.35999);
	CreateDynamicObject_FR(18450, 2041.89001, 2060.08008, 226.33000,   20.00000, 5.38000, 462.56000);
	CreateDynamicObject_FR(18450, 2044.20996, 2052.90991, 227.00000,   20.00000, 5.38000, 469.76001);
	CreateDynamicObject_FR(18450, 2047.42004, 2046.08997, 227.67000,   20.00000, 5.38000, 476.95999);
	CreateDynamicObject_FR(18450, 2051.45996, 2039.72998, 228.33000,   20.00000, 5.38000, 484.16000);
	CreateDynamicObject_FR(18450, 2056.26001, 2033.93005, 229.00000,   20.00000, 5.38000, 491.35999);
	CreateDynamicObject_FR(18450, 2061.75000, 2028.77002, 229.67000,   20.00000, 5.38000, 498.56000);
	CreateDynamicObject_FR(18450, 2067.85010, 2024.33997, 230.33000,   20.00000, 5.38000, 505.76001);
	CreateDynamicObject_FR(18450, 2074.44995, 2020.70996, 231.00000,   20.00000, 5.38000, 512.96002);
	CreateDynamicObject_FR(18450, 2081.45996, 2017.93994, 231.67000,   20.00000, 5.38000, 520.15997);
	CreateDynamicObject_FR(18450, 2088.76001, 2016.06006, 232.33000,   20.00000, 5.38000, 527.35999);
	CreateDynamicObject_FR(18450, 2096.22998, 2015.12000, 233.00000,   20.00000, 5.38000, 534.56000);
	CreateDynamicObject_FR(18450, 2103.77002, 2015.12000, 233.67000,   20.00000, 5.38000, 541.76001);
	CreateDynamicObject_FR(18450, 2111.23999, 2016.06006, 234.33000,   20.00000, 5.38000, 548.96002);
	CreateDynamicObject_FR(18450, 2118.54004, 2017.93994, 235.00000,   20.00000, 5.38000, 556.15997);
	CreateDynamicObject_FR(18450, 2125.55005, 2020.70996, 235.67000,   20.00000, 5.38000, 563.35999);
	CreateDynamicObject_FR(18450, 2132.14990, 2024.33997, 236.33000,   20.00000, 5.38000, 570.56000);
	CreateDynamicObject_FR(18450, 2138.25000, 2028.77002, 237.00000,   20.00000, 5.38000, 577.76001);
	CreateDynamicObject_FR(18450, 2143.73999, 2033.93005, 237.67000,   20.00000, 5.38000, 584.96002);
	CreateDynamicObject_FR(18450, 2148.54004, 2039.72998, 238.33000,   20.00000, 5.38000, 592.15997);
	CreateDynamicObject_FR(18450, 2152.58008, 2046.08997, 239.00000,   20.00000, 5.38000, 599.35999);
	CreateDynamicObject_FR(18450, 2155.79004, 2052.90991, 239.67000,   20.00000, 5.38000, 606.56000);
	CreateDynamicObject_FR(18450, 2158.11011, 2060.08008, 240.33000,   20.00000, 5.38000, 613.76001);
	CreateDynamicObject_FR(18450, 2159.53003, 2067.47998, 241.00000,   20.00000, 5.38000, 620.96002);
	CreateDynamicObject_FR(18450, 2160.00000, 2075.00000, 241.67000,   20.00000, 5.38000, 628.15997);
	CreateDynamicObject_FR(18450, 2159.53003, 2082.52002, 242.33000,   20.00000, 5.38000, 635.35999);
	CreateDynamicObject_FR(18450, 2158.11011, 2089.91992, 243.00000,   20.00000, 5.38000, 642.56000);
	CreateDynamicObject_FR(18450, 2155.79004, 2097.09009, 243.67000,   20.00000, 5.38000, 649.76001);
	CreateDynamicObject_FR(18450, 2152.58008, 2103.90991, 244.33000,   20.00000, 5.38000, 656.96002);
	CreateDynamicObject_FR(18450, 2148.54004, 2110.27002, 245.00000,   20.00000, 5.38000, 664.15997);
	CreateDynamicObject_FR(18450, 2143.73999, 2116.07007, 245.67000,   20.00000, 5.38000, 671.35999);
	CreateDynamicObject_FR(18450, 2138.25000, 2121.22998, 246.33000,   20.00000, 5.38000, 678.56000);
	CreateDynamicObject_FR(18450, 2132.14990, 2125.65991, 247.00000,   20.00000, 5.38000, 685.76001);
	CreateDynamicObject_FR(18450, 2125.55005, 2129.29004, 247.67000,   20.00000, 5.38000, 692.96002);
	CreateDynamicObject_FR(18450, 2118.54004, 2132.06006, 248.33000,   20.00000, 5.38000, 700.15997);
	CreateDynamicObject_FR(18450, 2111.23999, 2133.93994, 249.00000,   20.00000, 5.38000, 707.35999);
	CreateDynamicObject_FR(18450, 2103.77002, 2134.87988, 249.67000,   20.00000, 5.38000, 714.56000);
	CreateDynamicObject_FR(18450, 2096.22998, 2134.87988, 250.33000,   20.00000, 5.38000, 721.76001);
	CreateDynamicObject_FR(18450, 2088.76001, 2133.93994, 251.00000,   20.00000, 5.38000, 728.96002);
	CreateDynamicObject_FR(18450, 2081.45996, 2132.06006, 251.67000,   20.00000, 5.38000, 736.15997);
	CreateDynamicObject_FR(18450, 2074.44995, 2129.29004, 252.33000,   20.00000, 5.38000, 743.35999);
	CreateDynamicObject_FR(18450, 2067.85010, 2125.65991, 253.00000,   20.00000, 5.38000, 750.56000);
	CreateDynamicObject_FR(18450, 2061.75000, 2121.22998, 253.67000,   20.00000, 5.38000, 757.76001);
	CreateDynamicObject_FR(18450, 2056.26001, 2116.07007, 254.33000,   20.00000, 5.38000, 764.96002);
	CreateDynamicObject_FR(18450, 2051.45996, 2110.27002, 255.00000,   20.00000, 5.38000, 772.15997);
	CreateDynamicObject_FR(18450, 2047.42004, 2103.90991, 255.67000,   20.00000, 5.38000, 779.35999);
	CreateDynamicObject_FR(18450, 2044.20996, 2097.09009, 256.32999,   20.00000, 5.38000, 786.56000);
	CreateDynamicObject_FR(18450, 2041.89001, 2089.91992, 257.00000,   20.00000, 5.38000, 793.76001);
	CreateDynamicObject_FR(18450, 2040.46997, 2082.52002, 257.67001,   20.00000, 5.38000, 800.96002);
	CreateDynamicObject_FR(18450, 2040.00000, 2075.00000, 258.32999,   20.00000, 5.38000, 808.15997);
	CreateDynamicObject_FR(18450, 2040.46997, 2067.47998, 259.00000,   20.00000, 5.38000, 815.35999);
	CreateDynamicObject_FR(18450, 2041.89001, 2060.08008, 259.67001,   20.00000, 5.38000, 822.56000);
	CreateDynamicObject_FR(18450, 2044.20996, 2052.90991, 260.32999,   20.00000, 5.38000, 829.76001);
	CreateDynamicObject_FR(18450, 2047.42004, 2046.08997, 261.00000,   20.00000, 5.38000, 836.96002);
	CreateDynamicObject_FR(18450, 2051.45996, 2039.72998, 261.67001,   20.00000, 5.38000, 844.15997);
	CreateDynamicObject_FR(18450, 2056.26001, 2033.93005, 262.32999,   20.00000, 5.38000, 851.35999);
	CreateDynamicObject_FR(18450, 2061.75000, 2028.77002, 263.00000,   20.00000, 5.38000, 858.56000);
	CreateDynamicObject_FR(18450, 2067.85010, 2024.33997, 263.67001,   20.00000, 5.38000, 865.76001);
	CreateDynamicObject_FR(18450, 2074.44995, 2020.70996, 264.32999,   20.00000, 5.38000, 872.96002);
	CreateDynamicObject_FR(18450, 2081.45996, 2017.93994, 265.00000,   20.00000, 5.38000, 880.15997);
	CreateDynamicObject_FR(18450, 2088.76001, 2016.06006, 265.67001,   20.00000, 5.38000, 887.35999);
	CreateDynamicObject_FR(18450, 2096.22998, 2015.12000, 266.32999,   20.00000, 5.38000, 894.56000);
	CreateDynamicObject_FR(18450, 2103.77002, 2015.12000, 267.00000,   20.00000, 5.38000, 901.76001);
	CreateDynamicObject_FR(18450, 2111.23999, 2016.06006, 267.67001,   20.00000, 5.38000, 908.96002);
	CreateDynamicObject_FR(18450, 2118.54004, 2017.93994, 268.32999,   20.00000, 5.38000, 916.15997);
	CreateDynamicObject_FR(18450, 2125.55005, 2020.70996, 269.00000,   20.00000, 5.38000, 923.35999);
	CreateDynamicObject_FR(18450, 2132.14990, 2024.33997, 269.67001,   20.00000, 5.38000, 930.56000);
	CreateDynamicObject_FR(18450, 2138.25000, 2028.77002, 270.32999,   20.00000, 5.38000, 937.76001);
	CreateDynamicObject_FR(18450, 2143.73999, 2033.93005, 271.00000,   20.00000, 5.38000, 944.96002);
	CreateDynamicObject_FR(18450, 2148.54004, 2039.72998, 271.67001,   20.00000, 5.38000, 952.15997);
	CreateDynamicObject_FR(18450, 2152.58008, 2046.08997, 272.32999,   20.00000, 5.38000, 959.35999);
	CreateDynamicObject_FR(18450, 2155.79004, 2052.90991, 273.00000,   20.00000, 5.38000, 966.56000);
	CreateDynamicObject_FR(18450, 2158.11011, 2060.08008, 273.67001,   20.00000, 5.38000, 973.76001);
	CreateDynamicObject_FR(18450, 2159.53003, 2067.47998, 274.32999,   20.00000, 5.38000, 980.96002);
	CreateDynamicObject_FR(18450, 2160.00000, 2075.00000, 275.00000,   20.00000, 5.38000, 988.15997);
	CreateDynamicObject_FR(1655, 2161.85010, 2176.10010, 279.39001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1655, 2154.70996, 2176.11011, 279.39999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1655, 2159.48999, 2038.70996, 172.78000,   -6.00000, 18.00000, 179.00000);
	CreateDynamicObject_FR(1655, 2158.84009, 2034.92004, 174.33000,   10.00000, 16.00000, 176.00000);
	CreateDynamicObject_FR(19002, 2156.39990, 2030.31006, 180.81000,   0.00000, 0.00000, 351.56000);
	CreateDynamicObject_FR(18793, 2159.18994, 2152.69995, 278.60001,   -4.00000, 0.00000, 91.00000);
	CreateDynamicObject_FR(620, 2165.73999, 2140.66992, 276.26001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(620, 2153.04004, 2169.59009, 276.26001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(620, 2154.18994, 2114.65991, 275.51999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(620, 2153.37988, 2140.30005, 276.26001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(620, 2166.12012, 2169.11011, 276.26001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(620, 2166.96997, 2114.58008, 276.07001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3528, 2139.88989, 2179.06006, 285.95999,   0.00000, 0.00000, 45.66000);
	CreateDynamicObject_FR(3528, 2174.71997, 2182.09009, 285.95999,   0.00000, 0.00000, 129.05000);

	//LOOP 1
	CreateDynamicObject_FR(18789, -1245.69727, 1201.80762, 282.10043,   0.00000, 299.99817, 89.99451);
	CreateDynamicObject_FR(18789, -1245.69727, 1276.59705, 411.67783,   0.00000, 299.99817, 89.99451);
	CreateDynamicObject_FR(18789, -1245.69727, 1351.39209, 541.24963,   0.00000, 299.99817, 89.99451);
	CreateDynamicObject_FR(18794, -1245.70605, 1398.64709, 621.94318,   0.00000, 300.00000, 89.99451);
	CreateDynamicObject_FR(18794, -1245.70605, 1409.00928, 660.23358,   0.00000, 285.00000, 89.99451);
	CreateDynamicObject_FR(18794, -1245.70605, 1409.08118, 700.68604,   0.00000, 270.00000, 90.00000);
	CreateDynamicObject_FR(18794, -1245.70605, 1398.75488, 739.56305,   0.00000, 255.00000, 90.00000);
	CreateDynamicObject_FR(18789, -1245.69727, 1424.98328, 832.89520,   0.00000, 299.99817, 89.99451);
	CreateDynamicObject_FR(18789, -1245.69727, 1499.91516, 962.69458,   0.00000, 299.99817, 89.99451);
	CreateDynamicObject_FR(18450, -1245.67126, 1356.73145, 720.44952,   0.00000, 307.20001, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1352.62854, 715.69635,   0.00000, 314.39996, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1347.96228, 711.49481,   0.00000, 321.59998, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1342.80627, 707.91132,   0.00000, 328.79999, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1337.24170, 705.00226,   0.00000, 336.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1331.35645, 702.81354,   0.00000, 343.20001, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1325.24329, 701.37970,   0.00000, 350.40002, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1318.99866, 700.72339,   0.00000, 357.60004, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1312.72107, 700.85486,   0.00000, 4.80002, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1306.50928, 701.77209,   0.00000, 12.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1300.46155, 703.46069,   0.00000, 19.19998, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1294.67310, 705.89392,   0.00000, 26.39999, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1289.23535, 709.03345,   0.00000, 33.60001, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1284.23389, 712.82977,   0.00000, 40.79999, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1279.74768, 717.22296,   0.00000, 48.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1275.84741, 722.14380,   0.00000, 55.20001, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1272.59473, 727.51471,   0.00000, 62.39999, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1270.04077, 733.25092,   0.00000, 69.60001, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1268.22595, 739.26196,   0.00000, 76.80002, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1267.17883, 745.45306,   0.00000, 84.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1266.91589, 751.72662,   0.00000, 91.20001, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1267.44128, 757.98364,   0.00000, 98.39999, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1268.74683, 764.12549,   0.00000, 105.60001, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1270.81177, 770.05530,   0.00000, 112.80002, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1273.60364, 775.67950,   0.00000, 120.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1277.07837, 780.90948,   0.00000, 127.20001, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1282.00183, 786.61334,   0.00000, 134.39999, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1287.60132, 791.65515,   0.00000, 141.60001, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1293.78857, 795.95538,   0.00000, 148.79999, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1300.46594, 799.44629,   0.00000, 156.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1307.52832, 802.07269,   0.00000, 163.20001, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1314.86401, 803.79327,   0.00000, 170.40002, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1322.35767, 804.58087,   0.00000, 177.60004, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1329.89087, 804.42310,   0.00000, 184.79999, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1337.34485, 803.32239,   0.00000, 192.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67126, 1344.60217, 801.29608,   0.00000, 199.20001, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67090, 1344.60254, 801.29608,   0.00000, 210.82260, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67090, 1347.67871, 801.29608,   0.00000, 220.33411, 90.00000);
	CreateDynamicObject_FR(18450, -1245.67090, 1352.18701, 803.09131,   0.00000, 231.35083, 90.00000);
	CreateDynamicObject_FR(18806, -1245.69312, 1598.71521, 1070.46899,   0.00000, 35.00000, 270.00000);
	CreateDynamicObject_FR(16771, -1245.75574, 1681.20898, 1120.29602,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(6056, -1239.75024, 1660.50977, 1118.80420,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(6056, -1251.56604, 1660.07117, 1118.80420,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3471, -1236.06128, 1660.85583, 1115.01587,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3471, -1233.19934, 1660.85547, 1115.01587,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3471, -1255.23340, 1660.85547, 1115.01587,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3471, -1258.02356, 1660.85547, 1115.01587,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, -1245.66089, 1660.00513, 1115.74756,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3851, -1245.66113, 1660.00488, 1119.70654,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3851, -1255.66199, 1659.83154, 1115.73730,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3851, -1255.66211, 1659.83203, 1119.71191,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3851, -1235.98389, 1659.83203, 1115.73730,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3851, -1235.98340, 1659.83203, 1119.69092,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(10281, -1245.93115, 1660.85645, 1119.32300,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18450, -1245.72998, 956.26166, 11.39484,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18794, -1245.70618, 977.53180, 10.85119,   0.00000, 0.00000, 89.99573);
	CreateDynamicObject_FR(18794, -1245.70605, 1016.45148, 21.18759,   0.00000, 345.00000, 89.99451);
	CreateDynamicObject_FR(18794, -1245.70605, 1051.01270, 41.02919,   0.00000, 330.00000, 89.99451);
	CreateDynamicObject_FR(18794, -1245.70605, 1079.64441, 69.53339,   0.00000, 315.00000, 89.99451);
	CreateDynamicObject_FR(18789, -1245.69727, 1126.91870, 152.38824,   0.00000, 300.00000, 89.99573);
	CreateDynamicObject_FR(18450, -1246.29248, 951.16180, 11.59522,   0.00000, 4.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1246.85498, 946.09344, 12.19510,   0.00000, 9.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1247.41748, 941.08771, 13.19080,   0.00000, 13.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1247.97998, 936.17554, 14.57617,   0.00000, 18.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1248.54248, 931.38721, 16.34267,   0.00000, 22.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1249.10498, 926.75226, 18.47942,   0.00000, 27.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1249.66748, 922.29926, 20.97323,   0.00000, 31.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1250.22998, 918.05560, 23.80874,   0.00000, 36.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1250.79248, 914.04755, 26.96846,   0.00000, 40.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1251.35498, 910.29974, 30.43290,   0.00000, 45.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1251.91748, 906.83527, 34.18072,   0.00000, 49.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1252.47998, 903.67554, 38.18880,   0.00000, 54.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1253.04248, 900.84003, 42.43244,   0.00000, 58.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1253.60498, 898.34625, 46.88546,   0.00000, 63.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1254.16748, 896.20947, 51.52042,   0.00000, 67.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1254.72998, 894.44299, 56.30874,   0.00000, 72.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1255.29248, 893.05762, 61.22089,   0.00000, 76.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1255.85498, 892.06189, 66.22660,   0.00000, 81.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1256.41748, 891.46204, 71.29501,   0.00000, 85.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1256.97998, 891.26166, 76.39484,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1257.54248, 891.46204, 81.49468,   0.00000, 94.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1258.10498, 892.06189, 86.56309,   0.00000, 99.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1258.66748, 893.05762, 91.56879,   0.00000, 103.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1259.22998, 894.44299, 96.48095,   0.00000, 108.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1259.79248, 896.20947, 101.26926,   0.00000, 112.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1260.35498, 898.34625, 105.90423,   0.00000, 117.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1260.91748, 900.84003, 110.35725,   0.00000, 121.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1261.47998, 903.67554, 114.60088,   0.00000, 126.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1262.04248, 906.83527, 118.60897,   0.00000, 130.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1262.60498, 910.29974, 122.35678,   0.00000, 135.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1263.16748, 914.04755, 125.82122,   0.00000, 139.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1263.72998, 918.05560, 128.98096,   0.00000, 144.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1264.29248, 922.29926, 131.81645,   0.00000, 148.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1264.85498, 926.75226, 134.31026,   0.00000, 153.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1265.41748, 931.38721, 136.44702,   0.00000, 157.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1265.97998, 936.17554, 138.21352,   0.00000, 162.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1266.54248, 941.08771, 139.59888,   0.00000, 166.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1267.10498, 946.09344, 140.59459,   0.00000, 171.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1267.66748, 951.16180, 141.19446,   0.00000, 175.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1268.22998, 956.26166, 141.39484,   0.00000, 180.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1268.79248, 961.36151, 141.19446,   0.00000, 184.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1269.35498, 966.42987, 140.59459,   0.00000, 189.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1269.91748, 971.43561, 139.59888,   0.00000, 193.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1270.47998, 976.34778, 138.21352,   0.00000, 198.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1271.04248, 981.13611, 136.44702,   0.00000, 202.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1271.60498, 985.77106, 134.31026,   0.00000, 207.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1272.16748, 990.22406, 131.81645,   0.00000, 211.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1272.72998, 994.46771, 128.98096,   0.00000, 216.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1273.29248, 998.47577, 125.82122,   0.00000, 220.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1273.85498, 1002.22357, 122.35678,   0.00000, 225.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1274.41748, 1005.68799, 118.60897,   0.00000, 229.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1274.97998, 1008.84778, 114.60088,   0.00000, 234.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1275.54248, 1011.68329, 110.35725,   0.00000, 238.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1276.10498, 1014.17712, 105.90423,   0.00000, 243.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1276.66748, 1016.31378, 101.26926,   0.00000, 247.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1277.22998, 1018.08032, 96.48095,   0.00000, 252.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1277.79248, 1019.46570, 91.56879,   0.00000, 256.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1278.35498, 1020.46143, 86.56309,   0.00000, 261.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1278.91748, 1021.06128, 81.49468,   0.00000, 265.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1279.47998, 1021.26172, 76.39484,   0.00000, 270.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1280.04248, 1021.06128, 71.29501,   0.00000, 274.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1280.60498, 1020.46143, 66.22660,   0.00000, 279.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1281.16748, 1019.46570, 61.22089,   0.00000, 283.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1281.72998, 1018.08032, 56.30874,   0.00000, 288.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1282.29248, 1016.31378, 51.52042,   0.00000, 292.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1282.85498, 1014.17712, 46.88546,   0.00000, 297.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1283.41748, 1011.68329, 42.43244,   0.00000, 301.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1283.97998, 1008.84778, 38.18880,   0.00000, 306.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1284.54248, 1005.68799, 34.18072,   0.00000, 310.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1285.10498, 1002.22357, 30.43290,   0.00000, 315.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1285.66748, 998.47577, 26.96846,   0.00000, 319.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1286.22998, 994.46771, 23.80874,   0.00000, 324.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1286.79248, 990.22406, 20.97323,   0.00000, 328.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1287.35498, 985.77106, 18.47942,   0.00000, 333.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1287.91748, 981.13611, 16.34267,   0.00000, 337.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1288.47998, 976.34778, 14.57617,   0.00000, 342.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1289.04248, 971.43561, 13.19080,   0.00000, 346.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1289.60498, 966.42987, 12.19510,   0.00000, 351.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1290.16748, 961.36151, 11.59522,   0.00000, 355.50000, 90.00000);
	CreateDynamicObject_FR(18450, -1290.20984, 956.26166, 11.39484,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1290.21509, 876.26990, 11.39484,   0.00000, 0.00000, 89.99500);
	CreateDynamicObject_FR(18801, -1299.87061, 731.11151, 34.49161,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject_FR(18788, -1289.99841, 750.88873, 10.84877,   0.00000, 0.00000, 89.99450);
	CreateDynamicObject_FR(18794, -1309.52124, 708.86615, 10.80997,   0.00000, 0.00000, 269.99451);
	CreateDynamicObject_FR(18794, -1309.52148, 617.30560, 10.80997,   0.00000, 0.00000, 89.98901);
	CreateDynamicObject_FR(10379, -1290.20801, 874.23755, 7.98721,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(10379, -1290.20801, 833.37732, 7.98721,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8493, -1294.33154, 666.69196, 13.89369,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18804, -1291.30701, 880.09705, 14.82079,   0.00000, -5.00000, 270.00000);
	CreateDynamicObject_FR(18794, -1309.52148, 635.85089, 2.99797,   0.00000, 356.86801, 89.98901);
	CreateDynamicObject_FR(18794, -1309.52148, 602.97211, 0.50917,   0.00000, 5.45199, 269.98901);
	CreateDynamicObject_FR(18794, -1309.52148, 577.46826, 10.80997,   0.00000, 0.00000, 269.98901);
	CreateDynamicObject_FR(18761, -1309.54626, 488.84222, 22.22747,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -1311.70361, 549.42975, -15.02862,   0.00000, 20.00000, 0.00000);
	CreateDynamicObject_FR(8397, -1307.30103, 549.55206, -15.02862,   20.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18450, -1309.52014, 553.57019, 9.81205,   0.00000, 10.20798, 89.99451);

	//LOOP 2
	CreateDynamicObject_FR(3816, 1433.21631, 2727.21436, 748.68176,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18806, 1432.50525, 2634.68872, 702.35474,   0.00000, 330.00000, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51990, 2546.70459, 634.77814,   0.00000, 307.50000, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2471.70410, 530.66998,   0.00000, 307.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2468.81494, 527.35767,   0.00000, 314.69635, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2465.53345, 524.43347,   0.00000, 321.89636, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2461.91113, 521.94373,   0.00000, 329.09637, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2458.00562, 519.92761,   0.00000, 336.29633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2453.87817, 518.41681,   0.00000, 343.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2449.59375, 517.43530,   0.00000, 350.69635, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2445.22021, 516.99841,   0.00000, 357.89630, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2440.82642, 517.11322,   0.00000, 5.09634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2436.48145, 517.77783,   0.00000, 12.29632, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2432.25415, 518.98169,   0.00000, 19.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2428.21118, 520.70581,   0.00000, 26.69635, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2424.41626, 522.92322,   0.00000, 33.89633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2420.92896, 525.59863,   0.00000, 41.09634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2417.80444, 528.69012,   0.00000, 48.29636, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2415.09229, 532.14880,   0.00000, 55.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2412.83472, 535.92017,   0.00000, 62.69632, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2411.06787, 539.94470,   0.00000, 69.89633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2409.81934, 544.15894,   0.00000, 77.09634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2409.10864, 548.49646,   0.00000, 84.29633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2408.94727, 552.88879,   0.00000, 91.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2409.33765, 557.26678,   0.00000, 98.69635, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2410.27393, 561.56128,   0.00000, 105.89636, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2411.74072, 565.70459,   0.00000, 113.09634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2413.71533, 569.63141,   0.00000, 120.29633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2416.16675, 573.27972,   0.00000, 127.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2419.05591, 576.59204,   0.00000, 134.69635, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2422.33740, 579.51624,   0.00000, 141.89633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2425.95947, 582.00598,   0.00000, 149.09634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2429.86523, 584.02216,   0.00000, 156.29633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2433.99268, 585.53296,   0.00000, 163.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2438.27710, 586.51440,   0.00000, 170.69635, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2438.55005, 587.95569,   0.00000, 179.44458, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2418.40283, 595.41516,   0.00000, 190.93970, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2546.70508, 527.16626,   0.00000, 247.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2548.70386, 521.87744,   0.00000, 251.09631, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2550.36670, 516.47363,   0.00000, 254.69635, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2551.68701, 510.97595,   0.00000, 258.29633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2552.65942, 505.40628,   0.00000, 261.89630, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2553.28027, 499.78653,   0.00000, 265.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2553.54688, 494.13889,   0.00000, 269.09631, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2553.45850, 488.48563,   0.00000, 272.69635, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2553.01514, 482.84909,   0.00000, 276.29633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2552.21899, 477.25153,   0.00000, 279.89636, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2551.07275, 471.71497,   0.00000, 283.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2549.58130, 466.26132,   0.00000, 287.09631, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2547.75000, 460.91211,   0.00000, 290.69635, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2545.58667, 455.68842,   0.00000, 294.29633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2543.09961, 450.61087,   0.00000, 297.89636, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2540.29883, 445.69949,   0.00000, 301.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2537.19482, 440.97369,   0.00000, 305.09637, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2533.80054, 436.45212,   0.00000, 308.69635, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2530.12891, 432.15259,   0.00000, 312.29633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2526.19434, 428.09210,   0.00000, 315.89636, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2522.01270, 424.28668,   0.00000, 319.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2517.60059, 420.75128,   0.00000, 323.09637, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2512.97510, 417.49997,   0.00000, 326.69635, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2508.15430, 414.54547,   0.00000, 330.29633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2503.15771, 411.89954,   0.00000, 333.89630, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2498.00488, 409.57251,   0.00000, 337.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2492.71606, 407.57367,   0.00000, 341.09631, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2487.31226, 405.91083,   0.00000, 344.69635, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2481.81470, 404.59058,   0.00000, 348.29633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2476.24487, 403.61816,   0.00000, 351.89636, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2470.62524, 402.99738,   0.00000, 355.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2464.97754, 402.73065,   0.00000, 359.09631, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2459.32422, 402.81909,   0.00000, 2.69635, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2453.68774, 403.26236,   0.00000, 6.29636, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2448.09009, 404.05865,   0.00000, 9.89633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2442.55371, 405.20483,   0.00000, 13.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2437.10010, 406.69641,   0.00000, 17.09634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2431.75073, 408.52747,   0.00000, 20.69635, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2426.52710, 410.69080,   0.00000, 24.29636, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2421.44946, 413.17786,   0.00000, 27.89636, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2416.53809, 415.97885,   0.00000, 31.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2411.81226, 419.08270,   0.00000, 35.09634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2407.29077, 422.47714,   0.00000, 38.69632, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2402.99121, 426.14880,   0.00000, 42.29633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2551.14185, 533.31287,   0.00000, 232.99451, 90.00000);
	CreateDynamicObject_FR(18806, 1432.50244, 2411.24976, 592.77753,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18768, 1432.56592, 2509.94629, 589.91431,   135.00003, 0.00000, 0.00000);
	CreateDynamicObject_FR(18768, 1432.56641, 2493.25244, 585.34821,   284.46057, 180.00000, 180.00000);
	CreateDynamicObject_FR(18768, 1432.56641, 2505.53491, 573.03302,   14.99695, 0.00000, 0.00000);
	CreateDynamicObject_FR(7893, 1432.54749, 2754.64233, 742.70465,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1454, 1428.83423, 2754.77588, 748.40631,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1454, 1435.87891, 2754.77637, 748.40631,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1453, 1432.44849, 2754.71387, 745.64795,   180.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3437, 1421.96289, 2755.88477, 741.54816,   325.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3437, 1442.55212, 2755.88477, 741.54816,   35.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(14637, 1433.20654, 2700.28931, 751.12335,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(14562, 1406.72681, 2727.44214, 741.42743,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(14562, 1459.79175, 2727.44238, 741.42743,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(10281, 1432.93738, 2501.57422, 599.39667,   314.50055, 0.35669, 180.25439);
	CreateDynamicObject_FR(9191, 1405.22070, 2727.62256, 746.30865,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(8292, 1460.95129, 2727.52979, 745.32513,   0.00000, 0.00000, 144.75000);
	CreateDynamicObject_FR(3524, 1441.26611, 2699.73804, 742.93207,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(3524, 1423.85889, 2699.73828, 742.93207,   0.00000, 0.00000, 179.99451);
	CreateDynamicObject_FR(18450, 1432.51953, 2398.93066, 430.08319,   0.00000, 45.89633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2395.12524, 434.26477,   0.00000, 49.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2391.58984, 438.67706,   0.00000, 53.09634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2388.33862, 443.30261,   0.00000, 56.69632, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2385.38403, 448.12320,   0.00000, 60.29633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2382.73828, 453.11978,   0.00000, 63.89633, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2380.41113, 458.27264,   0.00000, 67.49634, 90.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2378.41235, 463.56146,   0.00000, 71.09634, 90.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2367.42871, 510.22766,   295.50000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2366.70850, 511.62326,   299.09998, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2365.90186, 512.97089,   302.70001, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2365.01221, 514.26520,   306.29999, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2364.04321, 515.50110,   309.89996, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2362.99854, 516.67371,   313.50000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2361.88208, 517.77844,   317.09998, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2360.69849, 518.81091,   320.70001, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2359.45264, 519.76697,   324.29999, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2358.14893, 520.64294,   327.90002, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2356.79297, 521.43530,   331.50000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2355.38989, 522.14099,   335.09998, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2353.94531, 522.75720,   338.70001, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2352.46484, 523.28143,   342.29999, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2350.95435, 523.71167,   345.90002, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2349.41992, 524.04626,   349.50000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2347.86743, 524.28381,   353.10004, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2346.30322, 524.42346,   356.70001, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2344.73315, 524.46454,   0.30002, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2343.16382, 524.40698,   3.90002, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2341.60083, 524.25098,   7.50000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2340.05103, 523.99719,   11.10001, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2338.52002, 523.64661,   14.69998, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2337.01416, 523.20056,   18.29999, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2335.53931, 522.66077,   21.89999, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2334.10132, 522.02954,   25.50000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51074, 2332.70605, 521.30920,   29.09729, 179.99451, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2331.35815, 520.50269,   32.69998, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2330.06372, 519.61310,   36.29999, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2328.82788, 518.64404,   39.89999, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2327.65527, 517.59924,   43.50000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2326.55054, 516.48291,   47.10001, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2325.51807, 515.29944,   50.70001, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2324.56201, 514.05341,   54.29999, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2323.68604, 512.74988,   57.89999, 180.00000, 0.00000);
	CreateDynamicObject_FR(8558, 1431.51025, 2322.89355, 511.39386,   61.50000, 180.00000, 0.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2309.86328, 467.98575,   0.00000, 68.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2280.03223, 393.87909,   0.00000, 68.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2250.35889, 320.06635,   0.00000, 68.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1432.51953, 2220.63770, 246.19556,   0.00000, 68.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1432.31958, 2219.37451, 243.31966,   0.00000, 64.48776, 270.00000);
	CreateDynamicObject_FR(18450, 1432.11951, 2217.93335, 240.52875,   0.00000, 60.88779, 270.00000);
	CreateDynamicObject_FR(18450, 1431.91956, 2216.31958, 237.83385,   0.00000, 57.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1431.71948, 2214.54004, 235.24559,   0.00000, 53.68777, 270.00000);
	CreateDynamicObject_FR(18450, 1431.51953, 2212.60132, 232.77419,   0.00000, 50.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1431.31958, 2210.51123, 230.42938,   0.00000, 46.48776, 270.00000);
	CreateDynamicObject_FR(18450, 1431.11951, 2208.27808, 228.22044,   0.00000, 42.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1430.91956, 2205.91064, 226.15608,   0.00000, 39.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1430.71948, 2203.41821, 224.24445,   0.00000, 35.68777, 270.00000);
	CreateDynamicObject_FR(18450, 1430.51953, 2200.81079, 222.49309,   0.00000, 32.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1430.31958, 2198.09839, 220.90891,   0.00000, 28.48776, 270.00000);
	CreateDynamicObject_FR(18450, 1430.11951, 2195.29199, 219.49815,   0.00000, 24.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1429.91956, 2192.40259, 218.26640,   0.00000, 21.28775, 270.00000);
	CreateDynamicObject_FR(18450, 1429.71948, 2189.44141, 217.21854,   0.00000, 17.68774, 270.00000);
	CreateDynamicObject_FR(18450, 1429.51953, 2186.42017, 216.35864,   0.00000, 14.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1429.31958, 2183.35107, 215.69016,   0.00000, 10.48779, 270.00000);
	CreateDynamicObject_FR(18450, 1429.11951, 2180.24609, 215.21570,   0.00000, 6.88779, 270.00000);
	CreateDynamicObject_FR(18450, 1428.91956, 2177.11743, 214.93715,   0.00000, 3.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1428.71948, 2173.97729, 214.85559,   0.00000, 359.68781, 270.00000);
	CreateDynamicObject_FR(18450, 1428.51953, 2170.83838, 214.97136,   0.00000, 356.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1428.31958, 2167.71289, 215.28400,   0.00000, 352.48779, 270.00000);
	CreateDynamicObject_FR(18450, 1428.11951, 2164.61328, 215.79227,   0.00000, 348.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1427.91956, 2161.55176, 216.49417,   0.00000, 345.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1427.71948, 2158.54004, 217.38693,   0.00000, 341.68774, 270.00000);
	CreateDynamicObject_FR(18450, 1427.51953, 2155.59058, 218.46703,   0.00000, 338.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1427.31958, 2152.71460, 219.73018,   0.00000, 334.48779, 270.00000);
	CreateDynamicObject_FR(18450, 1427.11951, 2149.92383, 221.17143,   0.00000, 330.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1426.91956, 2147.22876, 222.78508,   0.00000, 327.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1426.71948, 2144.64063, 224.56476,   0.00000, 323.68774, 270.00000);
	CreateDynamicObject_FR(18450, 1426.51953, 2142.16919, 226.50343,   0.00000, 320.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1426.31958, 2139.82446, 228.59348,   0.00000, 316.48773, 270.00000);
	CreateDynamicObject_FR(18450, 1426.11951, 2137.61548, 230.82663,   0.00000, 312.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1425.91956, 2135.55103, 233.19406,   0.00000, 309.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1425.71948, 2133.63940, 235.68646,   0.00000, 305.68774, 270.00000);
	CreateDynamicObject_FR(18450, 1425.51953, 2131.88818, 238.29396,   0.00000, 302.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1425.31958, 2130.30396, 241.00629,   0.00000, 298.48779, 270.00000);
	CreateDynamicObject_FR(18450, 1425.11951, 2128.89307, 243.81274,   0.00000, 294.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1424.91956, 2127.66138, 246.70222,   0.00000, 291.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1424.71948, 2126.61353, 249.66336,   0.00000, 287.68781, 270.00000);
	CreateDynamicObject_FR(18450, 1424.51953, 2125.75366, 252.68445,   0.00000, 284.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1424.31958, 2125.08521, 255.75357,   0.00000, 280.48779, 270.00000);
	CreateDynamicObject_FR(18450, 1424.11951, 2124.61084, 258.85861,   0.00000, 276.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1423.91956, 2124.33228, 261.98730,   0.00000, 273.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1423.71948, 2124.25049, 265.12732,   0.00000, 269.68774, 270.00000);
	CreateDynamicObject_FR(18450, 1423.51953, 2124.36646, 268.26627,   0.00000, 266.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1423.31958, 2124.67896, 271.39175,   0.00000, 262.48779, 270.00000);
	CreateDynamicObject_FR(18450, 1423.11951, 2125.18726, 274.49142,   0.00000, 258.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1422.91956, 2125.88916, 277.55307,   0.00000, 255.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1422.71948, 2126.78198, 280.56461,   0.00000, 251.68774, 270.00000);
	CreateDynamicObject_FR(18450, 1422.51953, 2127.86206, 283.51413,   0.00000, 248.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1422.31958, 2129.12524, 286.39005,   0.00000, 244.48773, 270.00000);
	CreateDynamicObject_FR(18450, 1422.11951, 2130.56641, 289.18094,   0.00000, 240.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1421.91956, 2132.18018, 291.87585,   0.00000, 237.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1421.71948, 2133.95972, 294.46411,   0.00000, 233.68774, 270.00000);
	CreateDynamicObject_FR(18450, 1421.51953, 2135.89844, 296.93552,   0.00000, 230.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1421.31958, 2137.98853, 299.28030,   0.00000, 226.48779, 270.00000);
	CreateDynamicObject_FR(18450, 1421.11951, 2140.22168, 301.48926,   0.00000, 222.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1420.91956, 2142.58911, 303.55362,   0.00000, 219.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1420.71948, 2145.08154, 305.46524,   0.00000, 215.68781, 270.00000);
	CreateDynamicObject_FR(18450, 1420.51953, 2147.68896, 307.21661,   0.00000, 212.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1420.31958, 2150.40137, 308.80081,   0.00000, 208.48773, 270.00000);
	CreateDynamicObject_FR(18450, 1420.11951, 2153.20776, 310.21155,   0.00000, 204.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1419.91956, 2156.09717, 311.44330,   0.00000, 201.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1419.71948, 2159.05835, 312.49118,   0.00000, 197.68774, 270.00000);
	CreateDynamicObject_FR(18450, 1419.51953, 2162.07959, 313.35104,   0.00000, 194.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1419.31958, 2165.14868, 314.01953,   0.00000, 190.48779, 270.00000);
	CreateDynamicObject_FR(18450, 1419.11951, 2168.25366, 314.49399,   0.00000, 186.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1418.91956, 2171.38232, 314.77255,   0.00000, 183.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1418.71948, 2174.52222, 314.85410,   0.00000, 179.68781, 270.00000);
	CreateDynamicObject_FR(18450, 1418.51953, 2177.66138, 314.73834,   0.00000, 176.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1418.31958, 2180.78687, 314.42569,   0.00000, 172.48773, 270.00000);
	CreateDynamicObject_FR(18450, 1418.11951, 2183.88647, 313.91742,   0.00000, 168.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1417.91956, 2186.94800, 313.21552,   0.00000, 165.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1417.71948, 2189.95972, 312.32278,   0.00000, 161.68774, 270.00000);
	CreateDynamicObject_FR(18450, 1417.51953, 2192.90918, 311.24268,   0.00000, 158.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1417.31958, 2195.78516, 309.97952,   0.00000, 154.48779, 270.00000);
	CreateDynamicObject_FR(18450, 1417.11951, 2198.57593, 308.53827,   0.00000, 150.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1416.91956, 2201.27075, 306.92462,   0.00000, 147.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1416.71948, 2203.85913, 305.14493,   0.00000, 143.68777, 270.00000);
	CreateDynamicObject_FR(18450, 1416.51953, 2206.33057, 303.20627,   0.00000, 140.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1416.31958, 2208.67529, 301.11621,   0.00000, 136.48776, 270.00000);
	CreateDynamicObject_FR(18450, 1416.11951, 2210.88428, 298.88306,   0.00000, 132.88779, 270.00000);
	CreateDynamicObject_FR(18450, 1415.91956, 2212.94873, 296.51563,   0.00000, 129.28775, 270.00000);
	CreateDynamicObject_FR(18450, 1415.71948, 2214.86035, 294.02325,   0.00000, 125.68777, 270.00000);
	CreateDynamicObject_FR(18450, 1415.51953, 2216.61157, 291.41574,   0.00000, 122.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1415.31958, 2218.19580, 288.70340,   0.00000, 118.48776, 270.00000);
	CreateDynamicObject_FR(18450, 1415.11951, 2219.60645, 285.89697,   0.00000, 114.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1414.91956, 2220.83838, 283.00748,   0.00000, 111.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1414.71948, 2221.88623, 280.04633,   0.00000, 107.68777, 270.00000);
	CreateDynamicObject_FR(18450, 1414.51953, 2222.74609, 277.02524,   0.00000, 104.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1414.31958, 2223.41455, 273.95612,   0.00000, 100.48776, 270.00000);
	CreateDynamicObject_FR(18450, 1414.11951, 2223.88892, 270.85110,   0.00000, 96.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1413.91956, 2224.16748, 267.72238,   0.00000, 93.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1413.71948, 2224.24902, 264.58237,   0.00000, 89.68774, 270.00000);
	CreateDynamicObject_FR(18450, 1413.51953, 2224.13330, 261.44342,   0.00000, 86.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1413.31958, 2223.82080, 258.31796,   0.00000, 82.48779, 270.00000);
	CreateDynamicObject_FR(18450, 1413.11951, 2223.31250, 255.21828,   0.00000, 78.88779, 270.00000);
	CreateDynamicObject_FR(18450, 1412.91956, 2222.61060, 252.15663,   0.00000, 75.28775, 270.00000);
	CreateDynamicObject_FR(18450, 1412.71948, 2221.71777, 249.14510,   0.00000, 71.68777, 270.00000);
	CreateDynamicObject_FR(18450, 1412.51953, 2220.63770, 246.19556,   0.00000, 68.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1412.31958, 2219.37451, 243.31966,   0.00000, 64.48776, 270.00000);
	CreateDynamicObject_FR(18450, 1412.11951, 2217.93335, 240.52875,   0.00000, 60.88779, 270.00000);
	CreateDynamicObject_FR(18450, 1411.91956, 2216.31958, 237.83385,   0.00000, 57.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1411.71948, 2214.54004, 235.24559,   0.00000, 53.68777, 270.00000);
	CreateDynamicObject_FR(18450, 1411.51953, 2212.60132, 232.77419,   0.00000, 50.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1411.31958, 2210.51123, 230.42938,   0.00000, 46.48776, 270.00000);
	CreateDynamicObject_FR(18450, 1411.11951, 2208.27808, 228.22044,   0.00000, 42.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1410.91956, 2205.91064, 226.15608,   0.00000, 39.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1410.71948, 2203.41821, 224.24445,   0.00000, 35.68777, 270.00000);
	CreateDynamicObject_FR(18450, 1410.51953, 2200.81079, 222.49309,   0.00000, 32.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1410.31958, 2198.09839, 220.90891,   0.00000, 28.48776, 270.00000);
	CreateDynamicObject_FR(18450, 1410.11951, 2195.29199, 219.49815,   0.00000, 24.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1409.91956, 2192.40259, 218.26640,   0.00000, 21.28775, 270.00000);
	CreateDynamicObject_FR(18450, 1409.71948, 2189.44141, 217.21854,   0.00000, 17.68774, 270.00000);
	CreateDynamicObject_FR(18450, 1409.51953, 2186.42017, 216.35864,   0.00000, 14.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1409.31958, 2183.35107, 215.69016,   0.00000, 10.48779, 270.00000);
	CreateDynamicObject_FR(18450, 1409.11951, 2180.24609, 215.21570,   0.00000, 6.88779, 270.00000);
	CreateDynamicObject_FR(18450, 1408.91956, 2177.11743, 214.93715,   0.00000, 3.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1408.71948, 2173.97729, 214.85559,   0.00000, 359.68781, 270.00000);
	CreateDynamicObject_FR(18450, 1408.51953, 2170.83838, 214.97136,   0.00000, 356.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1408.31958, 2167.71289, 215.28400,   0.00000, 352.48779, 270.00000);
	CreateDynamicObject_FR(18450, 1408.11951, 2164.61328, 215.79227,   0.00000, 348.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1407.91956, 2161.55176, 216.49417,   0.00000, 345.28778, 270.00000);
	CreateDynamicObject_FR(18450, 1407.71948, 2158.54004, 217.38693,   0.00000, 341.68774, 270.00000);
	CreateDynamicObject_FR(18450, 1407.51953, 2155.59058, 218.46703,   0.00000, 338.08777, 270.00000);
	CreateDynamicObject_FR(18450, 1407.31958, 2152.71460, 219.73018,   0.00000, 334.48779, 270.00000);
	CreateDynamicObject_FR(18450, 1407.11951, 2149.92383, 221.17143,   0.00000, 330.88776, 270.00000);
	CreateDynamicObject_FR(18450, 1406.91956, 2147.22876, 222.78508,   0.00000, 327.28778, 270.00000);
	CreateDynamicObject_FR(8397, 1428.03955, 2175.50269, 263.35944,   0.00000, 88.50000, 0.00000);
	CreateDynamicObject_FR(8397, 1406.75781, 2175.50293, 263.35944,   0.00000, 88.49487, 180.00000);
	CreateDynamicObject_FR(8397, 1423.52344, 2178.27783, 257.61658,   0.00000, 139.74487, 31.00000);
	CreateDynamicObject_FR(8397, 1422.16077, 2169.24365, 266.41830,   0.72507, 68.75238, 317.13394);
	CreateDynamicObject_FR(8397, 1410.33093, 2170.24170, 271.71475,   1.42172, 44.25250, 207.34615);
	CreateDynamicObject_FR(8397, 1413.82385, 2181.53369, 262.40048,   42.07941, 109.97983, 111.74457);
	CreateDynamicObject_FR(8397, 1408.61035, 2166.58862, 262.40048,   42.07764, 109.97864, 201.74194);
	CreateDynamicObject_FR(8397, 1421.42773, 2170.58862, 257.61658,   0.00000, 140.74060, 315.74792);
	CreateDynamicObject_FR(8397, 1408.85339, 2173.61597, 257.61658,   0.00000, 140.74036, 175.49707);
	CreateDynamicObject_FR(8397, 1422.12634, 2177.10913, 271.74921,   341.07660, 29.50269, 1.89383);
	CreateDynamicObject_FR(5154, 1432.57324, 2345.81274, 505.23138,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1435.56238, 2338.44971, 508.80917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1429.04248, 2340.08008, 508.80917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1431.60437, 2343.34009, 508.80917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1434.16589, 2341.94263, 508.80917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1436.02893, 2344.96948, 508.80917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1431.13928, 2348.22974, 508.80917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1428.11255, 2346.13379, 508.80917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1428.81091, 2353.58521, 508.80917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1432.07056, 2352.65356, 508.80917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1434.63171, 2349.62622, 508.80917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1436.96045, 2353.58447, 508.80917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7392, 1433.17590, 2342.78882, 532.76001,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(16776, 1406.78516, 2023.41650, 281.91422,   30.75000, 180.00000, 180.00000);
	CreateDynamicObject_FR(16776, 1406.78516, 2029.27002, 279.67935,   68.00476, 0.00000, 180.00000);

	//PIPE 
	CreateDynamicObject_FR(3502, 258.25000, 2931.72998, 2.69000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3502, 258.34000, 2940.20996, 2.68000,   -0.07000, -0.66000, -1.15000);
	CreateDynamicObject_FR(3502, 258.57001, 2948.54004, 2.67000,   -0.05000, -1.31000, -2.10000);
	CreateDynamicObject_FR(3502, 258.92999, 2956.70996, 2.67000,   0.06000, -1.97000, -2.84000);
	CreateDynamicObject_FR(3502, 259.37000, 2964.75000, 2.70000,   0.30000, -2.62000, -3.36000);
	CreateDynamicObject_FR(3502, 259.85999, 2972.65991, 2.76000,   0.65000, -3.28000, -3.63000);
	CreateDynamicObject_FR(3502, 260.35999, 2980.45996, 2.88000,   1.13000, -3.94000, -3.65000);
	CreateDynamicObject_FR(3502, 260.82999, 2988.14990, 3.07000,   1.72000, -4.60000, -3.41000);
	CreateDynamicObject_FR(3502, 261.26001, 2995.75000, 3.35000,   2.44000, -5.28000, -2.89000);
	CreateDynamicObject_FR(3502, 276.20001, 2947.88989, 16.16000,   0.00000, 0.00000, 152.00000);
	CreateDynamicObject_FR(3502, 311.75000, 2997.07007, 37.58000,   -30.69000, -4.42000, 138.36000);
	CreateDynamicObject_FR(3502, 307.26001, 2991.98999, 33.59000,   -30.16000, -4.25000, 138.80000);
	CreateDynamicObject_FR(3502, 302.79001, 2986.80005, 29.72000,   -28.56000, -3.83000, 139.75999);
	CreateDynamicObject_FR(3502, 298.32999, 2981.40991, 26.10000,   -25.90000, -3.21000, 141.17999);
	CreateDynamicObject_FR(3502, 293.88000, 2975.69995, 22.86000,   -22.21000, -2.48000, 142.98000);
	CreateDynamicObject_FR(3502, 289.45001, 2969.59009, 20.12000,   -17.55000, -1.71000, 145.06000);
	CreateDynamicObject_FR(3502, 285.01999, 2962.98999, 18.01000,   -12.11000, -1.00000, 147.32001);
	CreateDynamicObject_FR(3502, 280.60999, 2955.78003, 16.65000,   -6.15000, -0.41000, 149.66000);
	CreateDynamicObject_FR(18710, 258.29999, 2927.45996, 1.45000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18724, 258.17999, 2927.15991, 4.61000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18761, 258.29999, 2922.62988, 3.84000,   0.00000, 0.00000, 188.00000);
	CreateDynamicObject_FR(3506, 270.60999, 2924.52002, 0.18000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3506, 247.66000, 2919.78003, 0.18000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3502, 245.87000, 3091.51001, 21.45000,   18.97000, 340.92001, 26.41000);
	CreateDynamicObject_FR(3502, 261.59000, 3003.27002, 3.73000,   3.29000, -5.98000, -2.09000);
	CreateDynamicObject_FR(3502, 261.79001, 3010.71997, 4.22000,   4.26000, -6.71000, -1.01000);
	CreateDynamicObject_FR(3502, 261.84000, 3018.12012, 4.84000,   5.35000, -7.48000, 0.35000);
	CreateDynamicObject_FR(3502, 261.69000, 3025.46997, 5.60000,   6.55000, -8.30000, 2.01000);
	CreateDynamicObject_FR(3502, 261.31000, 3032.79004, 6.53000,   7.85000, -9.18000, 3.95000);
	CreateDynamicObject_FR(3502, 260.67001, 3040.08008, 7.63000,   9.23000, -10.13000, 6.15000);
	CreateDynamicObject_FR(3502, 259.73001, 3047.37012, 8.91000,   10.67000, -11.16000, 8.60000);
	CreateDynamicObject_FR(3502, 258.45001, 3054.64990, 10.41000,   12.14000, -12.28000, 11.27000);
	CreateDynamicObject_FR(3502, 256.81000, 3061.94995, 12.12000,   13.62000, -13.48000, 14.11000);
	CreateDynamicObject_FR(3502, 254.77000, 3069.28003, 14.06000,   15.06000, -14.77000, 17.10000);
	CreateDynamicObject_FR(3502, 252.28000, 3076.63989, 16.26000,   16.46000, -16.14000, 20.17000);
	CreateDynamicObject_FR(3502, 249.33000, 3084.04004, 18.72000,   17.77000, -17.58000, 23.30000);
	CreateDynamicObject_FR(3502, 166.24001, 3218.20996, 58.50000,   4.00000, 0.00000, 10.00000);
	CreateDynamicObject_FR(3502, 241.81000, 3099.20996, 24.45000,   19.04000, -19.12000, 29.16000);
	CreateDynamicObject_FR(3502, 237.60001, 3106.36011, 27.32000,   18.99000, -19.12000, 31.80000);
	CreateDynamicObject_FR(3502, 233.25999, 3113.03003, 30.05000,   18.83000, -19.06000, 34.25000);
	CreateDynamicObject_FR(3502, 228.82001, 3119.29004, 32.64000,   18.57000, -18.89000, 36.47000);
	CreateDynamicObject_FR(3502, 224.31000, 3125.17993, 35.11000,   18.21000, -18.62000, 38.37000);
	CreateDynamicObject_FR(3502, 219.75999, 3130.76001, 37.46000,   17.76000, -18.21000, 39.92000);
	CreateDynamicObject_FR(3502, 215.19000, 3136.10010, 39.67000,   17.22000, -17.66000, 41.04000);
	CreateDynamicObject_FR(3502, 210.64000, 3141.26001, 41.76000,   16.60000, -16.97000, 41.71000);
	CreateDynamicObject_FR(3502, 206.14000, 3146.28003, 43.73000,   15.91000, -16.12000, 41.88000);
	CreateDynamicObject_FR(3502, 201.71001, 3151.23999, 45.58000,   15.15000, -15.14000, 41.53000);
	CreateDynamicObject_FR(3502, 197.39000, 3156.18994, 47.31000,   14.32000, -14.02000, 40.63000);
	CreateDynamicObject_FR(3502, 193.20000, 3161.18994, 48.92000,   13.43000, -12.78000, 39.19000);
	CreateDynamicObject_FR(3502, 189.17000, 3166.31006, 50.42000,   12.48000, -11.44000, 37.22000);
	CreateDynamicObject_FR(3502, 185.33000, 3171.58008, 51.81000,   11.47000, -10.02000, 34.74000);
	CreateDynamicObject_FR(3502, 181.71001, 3177.09009, 53.08000,   10.41000, -8.55000, 31.81000);
	CreateDynamicObject_FR(3502, 178.34000, 3182.87988, 54.25000,   9.31000, -7.05000, 28.51000);
	CreateDynamicObject_FR(3502, 175.25000, 3189.02002, 55.30000,   8.19000, -5.55000, 24.93000);
	CreateDynamicObject_FR(3502, 172.47000, 3195.56006, 56.26000,   7.07000, -4.08000, 21.19000);
	CreateDynamicObject_FR(3502, 170.02000, 3202.57007, 57.11000,   5.98000, -2.65000, 17.38000);
	CreateDynamicObject_FR(3502, 167.92999, 3210.10010, 57.85000,   4.95000, -1.29000, 13.62000);
	CreateDynamicObject_FR(3502, 251.70000, 3342.95996, 88.97000,   0.00000, 0.00000, 262.00000);
	CreateDynamicObject_FR(3502, 164.97000, 3227.22998, 59.28000,   5.74000, -0.50000, 6.02000);
	CreateDynamicObject_FR(3502, 164.32001, 3236.30005, 60.32000,   7.29000, -0.93000, 2.15000);
	CreateDynamicObject_FR(3502, 164.28000, 3245.37012, 61.59000,   8.66000, -1.29000, -1.63000);
	CreateDynamicObject_FR(3502, 164.84000, 3254.36011, 63.07000,   9.87000, -1.59000, -5.39000);
	CreateDynamicObject_FR(3502, 165.97000, 3263.23999, 64.71000,   10.91000, -1.83000, -9.15000);
	CreateDynamicObject_FR(3502, 167.67000, 3271.93994, 66.49000,   11.80000, -2.01000, -12.95000);
	CreateDynamicObject_FR(3502, 169.92000, 3280.39990, 68.39000,   12.53000, -2.12000, -16.84000);
	CreateDynamicObject_FR(3502, 172.70000, 3288.58008, 70.35000,   13.11000, -2.16000, -20.86000);
	CreateDynamicObject_FR(3502, 176.02000, 3296.40991, 72.37000,   13.52000, -2.13000, -25.05000);
	CreateDynamicObject_FR(3502, 179.84000, 3303.83008, 74.40000,   13.76000, -2.02000, -29.48000);
	CreateDynamicObject_FR(3502, 184.16000, 3310.80005, 76.42000,   13.81000, -1.82000, -34.18000);
	CreateDynamicObject_FR(3502, 188.97000, 3317.26001, 78.39000,   13.65000, -1.54000, -39.21000);
	CreateDynamicObject_FR(3502, 194.24001, 3323.13989, 80.28000,   13.24000, -1.19000, -44.60000);
	CreateDynamicObject_FR(3502, 199.97000, 3328.39990, 82.07000,   12.56000, -0.77000, -50.39000);
	CreateDynamicObject_FR(3502, 206.14999, 3332.97998, 83.71000,   11.57000, -0.34000, -56.58000);
	CreateDynamicObject_FR(3502, 212.75000, 3336.82007, 85.19000,   10.27000, 0.21000, -63.13000);
	CreateDynamicObject_FR(3502, 219.75999, 3339.86011, 86.47000,   8.65000, 0.52000, -70.00000);
	CreateDynamicObject_FR(3502, 227.17999, 3342.05005, 87.52000,   6.73000, 0.73000, -77.06000);
	CreateDynamicObject_FR(3502, 234.99001, 3343.34009, 88.31000,   4.59000, 0.75000, -84.19000);
	CreateDynamicObject_FR(3502, 243.17000, 3343.65991, 88.80000,   2.31000, 0.51000, -91.21000);
	CreateDynamicObject_FR(3502, 374.85999, 3385.72998, 110.36000,   14.00000, 0.00000, 304.00000);
	CreateDynamicObject_FR(3502, 260.64001, 3342.14990, 89.13000,   1.95000, 0.02000, -92.45000);
	CreateDynamicObject_FR(3502, 269.59000, 3342.16992, 89.58000,   3.72000, -0.06000, -87.38000);
	CreateDynamicObject_FR(3502, 278.51001, 3342.93994, 90.28000,   5.28000, -0.18000, -82.82000);
	CreateDynamicObject_FR(3502, 287.38000, 3344.37988, 91.23000,   6.65000, -0.33000, -78.74000);
	CreateDynamicObject_FR(3502, 296.14999, 3346.41992, 92.37000,   7.84000, -0.48000, -75.12000);
	CreateDynamicObject_FR(3502, 304.76999, 3348.97998, 93.70000,   8.87000, -0.61000, -71.92000);
	CreateDynamicObject_FR(3502, 313.22000, 3351.97998, 95.17000,   9.76000, -0.72000, -69.09000);
	CreateDynamicObject_FR(3502, 321.45001, 3355.33008, 96.76000,   10.52000, -0.80000, -66.60000);
	CreateDynamicObject_FR(3502, 329.42999, 3358.96997, 98.45000,   11.18000, -0.84000, -64.41000);
	CreateDynamicObject_FR(3502, 337.10999, 3362.81006, 100.19000,   11.76000, -0.85000, -62.50000);
	CreateDynamicObject_FR(3502, 344.45999, 3366.77002, 101.97000,   12.26000, -0.82000, -60.83000);
	CreateDynamicObject_FR(3502, 351.44000, 3370.78003, 103.75000,   12.70000, -0.75000, -59.40000);
	CreateDynamicObject_FR(3502, 358.01001, 3374.76001, 105.51000,   13.09000, -0.63000, -58.19000);
	CreateDynamicObject_FR(3502, 364.12000, 3378.62988, 107.22000,   13.43000, -0.48000, -57.20000);
	CreateDynamicObject_FR(3502, 369.75000, 3382.31006, 108.84000,   13.73000, -0.27000, -56.46000);
	CreateDynamicObject_FR(3502, 508.31000, 3472.29004, 159.07001,   54.00000, 0.00000, 300.00000);
	CreateDynamicObject_FR(3502, 381.98999, 3390.54004, 112.29000,   11.34000, -0.07000, -56.02000);
	CreateDynamicObject_FR(3502, 389.12000, 3395.34009, 113.83000,   9.09000, -0.13000, -56.06000);
	CreateDynamicObject_FR(3502, 396.23999, 3400.12988, 115.06000,   7.26000, -0.20000, -56.10000);
	CreateDynamicObject_FR(3502, 403.34000, 3404.88989, 116.04000,   5.86000, -0.27000, -56.16000);
	CreateDynamicObject_FR(3502, 410.41000, 3409.62988, 116.84000,   4.90000, -0.34000, -56.22000);
	CreateDynamicObject_FR(3502, 417.42999, 3414.31006, 117.52000,   4.38000, -0.41000, -56.30000);
	CreateDynamicObject_FR(3502, 424.38000, 3418.93994, 118.15000,   4.31000, -0.47000, -56.39000);
	CreateDynamicObject_FR(3502, 431.26999, 3423.51001, 118.80000,   4.71000, -0.54000, -56.49000);
	CreateDynamicObject_FR(3502, 438.06000, 3428.00000, 119.53000,   5.61000, -0.60000, -56.60000);
	CreateDynamicObject_FR(3502, 444.76001, 3432.40991, 120.41000,   7.01000, -0.66000, -56.73000);
	CreateDynamicObject_FR(3502, 451.35001, 3436.70996, 121.50000,   8.95000, -0.71000, -56.88000);
	CreateDynamicObject_FR(3502, 457.81000, 3440.91992, 122.88000,   11.45000, -0.76000, -57.04000);
	CreateDynamicObject_FR(3502, 464.14001, 3445.01001, 124.62000,   14.53000, -0.80000, -57.23000);
	CreateDynamicObject_FR(3502, 470.32001, 3448.96997, 126.76000,   18.19000, -0.82000, -57.44000);
	CreateDynamicObject_FR(3502, 476.32999, 3452.79004, 129.39999,   22.42000, -0.83000, -57.67000);
	CreateDynamicObject_FR(3502, 482.17001, 3456.46997, 132.58000,   27.15000, -0.81000, -57.94000);
	CreateDynamicObject_FR(3502, 487.82999, 3459.98999, 136.38000,   32.29000, -0.75000, -58.24000);
	CreateDynamicObject_FR(3502, 493.28000, 3463.34009, 140.86000,   37.71000, -0.66000, -58.59000);
	CreateDynamicObject_FR(3502, 498.51999, 3466.52002, 146.09000,   43.24000, -0.51000, -58.99000);
	CreateDynamicObject_FR(3502, 503.54001, 3469.50000, 152.14000,   48.72000, -0.30000, -59.45000);
	CreateDynamicObject_FR(3502, 512.85999, 3474.52002, 165.98000,   53.32000, 5.14000, -68.14000);
	CreateDynamicObject_FR(3502, 517.21997, 3475.87988, 171.97000,   51.59000, 11.13000, -77.48000);
	CreateDynamicObject_FR(3502, 521.44000, 3476.44995, 177.08000,   48.42000, 17.35000, -87.44000);
	CreateDynamicObject_FR(3502, 525.56000, 3476.28003, 181.38000,   43.59000, 22.93000, -97.14000);
	CreateDynamicObject_FR(3502, 529.60999, 3475.44995, 184.92000,   37.26000, 27.15000, -105.75000);
	CreateDynamicObject_FR(3502, 533.64001, 3474.02002, 187.78000,   29.99000, 29.75000, -112.82000);
	CreateDynamicObject_FR(3502, 537.70001, 3472.07007, 190.00000,   22.56000, 30.89000, -118.23000);
	CreateDynamicObject_FR(3502, 541.81000, 3469.66992, 191.64000,   15.67000, 30.99000, -122.13000);
	CreateDynamicObject_FR(3502, 546.03003, 3466.87012, 192.77000,   9.71000, 30.43000, -124.71000);
	CreateDynamicObject_FR(3502, 550.38000, 3463.76001, 193.44000,   4.82000, 29.52000, -126.18000);
	CreateDynamicObject_FR(3502, 554.92999, 3460.39990, 193.72000,   0.96000, 28.48000, -126.71000);
	CreateDynamicObject_FR(3502, 559.69000, 3456.85010, 193.66000,   -1.98000, 27.42000, -126.44000);
	CreateDynamicObject_FR(3502, 564.72998, 3453.18994, 193.32001,   -4.12000, 26.41000, -125.49000);
	CreateDynamicObject_FR(3502, 570.07001, 3449.48999, 192.75999,   -5.58000, 25.47000, -123.92000);
	CreateDynamicObject_FR(3502, 575.75000, 3445.81006, 192.03999,   -6.43000, 24.62000, -121.82000);
	CreateDynamicObject_FR(3502, 581.83002, 3442.21997, 191.22000,   -6.73000, 23.85000, -119.24000);
	CreateDynamicObject_FR(3502, 588.34003, 3438.79004, 190.36000,   -6.55000, 23.12000, -116.26000);
	CreateDynamicObject_FR(3502, 595.31000, 3435.59009, 189.52000,   -5.92000, 22.40000, -112.95000);
	CreateDynamicObject_FR(3502, 490.54001, 3398.01001, 139.53999,   308.17001, 353.51999, 34.89000);
	CreateDynamicObject_FR(3502, 597.14001, 3354.72998, 199.21001,   -1.36000, -108.84000, 93.60000);
	CreateDynamicObject_FR(3502, 589.12000, 3354.45996, 198.84000,   -3.89000, -101.52000, 90.32000);
	CreateDynamicObject_FR(3502, 581.19000, 3354.63989, 198.12000,   -6.52000, -94.33000, 87.11000);
	CreateDynamicObject_FR(3502, 573.37000, 3355.25000, 197.03000,   -9.25000, -87.29000, 83.96000);
	CreateDynamicObject_FR(3502, 565.70001, 3356.27002, 195.58000,   -12.05000, -80.37000, 80.85000);
	CreateDynamicObject_FR(3502, 558.19000, 3357.68994, 193.74001,   -14.94000, -73.60000, 77.78000);
	CreateDynamicObject_FR(3502, 550.87000, 3359.46997, 191.52000,   -17.89000, -66.95000, 74.73000);
	CreateDynamicObject_FR(3502, 543.77002, 3361.62012, 188.91000,   -20.92000, -60.45000, 71.68000);
	CreateDynamicObject_FR(3502, 536.91998, 3364.09009, 185.89999,   -24.00000, -54.09000, 68.60000);
	CreateDynamicObject_FR(3502, 530.34003, 3366.87988, 182.48000,   -27.13000, -47.88000, 65.48000);
	CreateDynamicObject_FR(3502, 524.04999, 3369.94995, 178.64000,   -30.30000, -41.85000, 62.29000);
	CreateDynamicObject_FR(3502, 518.09003, 3373.31006, 174.39000,   -33.49000, -36.00000, 59.00000);
	CreateDynamicObject_FR(3502, 512.47998, 3376.90991, 169.70000,   -36.68000, -30.35000, 55.56000);
	CreateDynamicObject_FR(3502, 507.23999, 3380.73999, 164.57001,   -39.86000, -24.95000, 51.96000);
	CreateDynamicObject_FR(3502, 502.39999, 3384.79004, 159.00000,   -42.99000, -19.82000, 48.14000);
	CreateDynamicObject_FR(3502, 497.98001, 3389.03003, 152.98000,   -46.05000, -15.00000, 44.05000);
	CreateDynamicObject_FR(3502, 494.01999, 3393.44995, 146.50000,   -49.01000, -10.53000, 39.66000);
	CreateDynamicObject_FR(3502, 519.53998, 3511.79004, 122.63000,   0.00000, 0.00000, 21.99000);
	CreateDynamicObject_FR(3502, 488.04001, 3403.12988, 132.62000,   -48.30000, -16.71000, 16.78000);
	CreateDynamicObject_FR(3502, 487.26999, 3408.60010, 127.08000,   -40.93000, -24.96000, -0.05000);
	CreateDynamicObject_FR(3502, 487.97000, 3414.38989, 122.80000,   -31.15000, -29.00000, -12.89000);
	CreateDynamicObject_FR(3502, 489.91000, 3420.50000, 119.66000,   -21.33000, -29.41000, -21.57000);
	CreateDynamicObject_FR(3502, 492.82999, 3426.88989, 117.51000,   -12.98000, -27.68000, -27.02000);
	CreateDynamicObject_FR(3502, 496.50000, 3433.57007, 116.23000,   -6.43000, -24.92000, -30.13000);
	CreateDynamicObject_FR(3502, 500.64999, 3440.50000, 115.69000,   -1.48000, -21.77000, -31.47000);
	CreateDynamicObject_FR(3502, 505.06000, 3447.67993, 115.76000,   2.21000, -18.56000, -31.36000);
	CreateDynamicObject_FR(3502, 509.45999, 3455.08008, 116.30000,   4.90000, -15.46000, -29.91000);
	CreateDynamicObject_FR(3502, 513.62000, 3462.68994, 117.20000,   6.76000, -12.57000, -27.12000);
	CreateDynamicObject_FR(3502, 517.28003, 3470.48999, 118.32000,   7.85000, -9.98000, -22.89000);
	CreateDynamicObject_FR(3502, 520.20001, 3478.46997, 119.52000,   8.14000, -7.73000, -17.02000);
	CreateDynamicObject_FR(3502, 522.13000, 3486.61011, 120.68000,   7.52000, -5.82000, -9.39000);
	CreateDynamicObject_FR(3502, 522.83002, 3494.87988, 121.68000,   5.90000, -4.11000, 0.00000);
	CreateDynamicObject_FR(3502, 522.04999, 3503.28003, 122.37000,   3.30000, -2.29000, 10.74000);
	CreateDynamicObject_FR(3502, 422.85999, 3593.25000, 147.22000,   19.98000, 2.12000, 99.27000);
	CreateDynamicObject_FR(3502, 516.14001, 3519.75000, 122.72000,   1.21000, 1.14000, 24.28000);
	CreateDynamicObject_FR(3502, 512.34003, 3527.72998, 123.00000,   2.40000, 2.23000, 26.64000);
	CreateDynamicObject_FR(3502, 508.14999, 3535.63989, 123.47000,   3.57000, 3.28000, 29.14000);
	CreateDynamicObject_FR(3502, 503.59000, 3543.38989, 124.12000,   4.77000, 4.27000, 31.82000);
	CreateDynamicObject_FR(3502, 498.66000, 3550.89990, 124.97000,   6.00000, 5.18000, 34.75000);
	CreateDynamicObject_FR(3502, 493.38000, 3558.09009, 126.01000,   7.28000, 5.99000, 37.98000);
	CreateDynamicObject_FR(3502, 487.73999, 3564.87012, 127.24000,   8.63000, 6.68000, 41.59000);
	CreateDynamicObject_FR(3502, 481.76999, 3571.13989, 128.67000,   10.05000, 7.21000, 45.66000);
	CreateDynamicObject_FR(3502, 475.45999, 3576.84009, 130.28999,   11.55000, 7.55000, 50.26000);
	CreateDynamicObject_FR(3502, 468.82999, 3581.87012, 132.10001,   13.10000, 7.64000, 55.47000);
	CreateDynamicObject_FR(3502, 461.89999, 3586.13989, 134.12000,   14.67000, 7.43000, 61.36000);
	CreateDynamicObject_FR(3502, 454.66000, 3589.58008, 136.34000,   16.19000, 6.90000, 67.96000);
	CreateDynamicObject_FR(3502, 447.12000, 3592.10010, 138.75000,   17.58000, 6.03000, 75.22000);
	CreateDynamicObject_FR(3502, 439.31000, 3593.60010, 141.37000,   18.73000, 4.88000, 83.02000);
	CreateDynamicObject_FR(3502, 431.20999, 3594.02002, 144.19000,   19.55000, 3.53000, 91.13000);
	CreateDynamicObject_FR(3502, 295.67999, 3533.00000, 152.25000,   348.01999, 355.91000, 129.14999);
	CreateDynamicObject_FR(3502, 414.48001, 3591.68994, 150.08000,   17.17000, 1.20000, 101.80000);
	CreateDynamicObject_FR(3502, 406.04001, 3589.73999, 152.53000,   14.48000, 0.40000, 104.17000);
	CreateDynamicObject_FR(3502, 397.57999, 3587.41992, 154.59000,   11.91000, -0.29000, 106.38000);
	CreateDynamicObject_FR(3502, 389.10999, 3584.76001, 156.27000,   9.47000, -0.89000, 108.47000);
	CreateDynamicObject_FR(3502, 380.66000, 3581.78003, 157.57001,   7.16000, -1.42000, 110.44000);
	CreateDynamicObject_FR(3502, 372.26001, 3578.47998, 158.53000,   4.97000, -1.88000, 112.32000);
	CreateDynamicObject_FR(3502, 363.91000, 3574.89990, 159.16000,   2.90000, -2.28000, 114.13000);
	CreateDynamicObject_FR(3502, 355.66000, 3571.05005, 159.46001,   0.94000, -2.64000, 115.86000);
	CreateDynamicObject_FR(3502, 347.51999, 3566.94995, 159.46001,   -0.91000, -2.95000, 117.55000);
	CreateDynamicObject_FR(3502, 339.51999, 3562.62988, 159.17999,   -2.69000, -3.22000, 119.21000);
	CreateDynamicObject_FR(3502, 331.67999, 3558.10010, 158.61000,   -4.38000, -3.46000, 120.84000);
	CreateDynamicObject_FR(3502, 324.01999, 3553.37012, 157.78999,   -6.00000, -3.66000, 122.46000);
	CreateDynamicObject_FR(3502, 316.56000, 3548.47998, 156.73000,   -7.56000, -3.82000, 124.08000);
	CreateDynamicObject_FR(3502, 309.34000, 3543.43994, 155.45000,   -9.07000, -3.95000, 125.73000);
	CreateDynamicObject_FR(3502, 302.37000, 3538.27002, 153.95000,   -10.53000, -4.04000, 127.41000);
	CreateDynamicObject_FR(3502, 205.64999, 3414.23999, 106.06000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(3502, 289.00000, 3527.64990, 150.28000,   -13.93000, -4.86000, 128.12000);
	CreateDynamicObject_FR(3502, 282.39001, 3522.54004, 148.06000,   -15.72000, -5.58000, 127.38000);
	CreateDynamicObject_FR(3502, 275.89001, 3517.61011, 145.64000,   -17.33000, -6.23000, 126.95000);
	CreateDynamicObject_FR(3502, 269.51001, 3512.83008, 143.05000,   -18.75000, -6.78000, 126.84000);
	CreateDynamicObject_FR(3502, 263.29999, 3508.15991, 140.31000,   -19.97000, -7.21000, 127.09000);
	CreateDynamicObject_FR(3502, 257.26001, 3503.55005, 137.47000,   -21.00000, -7.50000, 127.71000);
	CreateDynamicObject_FR(3502, 251.44000, 3498.96997, 134.56000,   -21.80000, -7.64000, 128.74001);
	CreateDynamicObject_FR(3502, 245.84000, 3494.36011, 131.62000,   -22.37000, -7.61000, 130.20000);
	CreateDynamicObject_FR(3502, 240.50000, 3489.69995, 128.67000,   -22.68000, -7.39000, 132.12000);
	CreateDynamicObject_FR(3502, 235.44000, 3484.93994, 125.76000,   -22.70000, -6.98000, 134.50999);
	CreateDynamicObject_FR(3502, 230.69000, 3480.04004, 122.93000,   -22.39000, -6.38000, 137.38000);
	CreateDynamicObject_FR(3502, 226.27000, 3474.94995, 120.19000,   -21.71000, -5.62000, 140.72000);
	CreateDynamicObject_FR(3502, 222.21001, 3469.64990, 117.60000,   -20.63000, -4.73000, 144.50999);
	CreateDynamicObject_FR(3502, 218.53999, 3464.08008, 115.18000,   -19.12000, -3.76000, 148.69000);
	CreateDynamicObject_FR(3502, 215.27000, 3458.19995, 112.97000,   -17.17000, -2.77000, 153.17000);
	CreateDynamicObject_FR(3502, 212.42999, 3451.97998, 111.00000,   -14.82000, -1.85000, 157.84000);
	CreateDynamicObject_FR(3502, 210.06000, 3445.37012, 109.32000,   -12.12000, -1.06000, 162.58000);
	CreateDynamicObject_FR(3502, 208.17000, 3438.33008, 107.95000,   -9.17000, -0.45000, 167.25999);
	CreateDynamicObject_FR(3502, 206.78000, 3430.83008, 106.92000,   -6.09000, -0.08000, 171.78000);
	CreateDynamicObject_FR(3502, 205.94000, 3422.81006, 106.28000,   -3.00000, 0.07000, 176.03999);
	CreateDynamicObject_FR(3502, 274.79001, 3273.34009, 104.20000,   0.00000, 0.00000, 178.00000);
	CreateDynamicObject_FR(3502, 206.12000, 3405.43994, 106.05000,   -0.16000, 0.03000, -173.78000);
	CreateDynamicObject_FR(3502, 207.46001, 3397.26001, 106.02000,   -0.32000, 0.08000, -167.45000);
	CreateDynamicObject_FR(3502, 209.60001, 3389.63989, 105.96000,   -0.47000, 0.15000, -161.28999);
	CreateDynamicObject_FR(3502, 212.41000, 3382.52002, 105.89000,   -0.61000, 0.22000, -155.55000);
	CreateDynamicObject_FR(3502, 215.83000, 3375.83008, 105.80000,   -0.73000, 0.29000, -150.46001);
	CreateDynamicObject_FR(3502, 219.75000, 3369.51001, 105.69000,   -0.83000, 0.36000, -146.14000);
	CreateDynamicObject_FR(3502, 224.07001, 3363.47998, 105.58000,   -0.91000, 0.41000, -142.69000);
	CreateDynamicObject_FR(3502, 228.71001, 3357.67993, 105.46000,   -0.96000, 0.46000, -140.12000);
	CreateDynamicObject_FR(3502, 233.56000, 3352.05005, 105.33000,   -1.00000, 0.49000, -138.45000);
	CreateDynamicObject_FR(3502, 238.55000, 3346.52002, 105.20000,   -1.01000, 0.50000, -137.66000);
	CreateDynamicObject_FR(3502, 243.56000, 3341.03003, 105.07000,   -1.02000, 0.50000, -137.74001);
	CreateDynamicObject_FR(3502, 248.50999, 3335.50000, 104.94000,   -1.00000, 0.49000, -138.71001);
	CreateDynamicObject_FR(3502, 253.31000, 3329.87012, 104.81000,   -0.97000, 0.46000, -140.57001);
	CreateDynamicObject_FR(3502, 257.85999, 3324.07007, 104.69000,   -0.91000, 0.41000, -143.34000);
	CreateDynamicObject_FR(3502, 262.06000, 3318.05005, 104.57000,   -0.84000, 0.35000, -147.02000);
	CreateDynamicObject_FR(3502, 265.82001, 3311.71997, 104.47000,   -0.74000, 0.29000, -151.57001);
	CreateDynamicObject_FR(3502, 269.06000, 3305.04004, 104.38000,   -0.62000, 0.21000, -156.92000);
	CreateDynamicObject_FR(3502, 271.66000, 3297.91992, 104.31000,   -0.48000, 0.14000, -162.89000);
	CreateDynamicObject_FR(3502, 273.54999, 3290.31006, 104.25000,   -0.32000, 0.08000, -169.25000);
	CreateDynamicObject_FR(3502, 274.62000, 3282.13989, 104.22000,   -0.16000, 0.03000, -175.71001);
	CreateDynamicObject_FR(3502, 194.72000, 3113.81006, 122.76000,   16.06000, 102.07000, 52.28000);
	CreateDynamicObject_FR(3502, 274.48001, 3265.45996, 104.19000,   -0.13000, 2.43000, 177.42999);
	CreateDynamicObject_FR(3502, 274.07001, 3257.34009, 104.17000,   -0.22000, 4.86000, 176.84000);
	CreateDynamicObject_FR(3502, 273.57001, 3249.01001, 104.13000,   -0.27000, 7.29000, 176.23000);
	CreateDynamicObject_FR(3502, 272.95999, 3240.53003, 104.09000,   -0.28000, 9.72000, 175.57001);
	CreateDynamicObject_FR(3502, 272.23999, 3231.92993, 104.05000,   -0.25000, 12.15000, 174.87000);
	CreateDynamicObject_FR(3502, 271.41000, 3223.27002, 104.01000,   -0.18000, 14.58000, 174.12000);
	CreateDynamicObject_FR(3502, 270.45001, 3214.57007, 103.99000,   -0.07000, 17.01000, 173.30000);
	CreateDynamicObject_FR(3502, 269.37000, 3205.89990, 103.99000,   0.06000, 19.45000, 172.41000);
	CreateDynamicObject_FR(3502, 268.14999, 3197.29004, 104.02000,   0.24000, 21.88000, 171.42999);
	CreateDynamicObject_FR(3502, 266.79001, 3188.79004, 104.07000,   0.47000, 24.33000, 170.35001);
	CreateDynamicObject_FR(3502, 265.28000, 3180.43994, 104.16000,   0.75000, 26.78000, 169.14000);
	CreateDynamicObject_FR(3502, 263.62000, 3172.29004, 104.29000,   1.09000, 29.23000, 167.78000);
	CreateDynamicObject_FR(3502, 261.79999, 3164.37988, 104.48000,   1.48000, 31.71000, 166.25000);
	CreateDynamicObject_FR(3502, 259.81000, 3156.76001, 104.71000,   1.96000, 34.20000, 164.49001);
	CreateDynamicObject_FR(3502, 257.66000, 3149.45996, 105.01000,   2.52000, 36.72000, 162.48000);
	CreateDynamicObject_FR(3502, 255.32001, 3142.54004, 105.37000,   3.18000, 39.28000, 160.13000);
	CreateDynamicObject_FR(3502, 252.80000, 3136.04004, 105.80000,   3.97000, 41.91000, 157.39000);
	CreateDynamicObject_FR(3502, 250.09000, 3130.00000, 106.32000,   4.91000, 44.61000, 154.14000);
	CreateDynamicObject_FR(3502, 247.17999, 3124.46997, 106.91000,   6.02000, 47.45000, 150.25000);
	CreateDynamicObject_FR(3502, 244.07001, 3119.48999, 107.60000,   7.34000, 50.47000, 145.58000);
	CreateDynamicObject_FR(3502, 240.75000, 3115.10010, 108.38000,   8.88000, 53.77000, 139.92000);
	CreateDynamicObject_FR(3502, 237.22000, 3111.36011, 109.26000,   10.62000, 57.44000, 133.09000);
	CreateDynamicObject_FR(3502, 233.46001, 3108.30005, 110.26000,   12.50000, 61.63000, 124.93000);
	CreateDynamicObject_FR(3502, 229.48000, 3105.96997, 111.36000,   14.36000, 66.41000, 115.45000);
	CreateDynamicObject_FR(3502, 225.27000, 3104.41992, 112.58000,   15.98000, 71.77000, 104.91000);
	CreateDynamicObject_FR(3502, 220.81000, 3103.67993, 113.93000,   17.11000, 77.48000, 93.93000);
	CreateDynamicObject_FR(3502, 216.11000, 3103.80005, 115.41000,   17.65000, 83.22000, 83.26000);
	CreateDynamicObject_FR(3502, 211.14999, 3104.83008, 117.03000,   17.66000, 88.65000, 73.57000);
	CreateDynamicObject_FR(3502, 205.94000, 3106.81006, 118.79000,   17.29000, 93.61000, 65.17000);
	CreateDynamicObject_FR(3502, 200.46001, 3109.79004, 120.70000,   16.71000, 98.06000, 58.12000);
	CreateDynamicObject_FR(3502, 212.72000, 3206.75000, 64.92000,   0.00000, 0.00000, 320.00000);
	CreateDynamicObject_FR(3502, 187.80000, 3119.65991, 124.57000,   5.84000, 100.59000, 46.86000);
	CreateDynamicObject_FR(3502, 182.39000, 3125.34009, 124.56000,   -6.55000, 98.47000, 39.93000);
	CreateDynamicObject_FR(3502, 178.38000, 3130.88989, 122.97000,   -19.77000, 94.53000, 31.24000);
	CreateDynamicObject_FR(3502, 175.69000, 3136.33008, 120.02000,   -31.47000, 87.67000, 20.85000);
	CreateDynamicObject_FR(3502, 174.23000, 3141.70996, 115.96000,   -39.88000, 77.93000, 9.33000);
	CreateDynamicObject_FR(3502, 173.89999, 3147.07007, 111.02000,   -44.73000, 66.63000, -2.21000);
	CreateDynamicObject_FR(3502, 174.61000, 3152.41992, 105.44000,   -46.64000, 55.35000, -12.61000);
	CreateDynamicObject_FR(3502, 176.27000, 3157.82007, 99.44000,   -46.43000, 45.12000, -21.19000);
	CreateDynamicObject_FR(3502, 178.78999, 3163.30005, 93.27000,   -44.68000, 36.28000, -27.83000);
	CreateDynamicObject_FR(3502, 182.08000, 3168.87988, 87.16000,   -41.75000, 28.78000, -32.75000);
	CreateDynamicObject_FR(3502, 186.03999, 3174.62012, 81.34000,   -37.76000, 22.38000, -36.23000);
	CreateDynamicObject_FR(3502, 190.58000, 3180.54004, 76.06000,   -32.68000, 16.87000, -38.56000);
	CreateDynamicObject_FR(3502, 195.61000, 3186.66992, 71.53000,   -26.43000, 12.04000, -39.96000);
	CreateDynamicObject_FR(3502, 201.03999, 3193.06006, 68.01000,   -18.87000, 7.72000, -40.60000);
	CreateDynamicObject_FR(3502, 206.78000, 3199.75000, 65.73000,   -10.00000, 3.75000, -40.58000);
	CreateDynamicObject_FR(3502, 348.29001, 3045.37012, 59.00000,   0.00000, 0.00000, 150.00000);
	CreateDynamicObject_FR(3502, 217.92000, 3212.02002, 64.90000,   -0.28000, 0.05000, -49.48000);
	CreateDynamicObject_FR(3502, 223.52000, 3216.01001, 64.85000,   -0.59000, 0.04000, -59.79000);
	CreateDynamicObject_FR(3502, 229.48000, 3218.79004, 64.76000,   -0.88000, -0.04000, -70.40000);
	CreateDynamicObject_FR(3502, 235.75000, 3220.39990, 64.65000,   -1.13000, -0.15000, -80.69000);
	CreateDynamicObject_FR(3502, 242.28999, 3220.90991, 64.50000,   -1.33000, -0.28000, -90.16000);
	CreateDynamicObject_FR(3502, 249.03999, 3220.37988, 64.34000,   -1.48000, -0.40000, -98.54000);
	CreateDynamicObject_FR(3502, 255.96001, 3218.87012, 64.15000,   -1.58000, -0.50000, -105.80000);
	CreateDynamicObject_FR(3502, 262.98999, 3216.43994, 63.94000,   -1.64000, -0.58000, -112.03000);
	CreateDynamicObject_FR(3502, 270.10001, 3213.15991, 63.71000,   -1.68000, -0.63000, -117.39000);
	CreateDynamicObject_FR(3502, 277.23999, 3209.07007, 63.47000,   -1.70000, -0.65000, -122.04000);
	CreateDynamicObject_FR(3502, 284.35001, 3204.25000, 63.21000,   -1.71000, -0.66000, -126.13000);
	CreateDynamicObject_FR(3502, 291.39001, 3198.75000, 62.94000,   -1.71000, -0.65000, -129.78000);
	CreateDynamicObject_FR(3502, 298.31000, 3192.62988, 62.67000,   -1.70000, -0.63000, -133.10001);
	CreateDynamicObject_FR(3502, 305.07001, 3185.94995, 62.38000,   -1.69000, -0.60000, -136.17000);
	CreateDynamicObject_FR(3502, 311.60999, 3178.78003, 62.10000,   -1.67000, -0.57000, -139.07001);
	CreateDynamicObject_FR(3502, 317.89001, 3171.16992, 61.81000,   -1.65000, -0.53000, -141.85001);
	CreateDynamicObject_FR(3502, 323.87000, 3163.16992, 61.53000,   -1.62000, -0.49000, -144.58000);
	CreateDynamicObject_FR(3502, 329.48001, 3154.87012, 61.25000,   -1.59000, -0.44000, -147.30000);
	CreateDynamicObject_FR(3502, 334.69000, 3146.30005, 60.97000,   -1.55000, -0.40000, -150.07001);
	CreateDynamicObject_FR(3502, 339.45001, 3137.54004, 60.70000,   -1.51000, -0.35000, -152.94000);
	CreateDynamicObject_FR(3502, 343.70999, 3128.63989, 60.45000,   -1.46000, -0.31000, -155.95000);
	CreateDynamicObject_FR(3502, 347.42001, 3119.66992, 60.20000,   -1.40000, -0.27000, -159.17000);
	CreateDynamicObject_FR(3502, 350.53000, 3110.66992, 59.98000,   -1.33000, -0.24000, -162.67000);
	CreateDynamicObject_FR(3502, 353.00000, 3101.72998, 59.77000,   -1.25000, -0.21000, -166.52000);
	CreateDynamicObject_FR(3502, 354.78000, 3092.87988, 59.58000,   -1.15000, -0.19000, -170.81000);
	CreateDynamicObject_FR(3502, 355.82999, 3084.19995, 59.41000,   -1.03000, -0.17000, -175.62000);
	CreateDynamicObject_FR(3502, 356.07999, 3075.75000, 59.27000,   -0.88000, -0.15000, 178.94000);
	CreateDynamicObject_FR(3502, 355.50000, 3067.57007, 59.15000,   -0.71000, -0.13000, 172.80000);
	CreateDynamicObject_FR(3502, 354.04001, 3059.75000, 59.07000,   -0.50000, -0.11000, 165.89999);
	CreateDynamicObject_FR(3502, 351.64999, 3052.33008, 59.02000,   -0.26000, -0.06000, 158.25999);
	CreateDynamicObject_FR(3502, 343.64999, 3037.67993, 58.52000,   -6.19000, -0.49000, 147.75999);
	CreateDynamicObject_FR(3502, 339.03000, 3030.65991, 57.16000,   -12.16000, -1.14000, 145.58000);
	CreateDynamicObject_FR(3502, 334.44000, 3024.19995, 55.04000,   -17.60000, -1.89000, 143.52000);
	CreateDynamicObject_FR(3502, 329.85999, 3018.21997, 52.30000,   -22.24000, -2.67000, 141.67999);
	CreateDynamicObject_FR(3502, 325.31000, 3012.62012, 49.06000,   -25.92000, -3.38000, 140.17000);
	CreateDynamicObject_FR(3502, 320.76999, 3007.29004, 45.44000,   -28.57000, -3.96000, 139.07001);
	CreateDynamicObject_FR(3502, 316.25000, 3002.13989, 41.58000,   -30.16000, -4.32000, 138.45000);
	CreateDynamicObject_FR(3502, 619.47998, 3428.06006, 187.67999,   358.00000, 20.01000, 258.26999);
	CreateDynamicObject_FR(3502, 602.79999, 3432.68994, 188.75000,   -4.92000, 21.67000, -109.37000);
	CreateDynamicObject_FR(3502, 610.84998, 3430.15991, 188.12000,   -3.59000, 20.88000, -105.60000);
	CreateDynamicObject_FR(3502, 629.59998, 3360.76001, 197.27000,   7.64000, 220.42999, 107.53000);
	CreateDynamicObject_FR(3502, 626.60999, 3425.43994, 187.59000,   0.48000, 9.94000, -118.24000);
	CreateDynamicObject_FR(3502, 632.94000, 3420.93994, 187.80000,   2.57000, -13.68000, -132.05000);
	CreateDynamicObject_FR(3502, 638.34003, 3414.93994, 188.28999,   4.24000, -26.49000, -143.57001);
	CreateDynamicObject_FR(3502, 642.64001, 3407.86011, 189.00999,   5.61000, -40.85000, -153.69000);
	CreateDynamicObject_FR(3502, 645.70001, 3400.07007, 189.92000,   6.80000, -55.85000, -163.36000);
	CreateDynamicObject_FR(3502, 647.37000, 3391.97998, 190.99001,   7.89000, -71.60000, -173.49001);
	CreateDynamicObject_FR(3502, 647.50000, 3383.97998, 192.17000,   8.88000, -89.11000, 174.94000);
	CreateDynamicObject_FR(3502, 645.94000, 3376.46997, 193.42999,   9.64000, -111.93000, 161.00000);
	CreateDynamicObject_FR(3502, 642.53003, 3369.83008, 194.73000,   9.86000, -141.25999, 144.20000);
	CreateDynamicObject_FR(3502, 637.14001, 3364.45996, 196.02000,   9.18000, -150.41000, 125.52000);
	CreateDynamicObject_FR(3502, 621.47998, 3358.47998, 198.25000,   5.58000, -131.66000, 103.93000);
	CreateDynamicObject_FR(3502, 613.34998, 3356.71997, 198.91000,   3.38000, -123.91000, 100.40000);
	CreateDynamicObject_FR(3502, 605.22998, 3355.47998, 199.23000,   1.06000, -116.30000, 96.96000);

	//RC1
	CreateDynamicObject_FR(18794, 836.90997, -2126.79004, 2.22000,   0.00000, 12.13000, 270.00000);
	CreateDynamicObject_FR(18796, 836.91998, -2087.83008, 10.01000,   0.00000, 353.28000, 90.00000);
	CreateDynamicObject_FR(18450, 836.90997, -2187.28003, 3.73000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18450, 836.90997, -2267.21997, 3.73000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18794, 836.90002, -2327.16992, 3.16000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18794, 836.90002, -2366.25000, 13.54000,   0.00000, 345.00000, 269.98999);
	CreateDynamicObject_FR(18826, 836.97998, -2136.65991, 9.72000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18826, 836.92999, -2188.31006, 9.72000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18826, 836.92999, -2240.86011, 9.72000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18826, 836.92999, -2289.65991, 9.72000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18794, 836.90002, -2513.73999, 25.81000,   0.00000, 345.32999, 90.00000);
	CreateDynamicObject_FR(18794, 836.89001, -2552.68994, 15.25000,   0.00000, 359.10001, 90.00000);
	CreateDynamicObject_FR(18794, 836.89001, -2592.73999, 15.03000,   0.00000, 15.00000, 90.00000);
	CreateDynamicObject_FR(18794, 836.89001, -2631.11011, 25.49000,   0.00000, 30.25000, 90.00000);
	CreateDynamicObject_FR(18794, 836.89001, -2665.87988, 45.98000,   0.00000, 45.50000, 90.00000);
	CreateDynamicObject_FR(18450, 836.90997, -2826.37012, 88.01000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18450, 836.90997, -2906.34009, 88.01000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18793, 836.90002, -2986.22998, 88.00000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18806, 1088.00000, -2894.76001, 55.35000,   0.00000, 193.50000, 56.32000);
	CreateDynamicObject_FR(18779, 1161.92004, -2772.62012, 44.57000,   0.00000, 351.29999, 236.56000);
	CreateDynamicObject_FR(18826, 836.92999, -2447.09009, 52.65000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18826, 836.92999, -2447.09009, 31.52000,   0.00000, 270.00000, 0.00000);
	CreateDynamicObject_FR(11523, 1085.69995, -2826.48999, 46.18000,   0.00000, 0.00000, 216.20000);
	CreateDynamicObject_FR(11523, 878.58002, -2741.32007, 46.18000,   0.00000, 0.00000, 72.39000);
	CreateDynamicObject_FR(11533, 782.65997, -2706.17993, 42.06000,   0.00000, 0.00000, 26.68000);
	CreateDynamicObject_FR(11533, 1062.10999, -2703.12988, 45.09000,   0.00000, 0.00000, 34.82000);
	CreateDynamicObject_FR(18792, 836.90997, -3066.21997, 88.01000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18792, 836.90997, -3146.09009, 88.01000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18792, 836.90997, -3225.98999, 88.01000,   15.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18792, 836.90997, -3305.48999, 88.01000,   30.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18801, 846.28003, -3344.60010, 111.30000,   315.00000, 0.00000, 280.00000);
	CreateDynamicObject_FR(18450, 826.37000, -3447.78003, 87.72000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18794, 826.35999, -3507.69995, 87.16000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18796, 826.34003, -3547.15991, 96.13000,   0.00000, 7.05000, 90.00000);
	CreateDynamicObject_FR(18788, 800.67999, -3582.33008, 75.94000,   340.16000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18788, 800.67999, -3572.34009, 78.53000,   50.95000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18788, 838.69000, -3576.57007, 73.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18791, 897.59998, -3568.82007, 74.43000,   0.00000, 0.00000, 22.50000);
	CreateDynamicObject_FR(18791, 952.71997, -3513.70996, 74.43000,   0.00000, 0.00000, 67.50000);
	CreateDynamicObject_FR(18792, 960.46002, -3434.94995, 74.43000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18794, 960.65002, -3383.63989, 73.77000,   345.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18794, 957.98999, -3344.80005, 83.70000,   345.00000, 345.00000, 90.00000);
	CreateDynamicObject_FR(18794, 933.37000, -3187.48999, 88.97000,   345.00000, 345.00000, 263.10001);
	CreateDynamicObject_FR(18794, 935.33002, -3149.44995, 79.23000,   344.98999, 0.00000, 263.10001);
	CreateDynamicObject_FR(18794, 940.15002, -3109.64990, 79.30000,   344.98999, 15.00000, 263.10001);
	CreateDynamicObject_FR(1894, 938.37000, -3093.91992, 85.13000,   18.45000, 343.54999, 83.42000);
	CreateDynamicObject_FR(18790, 997.53003, -3021.62012, 97.62000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18801, 1021.81000, -3047.00000, 87.76000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18790, 997.51001, -3072.63989, 77.89000,   270.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18790, 996.09998, -3023.00000, 70.81000,   81.31000, 90.00000, 270.00000);
	CreateDynamicObject_FR(18450, 1035.95996, -3064.04004, 58.46000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18450, 1042.93994, -3064.02002, 63.63000,   280.17999, 0.00000, 90.00000);
	CreateDynamicObject_FR(18450, 1037.80005, -3064.02002, 57.85000,   323.32001, 0.00000, 90.00000);
	CreateDynamicObject_FR(18450, 1039.55005, -3064.02002, 58.56000,   306.42999, 0.00000, 90.00000);
	CreateDynamicObject_FR(18450, 1035.95996, -3064.04004, 57.90000,   345.57001, 0.00000, 90.00000);
	CreateDynamicObject_FR(18450, 1035.95996, -3143.96997, 58.44000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18805, 1035.96997, -3255.02002, 39.04000,   0.00000, 345.00000, 90.00000);
	CreateDynamicObject_FR(18794, 1035.95996, -3343.84009, 9.62000,   0.00000, 345.00000, 90.00000);
	CreateDynamicObject_FR(18794, 1035.95996, -3380.26001, 0.00000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18450, 1035.95996, -3440.18994, 0.55000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18450, 1035.95996, -3520.17993, 0.55000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18802, 1035.93994, -3569.85010, 2.55000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18792, 730.53998, -3539.58008, 9.14000,   0.00000, 0.00000, 80.04000);
	CreateDynamicObject_FR(3437, 797.23999, -3358.43994, 8.34000,   0.00000, 90.00000, 68.30000);
	CreateDynamicObject_FR(18789, 764.59003, -3432.00000, 9.12000,   0.00000, 0.00000, 68.31000);
	CreateDynamicObject_FR(3437, 791.22998, -3356.04004, 8.34000,   0.00000, 90.00000, 68.30000);
	CreateDynamicObject_FR(3437, 795.56000, -3345.14990, 8.34000,   0.00000, 90.00000, 68.30000);
	CreateDynamicObject_FR(3437, 801.57001, -3347.54004, 8.34000,   0.00000, 90.00000, 68.30000);
	CreateDynamicObject_FR(18789, 838.37000, -3272.71997, 4.71000,   0.00000, 0.00000, 56.32000);
	CreateDynamicObject_FR(18794, 934.85999, -3127.87988, 4.10000,   0.00000, 0.00000, 56.32000);
	CreateDynamicObject_FR(18794, 956.32001, -3095.67993, 14.75000,   0.00000, 344.01999, 56.32000);
	CreateDynamicObject_FR(18794, 975.56000, -3066.81006, 35.42000,   0.00000, 329.17999, 56.32000);
	CreateDynamicObject_FR(18450, 901.73999, -3177.58008, 4.70000,   0.00000, 0.00000, 56.32000);
	CreateDynamicObject_FR(10942, 1049.73999, -3476.62012, 11.65000,   0.00000, 49.86000, 0.00000);
	CreateDynamicObject_FR(10942, 1030.94995, -3476.62012, 15.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(10942, 1015.70001, -3476.62012, 3.92000,   0.00000, 310.00000, 0.00000);
	CreateDynamicObject_FR(16195, 948.90997, -3260.57007, -10.20000,   0.00000, 0.00000, 60.41000);
	CreateDynamicObject_FR(621, 971.29999, -3218.88989, 21.49000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, 963.09003, -3190.03003, 21.72000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, 894.21997, -3122.79004, 19.38000,   0.00000, 0.00000, 324.73001);
	CreateDynamicObject_FR(18768, 946.91998, -3070.87988, 89.76000,   270.00000, 0.00000, 346.42999);
	CreateDynamicObject_FR(18807, 826.33002, -3604.61011, 87.84000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18450, 826.37000, -3678.35010, 63.20000,   0.00000, 336.54999, 90.00000);
	CreateDynamicObject_FR(18790, 826.35999, -3757.60010, 80.05000,   0.00000, 65.57000, 90.00000);
	CreateDynamicObject_FR(18801, 818.34003, -3745.91992, 111.32000,   0.00000, 161.47000, 78.02000);
	CreateDynamicObject_FR(18801, 797.87000, -3734.31006, 114.10000,   0.00000, 180.00000, 78.01000);
	CreateDynamicObject_FR(18789, 788.65997, -3659.79004, 105.65000,   0.00000, 20.01000, 90.00000);
	CreateDynamicObject_FR(18450, 1035.95996, -3699.65991, 4.06000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18450, 1035.95996, -3779.63989, 4.06000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18450, 1035.95996, -3859.52002, 4.06000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18450, 1042.30005, -3859.52002, 4.56000,   270.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18450, 1042.30005, -3779.56006, 4.56000,   269.98999, 0.00000, 90.00000);
	CreateDynamicObject_FR(18794, 1042.89001, -3919.35010, 4.58000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18794, 1032.51001, -3958.45996, 4.58000,   90.00000, 0.00000, 255.00000);
	CreateDynamicObject_FR(18794, 1012.35999, -3993.57007, 4.58000,   90.00000, 0.00000, 240.00000);
	CreateDynamicObject_FR(18794, 984.71997, -4021.34009, 2.47000,   83.77000, 90.00000, 135.00000);
	CreateDynamicObject_FR(18794, 949.90997, -4039.61011, 0.37000,   90.00000, 0.00000, 205.00000);
	CreateDynamicObject_FR(18794, 910.16998, -4046.69995, 0.37000,   90.00000, 0.00000, 190.00000);
	CreateDynamicObject_FR(3499, 1041.75000, -3899.60010, 4.07000,   84.31000, 11.66000, 346.76001);
	CreateDynamicObject_FR(18790, 824.01001, -3947.27002, 0.36000,   270.00000, 0.00000, 201.94000);
	CreateDynamicObject_FR(18794, 870.15002, -4043.27002, 0.37000,   90.00000, 0.00000, 175.00000);
	CreateDynamicObject_FR(18794, 832.21997, -4029.56006, 0.37000,   90.00000, 0.00000, 160.00000);
	CreateDynamicObject_FR(18794, 800.82001, -4005.58008, 0.37000,   90.00000, 0.00000, 140.00000);
	CreateDynamicObject_FR(18794, 888.01001, -4009.34009, 9.76000,   78.30000, 258.84000, 16.38000);
	CreateDynamicObject_FR(18794, 881.48999, -4045.33008, 16.71000,   77.55000, 243.75999, 15.79000);
	CreateDynamicObject_FR(18794, 884.60999, -3971.03003, 3.21000,   81.80000, 270.00000, 19.99000);
	CreateDynamicObject_FR(18789, 842.25000, -4111.22998, 3.78000,   0.00000, 0.00000, 61.89000);
	CreateDynamicObject_FR(18791, 610.16998, -4131.00977, 3.82000,   0.00000, 0.00000, 268.82999);
	CreateDynamicObject_FR(18788, 655.73999, -4045.18994, 3.22000,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject_FR(18791, 619.04999, -4091.23999, 3.80000,   0.00000, 0.00000, 245.85001);
	CreateDynamicObject_FR(18791, 691.78003, -3997.93994, 3.74000,   0.00000, 0.00000, 67.68000);
	CreateDynamicObject_FR(18788, 699.34998, -3939.47998, 5.00000,   0.00000, 354.75000, 90.14000);
	CreateDynamicObject_FR(18789, 699.34003, -3844.65991, 7.39000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18794, 702.75000, -3718.93994, 2.75000,   30.00000, 0.00000, 90.54000);
	CreateDynamicObject_FR(18792, 716.73999, -3618.05005, 9.15000,   15.00000, 0.00000, 80.04000);
	CreateDynamicObject_FR(3437, 698.40997, -3763.87988, 6.52000,   0.00000, 90.00000, 89.56000);
	CreateDynamicObject_FR(3437, 698.48999, -3752.16992, 6.52000,   0.00000, 90.00000, 89.56000);
	CreateDynamicObject_FR(18069, 1027.56006, -3962.51001, 3.82000,   0.00000, 0.00000, 336.03000);
	CreateDynamicObject_FR(18069, 982.00000, -4019.30005, 3.10000,   0.00000, 0.00000, 312.06000);
	CreateDynamicObject_FR(18069, 890.72998, -4043.26001, 2.54000,   0.00000, 0.00000, 264.12000);
	CreateDynamicObject_FR(18069, 834.51001, -4027.00000, 2.55000,   0.00000, 0.00000, 240.14999);
	CreateDynamicObject_FR(18069, 800.48999, -3965.25000, 2.55000,   0.00000, 0.00000, 135.00999);
	CreateDynamicObject_FR(18069, 875.09998, -3952.95996, 2.55000,   0.00000, 0.00000, 27.15000);
	CreateDynamicObject_FR(17027, 837.25000, -4005.42993, -4.17000,   340.51001, 330.44000, 345.67999);
	CreateDynamicObject_FR(17027, 848.19000, -3980.91992, 0.35000,   320.09000, 337.51999, 181.13000);
	CreateDynamicObject_FR(622, 845.03003, -3986.57007, -2.50000,   0.00000, 0.00000, 10.85000);
	CreateDynamicObject_FR(622, 853.47998, -4000.17993, -2.50000,   0.00000, 0.00000, 251.00999);
	CreateDynamicObject_FR(16097, 737.62000, -4168.70996, -9.85000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16258, 711.42999, -3684.52002, -1.27000,   0.00000, 0.00000, 180.24001);
	CreateDynamicObject_FR(619, 777.23999, -3679.22998, 46.41000,   0.00000, 0.00000, 95.87000);
	CreateDynamicObject_FR(619, 759.88000, -3711.13989, 42.18000,   0.00000, 0.00000, 47.93000);
	CreateDynamicObject_FR(619, 741.34003, -3682.28003, 42.18000,   0.00000, 0.00000, 300.07001);
	CreateDynamicObject_FR(619, 761.28998, -3668.20996, 42.18000,   0.00000, 0.00000, 240.14999);
	CreateDynamicObject_FR(621, 760.17999, -3685.30005, 48.25000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, 832.97998, -3985.16992, 2.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(622, 830.28998, -3991.70996, -2.62000,   0.00000, 0.00000, 106.72000);
	CreateDynamicObject_FR(3578, 1033.58997, -3899.05005, 4.42000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(11528, 1217.84998, -2972.78003, 51.41000,   0.00000, 0.00000, 216.20000);
	CreateDynamicObject_FR(18791, 783.10999, -4208.41992, 3.77000,   0.00000, 0.00000, 41.38000);
	CreateDynamicObject_FR(18791, 709.89001, -4235.00000, 3.82000,   0.00000, 0.00000, 358.51999);
	CreateDynamicObject_FR(18791, 638.57001, -4203.54004, 3.82000,   0.00000, 0.00000, 313.92999);

	//RC2
	CreateDynamicObject_FR(18796, -1943.82996, -995.25000, 50.74000,   0.00000, 5.74000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, -956.25000, 42.92000,   0.00000, 13.12000, 90.00000);
	CreateDynamicObject_FR(18788, -1943.88000, -915.77002, 43.54000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, -875.34003, 43.61000,   0.00000, 15.00000, 270.00000);
	CreateDynamicObject_FR(18794, -1943.83997, -836.35999, 54.15000,   0.00000, 30.00000, 270.00000);
	CreateDynamicObject_FR(18796, -1943.82996, -727.59003, 79.12000,   0.00000, 5.00000, 90.00000);
	CreateDynamicObject_FR(18796, -1943.82996, -688.71002, 70.49000,   0.00000, 20.00000, 90.00000);
	CreateDynamicObject_FR(18788, -1943.88000, -652.34998, 54.02000,   0.00000, 25.00000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, -615.59003, 36.96000,   0.00000, 350.00000, 270.00000);
	CreateDynamicObject_FR(8620, -1943.88000, -1013.65002, 73.80000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8620, -1943.88000, -779.26001, 104.31000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8620, -1943.88000, -779.26001, 58.15000,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(18788, -1943.88000, -735.04999, 78.80000,   0.00000, 3.77000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, -575.73999, 30.02000,   0.00000, 5.00000, 270.00000);
	CreateDynamicObject_FR(18794, -1943.83997, -492.95001, 27.36000,   0.00000, 9.10000, 270.00000);
	CreateDynamicObject_FR(18794, -1943.83997, -400.78000, 27.10000,   0.00000, 9.10000, 270.00000);
	CreateDynamicObject_FR(18794, -1943.83997, -303.54001, 24.99000,   0.00000, 6.80000, 270.00000);
	CreateDynamicObject_FR(18794, -1943.83997, -263.29001, 29.43000,   0.00000, 20.58000, 270.00000);
	CreateDynamicObject_FR(10281, -1938.44995, -344.38000, 31.88000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(10281, -1940.90002, -260.04001, 32.94000,   0.00000, 0.00000, 342.29001);
	CreateDynamicObject_FR(18794, -1943.83997, -117.19000, 31.09000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18449, -1943.84998, -57.25000, 31.69000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, -132.34000, 33.80000,   0.00000, 353.60001, 270.00000);
	CreateDynamicObject_FR(18794, -1943.83997, -310.81000, 24.59000,   0.00000, 359.26001, 270.00000);
	CreateDynamicObject_FR(18794, -1943.83997, -413.63000, 27.26000,   0.00000, 3.68000, 270.00000);
	CreateDynamicObject_FR(18794, -1943.83997, -505.23999, 27.36000,   0.00000, 3.68000, 270.00000);
	CreateDynamicObject_FR(17031, -1968.01001, -211.50000, 25.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(17031, -1968.01001, -169.66000, 25.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(17031, -1968.01001, -122.77000, 25.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(17031, -1981.38000, -189.60001, 35.12000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(17031, -1983.43005, -156.64999, 44.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(17031, -1981.08997, -180.34000, 44.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18777, -1943.56006, -207.56000, 46.05000,   0.00000, 90.00000, 270.00000);
	CreateDynamicObject_FR(18777, -1943.56006, -181.55000, 46.05000,   0.00000, 90.00000, 269.98999);
	CreateDynamicObject_FR(18777, -1943.56006, -155.55000, 46.05000,   0.00000, 90.00000, 269.98999);
	CreateDynamicObject_FR(18777, -1943.56006, -129.57001, 46.05000,   0.00000, 90.00000, 269.98999);
	CreateDynamicObject_FR(623, -1957.93994, -112.13000, 31.16000,   14.62000, 1.69000, 274.67999);
	CreateDynamicObject_FR(18449, -1943.84998, 22.67000, 31.69000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18449, -1943.84998, 102.64000, 31.69000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18449, -1943.84998, 127.60000, 31.68000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 187.55000, 31.09000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 226.63000, 41.49000,   0.00000, 345.00000, 90.00000);
	CreateDynamicObject_FR(18796, -1943.82996, 327.04999, 72.02000,   0.00000, 2.16000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 366.60001, 66.95000,   0.00000, 8.69000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 406.85001, 70.91000,   0.00000, 354.87000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 444.56000, 84.53000,   0.00000, 340.10001, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 477.63000, 107.67000,   0.00000, 324.69000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 503.29999, 138.94000,   0.00000, 308.78000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 518.97998, 175.74001,   0.00000, 292.04999, 90.00000);
	CreateDynamicObject_FR(6972, -1943.50000, 512.56000, 181.41000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18788, -1943.80005, 514.83002, 173.41000,   0.00000, 279.14999, 90.00000);
	CreateDynamicObject_FR(18788, -1942.90002, 537.35999, 208.14999,   0.00000, 337.23001, 90.00000);
	CreateDynamicObject_FR(18807, -1942.93994, 593.73999, 223.00000,   0.00000, 335.25000, 90.00000);
	CreateDynamicObject_FR(11353, -1921.91003, 83.62000, 29.77000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(10932, -1941.46997, 83.45000, 32.64000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18826, -1943.89001, 279.73999, 82.79000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18826, -1943.89001, 279.73999, 61.60000,   0.00000, 270.00000, 0.00000);
	CreateDynamicObject_FR(18985, -1943.81995, 115.01000, 31.17000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18985, -1943.81995, 15.03000, 31.17000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(3851, -1943.83997, 56.16000, 34.01000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, -1943.83997, 110.48000, 34.01000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, -1943.83997, 165.02000, 34.01000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, -1943.83997, 153.88000, 34.01000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, -1943.83997, 146.13000, 34.01000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, -1943.83997, 134.39999, 34.01000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(8397, -1930.93994, 525.98999, 138.36000,   44.68000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -1956.27002, 525.98999, 138.36000,   44.68000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -1930.93994, 525.98999, 138.36000,   68.46000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -1956.38000, 525.98999, 138.36000,   68.46000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -1956.38000, 525.98999, 134.46001,   82.72000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -1931.12000, 525.98999, 134.46001,   82.72000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -1931.12000, 525.98999, 128.52000,   89.90000, 180.00000, 180.00000);
	CreateDynamicObject_FR(8397, -1956.44995, 525.98999, 128.52000,   89.77000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -1956.44995, 525.98999, 124.30000,   75.47000, 180.00000, 180.00000);
	CreateDynamicObject_FR(8397, -1931.13000, 525.98999, 124.30000,   75.47000, 179.99001, 179.99001);
	CreateDynamicObject_FR(9123, -1943.89001, 178.30000, 36.03000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18778, -1943.62000, 510.14001, 202.75999,   52.76000, 180.00000, 0.00000);
	CreateDynamicObject_FR(18778, -1943.62000, 509.64999, 201.67000,   75.07000, 179.98000, 0.01000);
	CreateDynamicObject_FR(18778, -1943.62000, 515.46997, 198.16000,   291.38000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18807, -1942.93994, 668.91998, 222.99001,   0.00000, 335.25000, 270.00000);
	CreateDynamicObject_FR(18449, -1942.94995, 744.06000, 201.00999,   0.00000, 22.63000, 90.00000);
	CreateDynamicObject_FR(18449, -1942.94995, 817.69000, 170.32001,   0.00000, 22.63000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 941.73999, 87.59000,   0.00000, 35.93000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 978.92999, 73.08000,   0.00000, 21.49000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 1018.04999, 68.68000,   0.00000, 6.08000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 909.40997, 111.46000,   0.00000, 51.67000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 1025.35999, 68.73000,   0.00000, 2.14000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 1150.59998, 45.38000,   0.00000, 20.83000, 90.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 1125.27002, 53.83000,   0.00000, 30.83000, 90.00000);
	CreateDynamicObject_FR(18826, -1943.92004, 1014.28998, 77.38000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(8493, -1961.76001, 1039.94995, 85.46000,   0.00000, 0.00000, 324.04999);
	CreateDynamicObject_FR(8493, -1926.08997, 1039.58997, 85.46000,   0.00000, 0.00000, 33.24000);
	CreateDynamicObject_FR(8397, -1917.93994, 659.94000, 202.56000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -1968.16003, 659.94000, 202.56000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -1968.16003, 626.39001, 185.44000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -1917.95996, 626.39001, 185.44000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -1917.95996, 699.57001, 185.44000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, -1968.94995, 699.57001, 185.44000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18794, -1943.83997, 905.37000, 115.49000,   0.00000, 54.13000, 90.00000);
	CreateDynamicObject_FR(18807, -1942.93994, 1228.38000, 36.49000,   0.00000, 335.23999, 269.98999);
	CreateDynamicObject_FR(18796, -1942.90002, 1280.55005, 21.48000,   0.00000, 31.74000, 90.00000);
	CreateDynamicObject_FR(18794, -1942.91003, 1303.53003, 9.33000,   0.00000, 26.25000, 90.00000);
	CreateDynamicObject_FR(18761, -1942.46997, 1327.95996, 11.19000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18761, -1942.46997, 1327.95996, 11.19000,   0.00000, 0.00000, 0.00000);

	//Water Coaster WC1
	CreateDynamicObject_FR(19071, -1941.28003, -1761.76001, 833.31000,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(19071, -1941.28003, -1790.73999, 841.06000,   90.00000, 0.00000, 180.00000, 2);
	CreateDynamicObject_FR(19071, -1961.28003, -1761.76001, 850.06000,   0.00000, 90.00000, 0.00000, 2);
	CreateDynamicObject_FR(19071, -1921.30005, -1761.76001, 850.07001,   0.00000, 270.00000, 0.00000, 2);
	CreateDynamicObject_FR(19071, -1941.28003, -1701.93994, 833.31000,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(19070, -1941.27002, -1643.17004, 828.29999,   340.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(19071, -1941.28003, -1585.92004, 811.95001,   338.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(19071, -1941.28003, -1530.42004, 789.52002,   338.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(19071, -1941.28003, -1476.45996, 767.70001,   338.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1420.01001, 754.92999,   12.00000, 180.00000, 180.00000, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1372.31995, 761.82001,   352.00000, 179.99001, 179.99001, 2);
	CreateDynamicObject_FR(19071, -1941.28003, -1204.02002, 779.92999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(8392, -1894.30005, -1726.53003, 844.41998,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1894.55005, -1627.56995, 844.41998,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1894.55005, -1579.93005, 792.64001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1894.55005, -1487.06006, 765.95001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1894.55005, -1387.97998, 753.39001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1989.57996, -1387.97998, 753.39001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1989.29004, -1487.06006, 765.95001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1988.90002, -1579.93005, 792.64001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1988.90002, -1627.56995, 844.41998,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1988.35999, -1726.53003, 844.41998,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(19277, -1899.88000, -1722.64001, 819.46002,   0.00000, 0.00000, 130.00000, 2);
	CreateDynamicObject_FR(16113, -1899.88000, -1682.28003, 818.64001,   0.00000, 0.00000, 130.00000, 2);
	CreateDynamicObject_FR(16113, -1899.88000, -1641.20996, 815.50000,   0.00000, 0.00000, 130.00000, 2);
	CreateDynamicObject_FR(16113, -1902.13000, -1614.12000, 809.10999,   16.40000, 25.09000, 128.47000, 2);
	CreateDynamicObject_FR(16113, -1905.13000, -1584.25000, 794.79999,   16.40000, 25.08000, 128.46001, 2);
	CreateDynamicObject_FR(16113, -1905.13000, -1555.52002, 777.53003,   16.40000, 25.08000, 128.46001, 2);
	CreateDynamicObject_FR(16113, -1899.88000, -1522.07996, 765.47998,   0.00000, 0.00000, 130.00000, 2);
	CreateDynamicObject_FR(16113, -1899.88000, -1483.54004, 749.78003,   0.00000, 0.00000, 130.00000, 2);
	CreateDynamicObject_FR(16113, -1899.88000, -1443.75000, 735.65002,   0.00000, 0.00000, 130.00000, 2);
	CreateDynamicObject_FR(16113, -1904.88000, -1412.17004, 735.65002,   0.00000, 0.00000, 130.00000, 2);
	CreateDynamicObject_FR(16113, -1907.63000, -1374.34998, 748.65002,   0.00000, 0.00000, 130.00000, 2);
	CreateDynamicObject_FR(16113, -1974.31006, -1682.28003, 818.64001,   0.00000, 0.00000, 310.00000, 2);
	CreateDynamicObject_FR(16113, -1974.31006, -1712.85999, 818.64001,   0.00000, 0.00000, 310.00000, 2);
	CreateDynamicObject_FR(16113, -1974.31006, -1637.64001, 807.65002,   0.00000, 0.00000, 310.00000, 2);
	CreateDynamicObject_FR(16113, -1974.31006, -1587.76001, 791.95001,   0.00000, 0.00000, 310.00000, 2);
	CreateDynamicObject_FR(16113, -1974.31006, -1542.42004, 782.73999,   0.00000, 0.00000, 310.00000, 2);
	CreateDynamicObject_FR(16113, -1974.31006, -1502.81006, 767.35999,   0.00000, 0.00000, 310.00000, 2);
	CreateDynamicObject_FR(16113, -1974.31006, -1466.80005, 751.22998,   0.00000, 0.00000, 310.00000, 2);
	CreateDynamicObject_FR(16113, -1974.31006, -1424.41003, 742.34998,   0.00000, 0.00000, 310.00000, 2);
	CreateDynamicObject_FR(16113, -1978.56006, -1380.91003, 742.34998,   0.00000, 0.00000, 310.00000, 2);
	CreateDynamicObject_FR(16113, -1982.31006, -1346.39001, 747.09998,   0.00000, 0.00000, 310.00000, 2);
	CreateDynamicObject_FR(16113, -1907.63000, -1227.28003, 769.02002,   0.00000, 0.00000, 130.00000, 2);
	CreateDynamicObject_FR(16113, -1974.27002, -1218.53003, 770.77002,   0.00000, 0.00000, 318.00000, 2);
	CreateDynamicObject_FR(18228, -1908.34998, -1320.70996, 768.15997,   0.00000, 0.00000, 240.00000, 2);
	CreateDynamicObject_FR(18228, -1891.07996, -1320.70996, 792.46002,   29.82000, 6.92000, 236.53999, 2);
	CreateDynamicObject_FR(18228, -1930.80005, -1320.70996, 759.09003,   354.06000, 351.95001, 239.14999, 2);
	CreateDynamicObject_FR(18228, -1959.03003, -1315.20996, 759.09003,   358.01999, 349.98999, 55.64000, 2);
	CreateDynamicObject_FR(18228, -1979.47998, -1315.20996, 777.28998,   19.79000, 8.50000, 53.09000, 2);
	CreateDynamicObject_FR(18228, -1987.65002, -1315.20996, 790.81000,   19.79000, 8.49000, 53.09000, 2);
	CreateDynamicObject_FR(18228, -1989.40002, -1315.20996, 807.51001,   42.56000, 39.58000, 38.78000, 2);
	CreateDynamicObject_FR(18228, -1971.83997, -1315.20996, 829.07001,   66.82000, 119.72000, 316.14001, 2);
	CreateDynamicObject_FR(18228, -1948.89001, -1315.20996, 832.82001,   37.17000, 154.59000, 273.98999, 2);
	CreateDynamicObject_FR(18228, -1920.83997, -1315.20996, 831.57001,   16.89000, 159.06000, 264.32001, 2);
	CreateDynamicObject_FR(18228, -1895.10999, -1315.20996, 814.76001,   346.87000, 159.44000, 253.10001, 2);
	CreateDynamicObject_FR(18228, -1930.80005, -1287.98999, 759.09003,   354.04999, 351.95001, 239.14999, 2);
	CreateDynamicObject_FR(18228, -1959.03003, -1281.48999, 759.09003,   358.01999, 349.98999, 55.64000, 2);
	CreateDynamicObject_FR(18228, -1979.47998, -1278.53003, 777.28998,   19.79000, 8.49000, 53.09000, 2);
	CreateDynamicObject_FR(18228, -1971.83997, -1271.81995, 829.07001,   66.82000, 119.72000, 316.14001, 2);
	CreateDynamicObject_FR(18228, -1948.89001, -1276.03003, 832.82001,   37.17000, 154.59000, 273.98999, 2);
	CreateDynamicObject_FR(18228, -1989.40002, -1273.93005, 807.51001,   42.56000, 39.57000, 38.78000, 2);
	CreateDynamicObject_FR(18228, -1920.83997, -1277.03003, 831.57001,   16.89000, 159.06000, 264.31000, 2);
	CreateDynamicObject_FR(18228, -1891.07996, -1278.45996, 792.46002,   29.82000, 6.92000, 236.53999, 2);
	CreateDynamicObject_FR(18228, -1895.10999, -1277.48999, 814.76001,   346.87000, 159.44000, 253.10001, 2);
	CreateDynamicObject_FR(18228, -1905.81995, -1285.78003, 766.59003,   354.04999, 351.95001, 239.14999, 2);
	CreateDynamicObject_FR(18228, -1905.81995, -1254.77002, 766.59003,   354.04999, 351.95001, 239.14999, 2);
	CreateDynamicObject_FR(18228, -1891.07996, -1261.76001, 792.46002,   29.82000, 6.92000, 236.53999, 2);
	CreateDynamicObject_FR(18228, -1920.83997, -1257.76001, 831.57001,   16.89000, 159.06000, 264.31000, 2);
	CreateDynamicObject_FR(18228, -1895.10999, -1260.21997, 814.76001,   346.87000, 159.44000, 253.10001, 2);
	CreateDynamicObject_FR(18228, -1930.80005, -1262.57996, 759.09003,   354.04999, 351.95001, 239.14999, 2);
	CreateDynamicObject_FR(18228, -1959.03003, -1248.66003, 761.09003,   358.01999, 349.98999, 55.64000, 2);
	CreateDynamicObject_FR(18228, -1979.47998, -1254.91003, 777.28998,   19.78000, 8.49000, 53.09000, 2);
	CreateDynamicObject_FR(18228, -1989.40002, -1251.69995, 807.51001,   42.56000, 39.57000, 38.78000, 2);
	CreateDynamicObject_FR(18228, -1971.83997, -1254.30005, 829.07001,   66.82000, 119.72000, 316.14001, 2);
	CreateDynamicObject_FR(18228, -1920.83997, -1245.13000, 831.57001,   16.89000, 159.06000, 264.31000, 2);
	CreateDynamicObject_FR(18228, -1948.89001, -1248.41003, 832.82001,   37.17000, 154.59000, 273.98999, 2);
	CreateDynamicObject_FR(18228, -1928.80005, -1237.17004, 757.59003,   354.04999, 351.95001, 319.14999, 2);
	CreateDynamicObject_FR(19071, -1941.28003, -1227.52002, 779.91998,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(619, -1898.75000, -1339.01001, 792.31000,   0.00000, 0.00000, 343.00000, 2);
	CreateDynamicObject_FR(622, -1974.08997, -1330.70996, 788.92999,   0.00000, 0.00000, 335.31000, 2);
	CreateDynamicObject_FR(620, -1917.19995, -1293.93005, 770.12000,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(620, -1960.45996, -1257.32996, 772.95001,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(3851, -1956.69995, -1172.03003, 779.89001,   0.00000, 90.00000, 270.00000, 2);
	CreateDynamicObject_FR(3851, -1945.43005, -1172.03003, 779.89001,   0.00000, 90.00000, 270.00000, 2);
	CreateDynamicObject_FR(3851, -1934.18005, -1172.03003, 779.89001,   0.00000, 90.00000, 270.00000, 2);
	CreateDynamicObject_FR(3851, -1925.98999, -1172.03003, 779.88000,   0.00000, 90.00000, 270.00000, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1141.50000, 788.20001,   352.00000, 179.99001, 179.99001, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1141.50000, 790.20001,   342.00000, 179.99001, 179.99001, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1139.00000, 790.20001,   325.98999, 179.99001, 179.98000, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1130.50000, 794.70001,   287.98999, 179.96001, 179.95000, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1130.50000, 814.87000,   292.01001, 0.04000, 0.03000, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1139.75000, 823.08002,   342.01001, 0.02000, 360.00000, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1159.13000, 823.08002,   16.00000, 0.02000, 359.98001, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1169.13000, 823.08002,   66.00000, 0.00000, 359.98999, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1166.38000, 819.83002,   37.99000, 0.00000, 359.98001, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1167.63000, 819.83002,   49.99000, 0.00000, 359.98001, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1166.63000, 821.58002,   1.99000, 0.00000, 359.98001, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1136.76001, 821.58002,   311.98001, 0.00000, 359.98001, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1131.76001, 821.58002,   273.98001, 0.00000, 359.98001, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1131.76001, 796.95001,   304.01999, 180.00000, 179.98000, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1171.50000, 812.59003,   72.31000, 0.00000, 359.98001, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1169.75000, 750.28998,   89.69000, 180.00000, 179.98000, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1161.71997, 730.62000,   73.69000, 180.00000, 179.97000, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1139.27002, 701.00000,   51.69000, 180.00000, 179.96001, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -1099.91003, 676.08002,   33.69000, 180.00000, 179.96001, 2);
	CreateDynamicObject_FR(19071, -1941.28003, -1043.26001, 658.40997,   11.32000, 180.00000, 180.00000, 2);
	CreateDynamicObject_FR(19071, -1941.28003, -986.31000, 650.03003,   352.67999, 0.01000, 359.98999, 2);
	CreateDynamicObject_FR(19071, -1941.28003, -929.46002, 644.83002,   356.67999, 0.00000, 359.98001, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -872.13000, 652.51001,   349.67999, 180.00000, 179.95000, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -854.82001, 666.67999,   329.67999, 179.99001, 179.95000, 2);
	CreateDynamicObject_FR(19070, -1941.28003, -835.59003, 695.44000,   305.67999, 179.98000, 179.94000, 2);
	CreateDynamicObject_FR(19070, -1941.27002, -786.46997, 696.38000,   69.68000, 179.97000, 179.97000, 2);
	CreateDynamicObject_FR(19070, -1941.27002, -753.57001, 659.25000,   47.57000, 179.98000, 179.95000, 2);
	CreateDynamicObject_FR(19070, -1941.27002, -707.71002, 635.98999,   26.76000, 179.98000, 179.94000, 2);
	CreateDynamicObject_FR(19071, -1941.28003, -649.31000, 625.87000,   356.67999, 0.00000, 359.98001, 2);
	CreateDynamicObject_FR(8392, -1985.07996, -1192.31006, 802.88000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1985.07996, -1093.46997, 802.88000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1985.07996, -1132.41003, 729.09003,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1985.07996, -1095.16003, 673.28003,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1985.07996, -988.66998, 673.17999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1985.07996, -918.31000, 659.04999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1985.07996, -821.67999, 676.14001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1985.07996, -791.82001, 729.52002,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1897.69995, -1192.30005, 802.88000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1897.97998, -1093.46997, 802.88000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.33997, -1132.41003, 729.09003,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.43994, -1095.16003, 673.28003,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.46997, -988.66998, 673.17999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.47998, -918.31000, 659.04999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.57996, -821.67999, 676.14001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.62000, -791.82001, 729.52002,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(16113, -1899.63000, -1194.38000, 769.02002,   0.00000, 0.00000, 130.00000, 2);
	CreateDynamicObject_FR(16113, -1899.63000, -1162.07996, 769.02002,   318.00000, 0.00000, 130.00000, 2);
	CreateDynamicObject_FR(16113, -1974.27002, -1194.05005, 770.02002,   0.00000, 0.00000, 317.98999, 2);
	CreateDynamicObject_FR(16113, -1974.27002, -1146.66003, 769.27002,   0.00000, 0.00000, 317.98999, 2);
	CreateDynamicObject_FR(16113, -1974.27002, -1135.91003, 679.16998,   0.00000, 0.00000, 317.98999, 2);
	CreateDynamicObject_FR(16113, -1977.02002, -1096.93994, 663.46997,   0.00000, 0.00000, 317.98999, 2);
	CreateDynamicObject_FR(16113, -1977.02002, -1055.87000, 649.34003,   0.00000, 0.00000, 317.98999, 2);
	CreateDynamicObject_FR(16113, -1977.02002, -1015.04999, 646.59003,   0.00000, 0.00000, 317.98999, 2);
	CreateDynamicObject_FR(16113, -1977.02002, -975.94000, 638.73999,   0.00000, 0.00000, 317.98999, 2);
	CreateDynamicObject_FR(16113, -1977.02002, -936.44000, 638.23999,   0.00000, 0.00000, 317.98999, 2);
	CreateDynamicObject_FR(16113, -1977.02002, -900.21997, 636.48999,   0.00000, 0.00000, 317.98999, 2);
	CreateDynamicObject_FR(16113, -1977.02002, -862.00000, 641.23999,   0.00000, 0.00000, 317.98999, 2);
	CreateDynamicObject_FR(16113, -1977.02002, -843.47998, 660.37000,   0.00000, 28.00000, 309.98999, 2);
	CreateDynamicObject_FR(16113, -1977.02002, -825.71002, 679.39001,   0.00000, 28.00000, 309.98999, 2);
	CreateDynamicObject_FR(16113, -1977.02002, -812.03998, 698.22998,   0.00000, 28.00000, 309.98999, 2);
	CreateDynamicObject_FR(16113, -1975.52002, -804.03998, 710.85999,   0.00000, 28.00000, 309.98999, 2);
	CreateDynamicObject_FR(16113, -1909.63000, -1132.41003, 676.46997,   2.73000, 13.59000, 125.70000, 2);
	CreateDynamicObject_FR(16113, -1909.63000, -1102.43005, 664.19000,   2.72000, 13.58000, 125.69000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -1066.45996, 657.95001,   2.72000, 13.58000, 125.69000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -1026.81006, 649.84998,   2.72000, 13.58000, 125.69000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -991.47998, 644.39001,   2.72000, 13.58000, 125.69000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -951.90002, 645.71002,   336.82999, 14.79000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -920.21002, 645.46002,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1905.88000, -882.16998, 645.46002,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1905.88000, -845.63000, 661.90997,   336.14999, 2.55000, 131.12000, 2);
	CreateDynamicObject_FR(16113, -1905.88000, -820.71997, 685.92999,   336.14001, 2.55000, 131.12000, 2);
	CreateDynamicObject_FR(16113, -1905.88000, -816.34003, 703.15997,   336.14001, 2.55000, 131.12000, 2);
	CreateDynamicObject_FR(8392, -1901.57996, -722.27002, 651.02002,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.57996, -673.03003, 619.62000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1984.68994, -722.27002, 651.02002,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1984.60999, -673.03003, 619.62000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -761.33002, 649.81000,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -732.64001, 633.35999,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -699.66998, 622.37000,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -666.70001, 617.65997,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -627.45001, 612.95001,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -761.33002, 649.81000,   336.82999, 14.78000, 305.26001, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -722.42999, 635.50000,   336.82001, 14.78000, 305.25000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -686.32001, 621.37000,   336.82001, 14.78000, 305.25000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -648.64001, 620.12000,   336.82001, 14.78000, 305.25000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -604.67999, 615.40997,   336.82001, 14.78000, 305.25000, 2);
	CreateDynamicObject_FR(12972, -1945.56995, -812.91998, 763.76001,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(12972, -1929.31995, -812.91998, 752.51001,   0.00000, 90.00000, 0.00000, 2);
	CreateDynamicObject_FR(12972, -1958.05005, -812.91998, 747.26001,   0.00000, 270.00000, 0.00000, 2);
	CreateDynamicObject_FR(3851, -1956.28003, -606.12000, 625.40997,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1947.18005, -606.12000, 625.40997,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1935.21997, -606.12000, 625.40997,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1925.43994, -606.12000, 625.40997,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(12972, -1945.56995, -811.41998, 712.08002,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1683, -1969.05005, -862.56000, 763.44000,   12.00000, -2.00000, 322.00000, 2);
	CreateDynamicObject_FR(19071, -1941.28003, -589.45001, 622.40997,   356.67999, 0.00000, 359.98001, 2);
	CreateDynamicObject_FR(19070, -1941.26001, -531.14001, 613.16998,   335.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(19071, -1941.26001, -474.73001, 593.64001,   336.67999, 0.00000, 359.98001, 2);
	CreateDynamicObject_FR(19071, -1941.26001, -419.70001, 569.90997,   336.67999, 0.00000, 359.98001, 2);
	CreateDynamicObject_FR(19071, -1941.23999, -364.64001, 546.17999,   336.67999, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(3851, -1956.87000, -337.13000, 536.25000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1945.62000, -337.13000, 536.25000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1934.37000, -337.13000, 536.25000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1925.90002, -337.10999, 536.25000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(19070, -1941.26001, -311.62000, 521.47998,   317.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(19070, -1941.26001, -269.69000, 487.54001,   45.01000, 180.00000, 180.00000, 2);
	CreateDynamicObject_FR(19070, -1941.26001, -222.73000, 458.92001,   312.07999, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(19070, -1941.26001, -181.37000, 421.23999,   47.34000, 179.99001, 179.99001, 2);
	CreateDynamicObject_FR(8392, -1901.57996, -567.15997, 619.62000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1984.54004, -567.15997, 619.62000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.57996, -467.48999, 586.65002,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.57996, -363.64999, 543.35999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1983.82996, -467.48999, 586.65002,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1984.07996, -363.64999, 543.35999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -591.08002, 612.95001,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -546.87000, 612.95001,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -562.28003, 615.40997,   336.82001, 14.78000, 305.25000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -519.89001, 609.45001,   336.82001, 14.78000, 305.25000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -478.70999, 589.92999,   336.82001, 14.78000, 305.25000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -434.82001, 571.15997,   336.82001, 14.78000, 305.25000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -392.22000, 550.67999,   336.82001, 14.78000, 305.25000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -350.73001, 535.69000,   336.82001, 14.78000, 305.25000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -505.76001, 597.39001,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -467.82999, 591.10999,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -423.87000, 572.34003,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -393.32999, 551.92999,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -362.35999, 539.37000,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(8392, -1901.57996, -269.37000, 498.89999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1984.21997, -269.37000, 498.89999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1984.21997, -233.00999, 444.10001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1984.21997, -176.20000, 407.98999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.57996, -233.00999, 444.10001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.62000, -176.20000, 407.98999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -328.95999, 514.28003,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -297.56000, 490.87000,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.38000, -259.38000, 467.32001,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1905.13000, -214.09000, 438.84000,   336.82999, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.13000, -182.19000, 409.29001,   336.82001, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -316.67999, 516.91998,   336.82001, 14.78000, 305.25000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -298.82001, 500.51001,   336.82001, 14.78000, 305.25000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -267.23999, 477.98999,   336.82001, 14.78000, 305.25000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -224.60001, 456.07999,   336.82001, 14.78000, 305.25000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -200.41000, 427.17001,   337.70999, 337.82999, 290.53000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -168.64999, 404.32999,   337.70001, 337.82001, 290.53000, 2);
	CreateDynamicObject_FR(19071, -1941.22998, -130.27000, 391.57001,   336.67999, 0.00000, 359.98001, 2);
	CreateDynamicObject_FR(19071, -1941.20996, -75.19000, 367.82999,   336.67999, 0.00000, 359.98001, 2);
	CreateDynamicObject_FR(19070, -1941.26001, -23.09000, 339.34000,   315.59000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(8392, -1901.62000, -97.22000, 353.32999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1984.18994, -97.22000, 353.32999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(16113, -1906.13000, -150.96001, 388.91000,   336.82001, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.13000, -119.02000, 368.17999,   336.82001, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.13000, -80.55000, 354.62000,   336.82001, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1906.13000, -44.61000, 338.92001,   336.82001, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1909.13000, -19.88000, 319.07999,   336.82001, 14.78000, 125.26000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -134.85001, 377.35001,   337.70001, 337.82001, 290.53000, 2);
	CreateDynamicObject_FR(16113, -1973.17004, -94.42000, 362.60999,   337.70001, 337.82001, 290.53000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -54.98000, 351.82999,   336.53000, 348.60999, 302.73001, 2);
	CreateDynamicObject_FR(16113, -1976.17004, -23.11000, 331.10001,   336.53000, 348.60001, 302.73001, 2);
	CreateDynamicObject_FR(1681, -1944.60999, -583.69000, 653.39001,   20.00000, 0.00000, 305.00000, 2);
	CreateDynamicObject_FR(19070, -1941.26001, 25.05000, 305.48999,   44.42000, 180.00000, 180.00000, 2);
	CreateDynamicObject_FR(19070, -1941.26001, 78.88000, 282.48999,   22.42000, 180.00000, 179.99001, 2);
	CreateDynamicObject_FR(19071, -1941.20996, 205.66000, 263.98999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(19071, -1941.20996, 218.39999, 265.23999,   4.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(19071, -1941.20996, 233.39999, 265.23999,   12.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(19071, -1941.20996, 350.04001, 270.26999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(8356, -1941.33997, 473.45001, 270.31000,   180.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(8356, -1941.33997, 286.64999, 265.28000,   356.01001, 180.00000, 180.00000, 2);
	CreateDynamicObject_FR(1225, -1957.72998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1955.97998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1947.47998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1945.97998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1936.97998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1935.47998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1927.47998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1925.97998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1923.97998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1929.22998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1933.72998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1938.72998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1943.97998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1949.22998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1953.72998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1959.47998, 379.32001, 270.73999,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(19071, -1941.20996, 595.15002, 272.42001,   4.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(8392, -1901.62000, 9.11000, 331.35001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.62000, 70.09000, 276.95999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.62000, 176.56000, 276.95999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1984.43994, 9.11000, 331.35001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1984.40002, 70.09000, 276.95999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1985.07996, 176.56000, 276.95999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(16113, -1909.13000, 2.25000, 304.79999,   336.82001, 14.78000, 117.26000, 2);
	CreateDynamicObject_FR(16113, -1909.13000, 29.48000, 285.85001,   336.82001, 14.78000, 117.25000, 2);
	CreateDynamicObject_FR(16113, -1906.63000, 58.89000, 278.85999,   336.82001, 14.78000, 123.25000, 2);
	CreateDynamicObject_FR(16113, -1906.63000, 93.03000, 278.35999,   336.82001, 14.78000, 123.25000, 2);
	CreateDynamicObject_FR(16113, -1976.17004, 14.18000, 299.41000,   336.53000, 348.60001, 302.73001, 2);
	CreateDynamicObject_FR(16113, -1976.17004, 51.72000, 277.42999,   336.53000, 348.60001, 302.73001, 2);
	CreateDynamicObject_FR(16113, -1978.17004, 90.69000, 271.82999,   336.53000, 348.60001, 302.73001, 2);
	CreateDynamicObject_FR(16113, -1978.17004, 111.64000, 269.32999,   336.53000, 348.60001, 302.73001, 2);
	CreateDynamicObject_FR(16113, -1978.17004, 201.24001, 253.27000,   336.53000, 348.60001, 302.73001, 2);
	CreateDynamicObject_FR(16113, -1975.42004, 236.32001, 254.64999,   336.13000, 357.32001, 304.23001, 2);
	CreateDynamicObject_FR(16113, -1973.67004, 275.92999, 253.14999,   336.13000, 357.32001, 304.23001, 2);
	CreateDynamicObject_FR(16113, -1906.63000, 191.16000, 261.26999,   336.82001, 14.78000, 123.25000, 2);
	CreateDynamicObject_FR(16113, -1906.63000, 228.84000, 261.01999,   336.82001, 14.78000, 123.25000, 2);
	CreateDynamicObject_FR(16113, -1906.63000, 239.12000, 255.24001,   336.82001, 14.78000, 123.25000, 2);
	CreateDynamicObject_FR(19071, -1941.20996, 171.03999, 234.58000,   84.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(16113, -1972.17004, 344.41000, 259.72000,   350.10001, 359.54001, 303.23001, 2);
	CreateDynamicObject_FR(16113, -1973.17004, 380.51999, 259.72000,   350.10001, 359.54001, 303.23001, 2);
	CreateDynamicObject_FR(16113, -1973.17004, 426.04999, 259.72000,   350.10001, 359.54001, 303.23001, 2);
	CreateDynamicObject_FR(16113, -1973.17004, 469.51001, 259.72000,   350.10001, 359.54001, 303.23001, 2);
	CreateDynamicObject_FR(16113, -1973.17004, 515.03998, 259.72000,   350.10001, 359.54001, 303.23001, 2);
	CreateDynamicObject_FR(16113, -1973.17004, 560.57001, 259.72000,   350.10001, 359.54001, 303.23001, 2);
	CreateDynamicObject_FR(16113, -1973.17004, 598.25000, 259.72000,   350.10001, 359.54001, 303.23001, 2);
	CreateDynamicObject_FR(16113, -1906.63000, 332.17999, 261.98999,   336.82001, 14.78000, 123.25000, 2);
	CreateDynamicObject_FR(16113, -1906.63000, 377.95999, 261.98999,   336.82001, 14.78000, 123.25000, 2);
	CreateDynamicObject_FR(16113, -1906.63000, 421.73999, 261.98999,   336.82001, 14.78000, 123.25000, 2);
	CreateDynamicObject_FR(16113, -1906.63000, 462.56000, 261.98999,   336.82001, 14.78000, 123.25000, 2);
	CreateDynamicObject_FR(16113, -1905.13000, 501.81000, 258.48999,   348.14001, 3.64000, 130.07001, 2);
	CreateDynamicObject_FR(16113, -1905.13000, 537.91998, 258.48999,   348.14001, 3.64000, 130.07001, 2);
	CreateDynamicObject_FR(16113, -1905.13000, 578.73999, 258.48999,   348.14001, 3.64000, 130.07001, 2);
	CreateDynamicObject_FR(8392, -1901.62000, 281.92999, 267.54001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.62000, 387.12000, 267.54001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.62000, 491.56000, 267.54001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1901.62000, 597.46002, 267.54001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1983.96997, 281.92999, 267.54001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1983.65002, 387.12000, 267.54001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1983.43994, 491.56000, 267.54001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1983.21997, 597.46002, 267.54001,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(16113, -1936.94995, 396.29999, 247.21001,   34.43000, 339.94000, 222.98000, 2);
	CreateDynamicObject_FR(16113, -1936.94995, 419.14001, 247.21001,   34.42000, 339.94000, 222.98000, 2);
	CreateDynamicObject_FR(16113, -1936.94995, 441.37000, 247.21001,   34.42000, 339.94000, 222.98000, 2);
	CreateDynamicObject_FR(16113, -1936.94995, 463.10001, 247.21001,   34.42000, 339.94000, 222.98000, 2);
	CreateDynamicObject_FR(16113, -1936.94995, 479.72000, 247.21001,   34.42000, 339.94000, 222.98000, 2);
	CreateDynamicObject_FR(16113, -1936.94995, 497.48999, 247.21001,   34.42000, 339.94000, 222.98000, 2);
	CreateDynamicObject_FR(16113, -1936.94995, 522.60999, 247.21001,   34.42000, 339.94000, 42.98000, 2);
	CreateDynamicObject_FR(16113, -1936.94995, 549.29999, 247.21001,   34.41000, 339.94000, 42.98000, 2);
	CreateDynamicObject_FR(16113, -1936.94995, 576.66998, 252.96001,   34.41000, 339.94000, 42.98000, 2);
	CreateDynamicObject_FR(19070, -1941.26001, 653.02002, 282.57999,   352.42001, 180.00000, 179.99001, 2);
	CreateDynamicObject_FR(5644, -1941.00000, 716.22998, 305.87000,   90.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(3851, -1949.70996, 703.62000, 296.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1941.27002, 703.64001, 296.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1932.26001, 703.62000, 296.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1949.70996, 703.62000, 300.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1949.70996, 703.62000, 304.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1949.70996, 703.62000, 308.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1949.70996, 703.62000, 312.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1949.70996, 703.62000, 316.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1941.27002, 703.63000, 300.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1941.27002, 703.63000, 304.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1941.27002, 703.63000, 308.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1941.27002, 703.63000, 312.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1941.27002, 703.63000, 316.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1932.26001, 703.62000, 300.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1932.26001, 703.62000, 304.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1932.26001, 703.62000, 308.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1932.26001, 703.62000, 312.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1932.26001, 703.62000, 316.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1949.70996, 728.85999, 296.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1941.27002, 728.96002, 296.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1932.26001, 728.95001, 296.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1949.70996, 728.85999, 300.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1949.70996, 728.85999, 304.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1949.70996, 728.85999, 308.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1949.70996, 728.85999, 312.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1949.70996, 728.85999, 316.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1941.27002, 728.96002, 300.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1941.27002, 728.96002, 304.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1941.27002, 728.96002, 308.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1941.27002, 728.96002, 312.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1941.27002, 728.96002, 316.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1932.26001, 728.95001, 300.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1932.26001, 728.95001, 304.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1932.26001, 728.95001, 308.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1932.26001, 728.95001, 312.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(3851, -1932.26001, 728.95001, 316.14999,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(1225, -1927.63000, 716.31000, 294.56000,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1930.38000, 716.31000, 294.56000,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1933.38000, 716.31000, 294.56000,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1936.38000, 716.31000, 294.56000,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1939.13000, 716.31000, 294.56000,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1941.88000, 716.31000, 294.56000,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1944.88000, 716.31000, 294.56000,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1947.88000, 716.31000, 294.56000,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1950.63000, 716.31000, 294.56000,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(1225, -1953.88000, 716.31000, 294.56000,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(19071, -1941.20996, 758.57001, 294.20001,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(19071, -1941.20996, 818.12000, 294.20001,   0.00000, 0.00000, 0.00000, 2);
	CreateDynamicObject_FR(8392, -1901.62000, 694.31000, 293.16000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1983.05005, 694.31000, 293.16000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(16113, -1973.17004, 641.50000, 265.32001,   350.10001, 359.54001, 303.23001, 2);
	CreateDynamicObject_FR(16113, -1973.17004, 674.03998, 272.98999,   350.10001, 359.54001, 303.23001, 2);
	CreateDynamicObject_FR(16113, -1973.17004, 699.27002, 282.98999,   350.10001, 359.54001, 303.23001, 2);
	CreateDynamicObject_FR(16113, -1905.13000, 609.07001, 266.76999,   348.14001, 3.64000, 130.07001, 2);
	CreateDynamicObject_FR(16113, -1907.38000, 647.96002, 272.44000,   348.14001, 3.64000, 130.07001, 2);
	CreateDynamicObject_FR(16113, -1912.13000, 690.62000, 278.94000,   348.14001, 3.64000, 130.07001, 2);
	CreateDynamicObject_FR(16113, -1912.13000, 704.47998, 275.44000,   348.14001, 3.64000, 130.07001, 2);
	CreateDynamicObject_FR(16113, -1973.17004, 721.46997, 282.98999,   350.10001, 359.54001, 303.23001, 2);
	CreateDynamicObject_FR(8392, -1901.62000, 800.17999, 293.16000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(8392, -1980.12000, 800.17999, 293.16000,   0.00000, 0.00000, 90.00000, 2);
	CreateDynamicObject_FR(16113, -1973.17004, 761.46997, 282.98999,   350.10001, 359.54001, 303.23001, 2);
	CreateDynamicObject_FR(16113, -1971.92004, 808.57001, 282.98999,   350.10001, 359.54001, 303.23001, 2);
	CreateDynamicObject_FR(16113, -1971.92004, 844.66998, 282.98999,   350.10001, 359.54001, 303.23001, 2);
	CreateDynamicObject_FR(16113, -1909.63000, 743.97998, 287.85999,   348.28000, 9.77000, 125.32000, 2);
	CreateDynamicObject_FR(16113, -1909.63000, 782.34003, 287.85999,   348.28000, 9.77000, 125.32000, 2);

	//Water Coaster 2 WC2
	CreateDynamicObject_FR(19887, 3164.12500, 2907.73804, 791.07898,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3164.12207, 2847.74292, 791.08801,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19070, 3164.12891, 2788.23096, 785.82898,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19070, 3164.12891, 2733.81494, 764.35999,   22.50000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3164.12891, 2687.70996, 727.08801,   44.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3164.12891, 2645.28906, 684.67401,   44.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3164.13501, 2599.31396, 646.92700,   22.50000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3164.13501, 2540.89111, 646.92999,   337.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19542, 3182.67896, 2875.05908, 789.96698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19542, 3143.74194, 2875.06006, 789.96698,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19540, 3182.68408, 2937.30396, 789.96399,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19540, 3143.30688, 2937.30396, 789.90100,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19549, 3166.44800, 2937.30200, 789.96301,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19549, 3151.27100, 2937.30200, 789.90002,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19540, 3143.80005, 2813.20508, 789.56799,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19540, 3183.13208, 2813.20508, 789.56799,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(624, 3191.42993, 2889.86108, 789.74799,   0.00000, 0.00000, 248.00000);
	CreateDynamicObject_FR(624, 3127.67700, 2843.75488, 789.74799,   0.00000, 0.00000, 248.00000);
	CreateDynamicObject_FR(830, 3192.52002, 2801.82007, 790.20898,   0.00000, 0.00000, 290.00000);
	CreateDynamicObject_FR(830, 3124.48901, 2910.68604, 790.20898,   0.00000, 0.00000, 200.00000);
	CreateDynamicObject_FR(18268, 3167.10205, 2935.32910, 811.58099,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18268, 3147.31689, 2807.39990, 810.34399,   0.00000, 0.00000, 140.00000);
	CreateDynamicObject_FR(18269, 3162.29492, 2861.50488, 810.33600,   0.00000, 0.00000, 210.00000);
	CreateDynamicObject_FR(18271, 3201.86108, 2851.30493, 806.25299,   0.00000, 0.00000, 190.00000);
	CreateDynamicObject_FR(18271, 3133.28906, 2907.26001, 806.25299,   0.00000, 0.00000, 20.00000);
	CreateDynamicObject_FR(18269, 3162.72998, 2950.42603, 802.76300,   0.00000, 0.00000, 220.00000);
	CreateDynamicObject_FR(730, 3193.27197, 2909.99292, 789.96399,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(727, 3152.44507, 2947.27808, 789.74701,   0.00000, 0.00000, 82.00000);
	CreateDynamicObject_FR(726, 3127.76807, 2874.42212, 788.87299,   0.00000, 0.00000, 250.00000);
	CreateDynamicObject_FR(730, 3197.44409, 2811.02393, 789.56799,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19338, 3292.84692, 2864.33789, 806.23297,   0.00000, 0.00000, 320.00000);
	CreateDynamicObject_FR(19070, 3164.14307, 2378.13696, 704.84198,   337.50000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3164.12891, 2319.15894, 711.08398,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19888, 3156.01807, 2254.73096, 711.09399,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19889, 3127.15088, 2209.55688, 711.08002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19889, 3127.15088, 2152.71289, 711.08002,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject_FR(19888, 3160.36011, 2097.04492, 711.09399,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject_FR(19070, 3164.12207, 2043.59204, 705.83099,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3164.12891, 1986.75000, 689.04901,   22.50000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3164.12891, 1931.36902, 666.10602,   22.50000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3164.12891, 1875.95300, 643.15198,   22.50000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3164.12891, 1875.95300, 639.17902,   14.75000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1837.53406, 597.41803,   68.75200, 0.00900, 360.00000);
	CreateDynamicObject_FR(19071, 3164.12891, 1875.95300, 641.00201,   18.24900, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1800.56201, 685.24500,   10.00000, 180.00000, 180.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1806.45496, 683.66602,   20.00000, 180.00000, 180.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1811.98401, 681.08801,   30.00000, 180.00000, 180.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1816.98206, 677.58899,   40.00000, 180.00000, 180.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1821.29602, 673.27502,   50.00000, 180.00000, 180.00000);
	CreateDynamicObject_FR(19071, 3164.12891, 1800.97498, 550.44897,   46.75000, 0.00000, 0.00000);
	CreateDynamicObject_FR(712, 3144.18994, 2073.00391, 719.75403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(712, 3184.05200, 2073.00391, 719.75403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(712, 3164.06299, 2073.00391, 719.75403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19335, 3078.63403, 1806.55798, 625.17902,   0.00000, 0.00000, 320.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1794.48401, 615.77698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1788.40698, 616.30902,   350.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1782.51404, 617.88800,   340.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1776.98401, 620.46600,   330.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1771.98706, 623.96600,   320.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1767.67297, 628.28003,   310.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1764.17395, 633.27698,   300.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1761.59497, 638.80701,   290.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1760.01599, 644.70001,   280.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1759.48401, 650.77698,   270.00000, 315.00000, 315.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1760.01599, 656.85498,   280.00000, 180.00000, 180.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1761.59497, 662.74799,   290.00000, 180.00000, 180.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1764.17395, 668.27698,   300.00000, 180.00000, 180.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1767.67297, 673.27502,   310.00000, 180.00000, 180.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1771.98706, 677.58899,   320.00000, 180.00000, 180.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1776.98401, 681.08801,   330.00000, 180.00000, 180.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1782.51404, 683.66602,   340.00000, 180.00000, 180.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1788.40698, 685.24500,   350.00000, 180.00000, 180.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1794.48401, 685.77698,   0.00000, 180.00000, 180.00000);
	CreateDynamicObject_FR(19071, 3164.12891, 1759.87000, 506.75201,   46.74700, 0.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3164.12891, 1718.75806, 463.05399,   46.74700, 0.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3164.12891, 1677.68396, 419.38901,   46.74700, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1632.59595, 380.69199,   23.24700, 0.00200, 360.00000);
	CreateDynamicObject_FR(19884, 3164.10400, 1574.23901, 380.31500,   337.50000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19887, 3164.12891, 1374.33203, 454.70401,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3164.13794, 1314.33203, 454.69199,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19889, 3171.90308, 1255.93506, 454.68600,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject_FR(19889, 3212.10107, 1215.73096, 454.68600,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3270.50708, 1207.95898, 454.69199,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3276.58496, 1205.87598, 455.22400,   350.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3282.47803, 1203.79199, 456.80301,   340.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3288.00708, 1201.70898, 459.38101,   330.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3162.47290, 1404.32605, 455.43500,   269.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19425, 3165.60010, 1404.32605, 455.43500,   269.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19425, 3167.00098, 1404.32605, 454.05399,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3167.00098, 1404.32605, 450.92001,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3167.00098, 1404.32605, 447.76599,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3165.60010, 1404.32605, 446.33899,   269.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19425, 3162.47290, 1404.32605, 446.33899,   269.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19425, 3161.09399, 1404.32605, 447.76599,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3161.09399, 1404.32605, 450.89099,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3161.09399, 1404.32605, 454.03400,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3168.78809, 1404.32605, 447.76599,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3157.79395, 1404.32605, 446.33899,   269.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19425, 3168.78809, 1404.32605, 450.89099,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3168.78809, 1404.32605, 454.04199,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3169.60303, 1404.32605, 447.62799,   30.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3171.20190, 1404.32605, 450.39301,   29.99800, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3172.78296, 1404.32605, 453.11899,   29.99800, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3173.30493, 1404.33496, 454.01901,   29.99800, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3174.11694, 1404.32605, 454.04199,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3174.11694, 1404.32605, 450.88101,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3174.11694, 1404.32605, 447.72800,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3154.62207, 1404.32605, 446.33899,   269.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19425, 3157.75806, 1404.32605, 455.42300,   269.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19425, 3154.60596, 1404.32605, 455.42300,   269.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19425, 3157.79395, 1404.32605, 450.72101,   269.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19425, 3154.60498, 1404.32605, 450.72101,   269.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19425, 3153.23804, 1404.32605, 447.76599,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3153.23804, 1404.32605, 449.32901,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3159.17407, 1404.32605, 452.09100,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19425, 3159.17407, 1404.32605, 454.04901,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19791, 3180.10205, 1399.32703, 444.66199,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19791, 3170.13501, 1399.32703, 444.66199,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19791, 3160.12500, 1399.32703, 444.66199,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19791, 3150.17603, 1399.32703, 444.66199,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19791, 3148.14697, 1399.31799, 444.66199,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19542, 3179.44189, 1333.44299, 453.80600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19791, 3190.08594, 1399.32703, 444.66199,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19791, 3200.08008, 1399.32703, 444.66199,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19791, 3210.09204, 1399.32703, 444.66199,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19791, 3138.17603, 1399.32703, 444.66199,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19791, 3128.20996, 1399.32703, 444.66199,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19791, 3118.22705, 1399.32703, 444.66199,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19542, 3148.85303, 1333.44299, 453.80600,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(16061, 3132.47705, 1345.19995, 453.57700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16061, 3194.72510, 1345.19995, 453.57700,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(623, 3193.06396, 1284.52002, 453.67599,   0.00000, 0.00000, 80.00000);
	CreateDynamicObject_FR(623, 3134.79199, 1285.06201, 453.67599,   0.00000, 0.00000, 290.00000);
	CreateDynamicObject_FR(13667, 3192.86792, 1399.83496, 470.55099,   0.00000, 0.00000, 140.00000);
	CreateDynamicObject_FR(13667, 3135.97900, 1399.83496, 470.55099,   0.00000, 0.00000, 70.00000);
	CreateDynamicObject_FR(19667, 3164.02197, 1795.62695, 543.05603,   45.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19667, 3164.02197, 1754.43201, 503.75800,   44.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19667, 3164.02197, 1719.13794, 469.27802,   44.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19667, 3164.02197, 1686.34302, 436.75400,   44.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19667, 3164.02197, 1671.43701, 422.11899,   44.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19667, 3164.02197, 1653.27795, 403.95999,   44.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(18759, 3163.97095, 1394.30701, 425.38800,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3293.00488, 1199.62598, 462.88101,   320.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3297.31909, 1197.54199, 467.19501,   310.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3300.81812, 1195.45898, 472.19199,   300.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3303.39600, 1193.37598, 477.72198,   290.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3304.97607, 1191.29199, 483.61499,   280.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3305.50708, 1189.20898, 489.69199,   270.00000, 315.00000, 45.00000);
	CreateDynamicObject_FR(19885, 3304.97607, 1187.12598, 495.76999,   280.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3303.39600, 1185.04199, 501.66299,   290.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3300.81812, 1182.95898, 507.19199,   300.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3297.31909, 1180.87598, 512.19000,   310.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3293.00488, 1178.79199, 516.50403,   320.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3288.00708, 1176.70898, 520.00299,   330.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3282.47803, 1174.62598, 522.58197,   340.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3276.58496, 1172.54199, 524.16101,   350.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3270.50708, 1170.45898, 524.69202,   0.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3264.42993, 1168.37598, 524.16101,   10.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3258.53711, 1166.29199, 522.58197,   20.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3253.00708, 1164.20898, 520.00299,   30.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3248.01001, 1162.12598, 516.50403,   40.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3243.69604, 1160.04199, 512.19000,   50.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3240.19604, 1157.95898, 507.19199,   60.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3237.61792, 1155.87598, 501.66299,   70.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3236.03906, 1153.79199, 495.76999,   80.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3235.50708, 1151.70898, 489.69199,   90.00000, 225.00000, 225.00000);
	CreateDynamicObject_FR(19885, 3236.03906, 1149.62598, 483.61499,   80.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3237.61792, 1147.54199, 477.72198,   70.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3240.19604, 1145.45898, 472.19199,   60.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3243.69604, 1143.37598, 467.19501,   50.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3248.01001, 1141.29199, 462.88101,   40.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3253.00708, 1139.20898, 459.38101,   30.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3258.53711, 1137.12598, 456.80301,   20.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3264.42993, 1135.04199, 455.22400,   10.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3270.50708, 1132.95898, 454.69199,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3276.58496, 1130.87598, 455.22400,   350.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3282.47803, 1128.79199, 456.80301,   340.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3288.00708, 1126.70898, 459.38101,   330.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3293.00488, 1124.62598, 462.88101,   320.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3297.31909, 1122.54199, 467.19501,   310.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3300.81812, 1120.45898, 472.19199,   300.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3303.39600, 1118.37598, 477.72198,   290.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3304.97607, 1116.29199, 483.61499,   280.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3305.50708, 1114.20898, 489.69199,   270.00000, 315.00000, 45.00000);
	CreateDynamicObject_FR(19885, 3304.97607, 1112.12598, 495.76999,   280.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3303.39600, 1110.04199, 501.66299,   290.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3300.81812, 1107.95898, 507.19199,   300.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3297.31909, 1105.87598, 512.19000,   310.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3293.00488, 1103.79199, 516.50403,   320.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3288.00708, 1101.70898, 520.00299,   330.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3282.47803, 1099.62598, 522.58197,   340.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3276.58496, 1097.54199, 524.16101,   350.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3270.50708, 1095.45898, 524.69202,   0.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3264.42993, 1093.37598, 524.16101,   10.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3258.53711, 1091.29199, 522.58197,   20.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3253.00708, 1089.20898, 520.00299,   30.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3248.01001, 1087.12598, 516.50403,   40.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3243.69604, 1085.04199, 512.19000,   50.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3240.19604, 1082.95898, 507.19199,   60.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3237.61792, 1080.87598, 501.66299,   70.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3236.03906, 1078.79199, 495.76999,   80.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(19885, 3235.50708, 1076.70898, 489.69199,   90.00000, 225.00000, 225.00000);
	CreateDynamicObject_FR(19885, 3236.03906, 1074.62598, 483.61499,   80.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3237.61792, 1072.54199, 477.72198,   70.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3240.19604, 1070.45898, 472.19199,   60.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3243.69604, 1068.37598, 467.19501,   50.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3248.01001, 1066.29199, 462.88101,   40.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3253.00708, 1064.20898, 459.38101,   30.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3258.53711, 1062.12598, 456.80301,   20.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3264.42993, 1060.04199, 455.22400,   10.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3270.50708, 1057.95898, 454.69199,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19885, 3330.48291, 1057.95898, 454.69199,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19888, 3394.90991, 1049.84399, 454.67700,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19888, 3433.09595, 1005.51001, 454.67700,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject_FR(19886, 3436.86108, 951.59698, 454.68301,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19891, 3436.85889, 891.60303, 454.67899,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18809, 3436.87207, 836.60999, 458.03699,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(18844, 3436.87695, 812.13000, 458.04700,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18809, 3436.87207, 787.66302, 458.03699,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject_FR(19891, 3436.85889, 732.62903, 454.20200,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19886, 3436.86108, 672.63000, 454.19699,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19884, 3436.88403, 613.39099, 460.02100,   337.50000, 0.00000, 0.00000);
	CreateDynamicObject_FR(712, 3360.41992, 1037.89404, 464.29700,   0.00000, 0.00000, 348.00000);
	CreateDynamicObject_FR(712, 3360.41992, 1077.95801, 464.29700,   0.00000, 0.00000, 348.00000);
	CreateDynamicObject_FR(712, 3360.41992, 1057.93799, 464.29700,   0.00000, 0.00000, 348.00000);
	CreateDynamicObject_FR(18844, 3436.87695, 812.13098, 458.04700,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18855, 3436.86304, 665.74200, 484.70499,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(18855, 3436.86304, 665.74103, 421.06299,   0.00000, 270.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3436.88403, 571.93903, 501.26501,   292.79999, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3436.88403, 557.34198, 558.41400,   302.20099, 180.00000, 0.00000);
	CreateDynamicObject_FR(19886, 3436.86108, 535.00598, 529.45203,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19884, 3436.87109, 454.42300, 518.06403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3436.87109, 348.68799, 518.06403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3436.87109, 217.65199, 492.40601,   22.50000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3436.87109, 159.20399, 492.40601,   337.50000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3436.87109, 17.29400, 492.40601,   22.50000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19886, 3455.83594, 535.00598, 519.90503,   0.00000, 90.00000, 180.00000);
	CreateDynamicObject_FR(19886, 3417.87988, 535.00598, 519.90503,   0.00000, 270.00000, 180.00000);
	CreateDynamicObject_FR(19886, 3436.86108, 535.00598, 538.88501,   0.00000, 180.00000, 180.00000);
	CreateDynamicObject_FR(19842, 3450.04492, 505.00601, 541.93298,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19842, 3438.42700, 505.00601, 541.93298,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19842, 3426.79810, 505.00601, 541.93298,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19842, 3415.19604, 505.00601, 541.93298,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19071, 3436.85596, 534.97498, 528.12903,   357.50000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3436.88403, 549.30298, 558.41400,   318.19501, 180.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3436.87891, -41.91400, 486.59500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3436.87891, -101.90500, 486.59500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19888, 3428.76807, -166.30499, 486.58701,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19888, 3384.43994, -204.48000, 486.58701,   0.00000, 0.00000, 315.00000);
	CreateDynamicObject_FR(19884, 3331.27393, -208.25301, 492.40601,   337.50000, 0.00000, 270.00000);
	CreateDynamicObject_FR(19071, 3291.06812, -217.26100, 522.96997,   0.00000, 225.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3291.06812, -277.22601, 522.96997,   0.00000, 225.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3261.39209, -217.26100, 552.65002,   0.00000, 225.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3261.39307, -277.22601, 552.65002,   0.00000, 225.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3331.27393, -286.23001, 492.40601,   22.50000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19884, 3389.71094, -286.22900, 492.40601,   337.49500, 0.00000, 90.00000);
	CreateDynamicObject_FR(19071, 3429.90503, -295.23999, 522.96997,   0.00000, 135.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3429.90503, -355.20200, 522.96997,   0.00000, 135.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3459.58398, -295.23999, 552.64899,   0.00000, 135.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3459.58398, -355.17401, 552.64899,   0.00000, 135.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3389.69995, -364.20001, 492.40601,   337.49500, 0.00000, 90.00000);
	CreateDynamicObject_FR(19889, 3332.03589, -371.97198, 486.57001,   0.00000, 0.00000, 315.00000);
	CreateDynamicObject_FR(19889, 3291.85010, -412.15201, 486.57001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19884, 3284.09399, -469.80499, 492.37299,   337.50000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19072, 3284.10205, -520.26001, 522.61798,   337.50000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19072, 3284.10205, -575.79199, 522.94202,   22.50000, 0.00000, 0.00000);
	CreateDynamicObject_FR(712, 3456.83496, -131.88800, 495.92300,   0.00000, 0.00000, 348.00000);
	CreateDynamicObject_FR(712, 3416.86694, -131.88901, 495.92300,   0.00000, 0.00000, 348.00000);
	CreateDynamicObject_FR(712, 3436.83398, -131.88901, 495.92300,   0.00000, 0.00000, 348.00000);
	CreateDynamicObject_FR(19071, 3284.11597, -622.82300, 488.35901,   45.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3284.11597, -665.23602, 445.95801,   44.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19071, 3284.11597, -707.65100, 403.54501,   44.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3284.11597, -750.06201, 361.14499,   44.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3284.11597, -792.47699, 318.73599,   44.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3282.55396, -797.39502, 314.42499,   37.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3280.99097, -802.83301, 310.79099,   29.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3279.42896, -808.70001, 307.89899,   22.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3277.86597, -814.89301, 305.79800,   14.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3276.30396, -821.30798, 304.52200,   7.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3274.74097, -827.83398, 304.09500,   359.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3273.17896, -834.35999, 304.52399,   352.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3271.61597, -840.77502, 305.79999,   344.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3270.05396, -846.96802, 307.90302,   337.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3268.49097, -852.83301, 310.79599,   329.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3266.92896, -858.27100, 314.42999,   322.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3265.36597, -863.18799, 318.74301,   314.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3263.80396, -867.50000, 323.66101,   307.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3262.24097, -871.13300, 329.09900,   299.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3260.67896, -874.02502, 334.96500,   292.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3259.11597, -876.12701, 341.15900,   284.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3257.55396, -877.40198, 347.57401,   277.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3255.99097, -877.82898, 354.10001,   270.00500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3254.42896, -877.40100, 360.62601,   277.50500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3252.86597, -876.12402, 367.04099,   285.00500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3251.30396, -874.02100, 373.23401,   292.50500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3249.74097, -871.12799, 379.09900,   300.00500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3248.17896, -867.49402, 384.53699,   307.50500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3246.61597, -863.18103, 389.45401,   315.00500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3245.05396, -858.26398, 393.76599,   322.50500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3243.49097, -852.82501, 397.39899,   330.00500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3241.92896, -846.95898, 400.29099,   337.50500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3240.36597, -840.76599, 402.39301,   345.00500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3238.80396, -834.35101, 403.66800,   352.50500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3237.24097, -827.82501, 404.09500,   0.00500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3235.67896, -821.29797, 403.66699,   7.50500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3234.11597, -814.88397, 402.39001,   15.00500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3232.55396, -808.69098, 400.28699,   22.50500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3230.99097, -802.82501, 397.39401,   30.00500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3229.42896, -797.38702, 393.76001,   37.50500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3227.86597, -792.47101, 389.44699,   45.00500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3226.30396, -788.15900, 384.52899,   52.50500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3224.74097, -784.52600, 379.09100,   60.00500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3223.17896, -781.63300, 373.22501,   67.50500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3221.61597, -779.53198, 367.03101,   75.00500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3220.05396, -778.25598, 360.61700,   82.50500, 180.00000, 180.00000);
	CreateDynamicObject_FR(19885, 3218.49097, -777.82898, 354.09000,   89.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3216.92896, -778.25800, 347.56400,   82.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3215.36597, -779.53400, 341.14999,   74.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3213.80396, -781.63702, 334.95700,   67.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3212.24097, -784.53003, 329.09100,   59.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3210.67896, -788.16498, 323.65302,   52.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3209.11597, -792.47699, 318.73599,   44.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3207.55396, -797.39502, 314.42499,   37.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3205.99097, -802.83301, 310.79099,   29.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3204.42896, -808.70001, 307.89899,   22.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3202.86597, -814.89301, 305.79800,   14.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3201.30396, -821.30798, 304.52200,   7.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3199.74097, -827.83398, 304.09500,   359.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3198.17896, -834.35999, 304.52399,   352.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3196.61597, -840.77502, 305.79999,   344.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3195.05396, -846.96802, 307.90302,   337.49500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19885, 3193.49097, -852.83301, 310.79599,   329.99500, 0.00000, 0.00000);
	CreateDynamicObject_FR(19887, 3156.89893, -998.56799, 323.69299,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19887, 3216.88110, -998.56799, 323.69299,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(19542, 3186.83203, -977.58398, 323.80499,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19542, 3186.83203, -1019.56598, 323.57101,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(19540, 3245.65991, -977.58801, 323.75900,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19540, 3246.78198, -1019.55603, 323.54300,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(19540, 3127.00098, -1019.55603, 323.54300,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19540, 3127.03491, -977.58801, 323.79501,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19539, 3246.81909, -997.66302, 323.56900,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19539, 3126.98511, -997.66302, 323.81201,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(7073, 3107.76392, -1038.25500, 341.69299,   0.00000, 0.00000, 50.00000);
	CreateDynamicObject_FR(18228, 3280.10596, -1005.20300, 324.47299,   0.00000, 0.00000, 217.80000);
	CreateDynamicObject_FR(18228, 3257.36890, -1047.12305, 324.35501,   0.00000, 0.00000, 177.70000);
	CreateDynamicObject_FR(18228, 3211.80591, -1055.16394, 319.74701,   0.00000, 0.00000, 147.70000);
	CreateDynamicObject_FR(7916, 3263.82007, -999.66302, 326.88699,   0.00000, 0.00000, 250.00000);
	CreateDynamicObject_FR(7916, 3235.57202, -1038.75195, 326.88699,   0.00000, 0.00000, 190.00000);
	CreateDynamicObject_FR(622, 3271.30688, -988.45300, 332.35400,   0.00000, 0.00000, 80.00000);
	CreateDynamicObject_FR(622, 3154.21899, -1043.00903, 325.69501,   7.00000, 0.00000, 60.00000);
	CreateDynamicObject_FR(620, 3278.73193, -1028.33899, 329.76001,   0.00000, 0.00000, 10.00000);
	CreateDynamicObject_FR(620, 3241.20801, -1065.89197, 325.69400,   0.00000, 0.00000, 10.00000);
	CreateDynamicObject_FR(16061, 3115.37109, -1001.09601, 323.48199,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18228, 3165.33789, -1051.37000, 319.74701,   0.00000, 0.00000, 147.70000);
	CreateDynamicObject_FR(620, 3193.35498, -1045.95496, 322.44199,   0.00000, 0.00000, 294.00000);
	CreateDynamicObject_FR(7916, 3185.96411, -1041.63501, 326.88699,   0.00000, 0.00000, 170.20000);
	CreateDynamicObject_FR(770, 3135.61890, -1029.03003, 323.43100,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject_FR(726, 3252.90601, -965.38702, 323.75900,   0.00000, 0.00000, 140.00000);
	CreateDynamicObject_FR(727, 3121.42505, -959.81598, 323.79501,   0.00000, 0.00000, 0.00000);

	//Disco Road
	CreateDynamicObject_FR(19129, 1028.80005, -373.25000, 72.91000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(19129, 928.13000, -527.15997, 57.73000,   0.00000, 0.00000, 210.00000);
	CreateDynamicObject_FR(19129, 1027.69995, -389.64001, 72.56000,   0.04000, 2.37000, -97.52000);
	CreateDynamicObject_FR(19129, 1024.52002, -405.98001, 71.59000,   -0.10000, 4.19000, -104.37000);
	CreateDynamicObject_FR(19129, 1019.40997, -422.12000, 70.14000,   -0.21000, 5.48000, -110.59000);
	CreateDynamicObject_FR(19129, 1012.53998, -437.92999, 68.35000,   -0.31000, 6.28000, -116.26000);
	CreateDynamicObject_FR(19129, 1004.04999, -453.26001, 66.35000,   -0.39000, 6.63000, -121.51000);
	CreateDynamicObject_FR(19129, 994.10999, -467.97000, 64.29000,   -0.44000, 6.55000, -126.44000);
	CreateDynamicObject_FR(19129, 982.87000, -481.92001, 62.29000,   -0.45000, 6.08000, -131.14999);
	CreateDynamicObject_FR(19129, 970.50000, -494.95001, 60.50000,   -0.41000, 5.21000, -135.75999);
	CreateDynamicObject_FR(19129, 957.14001, -506.92999, 59.06000,   -0.33000, 3.93000, -140.37000);
	CreateDynamicObject_FR(19129, 942.96997, -517.71997, 58.09000,   -0.20000, 2.21000, -145.08000);
	CreateDynamicObject_FR(19129, 733.84998, -560.42999, 73.68000,   0.00000, 326.00000, 180.00000);
	CreateDynamicObject_FR(19129, 911.96002, -535.37000, 57.27000,   -0.32000, 2.69000, -155.96001);
	CreateDynamicObject_FR(19129, 894.77002, -542.10999, 56.13000,   -0.61000, 4.20000, -161.00999);
	CreateDynamicObject_FR(19129, 876.81000, -547.52002, 54.65000,   -0.82000, 4.59000, -165.24001);
	CreateDynamicObject_FR(19129, 858.31000, -551.73999, 53.21000,   -0.95000, 3.95000, -168.78999);
	CreateDynamicObject_FR(19129, 839.51001, -554.91998, 52.14000,   -0.98000, 2.27000, -171.77000);
	CreateDynamicObject_FR(19129, 820.65997, -557.21002, 51.81000,   -0.93000, -0.48000, -174.25000);
	CreateDynamicObject_FR(19129, 801.97998, -558.76001, 52.58000,   -0.80000, -4.40000, -176.27000);
	CreateDynamicObject_FR(19129, 783.71997, -559.71002, 54.79000,   -0.63000, -9.64000, -177.88000);
	CreateDynamicObject_FR(19129, 766.12000, -560.21002, 58.81000,   -0.42000, -16.32000, -179.06000);
	CreateDynamicObject_FR(19129, 749.41998, -560.40002, 64.99000,   -0.20000, -24.50000, -179.78000);
	CreateDynamicObject_FR(19129, 684.40002, -560.42999, 79.19000,   0.00000, 19.99000, 179.99001);
	CreateDynamicObject_FR(19129, 667.19000, -561.09003, 73.41000,   0.82000, 17.12000, -176.03999);
	CreateDynamicObject_FR(19129, 649.44000, -562.92999, 68.36000,   1.33000, 14.49000, -172.89000);
	CreateDynamicObject_FR(19129, 631.23999, -565.71997, 64.02000,   1.59000, 12.12000, -170.49001);
	CreateDynamicObject_FR(19129, 612.64001, -569.25000, 60.32000,   1.67000, 10.01000, -168.78000);
	CreateDynamicObject_FR(19129, 706.71002, -581.79999, 75.74000,   0.00000, 334.00000, 70.00000);
	CreateDynamicObject_FR(19129, 702.47998, -592.37000, 70.41000,   1.14000, -24.12000, 67.04000);
	CreateDynamicObject_FR(19129, 729.04999, -520.23999, 76.66000,   0.00000, 18.00000, 70.00000);
	CreateDynamicObject_FR(19129, 930.39001, -332.95999, 70.52000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, 734.71997, -506.35001, 72.52000,   -0.72000, 13.13000, 65.95000);
	CreateDynamicObject_FR(19129, 741.89001, -491.66000, 69.30000,   -1.19000, 9.33000, 62.50000);
	CreateDynamicObject_FR(19129, 750.44000, -476.41000, 66.91000,   -1.49000, 6.34000, 59.43000);
	CreateDynamicObject_FR(19129, 760.23999, -460.81000, 65.27000,   -1.69000, 3.95000, 56.60000);
	CreateDynamicObject_FR(19129, 771.15997, -445.12000, 64.28000,   -1.81000, 2.04000, 53.89000);
	CreateDynamicObject_FR(19129, 783.09998, -429.56000, 63.85000,   -1.87000, 0.51000, 51.21000);
	CreateDynamicObject_FR(19129, 795.90997, -414.37000, 63.90000,   -1.89000, -0.71000, 48.46000);
	CreateDynamicObject_FR(19129, 809.47998, -399.79001, 64.32000,   -1.87000, -1.68000, 45.55000);
	CreateDynamicObject_FR(19129, 823.67999, -386.04001, 65.03000,   -1.81000, -2.41000, 42.39000);
	CreateDynamicObject_FR(19129, 838.39001, -373.35999, 65.94000,   -1.70000, -2.92000, 38.85000);
	CreateDynamicObject_FR(19129, 853.48999, -361.98999, 66.96000,   -1.53000, -3.21000, 34.81000);
	CreateDynamicObject_FR(19129, 868.84003, -352.17001, 68.00000,   -1.32000, -3.25000, 30.09000);
	CreateDynamicObject_FR(19129, 884.34003, -344.10999, 68.97000,   -1.04000, -3.01000, 24.48000);
	CreateDynamicObject_FR(19129, 899.84003, -338.07001, 69.77000,   -0.70000, -2.43000, 17.74000);
	CreateDynamicObject_FR(19129, 915.23999, -334.26999, 70.32000,   -0.34000, -1.44000, 9.62000);
	CreateDynamicObject_FR(19129, 949.91998, -332.95999, 71.21000,   0.00000, 356.00000, 0.00000);
	CreateDynamicObject_FR(19129, 969.56000, -332.95999, 73.26000,   0.00000, 351.98999, 0.00000);
	CreateDynamicObject_FR(19129, 977.32001, -332.95999, 74.76000,   0.00000, 348.01001, 0.00000);
	CreateDynamicObject_FR(6986, 1044.43005, -386.28000, 91.63000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(6986, 1006.82001, -386.28000, 91.63000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3472, 1040.05005, -357.97000, 70.74000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3472, 1041.30005, -351.01001, 70.74000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(3472, 1019.21002, -351.12000, 70.74000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3472, 1020.28003, -357.72000, 70.99000,   0.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(11470, 1032.62000, -311.51001, 76.17000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(14559, 1015.73999, -336.50000, 86.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, 643.67999, -950.00000, 61.71000,   0.00000, 7.48000, 100.00000);
	CreateDynamicObject_FR(19129, 608.06000, -1107.55005, 86.89000,   3.99000, 12.08000, 48.63000);
	CreateDynamicObject_FR(19129, 618.37000, -1093.66003, 83.38000,   4.23000, 10.92000, 56.33000);
	CreateDynamicObject_FR(19129, 627.09003, -1078.17004, 80.13000,   4.19000, 9.89000, 63.17000);
	CreateDynamicObject_FR(19129, 634.21997, -1061.39001, 77.10000,   3.90000, 9.03000, 69.29000);
	CreateDynamicObject_FR(19129, 639.76001, -1043.60999, 74.26000,   3.44000, 8.35000, 74.85000);
	CreateDynamicObject_FR(19129, 643.71997, -1025.12000, 71.57000,   2.86000, 7.85000, 80.03000);
	CreateDynamicObject_FR(19129, 646.09003, -1006.21002, 69.01000,   2.19000, 7.51000, 84.97000);
	CreateDynamicObject_FR(19129, 646.87000, -987.20001, 66.53000,   1.47000, 7.34000, 89.83000);
	CreateDynamicObject_FR(19129, 646.07001, -968.35999, 64.11000,   0.73000, 7.33000, 94.79000);
	CreateDynamicObject_FR(19129, 614.48999, -784.70001, 31.41000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19129, 639.96002, -930.87000, 58.61000,   0.59000, 10.46000, 101.82000);
	CreateDynamicObject_FR(19129, 635.83002, -912.41998, 54.73000,   1.05000, 12.57000, 102.93000);
	CreateDynamicObject_FR(19129, 631.52002, -894.44000, 50.38000,   1.34000, 13.75000, 103.30000);
	CreateDynamicObject_FR(19129, 627.26001, -876.71002, 45.86000,   1.44000, 13.93000, 102.91000);
	CreateDynamicObject_FR(19129, 623.26001, -859.03998, 41.47000,   1.36000, 13.09000, 101.73000);
	CreateDynamicObject_FR(19129, 619.77002, -841.21002, 37.53000,   1.11000, 11.21000, 99.79000);
	CreateDynamicObject_FR(19129, 616.98999, -823.01001, 34.33000,   0.75000, 8.31000, 97.12000);
	CreateDynamicObject_FR(19129, 615.15002, -804.25000, 32.19000,   0.35000, 4.51000, 93.81000);
	CreateDynamicObject_FR(19129, 615.03998, -772.27002, 31.49000,   0.24000, -0.75000, 84.98000);
	CreateDynamicObject_FR(19129, 616.60999, -760.21997, 31.74000,   0.53000, -1.59000, 80.20000);
	CreateDynamicObject_FR(19129, 619.12000, -748.51001, 32.17000,   0.88000, -2.53000, 75.77000);
	CreateDynamicObject_FR(19129, 622.45001, -737.10999, 32.80000,   1.26000, -3.53000, 71.77000);
	CreateDynamicObject_FR(19129, 626.53003, -726.00000, 33.64000,   1.66000, -4.59000, 68.26000);
	CreateDynamicObject_FR(19129, 631.23999, -715.13000, 34.70000,   2.06000, -5.70000, 65.26000);
	CreateDynamicObject_FR(19129, 636.50000, -704.47998, 36.01000,   2.45000, -6.86000, 62.78000);
	CreateDynamicObject_FR(19129, 642.20001, -694.01001, 37.57000,   2.81000, -8.08000, 60.82000);
	CreateDynamicObject_FR(19129, 648.25000, -683.70001, 39.40000,   3.13000, -9.36000, 59.36000);
	CreateDynamicObject_FR(19129, 654.56000, -673.50000, 41.52000,   3.40000, -10.70000, 58.40000);
	CreateDynamicObject_FR(19129, 661.02002, -663.40002, 43.93000,   3.58000, -12.11000, 57.91000);
	CreateDynamicObject_FR(19129, 667.53998, -653.34003, 46.66000,   3.68000, -13.60000, 57.89000);
	CreateDynamicObject_FR(19129, 674.02002, -643.31000, 49.72000,   3.66000, -15.17000, 58.32000);
	CreateDynamicObject_FR(19129, 680.37000, -633.27002, 53.11000,   3.51000, -16.82000, 59.20000);
	CreateDynamicObject_FR(19129, 686.48999, -623.19000, 56.87000,   3.21000, -18.56000, 60.52000);
	CreateDynamicObject_FR(19129, 692.27002, -613.03003, 60.99000,   2.72000, -20.37000, 62.28000);
	CreateDynamicObject_FR(19129, 697.64001, -602.77002, 65.50000,   2.04000, -22.23000, 64.46000);
	CreateDynamicObject_FR(19129, 478.31000, -595.90997, 49.60000,   0.00000, 0.00000, 185.99001);
	CreateDynamicObject_FR(19129, 593.75000, -573.28003, 57.25000,   1.60000, 8.12000, -167.71001);
	CreateDynamicObject_FR(19129, 574.62000, -577.62000, 54.75000,   1.44000, 6.42000, -167.25000);
	CreateDynamicObject_FR(19129, 555.34998, -582.02002, 52.79000,   1.21000, 4.90000, -167.37000);
	CreateDynamicObject_FR(19129, 536.00000, -586.27002, 51.34000,   0.93000, 3.51000, -168.08000);
	CreateDynamicObject_FR(19129, 516.65997, -590.15002, 50.35000,   0.62000, 2.25000, -169.39999);
	CreateDynamicObject_FR(19129, 497.41000, -593.44000, 49.78000,   0.30000, 1.08000, -171.35001);
	CreateDynamicObject_FR(19129, 461.01999, -598.59003, 50.06000,   -2.20000, -3.01000, -168.35001);
	CreateDynamicObject_FR(19129, 359.82001, -707.19000, 69.53000,   334.00000, 0.00000, 260.00000);
	CreateDynamicObject_FR(19129, 444.95001, -602.84998, 51.34000,   -4.59000, -5.70000, -162.38000);
	CreateDynamicObject_FR(19129, 430.13000, -608.65997, 53.24000,   -7.13000, -7.91000, -156.11000);
	CreateDynamicObject_FR(19129, 416.60001, -615.98999, 55.59000,   -9.77000, -9.53000, -149.55000);
	CreateDynamicObject_FR(19129, 404.37000, -624.79999, 58.21000,   -12.46000, -10.43000, -142.74001);
	CreateDynamicObject_FR(19129, 393.47000, -635.07001, 60.92000,   -15.14000, -10.54000, -135.72000);
	CreateDynamicObject_FR(19129, 383.92001, -646.77002, 63.54000,   -17.72000, -9.84000, -128.56000);
	CreateDynamicObject_FR(19129, 375.76001, -659.85999, 65.89000,   -20.15000, -8.35000, -121.34000);
	CreateDynamicObject_FR(19129, 369.01001, -674.31000, 67.79000,   -22.36000, -6.13000, -114.12000);
	CreateDynamicObject_FR(19129, 363.67999, -690.09998, 69.07000,   -24.32000, -3.30000, -106.98000);
	CreateDynamicObject_FR(19129, 339.51001, -812.09998, 76.84000,   1.98000, 351.98999, 260.26999);
	CreateDynamicObject_FR(19129, 356.50000, -725.42999, 69.58000,   -21.97000, -0.46000, -100.81000);
	CreateDynamicObject_FR(19129, 353.59000, -740.46997, 69.81000,   -17.93000, -1.46000, -101.71000);
	CreateDynamicObject_FR(19129, 350.92999, -753.58002, 70.30000,   -13.87000, -3.02000, -102.39000);
	CreateDynamicObject_FR(19129, 348.35001, -766.03998, 71.16000,   -9.83000, -4.83000, -102.50000);
	CreateDynamicObject_FR(19129, 345.69000, -779.09003, 72.47000,   -5.84000, -6.41000, -101.92000);
	CreateDynamicObject_FR(19129, 342.79999, -794.03003, 74.34000,   -1.91000, -7.46000, -100.89000);
	CreateDynamicObject_FR(19129, 284.89001, -1040.44995, 76.22000,   0.00000, 0.00000, 290.00000);
	CreateDynamicObject_FR(19129, 335.44000, -830.04999, 79.02000,   2.02000, -5.55000, -105.11000);
	CreateDynamicObject_FR(19129, 329.84000, -847.90997, 80.48000,   1.85000, -3.43000, -109.14000);
	CreateDynamicObject_FR(19129, 323.13000, -865.69000, 81.32000,   1.56000, -1.67000, -111.86000);
	CreateDynamicObject_FR(19129, 315.72000, -883.38000, 81.63000,   1.22000, -0.22000, -113.36000);
	CreateDynamicObject_FR(19129, 308.01001, -901.01001, 81.50000,   0.86000, 0.92000, -113.70000);
	CreateDynamicObject_FR(19129, 300.41000, -918.58002, 81.04000,   0.53000, 1.81000, -112.89000);
	CreateDynamicObject_FR(19129, 293.34000, -936.09003, 80.33000,   0.26000, 2.45000, -110.89000);
	CreateDynamicObject_FR(19129, 287.20001, -953.54999, 79.47000,   0.09000, 2.82000, -107.59000);
	CreateDynamicObject_FR(19129, 282.41000, -970.97998, 78.55000,   -0.08000, 2.92000, -102.87000);
	CreateDynamicObject_FR(19129, 279.38000, -988.37000, 77.68000,   -0.09000, 2.70000, -96.63000);
	CreateDynamicObject_FR(19129, 278.51001, -1005.73999, 76.93000,   -0.06000, 2.12000, -88.85000);
	CreateDynamicObject_FR(19129, 280.20999, -1023.09998, 76.42000,   0.04000, 1.20000, -79.78000);
	CreateDynamicObject_FR(19129, 489.17001, -1151.00000, 99.33000,   0.00000, 0.00000, 10.00000);
	CreateDynamicObject_FR(19129, 290.82999, -1054.22998, 76.48000,   0.15000, -1.93000, -63.45000);
	CreateDynamicObject_FR(19129, 298.29999, -1067.34998, 77.22000,   0.19000, -3.57000, -57.33000);
	CreateDynamicObject_FR(19129, 307.14999, -1079.76001, 78.36000,   0.17000, -4.91000, -51.64000);
	CreateDynamicObject_FR(19129, 317.28000, -1091.39001, 79.83000,   0.11000, -5.97000, -46.34000);
	CreateDynamicObject_FR(19129, 328.53000, -1102.19995, 81.58000,   0.07000, -6.76000, -41.38000);
	CreateDynamicObject_FR(19129, 340.78000, -1112.13000, 83.53000,   -0.11000, -7.30000, -36.71000);
	CreateDynamicObject_FR(19129, 353.89999, -1121.12000, 85.62000,   -0.18000, -7.60000, -32.23000);
	CreateDynamicObject_FR(19129, 367.75000, -1129.12000, 87.77000,   -0.24000, -7.69000, -27.89000);
	CreateDynamicObject_FR(19129, 382.20001, -1136.07996, 89.93000,   -0.30000, -7.56000, -23.61000);
	CreateDynamicObject_FR(19129, 397.13000, -1141.94995, 92.02000,   -0.35000, -7.22000, -19.34000);
	CreateDynamicObject_FR(19129, 412.39001, -1146.66003, 93.97000,   -0.38000, -6.66000, -15.01000);
	CreateDynamicObject_FR(19129, 427.85999, -1150.16003, 95.72000,   -0.39000, -5.87000, -10.54000);
	CreateDynamicObject_FR(19129, 443.41000, -1152.40002, 97.19000,   -0.37000, -4.82000, -5.87000);
	CreateDynamicObject_FR(19129, 458.89001, -1153.31995, 98.33000,   -0.31000, -3.51000, -0.93000);
	CreateDynamicObject_FR(19129, 474.19000, -1152.87000, 99.07000,   -0.20000, -1.91000, 4.33000);
	CreateDynamicObject_FR(19129, 492.92001, -1150.33997, 99.33000,   0.00000, 342.00000, 9.99000);
	CreateDynamicObject_FR(19129, 500.67001, -1148.93994, 102.33000,   0.00000, 330.98999, 9.99000);
	CreateDynamicObject_FR(19129, 550.89001, -1141.28003, 104.19000,   0.00000, 16.00000, 10.00000);
	CreateDynamicObject_FR(19129, 567.57001, -1136.71997, 99.31000,   1.27000, 15.40000, 20.35000);
	CreateDynamicObject_FR(19129, 582.65997, -1129.38000, 94.82000,   2.46000, 14.46000, 30.49000);
	CreateDynamicObject_FR(19129, 596.15002, -1119.55005, 90.69000,   3.39000, 13.30000, 39.99000);
	//Parkour Hay
	CreateDynamicObject_FR(3374, -1766.55286, 855.45807, 25.22835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1766.55273, 859.45801, 28.22835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1762.55273, 859.45801, 31.22835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1758.55273, 859.45801, 33.97835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1766.55273, 859.45801, 36.97835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1770.55273, 859.45801, 36.97835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1780.55273, 859.45801, 36.97835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1780.55273, 863.45300, 39.93235,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1780.55273, 867.43274, 42.91155,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1780.55273, 875.38202, 42.91155,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1780.55273, 879.36646, 45.77855,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1780.55273, 885.64600, 45.77855,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1780.55273, 891.73291, 45.77855,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1780.55273, 895.71820, 48.71715,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1780.55273, 888.31036, 51.67115,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1780.55273, 895.74377, 55.16075,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1780.55273, 899.75397, 55.16075,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1780.55273, 903.72791, 55.16075,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1776.53735, 906.42096, 58.05315,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1766.74146, 906.42090, 60.42015,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1754.46082, 906.42090, 62.95535,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1750.49634, 906.42090, 62.95535,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1746.53650, 906.42090, 62.95535,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1734.26575, 906.42090, 62.95535,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1730.25586, 902.41571, 65.89915,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1730.25586, 894.41602, 68.67415,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1730.25586, 887.41602, 72.12855,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1730.25586, 894.66602, 75.82275,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1734.25049, 894.66602, 75.82275,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1734.25000, 890.67639, 75.82275,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1734.25000, 882.36096, 75.82275,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1734.25000, 878.36633, 75.82275,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1734.25000, 869.65283, 78.33195,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1734.25000, 865.65314, 78.33195,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1740.61121, 865.65332, 80.06595,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1744.61133, 865.65332, 81.47415,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1753.61133, 866.46930, 84.22415,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1746.34155, 865.65332, 87.88235,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1742.33704, 865.65332, 90.85095,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1749.69275, 868.41351, 90.85095,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1759.83997, 868.41309, 90.85095,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1763.82446, 867.25031, 90.85095,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1767.82422, 866.42383, 93.60575,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1771.77783, 866.42383, 96.44215,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1771.77734, 870.42383, 96.44215,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1771.77734, 882.44720, 94.83015,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1771.77734, 886.44189, 94.83015,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1773.60376, 895.49860, 98.13655,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1773.60352, 899.46844, 100.96255,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1766.14514, 901.08136, 100.96255,   344.80414, 359.75958, 359.93698);
	CreateDynamicObject_FR(3374, -1758.19165, 901.96368, 103.14115,   24.92004, 359.74280, 0.10583);
	CreateDynamicObject_FR(3374, -1754.38062, 900.13245, 102.40675,   311.59381, 359.64728, 359.73181);
	CreateDynamicObject_FR(3374, -1750.54346, 901.96387, 103.84495,   24.91699, 359.74182, 0.10437);
	CreateDynamicObject_FR(3374, -1741.47156, 902.08612, 107.47835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1741.47168, 898.34631, 112.61155,   309.85602, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1737.64502, 898.34668, 112.61155,   309.85291, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1737.64490, 896.20313, 113.62135,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1734.66467, 884.25995, 112.49896,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1734.66504, 875.26495, 115.85596,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1734.66504, 871.28046, 118.80975,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1738.61926, 867.92767, 122.80896,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1742.62415, 867.92773, 122.80896,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1738.61914, 868.49896, 129.23737,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1746.56226, 867.92773, 125.67596,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1746.56250, 868.75934, 132.46196,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1757.73987, 868.75977, 135.28796,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1751.76599, 871.32056, 139.78757,   39.55225, 318.02332, 351.87561);
	CreateDynamicObject_FR(3374, -1748.81665, 869.78009, 141.82356,   50.09219, 306.49854, 8.09891);
	CreateDynamicObject_FR(3374, -1745.75671, 868.80109, 144.28175,   58.72009, 263.36383, 59.81467);
	CreateDynamicObject_FR(3374, -1752.57666, 871.41772, 147.36476,   0.00000, 51.86798, 0.00000);
	CreateDynamicObject_FR(3374, -1754.59729, 871.39716, 148.27756,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1758.56677, 871.39746, 151.12416,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1762.53650, 871.39746, 154.01697,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1766.47937, 871.39746, 156.85837,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1766.47949, 875.36688, 156.85837,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1766.47949, 886.42279, 156.85837,   0.00000, 322.19598, 0.00000);
	CreateDynamicObject_FR(3374, -1766.47949, 895.63263, 156.85837,   0.00000, 322.19055, 0.00000);
	CreateDynamicObject_FR(3374, -1761.82788, 895.59247, 151.92517,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1753.66577, 895.59277, 153.62558,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1748.54407, 895.59277, 150.27377,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1739.49316, 895.59277, 153.54398,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1739.49316, 893.73999, 156.45697,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1739.49316, 891.57782, 155.42677,   49.10797, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1739.49316, 877.95508, 155.36557,   47.59540, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1739.49316, 874.75610, 156.13057,   47.59277, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1739.49316, 872.45966, 158.19157,   47.59277, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1743.39673, 873.39355, 162.71138,   47.59277, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1749.31982, 873.39355, 166.23659,   47.59277, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1753.71497, 874.35223, 166.23785,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1759.77063, 873.00555, 168.85985,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1763.73425, 873.00586, 171.69624,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1754.67322, 874.97449, 174.78764,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1760.37134, 874.97461, 177.62926,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1764.62073, 874.97461, 179.84326,   0.00000, 344.45599, 0.00000);
	CreateDynamicObject_FR(3374, -1765.86548, 874.97461, 182.61806,   0.00000, 344.44885, 0.00000);
	CreateDynamicObject_FR(3374, -1763.81946, 882.58124, 183.30145,   0.00000, 312.62634, 0.00000);
	CreateDynamicObject_FR(3374, -1763.81934, 886.56586, 183.30145,   0.00000, 312.62146, 0.00000);
	CreateDynamicObject_FR(3374, -1763.81934, 893.00903, 186.22466,   21.65796, 304.43237, 40.47586);
	CreateDynamicObject_FR(3374, -1755.47888, 893.99438, 188.73666,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1753.83032, 894.39197, 188.73666,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1755.30396, 893.87140, 188.70607,   0.00000, 0.00000, 332.14404);
	CreateDynamicObject_FR(3374, -1750.97192, 893.87109, 188.70607,   0.00000, 0.00000, 332.13867);
	CreateDynamicObject_FR(3374, -1743.85632, 894.39160, 191.88446,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1744.88660, 890.40698, 194.87926,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1744.88672, 886.44324, 197.79706,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1745.41711, 878.64276, 200.06706,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1745.44763, 877.42798, 200.05687,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1751.72241, 877.42773, 202.11787,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1752.73804, 874.36194, 202.14847,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1754.56494, 874.39288, 202.12807,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1754.56445, 875.45337, 205.08206,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1763.34985, 875.45313, 208.57666,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1760.37524, 875.50415, 206.61766,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1763.34961, 879.60052, 208.88266,   8.11996, 359.88281, 0.01654);
	CreateDynamicObject_FR(3374, -1763.34961, 883.54797, 209.44366,   8.11890, 359.87915, 0.01648);
	CreateDynamicObject_FR(3374, -1763.34961, 893.39655, 211.79547,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1753.74219, 893.07007, 216.85606,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1745.46704, 893.20258, 219.16707,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1753.74219, 895.20258, 213.93806,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1745.46680, 883.77893, 220.86107,   52.00400, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1745.46680, 881.90137, 224.65607,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1747.47620, 878.94794, 224.60507,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1751.36975, 876.29547, 227.45627,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1757.31836, 876.29590, 229.69586,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1761.24670, 879.23932, 232.56827,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1761.24707, 883.19287, 235.51207,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1761.24707, 892.02496, 238.40466,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1750.25183, 892.02539, 240.78206,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1765.24146, 892.02539, 238.40466,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1746.34973, 888.10156, 243.67465,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1749.98157, 883.56573, 246.87325,   0.00000, 0.00000, 43.27200);
	CreateDynamicObject_FR(3374, -1749.69641, 879.67816, 246.74126,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1753.67627, 881.40216, 251.15466,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1757.65002, 881.40234, 251.15466,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1757.65039, 885.39172, 254.09286,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1757.65039, 889.41180, 256.96005,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1753.77319, 889.41211, 259.68924,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1749.81470, 889.41211, 262.53604,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1749.81445, 885.44794, 265.41284,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1749.81445, 881.46362, 268.20844,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1753.80920, 881.46387, 271.07043,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1757.79419, 881.46387, 273.95782,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1757.79395, 885.46924, 276.72302,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1752.40698, 885.46973, 279.05942,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1752.40723, 881.47455, 281.79382,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1756.33557, 881.47461, 284.62003,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1756.33594, 885.43842, 287.41562,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1752.36230, 885.43848, 290.22141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1752.36230, 881.45428, 292.99640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3374, -1756.26013, 881.45410, 292.99640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16778, -1757.45898, 882.47693, 294.44122,   0.00000, 0.00000, 119.99817);
	CreateDynamicObject_FR(3524, -1770.09802, 853.85773, 26.61971,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3524, -1763.33289, 853.85742, 26.61971,   0.00000, 0.00000, 0.00000);
	
	//Quad Parkour
	CreateDynamicObject_FR(16133, 2939.30737, -2033.48889, -1.12000,   0.00000, 0.00000, 71.63000);
	CreateDynamicObject_FR(16133, 2929.24902, -2069.59961, -0.12000,   0.00000, 0.00000, 253.74001);
	CreateDynamicObject_FR(16133, 2971.80908, -2069.21973, -1.46000,   0.00000, 0.00000, 253.73000);
	CreateDynamicObject_FR(16133, 2989.15991, -2033.31995, -1.46000,   0.00000, 0.00000, 71.63000);
	CreateDynamicObject_FR(17052, 2994.52002, -2051.05005, 4.01000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3818, 2994.32007, -2114.31006, -4.66000,   0.00000, 0.00000, 1.63000);
	CreateDynamicObject_FR(9132, 2994.92993, -2114.29004, -18.16000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16133, 2976.56006, -2118.68994, -7.05000,   0.00000, 294.98001, 351.87000);
	CreateDynamicObject_FR(16133, 2952.40991, -2110.22998, -7.05000,   0.00000, 294.98001, 171.87000);
	CreateDynamicObject_FR(16133, 2939.32007, -2094.57007, -7.05000,   359.70999, 280.34000, 78.89000);
	CreateDynamicObject_FR(16133, 2936.78003, -2109.72998, -7.05000,   359.70001, 280.34000, 259.38000);
	CreateDynamicObject_FR(16133, 2936.78003, -2123.30005, -7.05000,   359.70001, 280.34000, 259.37000);
	CreateDynamicObject_FR(16133, 2936.78003, -2108.00000, -7.05000,   359.70001, 280.34000, 78.49000);
	CreateDynamicObject_FR(16133, 2904.07007, -2088.90991, -1.63000,   0.00000, 0.00000, 306.73999);
	CreateDynamicObject_FR(16133, 2909.65112, -2156.99316, -3.46000,   0.00000, 0.00000, 86.74000);
	CreateDynamicObject_FR(16133, 2959.56006, -2151.54004, -3.46000,   0.00000, 0.00000, 76.99000);
	CreateDynamicObject_FR(8620, 2918.29004, -2108.72998, -13.00000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3458, 2963.05029, -2051.47119, 3.87469,   0.00000, -8.00000, 0.00000);
	CreateDynamicObject_FR(17052, 3014.96997, -2051.52002, 4.01000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(1384, 3038.42993, -2051.18994, 2.51000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3502, 3094.36011, -2051.32007, 8.01000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3502, 3103.37988, -2051.32007, 9.01000,   14.63000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3502, 3115.39990, -2051.32007, 9.68000,   351.87000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3631, 3031.51001, -2051.19995, 7.93000,   0.00000, 350.25000, 0.00000);
	CreateDynamicObject_FR(17025, 3138.55005, -2037.57996, 0.00000,   328.84000, 333.12000, 225.06000);
	CreateDynamicObject_FR(17025, 3152.01001, -2068.11011, 0.00000,   328.84000, 333.12000, 65.05000);
	CreateDynamicObject_FR(17025, 3168.54004, -2057.98999, 0.00000,   328.84000, 333.12000, 65.05000);
	CreateDynamicObject_FR(17025, 3175.26001, -2032.54004, 0.00000,   328.84000, 333.12000, 275.54001);
	CreateDynamicObject_FR(16502, 3202.63989, -2045.13000, 10.42000,   0.00000, 345.37000, 0.00000);
	CreateDynamicObject_FR(16502, 3218.57007, -2045.13000, 11.42000,   0.00000, 27.63000, 0.00000);
	CreateDynamicObject_FR(3578, 3232.03003, -2044.01001, 10.21000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3578, 3232.03003, -2046.26001, 10.21000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3578, 3242.32007, -2046.27002, 10.21000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3578, 3242.30005, -2044.01001, 10.21000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3502, 3248.31006, -2045.31995, 5.41000,   270.59000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3627, 3249.71997, -2060.73999, -3.57000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18451, 3250.13989, -2084.06006, 0.65000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18451, 3250.13989, -2091.73999, 0.65000,   0.00000, 0.00000, 359.98999);
	CreateDynamicObject_FR(13603, 3237.23999, -2118.97998, -6.32000,   355.59000, 355.91000, 359.67999);
	CreateDynamicObject_FR(14612, 3201.88989, -2150.15991, 2.79000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8356, 3220.08008, -2229.58008, 0.04000,   180.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1683, 3178.44995, -2154.04004, 0.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3865, 3172.92993, -2149.61011, 0.92000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3865, 3172.26001, -2141.40991, 2.28000,   16.26000, 0.00000, 9.75000);
	CreateDynamicObject_FR(17025, 3146.56006, -2131.67993, -4.01000,   328.84000, 333.12000, 1.90000);
	CreateDynamicObject_FR(7947, 3031.30664, -2121.57422, -19.97000,   60.14000, 0.00000, 270.00000);
	CreateDynamicObject_FR(13641, 3085.96997, -2113.52002, 10.88000,   0.16000, 14.79000, 179.96001);
	CreateDynamicObject_FR(13645, 3212.76001, -2137.47998, 1.52000,   348.78000, 359.82999, 86.96000);
	CreateDynamicObject_FR(12956, 3027.11011, -2124.80005, 2.96000,   0.00000, 351.87000, 0.00000);
	CreateDynamicObject_FR(3578, 3020.94995, -2113.90991, 4.69000,   2.35000, 351.82999, 0.34000);
	CreateDynamicObject_FR(3110, 3211.20996, -2140.14990, -2.37000,   0.00000, 0.00000, 111.63000);
	CreateDynamicObject_FR(16133, 3006.26001, -2154.55005, -3.46000,   0.00000, 0.00000, 83.49000);
	CreateDynamicObject_FR(9076, 3274.80005, -2045.80005, 8.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8493, 3069.37988, -2078.67993, 16.10000,   0.00000, 0.00000, 97.63000);
	CreateDynamicObject_FR(8397, 3043.92993, -2026.53003, -16.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, 3085.58008, -2026.53003, -16.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16133, 3052.62793, -2170.55884, -3.46000,   0.00000, 0.00000, 58.45570);
	CreateDynamicObject_FR(16133, 3089.21069, -2204.99683, -3.46000,   0.00000, 0.00000, 36.44196);
	CreateDynamicObject_FR(16133, 3122.15991, -2241.98706, -3.46000,   0.00000, 0.00000, 40.10501);

	//Sanchez Parkour
	CreateDynamicObject_FR(619, -1000.59998, -1038.05005, 128.21001,   0.00000, 0.00000, 330.00000);
	CreateDynamicObject_FR(619, -1000.59998, -1025.35999, 128.21001,   0.00000, 0.00000, 312.12000);
	CreateDynamicObject_FR(619, -1000.59998, -1053.25000, 128.21001,   0.00000, 0.00000, 307.23001);
	CreateDynamicObject_FR(619, -1003.52002, -1066.96997, 128.21001,   0.00000, 0.00000, 274.72000);
	CreateDynamicObject_FR(619, -1025.16003, -1067.51001, 128.21001,   0.00000, 0.00000, 222.70000);
	CreateDynamicObject_FR(619, -1040.34998, -1067.51001, 128.21001,   0.00000, 0.00000, 222.70000);
	CreateDynamicObject_FR(12956, -1046.43005, -1021.34998, 131.61000,   0.00000, 0.00000, 300.00000);
	CreateDynamicObject_FR(13641, -1044.96997, -1000.84998, 136.72000,   0.00000, 0.00000, 120.00000);
	CreateDynamicObject_FR(18367, -1052.95996, -990.47998, 139.92000,   0.00000, 0.00000, 200.00000);
	CreateDynamicObject_FR(18367, -1051.23999, -989.85999, 139.92000,   0.00000, 0.00000, 198.64000);
	CreateDynamicObject_FR(3625, -1062.87000, -951.66998, 146.30000,   0.00000, 0.00000, 110.00000);
	CreateDynamicObject_FR(6052, -1077.39001, -945.78003, 148.92000,   0.00000, 0.00000, 220.00000);
	CreateDynamicObject_FR(13638, -1099.22998, -943.09003, 154.12000,   0.00000, 0.00000, 30.00000);
	CreateDynamicObject_FR(13638, -1093.09998, -939.53998, 162.24001,   0.00000, 0.00000, 210.00000);
	CreateDynamicObject_FR(13590, -1094.04004, -959.65997, 169.14000,   0.00000, 0.00000, 160.00000);
	CreateDynamicObject_FR(13593, -1090.03003, -949.65002, 170.12000,   17.83000, 0.54000, 159.50000);
	CreateDynamicObject_FR(18451, -1100.37000, -984.42999, 169.10001,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject_FR(1503, -1093.75000, -984.10999, 169.03999,   0.00000, 0.00000, 340.00000);
	CreateDynamicObject_FR(6052, -1077.25000, -977.09003, 165.77000,   0.00000, 0.00000, 170.00000);
	CreateDynamicObject_FR(13636, -1083.43994, -992.84003, 163.73000,   0.00000, 0.00000, 65.78000);
	CreateDynamicObject_FR(13645, -1087.05005, -999.75000, 161.55000,   335.62000, 0.00000, 245.12000);
	CreateDynamicObject_FR(13638, -1073.28003, -1012.14001, 164.14000,   0.00000, 0.00000, 160.00000);
	CreateDynamicObject_FR(13648, -1095.54004, -1010.44000, 169.77000,   0.00000, 0.00000, 70.00000);
	CreateDynamicObject_FR(13638, -1115.66003, -1009.28003, 166.27000,   0.00000, 0.00000, 340.00000);
	CreateDynamicObject_FR(13648, -1090.85999, -1025.22998, 163.83000,   0.00000, 0.00000, 248.37000);
	CreateDynamicObject_FR(1225, -1092.18994, -987.77002, 168.71001,   90.00000, 0.00000, 333.25000);
	CreateDynamicObject_FR(1225, -1092.67004, -988.71997, 168.70000,   90.00000, 0.00000, 333.25000);
	CreateDynamicObject_FR(1225, -1093.62000, -989.01001, 168.67000,   90.00000, 180.00000, 66.13000);
	CreateDynamicObject_FR(1225, -1094.60999, -988.59003, 168.64999,   90.00000, 179.99001, 66.13000);
	CreateDynamicObject_FR(1225, -1096.84998, -964.56000, 171.39999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, -1064.56006, -947.52002, 146.80000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, -1039.10999, -1011.04999, 128.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, -1093.06006, -930.85999, 164.17000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, -1118.79004, -1016.46002, 168.17000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(13594, -1071.70996, -1033.01001, 166.88000,   0.00000, 0.00000, 70.00000);
	CreateDynamicObject_FR(711, -1062.28003, -950.82001, 152.31000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(711, -1093.13000, -989.08002, 174.67999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(619, -1071.63000, -1020.72998, 169.80000,   0.00000, 0.00000, 352.10999);
	CreateDynamicObject_FR(619, -1099.68005, -952.03998, 155.66000,   0.00000, 0.00000, 72.11000);

	//Monster Pakour 
	CreateDynamicObject_FR(3406, -1455.26001, 1143.05005, 5.50000,   80.68000, 180.00000, 90.00000);
	CreateDynamicObject_FR(3406, -1455.08997, 1146.98999, 11.09000,   0.00000, 270.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1455.12000, 1140.17004, 11.12000,   0.00000, 269.98999, 0.00000);
	CreateDynamicObject_FR(3406, -1448.15002, 1143.05005, 5.43000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1446.15002, 1143.05005, 7.18000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1444.15002, 1143.05005, 8.93000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1442.15002, 1143.05005, 10.68000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1444.15002, 1147.00000, 12.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1444.15002, 1140.18005, 12.89000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1439.18994, 1143.05005, 11.76000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1431.01001, 1143.05005, 11.75000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1445.25000, 1143.05005, 8.10000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1447.09998, 1143.05005, 6.37000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1443.06006, 1143.05005, 9.75000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1418.87000, 1144.06995, 12.81000,   80.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3406, -1408.60999, 1143.01001, 12.81000,   80.00000, 0.00000, 269.53000);
	CreateDynamicObject_FR(3406, -1400.31995, 1142.96997, 11.73000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1393.67004, 1143.43994, 11.73000,   90.00000, 0.00000, 289.98999);
	CreateDynamicObject_FR(3406, -1387.56006, 1146.16003, 11.74000,   90.00000, 0.00000, 309.98999);
	CreateDynamicObject_FR(3406, -1382.77002, 1150.80005, 11.77000,   90.00000, 0.00000, 329.98001);
	CreateDynamicObject_FR(3406, -1379.84998, 1156.80005, 11.80000,   90.00000, 0.00000, 349.98001);
	CreateDynamicObject_FR(3406, -1378.91003, 1164.04004, 11.82000,   90.00000, 0.00000, 359.97000);
	CreateDynamicObject_FR(3406, -1378.91003, 1172.04004, 11.82000,   90.00000, 0.00000, 359.97000);
	CreateDynamicObject_FR(3406, -1378.91003, 1180.04004, 11.82000,   90.00000, 0.00000, 359.97000);
	CreateDynamicObject_FR(3406, -1378.91003, 1188.31995, 12.36000,   76.00000, 180.00000, 179.97000);
	CreateDynamicObject_FR(3406, -1378.91003, 1196.20996, 14.32000,   76.00000, 179.99001, 179.97000);
	CreateDynamicObject_FR(3406, -1394.19995, 1195.16003, 16.30000,   76.00000, 179.99001, 179.99001);
	CreateDynamicObject_FR(3406, -1394.19995, 1187.19995, 14.31000,   76.00000, 179.99001, 179.99001);
	CreateDynamicObject_FR(3406, -1394.19995, 1179.27002, 12.33000,   76.00000, 179.99001, 179.99001);
	CreateDynamicObject_FR(3406, -1394.19995, 1171.46997, 10.40000,   76.00000, 179.99001, 179.99001);
	CreateDynamicObject_FR(3406, -1394.19995, 1163.66003, 8.47000,   76.00000, 179.99001, 179.99001);
	CreateDynamicObject_FR(3406, -1394.19995, 1155.73999, 6.49000,   76.00000, 179.99001, 179.99001);
	CreateDynamicObject_FR(3406, -1394.19995, 1147.93994, 4.55000,   76.00000, 179.99001, 179.99001);
	CreateDynamicObject_FR(3406, -1394.19995, 1139.60999, 4.02000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1394.19995, 1131.40002, 5.08000,   80.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1394.19995, 1123.69995, 7.73000,   68.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1394.19995, 1116.64001, 11.95000,   55.99000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1395.23999, 1088.15002, 14.95000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1386.48999, 1088.15002, 14.95000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1395.23999, 1079.90002, 14.95000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1386.48999, 1079.90002, 14.95000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1394.19995, 1074.89001, 21.92000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1385.44995, 1074.89001, 21.92000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19002, -1394.20996, 1192.19995, 14.82000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19002, -1394.20996, 1182.19995, 12.32000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19002, -1394.20996, 1171.94995, 9.82000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19002, -1394.20996, 1161.19995, 7.57000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19002, -1394.20996, 1151.94995, 4.57000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1377.48999, 1092.15002, 14.95000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1368.48999, 1096.15002, 14.95000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1368.48999, 1104.40002, 14.95000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1372.88000, 1112.65002, 14.95000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1368.51001, 1120.90002, 14.95000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(4881, -1349.93005, 1137.62000, 13.55000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1323.23999, 1145.68994, 14.95000,   90.00000, 0.00000, 359.98999);
	CreateDynamicObject_FR(3406, -1323.23999, 1153.93994, 14.95000,   90.00000, 0.00000, 359.98999);
	CreateDynamicObject_FR(3406, -1324.29004, 1166.07996, 14.95000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1324.28003, 1168.04004, 14.97000,   90.00000, 0.00000, 179.98000);
	CreateDynamicObject_FR(3406, -1382.78003, 1165.19995, 1.47000,   90.00000, 0.00000, 269.98001);
	CreateDynamicObject_FR(3406, -1391.03003, 1165.19995, 1.47000,   90.00000, 0.00000, 269.98001);
	CreateDynamicObject_FR(3406, -1399.28003, 1165.19995, 1.47000,   90.00000, 0.00000, 269.98001);
	CreateDynamicObject_FR(18981, -1336.72998, 1165.76001, 0.57000,   16.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(18981, -1361.43994, 1165.75000, -5.59000,   12.91000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1407.53003, 1165.19995, 1.47000,   90.00000, 0.00000, 269.98001);
	CreateDynamicObject_FR(3406, -1415.78003, 1165.19995, 2.97000,   76.00000, 0.00000, 269.98001);
	CreateDynamicObject_FR(3406, -1423.78003, 1165.19995, 4.97000,   76.00000, 0.00000, 269.97000);
	CreateDynamicObject_FR(3406, -1431.78003, 1165.19995, 6.97000,   76.00000, 0.00000, 269.97000);
	CreateDynamicObject_FR(3406, -1439.78003, 1165.19995, 8.97000,   76.00000, 0.00000, 269.97000);
	CreateDynamicObject_FR(3406, -1447.78003, 1165.19995, 10.97000,   76.00000, 0.00000, 269.97000);
	CreateDynamicObject_FR(3406, -1460.53003, 1165.19995, 11.97000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1468.78003, 1165.19995, 11.97000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1475.26001, 1167.62000, 12.06000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(3406, -1501.56995, 1135.12000, 17.94000,   38.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1479.68005, 1166.92004, 12.38000,   81.68000, -59.06000, -104.85000);
	CreateDynamicObject_FR(3406, -1484.58997, 1164.84998, 13.22000,   74.91000, -42.89000, -109.41000);
	CreateDynamicObject_FR(3406, -1489.56006, 1161.43994, 14.37000,   68.22000, -31.00000, -110.95000);
	CreateDynamicObject_FR(3406, -1494.17004, 1156.72998, 15.62000,   61.15000, -21.54000, -109.64000);
	CreateDynamicObject_FR(3406, -1498.00000, 1150.75000, 16.77000,   53.60000, -13.46000, -105.55000);
	CreateDynamicObject_FR(3406, -1500.59998, 1143.54004, 17.61000,   45.74000, -6.30000, -98.84000);
	CreateDynamicObject_FR(3406, -1474.21997, 1097.96997, 12.06000,   56.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1500.73999, 1126.44995, 17.61000,   41.45000, 5.57000, -82.66000);
	CreateDynamicObject_FR(3406, -1498.42004, 1118.57996, 16.77000,   44.86000, 10.38000, -75.57000);
	CreateDynamicObject_FR(3406, -1494.90002, 1111.68994, 15.62000,   48.20000, 14.09000, -68.07000);
	CreateDynamicObject_FR(3406, -1490.43994, 1105.97998, 14.37000,   51.48000, 16.22000, -59.05000);
	CreateDynamicObject_FR(3406, -1485.31995, 1101.66003, 13.22000,   54.59000, 15.82000, -46.63000);
	CreateDynamicObject_FR(3406, -1479.81995, 1098.93005, 12.38000,   56.87000, 10.96000, -27.76000);
	CreateDynamicObject_FR(3406, -1464.46997, 1099.66003, 9.23000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3406, -1456.21997, 1099.66003, 9.23000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3406, -1456.21997, 1108.41003, 9.23000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3406, -1464.46997, 1108.41003, 9.23000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3406, -1447.96997, 1108.41003, 9.23000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3406, -1447.96997, 1099.66003, 9.23000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3406, -1441.02002, 1105.73999, 8.27000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1441.02002, 1101.31995, 8.27000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1432.27002, 1101.31995, 8.27000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1432.27002, 1105.73999, 8.27000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1423.27002, 1105.73999, 9.15000,   0.00000, 350.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1423.27002, 1101.31006, 9.15000,   0.00000, 350.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1414.73999, 1101.31006, 10.66000,   0.00000, 350.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1414.73999, 1105.73999, 10.66000,   0.00000, 350.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1406.56006, 1103.91003, 13.90000,   72.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3406, -1384.34998, 1102.85999, 10.40000,   72.00000, 0.00000, 269.98999);
	CreateDynamicObject_FR(3406, -1376.59998, 1102.85999, 7.88000,   72.00000, 0.00000, 269.98999);
	CreateDynamicObject_FR(3406, -1364.55005, 1103.90002, 5.98000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3406, -1356.54004, 1103.90002, 5.98000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3406, -1348.29004, 1103.90002, 5.98000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3406, -1351.15002, 1113.81006, 5.98000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(3406, -1351.15002, 1121.94995, 7.02000,   80.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1351.15002, 1129.78003, 9.46000,   70.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1351.15002, 1137.09998, 13.24000,   59.99000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1351.15002, 1157.27002, 13.66000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1351.15002, 1165.31006, 14.29000,   84.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1351.15002, 1173.06006, 16.79000,   68.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1351.15002, 1179.92004, 21.34000,   51.99000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1351.15002, 1187.02002, 22.44000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1359.90002, 1187.02002, 22.44000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1368.65002, 1187.02002, 22.44000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1377.40002, 1187.02002, 22.44000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1386.15002, 1187.02002, 22.44000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1394.90002, 1187.02002, 22.44000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3578, -1361.43994, 1185.02002, 23.67000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1365.18994, 1185.02002, 24.17000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1369.68994, 1185.02002, 23.42000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1376.68994, 1185.02002, 23.92000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1381.93994, 1185.02002, 23.67000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1387.93994, 1185.02002, 23.92000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1395.43994, 1185.02002, 23.17000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1398.93994, 1185.02002, 23.17000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1399.68994, 1185.02002, 24.17000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1400.43994, 1185.02002, 24.67000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1401.18994, 1185.02002, 25.42000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1401.68994, 1185.02002, 26.17000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1402.43994, 1185.02002, 27.17000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1403.18994, 1185.02002, 28.17000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1403.93994, 1185.02002, 29.17000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1404.68994, 1185.02002, 30.17000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3578, -1405.43994, 1185.02002, 31.17000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1411.65002, 1184.62000, 30.94000,   90.00000, 0.00000, 269.98999);
	CreateDynamicObject_FR(3406, -1419.65002, 1184.62000, 30.94000,   90.00000, 0.00000, 269.98999);
	CreateDynamicObject_FR(3406, -1427.65002, 1184.62000, 30.94000,   90.00000, 0.00000, 269.98999);
	CreateDynamicObject_FR(3406, -1435.65002, 1184.62000, 30.94000,   90.00000, 0.00000, 269.98999);
	CreateDynamicObject_FR(3406, -1443.65002, 1184.62000, 30.94000,   90.00000, 0.00000, 269.98999);
	CreateDynamicObject_FR(3406, -1450.90002, 1184.62000, 28.54000,   66.00000, 180.00000, 89.99000);
	CreateDynamicObject_FR(3406, -1458.40002, 1184.62000, 25.21000,   65.99000, 179.99001, 89.99000);
	CreateDynamicObject_FR(3406, -1465.90002, 1184.62000, 21.87000,   65.99000, 179.99001, 89.99000);
	CreateDynamicObject_FR(3406, -1473.40002, 1184.62000, 18.53000,   65.99000, 179.99001, 89.99000);
	CreateDynamicObject_FR(3406, -1480.87000, 1184.62000, 15.20000,   65.99000, 179.99001, 89.99000);
	CreateDynamicObject_FR(3406, -1496.59998, 1184.62000, 11.00000,   90.00000, 0.00000, 269.98999);
	CreateDynamicObject_FR(3406, -1494.82996, 1194.50000, 8.37000,   64.00000, 180.00000, 359.98999);
	CreateDynamicObject_FR(3406, -1488.23999, 1184.62000, 11.92000,   65.99000, 179.99001, 89.99000);
	CreateDynamicObject_FR(3406, -1350.12000, 1189.90002, 29.43000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1345.25000, 1185.98999, 29.43000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1318.44995, 1147.48999, 21.98000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3406, -1322.39001, 1142.62000, 21.98000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(621, -1455.04004, 1135.83997, 5.46000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(621, -1454.59998, 1150.19995, 5.46000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1378.91003, 1204.01001, 16.91000,   60.00000, 180.00000, 179.97000);
	CreateDynamicObject_FR(3406, -1379.93994, 1214.72998, 19.79000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(3406, -1388.68994, 1214.72998, 19.79000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3406, -1397.43994, 1214.72998, 19.79000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(19002, -1394.20996, 1208.44995, 18.82000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1394.19995, 1203.07996, 18.28000,   76.00000, 180.00000, 179.99001);
	CreateDynamicObject_FR(19002, -1394.20996, 1201.69995, 16.82000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3406, -1379.93005, 1217.77002, 26.77000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(3406, -1374.02002, 1214.92004, 26.77000,   0.00000, 0.00000, 89.99000);

	//BMX PARKOUR
	CreateDynamicObject_FR(971, -1859.97998, 457.48001, 60.11000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18367, -1922.04004, 456.69000, 55.12000,   0.00000, 0.00000, 90.24000);
	CreateDynamicObject_FR(18367, -1922.02002, 458.60999, 55.12000,   0.00000, 0.00000, 90.24000);
	CreateDynamicObject_FR(971, -1884.04004, 457.42999, 58.54000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(971, -1871.54004, 457.34000, 59.36000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(971, -1849.09998, 477.35999, 61.13000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(971, -1848.95996, 465.70999, 60.38000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(971, -1849.16003, 486.34000, 61.13000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(971, -1849.01001, 498.51999, 62.10000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(971, -1849.06006, 510.50000, 63.22000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(971, -1859.03003, 516.03003, 65.10000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(971, -1897.33997, 516.32001, 68.96000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(971, -1908.43994, 516.66998, 70.90000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(971, -1912.55005, 504.57001, 72.02000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(971, -1906.51001, 491.26001, 77.51000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(971, -1906.37000, 504.42999, 75.48000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(971, -1906.62000, 478.39999, 79.38000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(971, -1906.95996, 466.48001, 81.26000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(971, -1906.16003, 452.84000, 82.21000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(971, -1896.48999, 457.26999, 82.79000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(971, -1886.18994, 456.98001, 85.42000,   100.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(971, -1878.12000, 456.97000, 86.82000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(971, -1865.94995, 456.79001, 87.91000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(971, -1854.80005, 456.50000, 89.07000,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(971, -1844.06995, 454.45999, 90.39000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(971, -1848.82996, 465.06000, 92.23000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(971, -1848.81006, 478.19000, 93.63000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(971, -1848.82996, 491.76001, 94.71000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(971, -1848.70996, 504.88000, 95.80000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(971, -1842.12000, 516.96002, 95.90000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(971, -1853.76001, 515.89001, 97.47000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(971, -1869.56995, 515.94000, 97.37000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18367, -1871.32996, 515.64001, 96.99000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(971, -1908.15002, 513.90997, 99.46000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(971, -1908.35999, 500.29999, 99.50000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(971, -1908.33997, 493.28000, 100.26000,   102.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(971, -1908.40002, 481.45999, 101.19000,   102.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(971, -1908.33997, 470.47000, 101.55000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(971, -1909.52002, 458.00000, 102.69000,   102.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(971, -1896.06995, 457.42001, 102.99000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(971, -1881.47998, 457.35999, 103.71000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(971, -1867.82996, 457.38000, 104.95000,   90.00000, 0.00000, 179.82001);
	CreateDynamicObject_FR(971, -1852.12000, 457.34000, 104.93000,   90.00000, 0.00000, 179.82001);
	CreateDynamicObject_FR(7392, -1878.85999, 488.20001, 124.33000,   0.00000, 0.00000, 130.88000);
	CreateDynamicObject_FR(971, -1871.73999, 516.15997, 66.24000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(971, -1884.17004, 516.41998, 68.05000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(971, -1851.06006, 457.59000, 60.11000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(971, -1848.28003, 470.64001, 105.37000,   90.00000, 0.00000, 179.82001);
	CreateDynamicObject_FR(971, -1915.47998, 496.10999, 73.66000,   90.00000, 0.00000, 0.00000);

	//Bike Parkour 1
	CreateDynamicObject_FR(979, -2226.31006, 951.57001, 96.45000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(979, -2226.31006, 942.19000, 96.45000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(979, -2226.32007, 937.47998, 96.45000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(979, -2226.39990, 963.57001, 97.45000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(979, -2226.41992, 980.07001, 99.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(979, -2226.42993, 1000.32001, 100.95000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1696, -2232.85010, 953.77002, 95.83000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1696, -2232.85010, 968.76001, 97.17000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1696, -2232.85010, 987.22998, 98.81000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18451, -2231.90991, 1007.48999, 100.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -2221.80005, 1035.43005, 100.81000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(979, -2221.80005, 1070.33997, 98.24000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19002, -2230.26001, 1163.71997, 100.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16401, -2230.20996, 1159.20996, 92.91000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19002, -2230.26001, 1173.96997, 101.85000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19002, -2230.26001, 1187.21997, 99.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, -2221.80005, 1138.75000, 93.75000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1810.47998, 891.79999, 117.44000,   0.00000, 16.00000, 58.00000);
	CreateDynamicObject_FR(979, -1931.83997, 679.06000, 145.50000,   0.00000, 0.00000, 359.53000);
	CreateDynamicObject_FR(979, -1936.58997, 683.81000, 145.50000,   0.00000, 0.00000, 269.53000);
	CreateDynamicObject_FR(979, -1936.51001, 693.17999, 145.50000,   0.00000, 0.00000, 269.51999);
	CreateDynamicObject_FR(979, -1927.33997, 674.52002, 145.50000,   0.00000, 0.00000, 269.53000);
	CreateDynamicObject_FR(19002, -1832.97998, 855.69000, 132.73000,   0.00000, 0.00000, 326.00000);
	CreateDynamicObject_FR(979, -2231.11011, 933.85999, 96.45000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1655, -1923.72998, 650.62000, 145.28999,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(1655, -1923.72998, 644.45001, 148.82001,   14.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(1655, -1923.72998, 640.41998, 152.67999,   28.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(1245, -2230.22998, 1044.16003, 100.85000,   0.00000, 0.00000, 271.97000);
	CreateDynamicObject_FR(1245, -2229.93994, 1080.69995, 98.28000,   0.00000, 0.00000, 271.97000);
	CreateDynamicObject_FR(979, -1967.04004, 1193.41003, 74.93000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18829, -1880.00000, 779.71997, 125.81000,   66.00000, 0.00000, 329.26999);
	CreateDynamicObject_FR(18829, -1903.19995, 740.54999, 146.00000,   66.00000, 0.00000, 329.26999);
	CreateDynamicObject_FR(978, -2212.57007, 1223.62000, 86.94000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18367, -2123.29004, 1206.08997, 90.08000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18779, -2188.46997, 1213.16003, 89.04000,   0.00000, -17.00000, 178.95000);
	CreateDynamicObject_FR(18783, -1883.98999, 1273.10999, 58.99000,   0.00000, 0.00000, 20.00000);
	CreateDynamicObject_FR(18786, -1963.33997, 1222.89001, 76.51000,   0.00000, 0.00000, 213.35001);
	CreateDynamicObject_FR(978, -2228.69995, 1223.56995, 86.94000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(978, -2194.36011, 1223.58997, 86.94000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(1655, -1852.57996, 1280.80005, 58.63000,   14.00000, 0.00000, 290.00000);
	CreateDynamicObject_FR(979, -1967.06006, 1204.02002, 74.93000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18783, -1902.78003, 1266.27002, 58.99000,   0.00000, 0.00000, 20.00000);
	CreateDynamicObject_FR(978, -1775.59998, 1302.91003, 62.19000,   0.00000, 0.00000, 87.53000);
	CreateDynamicObject_FR(1660, -1781.39001, 1297.68005, 57.03000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19002, -1781.67004, 1286.88000, 64.43000,   0.00000, 0.00000, 356.00000);
	CreateDynamicObject_FR(16395, -1777.81995, 1190.98999, 73.53000,   0.00000, 6.00000, 93.00000);
	CreateDynamicObject_FR(18367, -1763.39001, 1054.90002, 84.22000,   -21.00000, 0.00000, 2.00000);
	CreateDynamicObject_FR(18802, -1764.97998, 965.27002, 96.54000,   0.00000, 0.00000, 240.00000);
	CreateDynamicObject_FR(18794, -1780.17004, 940.31000, 99.43000,   0.00000, 356.00000, 238.00000);
	CreateDynamicObject_FR(13592, -1769.58997, 1081.04004, 117.77000,   0.00000, 12.00000, 99.00000);
	CreateDynamicObject_FR(1634, -1761.98999, 1009.71002, 96.73000,   0.00000, 0.00000, 181.61000);
	CreateDynamicObject_FR(18450, -1926.07996, 594.42999, 179.91000,   0.00000, 32.00000, 90.00000);
	CreateDynamicObject_FR(18450, -1884.76001, 526.14001, 215.11000,   0.00000, 22.17000, 190.00000);
	CreateDynamicObject_FR(18761, -1847.42004, 532.77002, 232.62000,   0.00000, 0.00000, 99.01000);
	CreateDynamicObject_FR(979, -1924.01001, 513.44000, 201.96001,   0.00000, 0.00000, 359.53000);
	CreateDynamicObject_FR(979, -1933.52002, 513.48999, 201.96001,   0.00000, 0.00000, 359.53000);
	CreateDynamicObject_FR(13592, -1903.01001, 522.60999, 217.87000,   0.00000, -18.00000, 15.73000);
	CreateDynamicObject_FR(1655, -1844.93994, 533.08002, 231.97000,   10.00000, 0.00000, 280.00000);
	CreateDynamicObject_FR(1655, -1842.08997, 533.59998, 234.08000,   18.00000, 0.00000, 280.00000);

	//Bike Parkour 2
	CreateDynamicObject_FR(1655, -2312.27002, 534.04999, 45.03000,   10.31000, 0.00000, 90.00000);
	CreateDynamicObject_FR(16644, -2336.55005, 546.23999, 50.06000,   0.00000, -3.44000, -90.00000);
	CreateDynamicObject_FR(16644, -2336.52002, 562.23999, 49.11000,   0.00000, -3.44000, -90.00000);
	CreateDynamicObject_FR(1503, -2333.02002, 585.65997, 44.95000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1503, -2314.50000, 585.34003, 48.26000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1632, -2298.02002, 587.29999, 52.31000,   8.59000, 0.00000, -56.25000);
	CreateDynamicObject_FR(1632, -2295.39990, 589.10999, 55.15000,   27.50000, 0.00000, -56.25000);
	CreateDynamicObject_FR(18367, -2361.16992, 588.64001, 44.05000,   -10.31000, 0.86000, 45.16000);
	CreateDynamicObject_FR(3280, -2121.00000, 280.92999, 49.69000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(12913, -2286.59009, 607.25000, 58.87000,   21.49000, 0.00000, 0.00000);
	CreateDynamicObject_FR(12913, -2286.59009, 609.12000, 59.52000,   19.77000, 0.00000, 0.00000);
	CreateDynamicObject_FR(12913, -2286.48999, 614.95001, 61.38000,   19.77000, 0.00000, 0.00000);
	CreateDynamicObject_FR(12913, -2286.43994, 616.85999, 62.39000,   27.50000, -0.86000, 0.00000);
	CreateDynamicObject_FR(12913, -2286.62988, 602.35999, 56.28000,   21.49000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2653, -2286.78003, 628.20001, 64.90000,   32.66000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2653, -2286.78003, 634.76001, 69.10000,   32.66000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2653, -2286.78003, 638.28003, 71.36000,   32.66000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3280, -2286.82007, 659.13000, 73.08000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(971, -2293.75000, 636.71997, 67.33000,   0.00000, 0.00000, -630.00000);
	CreateDynamicObject_FR(3865, -2274.76001, 685.69000, 70.07000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(3865, -2265.61011, 685.59003, 70.07000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(3865, -2256.48999, 685.48999, 70.07000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(3865, -2247.36011, 685.39001, 70.07000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(13749, -2217.89990, 700.52002, 71.88000,   0.00000, 0.00000, -37.89000);
	CreateDynamicObject_FR(3280, -2205.73999, 706.85999, 78.59000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3280, -2207.26001, 706.85999, 78.59000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3280, -2205.71997, 708.40997, 78.59000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3280, -2207.27002, 708.40997, 78.59000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1503, -2196.20996, 705.41998, 79.04000,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject_FR(2780, -2243.41992, 685.38000, 67.61000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2780, -2250.35010, 685.38000, 67.61000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2780, -2257.35010, 685.38000, 67.61000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2780, -2265.85010, 685.38000, 67.61000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2780, -2273.62012, 685.38000, 67.61000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2780, -2196.42993, 703.21997, 79.21000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(13647, -2186.42993, 655.84998, 70.83000,   0.00000, -30.08000, 22.50000);
	CreateDynamicObject_FR(13638, -2165.06006, 672.82001, 83.52000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(13645, -2164.02002, 691.60999, 88.99000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(13645, -2165.19995, 721.37000, 86.15000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(13641, -2164.87012, 790.28003, 86.31000,   0.00000, 0.00000, 87.42000);
	CreateDynamicObject_FR(1634, -2164.48999, 844.73999, 85.92000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1634, -2164.51001, 849.04999, 88.88000,   18.05000, 0.00000, 0.00000);
	CreateDynamicObject_FR(13645, -2164.40991, 874.20001, 95.05000,   0.00000, 0.00000, -2.58000);
	CreateDynamicObject_FR(1634, -2227.86011, 892.21997, 97.22000,   0.00000, 0.00000, 89.14000);
	CreateDynamicObject_FR(1634, -2234.93994, 892.34998, 102.41000,   21.49000, 0.00000, 89.14000);
	CreateDynamicObject_FR(1634, -2286.87012, 948.46997, 97.13000,   0.00000, 0.00000, -0.86000);
	CreateDynamicObject_FR(1634, -2289.20996, 1082.32996, 101.27000,   0.00000, 0.00000, -0.86000);
	CreateDynamicObject_FR(1634, -2289.17993, 1085.04004, 103.15000,   10.31000, 0.00000, -0.86000);
	CreateDynamicObject_FR(1634, -2297.97998, 1165.21997, 95.63000,   0.00000, 0.00000, 33.75000);
	CreateDynamicObject_FR(971, -2298.17993, 889.40997, 99.08000,   0.00000, 0.00000, -810.00000);
	CreateDynamicObject_FR(971, -2287.64990, 1161.46997, 97.81000,   0.00000, 0.00000, -900.00000);
	CreateDynamicObject_FR(18367, -2377.81006, 1195.04004, 55.65000,   -6.88000, 0.00000, 14.77000);
	CreateDynamicObject_FR(18367, -2370.57007, 1167.19995, 62.41000,   -6.88000, 0.00000, 14.77000);
	CreateDynamicObject_FR(971, -2356.38989, 1121.29004, 65.21000,   0.00000, 0.00000, -1008.20001);
	CreateDynamicObject_FR(971, -2361.93994, 1118.50000, 65.19000,   0.00000, 0.00000, -1098.19995);
	CreateDynamicObject_FR(16367, -2360.81006, 1122.93994, 62.73000,   0.00000, 0.00000, -17.34000);
	CreateDynamicObject_FR(18367, -2385.04004, 816.63000, 69.92000,   18.91000, -0.86000, 38.05000);
	CreateDynamicObject_FR(13641, -2345.85010, 786.20001, 63.89000,   0.00000, 0.00000, -1.72000);
	CreateDynamicObject_FR(13593, -2314.88989, 786.75000, 65.19000,   0.00000, 0.00000, -92.58000);
	CreateDynamicObject_FR(1225, -2314.63989, 789.67999, 62.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, -2314.67993, 783.12000, 62.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, -2318.81006, 786.71002, 62.48000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(971, -2317.73999, 730.01001, 67.70000,   0.00000, 0.00000, -1260.00000);
	CreateDynamicObject_FR(1634, -2326.66992, 728.04999, 65.45000,   2.58000, 0.00000, -180.86000);
	CreateDynamicObject_FR(1634, -2325.66992, 677.16998, 59.55000,   -0.86000, 0.00000, -178.28000);
	CreateDynamicObject_FR(971, -2293.80005, 628.03998, 67.33000,   0.00000, 0.00000, -630.00000);
	CreateDynamicObject_FR(971, -2294.19995, 690.31000, 71.76000,   0.00000, 0.00000, -630.00000);
	CreateDynamicObject_FR(971, -2284.64990, 1161.42004, 97.81000,   0.00000, 0.00000, -900.00000);
	CreateDynamicObject_FR(18262, -2386.18994, 1133.20996, 62.96000,   0.00000, 0.00000, 67.50000);
	CreateDynamicObject_FR(971, -2289.80005, 694.72998, 71.73000,   0.00000, 0.00000, -720.00000);
	CreateDynamicObject_FR(971, -2294.19995, 682.81000, 71.76000,   0.00000, 0.00000, -630.00000);
	CreateDynamicObject_FR(1655, -2194.60010, 667.78003, 69.32000,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject_FR(16002, -2324.04004, 643.28998, 55.67000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(13647, -2186.17993, 655.23999, 70.83000,   0.00000, -30.08000, 22.50000);
	CreateDynamicObject_FR(971, -2283.52002, 694.72998, 71.73000,   0.00000, 0.00000, -720.00000);
	CreateDynamicObject_FR(16367, -2416.07007, 1141.94995, 63.61000,   0.00000, 0.00000, -11.25000);
	CreateDynamicObject_FR(16367, -2442.18994, 1144.20996, 62.95000,   1.72000, -17.19000, -4.37000);
	CreateDynamicObject_FR(16367, -2441.98999, 1146.70996, 62.95000,   1.72000, -17.19000, -4.37000);
	CreateDynamicObject_FR(8302, -2468.04004, 1145.20996, 62.30000,   1.72000, -0.86000, 107.34000);
	CreateDynamicObject_FR(971, -2480.89990, 1145.29004, 65.77000,   0.00000, 0.00000, -990.85999);
	CreateDynamicObject_FR(13647, -2478.58008, 1121.39001, 64.20000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(13647, -2478.58008, 1090.39001, 64.20000,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject_FR(13647, -2478.00000, 1121.39001, 64.20000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(13647, -2478.00000, 1090.39001, 64.20000,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject_FR(1655, -2486.21997, 1056.76001, 61.14000,   7.73000, 0.00000, 89.14000);
	CreateDynamicObject_FR(1634, -2497.38989, 1038.80005, 69.87000,   9.45000, 0.00000, -180.00000);
	CreateDynamicObject_FR(1634, -2497.33008, 1027.72998, 73.55000,   4.30000, 0.00000, -180.00000);
	CreateDynamicObject_FR(1634, -2497.21997, 1017.92999, 75.26000,   2.58000, 0.00000, -180.86000);
	CreateDynamicObject_FR(5822, -2500.70996, 998.56000, 80.41000,   0.00000, 0.00000, -175.63000);
	CreateDynamicObject_FR(1245, -2508.67993, 983.84998, 85.77000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(16640, -2502.94995, 969.25000, 90.39000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(16640, -2503.02002, 982.81000, 94.43000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(4106, -2507.11011, 946.15002, 93.58000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8572, -2506.18994, 926.40997, 88.84000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(8572, -2504.26001, 930.04999, 85.31000,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject_FR(16644, -2507.87012, 924.33002, 95.10000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1655, -2430.19995, 927.95001, 74.10000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1655, -2427.94995, 927.95001, 75.67000,   16.33000, 0.00000, -90.00000);
	CreateDynamicObject_FR(1655, -2412.83008, 917.51001, 81.55000,   3.44000, 0.00000, -180.00000);
	CreateDynamicObject_FR(18367, -2402.61011, 839.09003, 76.31000,   18.91000, -0.86000, 38.05000);
	CreateDynamicObject_FR(1634, -2497.30005, 1049.78003, 65.26000,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject_FR(971, -2351.64990, 1221.68005, 52.75000,   0.00000, 0.00000, -990.00000);
	CreateDynamicObject_FR(971, -2327.75000, 1221.68005, 52.75000,   0.00000, 0.00000, -990.00000);
	CreateDynamicObject_FR(1225, -2377.17993, 1541.40002, 19.64000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, -2377.58008, 1541.47998, 20.66000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, -2375.00000, 1541.23999, 20.57000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18367, -2384.91992, 1221.81995, 49.15000,   -6.88000, 0.00000, 14.77000);
	CreateDynamicObject_FR(18367, -2349.60010, 1230.52002, 49.15000,   -0.86000, 0.00000, -809.29999);
	CreateDynamicObject_FR(971, -2327.75000, 1230.47998, 52.75000,   0.00000, 0.00000, -990.00000);
	CreateDynamicObject_FR(971, -2332.14990, 1235.19995, 52.75000,   0.00000, 0.00000, -1440.00000);
	CreateDynamicObject_FR(971, -2340.94995, 1235.19995, 52.75000,   0.00000, 0.00000, -1440.00000);

	//Bike Parkour 3 
	CreateDynamicObject_FR(3707, 2720.31006, -2567.23999, 14.44000,   0.00000, 341.79999, 90.00000);
	CreateDynamicObject_FR(18779, 2726.34009, -2590.41992, 31.58000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(8391, 2688.46997, -2660.18994, 18.60000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1655, 2658.71997, -2682.61011, 37.27000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(8493, 2626.48999, -2623.39990, 18.25000,   0.00000, 0.00000, 300.72000);
	CreateDynamicObject_FR(8489, 2570.73999, -2742.64990, 9.07000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8493, 2631.56006, -2748.21997, 18.25000,   0.00000, 0.00000, 218.30000);
	CreateDynamicObject_FR(1655, 2559.04004, -2683.39990, 30.66000,   345.23999, 0.00000, 90.00000);
	CreateDynamicObject_FR(1633, 2545.93994, -2744.30005, 30.70000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1633, 2537.88989, -2803.10010, 30.70000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(1633, 2609.95996, -2801.65991, 30.70000,   0.00000, 0.00000, 269.98999);
	CreateDynamicObject_FR(1633, 2609.95996, -2808.55005, 30.70000,   0.00000, 0.00000, 269.98999);
	CreateDynamicObject_FR(6342, 2699.37988, -2823.37988, 1.69000,   0.00000, 0.00000, 281.53000);
	CreateDynamicObject_FR(6342, 2789.87012, -2875.54004, 1.69000,   0.00000, 0.00000, 101.39000);
	CreateDynamicObject_FR(18779, 2841.59009, -2888.37988, 26.42000,   0.00000, 348.85001, 180.00000);
	CreateDynamicObject_FR(19002, 2877.10010, -2894.31006, 46.12000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19002, 2885.07007, -2894.31006, 48.77000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(19002, 2893.09009, -2894.31006, 49.16000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(10948, 2950.22998, -2904.87988, 52.65000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18779, 2959.68994, -2925.95996, 58.75000,   0.00000, 4.26000, 180.00000);
	CreateDynamicObject_FR(18779, 2939.25000, -2877.62012, 82.57000,   0.00000, 4.26000, 270.00000);
	CreateDynamicObject_FR(1634, 2937.62012, -2747.09009, 100.61000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18768, 2916.02002, -2746.63989, 114.34000,   0.00000, 270.00000, 0.00000);
	CreateDynamicObject_FR(18768, 2876.00000, -2746.63989, 114.34000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(19129, 2906.02002, -2756.69995, 114.35000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, 2906.02002, -2736.58008, 114.35000,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(19129, 2906.02002, -2746.62988, 104.29000,   180.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, 2906.02002, -2746.62988, 124.39000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, 2886.03003, -2736.58008, 114.35000,   90.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(19129, 2886.02002, -2746.62988, 104.29000,   179.99001, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, 2886.02002, -2756.69995, 114.35000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(19129, 2886.02002, -2746.62988, 124.39000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3873, 2834.27002, -2746.63989, 74.36000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3873, 2834.27002, -2746.63989, 39.67000,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(3873, 2834.27002, -2746.63989, 7.67000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3873, 2834.27002, -2695.48999, 50.21000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3873, 2834.27002, -2695.50000, 15.57000,   0.00000, 179.99001, 0.00000);
	CreateDynamicObject_FR(3873, 2834.27002, -2623.18994, 16.93000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18367, 2824.47998, -2605.82007, 32.49000,   6.39000, 0.00000, 209.67999);
	CreateDynamicObject_FR(18761, 2789.42993, -2546.07007, 17.63000,   0.00000, 0.00000, 216.20000);
	CreateDynamicObject_FR(8397, 2735.03003, -2611.51001, 2.36000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8397, 2706.30005, -2611.51001, 2.36000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18228, 2926.47998, -2866.78003, 0.00000,   0.00000, 0.00000, 192.22000);
	CreateDynamicObject_FR(18228, 2902.64990, -2904.25000, 0.00000,   0.00000, 0.00000, 214.06000);
	CreateDynamicObject_FR(18228, 2913.90991, -2950.00000, 0.00000,   0.00000, 0.00000, 276.29001);
	CreateDynamicObject_FR(18228, 2958.75000, -2844.22998, 0.00000,   0.00000, 0.00000, 130.32001);
	CreateDynamicObject_FR(18228, 2947.35010, -2952.82007, 0.00000,   0.00000, 0.00000, 320.38000);
	CreateDynamicObject_FR(7916, 2888.45996, -2908.35010, 2.68000,   0.00000, 0.00000, 264.13000);
	CreateDynamicObject_FR(7916, 2907.34009, -2858.29004, 2.68000,   0.00000, 0.00000, 227.23000);
	CreateDynamicObject_FR(7916, 2918.60010, -2867.25000, 9.03000,   0.00000, 0.00000, 227.22000);
	CreateDynamicObject_FR(3877, 2726.68994, -2570.77002, 23.17000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3877, 2713.96997, -2570.77002, 23.17000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(7073, 2917.11011, -2943.97998, 65.47000,   0.00000, 0.00000, 311.16000);
	CreateDynamicObject_FR(3528, 2735.35010, -2607.04004, 34.21000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3528, 2706.73999, -2607.04004, 34.21000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3437, 2999.75000, -2896.76001, 93.69000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2987.97998, -2896.76001, 93.69000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(3437, 2976.84009, -2894.38989, 93.69000,   0.00000, 90.00000, 335.89001);
	CreateDynamicObject_FR(3437, 2967.18994, -2887.97998, 93.69000,   0.00000, 90.00000, 317.01999);
	CreateDynamicObject_FR(3437, 2960.42993, -2866.87988, 93.69000,   0.00000, 90.00000, 269.48999);
	CreateDynamicObject_FR(3437, 2961.65991, -2878.42993, 93.69000,   0.00000, 90.00000, 282.57999);
	CreateDynamicObject_FR(8527, 3056.70996, -2896.90991, 79.49000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8527, 3101.28003, -2896.90991, 79.49000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8527, 3158.30005, -2896.90991, 73.29000,   0.00000, 9.84000, 0.00000);
	CreateDynamicObject_FR(8527, 3202.13989, -2896.90991, 65.66000,   0.00000, 9.84000, 0.00000);
	CreateDynamicObject_FR(18780, 3257.34009, -2897.22998, 72.14000,   0.00000, 10.99000, 0.00000);
	CreateDynamicObject_FR(18816, 3371.55005, -2897.29004, 108.47000,   0.00000, 270.00000, 0.00000);
	CreateDynamicObject_FR(4564, 3424.09009, -2897.18994, -5.83000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18780, 3527.94995, -2902.34009, 72.60000,   0.00000, 40.25000, 0.00000);
	CreateDynamicObject_FR(9950, 3586.35010, -2755.15991, 47.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(9950, 3586.35010, -2755.15991, 23.10000,   0.00000, 180.00000, 270.00000);
	CreateDynamicObject_FR(1633, 3539.94995, -2752.79004, 52.96000,   351.14001, 0.00000, 90.00000);
	CreateDynamicObject_FR(9950, 3452.06006, -2755.15991, 47.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(9950, 3452.08008, -2755.15991, 23.10000,   0.00000, 179.99001, 269.98999);
	CreateDynamicObject_FR(8396, 3360.50000, -2752.62012, 61.57000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(9076, 3398.12988, -2752.57007, 66.92000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8396, 3360.50000, -2752.62012, 44.18000,   180.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18779, 3427.40991, -2758.60010, 56.32000,   0.00000, 5.58000, 0.00000);
	CreateDynamicObject_FR(18779, 3428.86011, -2758.60010, 58.83000,   0.00000, 348.67999, 0.00000);
	CreateDynamicObject_FR(1633, 3529.43994, -2752.79004, 53.35000,   344.25000, 0.00000, 89.95000);
	CreateDynamicObject_FR(1633, 3520.96997, -2752.79004, 53.35000,   344.25000, 0.00000, 89.95000);
	CreateDynamicObject_FR(1633, 3512.52002, -2752.79004, 53.35000,   344.25000, 0.00000, 89.95000);
	CreateDynamicObject_FR(1633, 3504.04004, -2752.79004, 53.35000,   344.25000, 0.00000, 89.95000);
	CreateDynamicObject_FR(3851, 3345.62012, -2773.65991, 50.82000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, 3345.62012, -2773.65991, 54.92000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, 3356.92993, -2773.65991, 50.82000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, 3356.92993, -2773.65991, 54.91000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, 3394.42993, -2771.56006, 50.96000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, 3394.42993, -2771.56006, 54.89000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, 3390.16992, -2771.55005, 54.89000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, 3390.16992, -2771.55005, 50.93000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, 3379.69995, -2768.58008, 50.93000,   0.00000, 0.00000, 58.24000);
	CreateDynamicObject_FR(3851, 3379.69995, -2768.58008, 54.90000,   0.00000, 0.00000, 58.24000);
	CreateDynamicObject_FR(9076, 3398.12988, -2752.57007, 38.62000,   180.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(4571, 3280.46997, -2753.41992, -2.79000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(4602, 3256.29004, -2753.58008, 32.21000,   0.00000, 311.45999, 0.00000);
	CreateDynamicObject_FR(4602, 3178.71997, -2753.58008, 22.93000,   0.00000, 34.85000, 0.00000);
	CreateDynamicObject_FR(18778, 3254.21997, -2753.58008, 62.64000,   359.51001, 0.00000, 90.00000);
	CreateDynamicObject_FR(18365, 3146.42993, -2759.10010, 93.85000,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject_FR(18778, 3096.53003, -2756.60010, 98.16000,   3.11000, 0.00000, 90.49000);
	CreateDynamicObject_FR(8558, 3073.72998, -2751.67993, 93.75000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3073.71997, -2756.78003, 93.75000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8558, 3073.70996, -2761.89990, 93.75000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(8558, 3073.70996, -2766.98999, 93.75000,   0.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3689, 3006.42993, -2731.40991, 103.18000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3689, 3006.54004, -2731.40991, 87.46000,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(3437, 3442.09009, -2897.21997, 102.18000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(3437, 3430.37012, -2897.21997, 102.20000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(3437, 3418.64990, -2897.21997, 102.20000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject_FR(3437, 3442.84009, -2900.15991, 102.18000,   0.00000, 90.00000, 30.00000);
	CreateDynamicObject_FR(3437, 3442.85010, -2894.28003, 102.18000,   0.00000, 90.00000, 330.00000);
	CreateDynamicObject_FR(18780, 3527.94995, -2892.34009, 72.60000,   0.00000, 40.25000, 0.00000);
	CreateDynamicObject_FR(8397, 3545.31006, -2897.45996, 56.65000,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8397, 3524.40991, -2897.45996, 59.03000,   0.00000, 191.64000, 0.00000);
	CreateDynamicObject_FR(8397, 3506.23999, -2897.45996, 65.88000,   0.00000, 205.74001, 0.00000);
	CreateDynamicObject_FR(8397, 3566.12988, -2897.45996, 59.50000,   0.00000, 164.58000, 0.00000);
	CreateDynamicObject_FR(8493, 3590.55005, -2830.68994, 18.25000,   0.00000, 0.00000, 131.69000);
	CreateDynamicObject_FR(18228, 3474.46997, -2821.07007, 0.00000,   0.00000, 0.00000, 18.99000);
	CreateDynamicObject_FR(18228, 3456.39990, -2822.94995, 0.00000,   0.00000, 0.00000, 211.22000);
	CreateDynamicObject_FR(3512, 3488.17993, -2813.94995, 6.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3512, 3467.37012, -2802.88989, 18.39000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3512, 3466.36011, -2847.34009, 5.42000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16776, 3254.79004, -2740.33008, 60.95000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3437, 3000.41992, -2899.73999, 93.69000,   0.00000, 90.00000, 30.00000);
	CreateDynamicObject_FR(3437, 3000.41992, -2893.76001, 93.69000,   0.00000, 90.00000, 330.00000);
	CreateDynamicObject_FR(16776, 3254.79004, -2766.53003, 60.95000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(3851, 3059.15991, -2769.52002, 97.28000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, 3053.52002, -2763.86011, 97.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3851, 3053.51001, -2758.20996, 97.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3851, 3053.52002, -2763.86011, 101.26000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3851, 3053.51001, -2758.20996, 101.25000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3851, 3059.15991, -2769.52002, 101.26000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, 3070.43994, -2769.52002, 97.28000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3851, 3070.43994, -2769.52002, 101.26000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(8397, 3357.11011, -2897.29004, 72.92000,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8397, 3357.11011, -2883.52002, 75.66000,   22.50000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8397, 3357.11011, -2871.84009, 83.46000,   45.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8397, 3357.11011, -2864.03003, 95.14000,   67.50000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8397, 3357.11011, -2861.29004, 108.92000,   90.00000, 80.34000, 99.66000);
	CreateDynamicObject_FR(8397, 3357.11011, -2864.03003, 122.70000,   67.50000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8397, 3357.11011, -2871.84009, 134.38000,   45.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8397, 3357.11011, -2883.52002, 142.17999,   22.50000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8397, 3357.11011, -2897.29004, 144.92000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8397, 3357.11011, -2911.07007, 142.17999,   337.50000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8397, 3357.11011, -2922.75000, 134.38000,   315.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8397, 3357.11011, -2930.55005, 122.70000,   292.50000, 0.00000, 180.00000);
	CreateDynamicObject_FR(8397, 3357.11011, -2933.29004, 108.92000,   270.00000, 80.34000, 260.34000);
	CreateDynamicObject_FR(8397, 3357.11011, -2930.55005, 95.14000,   292.50000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8397, 3357.11011, -2922.75000, 83.46000,   315.00000, 180.00000, 0.00000);
	CreateDynamicObject_FR(8397, 3357.11011, -2911.07007, 75.66000,   337.50000, 180.00000, 0.00000);
	CreateDynamicObject_FR(18779, 3371.70996, -2891.19995, 93.69000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(6873, 3663.15991, -2887.64990, -71.12000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(6873, 3708.29004, -2906.66992, -71.12000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18367, 3662.36011, -2847.70996, 68.19000,   6.40000, 0.00000, 180.00000);
	CreateDynamicObject_FR(18367, 3654.20996, -2855.36011, 68.07000,   6.39000, 0.00000, 179.99001);
	CreateDynamicObject_FR(18367, 3621.68994, -2825.71997, 68.19000,   6.39000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18367, 3629.91992, -2818.07007, 68.19000,   6.39000, 0.00000, 90.00000);
	CreateDynamicObject_FR(18367, 3630.86011, -2817.14990, 68.21000,   6.39000, 0.00000, 179.99001);
	CreateDynamicObject_FR(18367, 3622.69995, -2824.77002, 68.21000,   6.39000, 0.00000, 179.99001);
	CreateDynamicObject_FR(18693, 1346.16602, -1401.77002, 15.30681,   0.00000, 0.00000, 0.00000);

	//Karts 1
	CreateDynamicObject_FR(13593, 1321.27002, 2128.05005, 10.74000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3578, 1320.50000, 2135.08008, 10.71000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3578, 1321.88000, 2135.12012, 10.71000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(13593, 1321.27002, 2142.17993, 10.74000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(978, 1321.71997, 2147.17993, 10.86000,   0.00000, 0.00000, 234.75999);
	CreateDynamicObject_FR(978, 1328.43005, 2148.33008, 10.86000,   0.00000, 0.00000, 146.74001);
	CreateDynamicObject_FR(978, 1327.53943, 2140.32300, 10.86000,   0.00000, 0.00000, 173.56117);
	CreateDynamicObject_FR(978, 1335.96436, 2142.59204, 10.86000,   0.00000, 0.00000, 214.63000);
	CreateDynamicObject_FR(978, 1335.18005, 2149.35010, 10.86000,   0.00000, 358.85001, 231.69000);
	CreateDynamicObject_FR(978, 1340.58325, 2149.70728, 10.86000,   0.00000, 356.72000, 260.08218);
	CreateDynamicObject_FR(18451, 1339.76001, 2157.37012, 10.53000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3625, 1340.56995, 2165.06006, 12.45000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1324.79004, 2149.64990, 10.43000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1331.51001, 2141.29004, 10.42000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1338.05005, 2154.16992, 10.42000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(13594, 1339.31995, 2159.33008, 13.46000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(16776, 1326.01001, 2167.87988, 9.68000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(978, 1329.20996, 2164.56006, 10.86000,   0.00000, 0.00000, 0.79000);
	CreateDynamicObject_FR(978, 1329.80005, 2170.86011, 10.86000,   0.00000, 0.00000, 357.84000);
	CreateDynamicObject_FR(978, 1320.58997, 2166.98999, 10.86000,   0.00000, 0.00000, 327.60001);
	CreateDynamicObject_FR(978, 1319.87000, 2173.11011, 10.86000,   0.00000, 0.00000, 227.21001);
	CreateDynamicObject_FR(978, 1327.68994, 2176.64990, 10.86000,   0.00000, 0.00000, 181.09000);
	CreateDynamicObject_FR(3502, 1336.06006, 2173.87012, 11.14000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(1985, 1331.96997, 2174.35010, 12.73000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1985, 1331.96997, 2173.43994, 12.73000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1985, 1333.52002, 2173.87012, 12.73000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1985, 1334.33997, 2174.43994, 12.73000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1985, 1334.33997, 2173.37012, 12.73000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1985, 1336.33997, 2173.87012, 12.73000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1985, 1339.69995, 2173.87012, 12.73000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1985, 1337.93005, 2174.43994, 12.73000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1985, 1337.93005, 2173.22998, 12.73000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1317.14001, 2169.68994, 10.51000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1324.83997, 2171.08008, 10.43000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, 1341.53003, 2165.72998, 13.43000,   0.00000, 0.00000, 268.76999);
	CreateDynamicObject_FR(1503, 1342.34998, 2173.83008, 10.02000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(1503, 1347.71997, 2173.83008, 10.02000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1225, 1345.06995, 2173.85010, 10.43000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, 1353.63000, 2174.68994, 10.69000,   0.00000, 359.34000, 160.92000);
	CreateDynamicObject_FR(978, 1354.27002, 2169.28003, 10.69000,   0.00000, 359.82999, 30.99000);
	CreateDynamicObject_FR(1225, 1358.17004, 2172.41992, 10.42000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1349.00000, 2171.51001, 10.42000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18367, 1343.28003, 2190.23999, 1.73000,   341.29999, 0.00000, 0.00000);
	CreateDynamicObject_FR(3502, 1347.09998, 2155.52002, 16.38000,   0.00000, 0.00000, 179.99001);
	CreateDynamicObject_FR(3502, 1347.09998, 2147.54004, 17.54000,   17.22000, 0.00000, 180.70000);
	CreateDynamicObject_FR(13594, 1347.06995, 2141.26001, 18.55000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(12956, 1362.84998, 2134.06006, 13.36000,   0.00000, 0.00000, 69.68000);
	CreateDynamicObject_FR(3578, 1356.71997, 2130.87012, 15.96000,   0.00000, 0.00000, 71.01000);
	CreateDynamicObject_FR(3578, 1354.94995, 2130.87012, 15.96000,   0.00000, 0.00000, 71.00000);
	CreateDynamicObject_FR(18367, 1347.33923, 2130.77466, 16.29000,   5.74000, 0.16000, 60.89000);
	CreateDynamicObject_FR(978, 1410.68994, 2123.63989, 11.69000,   0.00000, 0.00000, 32.64000);
	CreateDynamicObject_FR(978, 1413.78003, 2126.26001, 11.69000,   0.00000, 0.00000, 137.10001);
	CreateDynamicObject_FR(978, 1406.90002, 2132.60010, 11.69000,   0.00000, 0.00000, 215.38000);
	CreateDynamicObject_FR(1225, 1398.27002, 2125.73999, 14.03000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1398.27002, 2122.07007, 14.03000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1398.27002, 2123.87012, 14.03000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3502, 1411.19995, 2140.53003, 11.46000,   0.00000, 0.00000, 12.22000);
	CreateDynamicObject_FR(3502, 1411.03003, 2148.62988, 11.46000,   0.00000, 0.00000, 350.57001);
	CreateDynamicObject_FR(3502, 1411.14001, 2176.33008, 11.46000,   0.00000, 0.00000, 10.71000);
	CreateDynamicObject_FR(978, 1410.66003, 2183.20996, 11.69000,   0.00000, 0.00000, 143.64999);
	CreateDynamicObject_FR(1225, 1407.91003, 2180.05005, 11.38000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, 1406.83997, 2153.23999, 11.69000,   0.00000, 0.00000, 269.45001);
	CreateDynamicObject_FR(18451, 1410.56006, 2161.40991, 10.88000,   351.95999, 0.00000, 0.00000);
	CreateDynamicObject_FR(18451, 1410.56006, 2165.73999, 10.92000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(1225, 1408.55005, 2163.54004, 10.81000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1410.55005, 2163.54004, 10.92000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 1412.48999, 2163.54004, 10.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(13593, 1399.41003, 2183.22998, 13.57000,   0.00000, 0.00000, 89.18000);
	CreateDynamicObject_FR(18761, 1382.42004, 2184.46997, 13.40000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(978, 1325.68005, 2120.43994, 10.86000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(978, 1321.03003, 2115.77002, 10.86000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, 1316.35999, 2120.43994, 10.86000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(1225, 1413.60999, 2125.86011, 11.38000,   0.00000, 0.00000, 0.00000);

	//Karts 2
	CreateDynamicObject_FR(979, 2427.78101, 1904.80945, 5.30985,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, 2417.22900, 1904.81689, 5.30985,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, 2419.59277, 1904.80859, 5.30985,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(978, 2417.35034, 1940.53235, 5.34104,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(978, 2427.97461, 1940.53223, 5.34104,   0.00000, 0.00000, 179.99451);
	CreateDynamicObject_FR(978, 2418.58398, 1940.54785, 5.34104,   0.00000, 0.00000, 179.99451);
	CreateDynamicObject_FR(979, 2412.55664, 1909.51953, 5.30985,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(978, 2412.55273, 1935.89160, 5.30984,   0.00000, 0.00000, 269.99451);
	CreateDynamicObject_FR(978, 2412.55273, 1917.29333, 5.30984,   0.00000, 0.00000, 269.98901);
	CreateDynamicObject_FR(979, 2412.55664, 1926.55676, 5.30985,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(979, 2432.56006, 1909.44702, 5.30985,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(979, 2432.55957, 1918.80420, 5.30985,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(979, 2432.55957, 1925.83496, 5.30985,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1655, 2429.40063, 1935.47266, 4.31574,   348.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(978, 2436.69336, 1940.01660, 6.26343,   359.31250, 11.66086, 174.13635);
	CreateDynamicObject_FR(979, 2437.04395, 1930.70996, 5.77785,   2.09415, 353.91193, 4.22330);
	CreateDynamicObject_FR(978, 2445.47461, 1937.67285, 7.21544,   359.29333, 359.65558, 157.98633);
	CreateDynamicObject_FR(979, 2446.23145, 1931.35059, 6.76225,   2.09290, 353.90808, 4.21875);
	CreateDynamicObject_FR(18691, 2450.10718, 1933.98486, 4.89315,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3502, 2454.04419, 1934.13611, 9.35831,   14.00000, 0.00000, 274.00000);
	CreateDynamicObject_FR(3502, 2462.60645, 1934.76074, 9.56112,   12.35858, 0.00000, 93.99902);
	CreateDynamicObject_FR(978, 2466.67603, 1936.81348, 9.69943,   0.00000, 0.00000, 179.99451);
	CreateDynamicObject_FR(978, 2475.62891, 1935.23535, 9.69943,   0.00000, 0.00000, 159.99451);
	CreateDynamicObject_FR(979, 2469.80762, 1929.92029, 9.82505,   0.00000, 355.55396, 302.00000);
	CreateDynamicObject_FR(978, 2480.36328, 1911.28516, 9.69943,   0.00000, 0.00000, 82.58667);
	CreateDynamicObject_FR(979, 2474.62012, 1911.33582, 9.82505,   0.00000, 4.67651, 273.99829);
	CreateDynamicObject_FR(978, 2480.44141, 1929.04785, 9.69943,   0.00000, 0.00000, 95.99390);
	CreateDynamicObject_FR(979, 2470.54199, 1928.73242, 9.93425,   0.00000, 355.55054, 301.99768);
	CreateDynamicObject_FR(3865, 2478.52026, 1928.43042, 8.77206,   33.90591, 355.17871, 175.05579);
	CreateDynamicObject_FR(979, 2473.69824, 1902.42871, 9.07664,   0.00000, 4.61453, 253.99353);
	CreateDynamicObject_FR(978, 2478.11328, 1902.30078, 9.15263,   0.00000, 354.61801, 69.75424);
	CreateDynamicObject_FR(978, 2479.05078, 1894.22266, 8.74663,   0.00000, 0.00000, 124.58212);
	CreateDynamicObject_FR(979, 2474.90137, 1893.89746, 8.62304,   0.00000, 1.33826, 301.65295);
	CreateDynamicObject_FR(979, 2480.44824, 1886.44434, 8.91945,   0.00000, 355.03879, 311.65161);
	CreateDynamicObject_FR(979, 2485.96997, 1886.80371, 9.02865,   0.00000, 353.84216, 61.64673);
	CreateDynamicObject_FR(978, 2482.75391, 1895.08142, 9.29383,   0.46622, 5.02017, 256.53857);
	CreateDynamicObject_FR(979, 2488.37598, 1895.55371, 9.48105,   0.00000, 0.09814, 87.15430);
	CreateDynamicObject_FR(979, 2488.82910, 1904.67871, 9.48105,   0.00000, 0.09338, 87.14905);
	CreateDynamicObject_FR(1503, 2486.58887, 1904.20630, 8.76563,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(979, 2489.50586, 1913.88794, 9.48105,   0.00000, 0.09338, 84.70303);
	CreateDynamicObject_FR(978, 2485.46680, 1911.11487, 9.55863,   0.46310, 1.14313, 263.58752);
	CreateDynamicObject_FR(978, 2485.77441, 1920.17969, 9.55863,   0.46149, 359.50452, 271.59717);
	CreateDynamicObject_FR(978, 2485.00391, 1929.26550, 9.47703,   0.46143, 359.50012, 278.21094);
	CreateDynamicObject_FR(979, 2489.73145, 1923.17310, 9.48105,   0.00000, 0.08789, 92.69910);
	CreateDynamicObject_FR(979, 2489.34180, 1932.39709, 9.48105,   0.00000, 0.08789, 92.69714);
	CreateDynamicObject_FR(979, 2484.31738, 1936.83533, 9.48105,   0.00000, 0.08789, 184.69714);
	CreateDynamicObject_FR(1894, 2481.50000, 1934.82153, 7.52769,   0.00000, 18.00000, 0.00000);
	CreateDynamicObject_FR(1894, 2481.50000, 1933.51550, 7.52769,   0.00000, 17.99561, 0.00000);
	CreateDynamicObject_FR(1894, 2450.41406, 1934.82129, 16.06806,   0.00000, 353.99561, 0.00000);
	CreateDynamicObject_FR(1894, 2450.41406, 1933.50476, 16.06806,   0.00000, 353.99048, 0.00000);
	CreateDynamicObject_FR(2931, 2417.93481, 1934.79211, 14.15163,   344.01001, 357.91946, 89.42664);
	CreateDynamicObject_FR(2931, 2417.93457, 1935.85205, 14.15163,   344.00940, 357.91809, 89.42322);
	CreateDynamicObject_FR(979, 2402.55469, 1938.31543, 11.43064,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(978, 2402.54688, 1933.36365, 11.42344,   0.00000, 0.00000, 359.99451);
	CreateDynamicObject_FR(978, 2402.35156, 1947.44507, 11.42344,   0.00000, 0.00000, 269.98352);
	CreateDynamicObject_FR(979, 2407.21094, 1942.88623, 11.43064,   0.00000, 0.00000, 89.99451);
	CreateDynamicObject_FR(979, 2407.21582, 1952.26880, 11.43064,   0.00000, 0.00000, 89.99451);
	CreateDynamicObject_FR(979, 2402.57593, 1957.02112, 11.43064,   0.00000, 0.00000, 179.99451);
	CreateDynamicObject_FR(3269, 2409.15186, 1837.48584, 6.29465,   316.30234, 275.76401, 278.31268);
	CreateDynamicObject_FR(3269, 2409.15137, 1843.85229, 6.29465,   316.30188, 275.76233, 278.31116);
	CreateDynamicObject_FR(3269, 2409.15137, 1849.41272, 6.29465,   316.30188, 275.76233, 278.31116);
	CreateDynamicObject_FR(19166, 2428.85571, 1843.19519, 10.06742,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(19166, 2428.85547, 1853.94434, 10.06742,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(19166, 2428.83496, 1864.86401, 10.06742,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(5822, 2454.64648, 1874.55811, 23.15718,   0.00000, 0.00000, 272.00000);
	CreateDynamicObject_FR(11479, 2455.29321, 1869.12891, 28.25911,   0.00000, 0.00000, 78.00000);
	CreateDynamicObject_FR(979, 2445.71997, 1871.03381, 31.37583,   0.00000, 0.00000, 348.00000);
	CreateDynamicObject_FR(979, 2440.41382, 1867.84717, 31.31463,   0.00000, 0.00000, 77.99744);
	CreateDynamicObject_FR(979, 2454.18457, 1869.32080, 29.25432,   0.00000, 34.00000, 347.99744);
	CreateDynamicObject_FR(979, 2433.12012, 1829.90515, 34.27909,   66.00000, 90.00000, 343.99194);
	CreateDynamicObject_FR(979, 2434.82227, 1829.55774, 34.27909,   65.99487, 90.00000, 338.00916);
	CreateDynamicObject_FR(979, 2436.34668, 1828.85913, 34.27909,   65.98938, 90.00000, 334.02713);
	CreateDynamicObject_FR(979, 2438.06445, 1828.02258, 34.27909,   65.98389, 90.00000, 327.40500);
	CreateDynamicObject_FR(979, 2439.56152, 1827.00317, 34.27909,   65.98389, 90.00000, 323.19165);
	CreateDynamicObject_FR(979, 2441.03320, 1825.89136, 34.27909,   65.98389, 90.00000, 319.21228);
	CreateDynamicObject_FR(979, 2442.44824, 1824.58606, 34.27909,   65.98389, 90.00000, 314.52783);
	CreateDynamicObject_FR(979, 2443.65820, 1823.07739, 34.27909,   65.98389, 90.00000, 307.27359);
	CreateDynamicObject_FR(979, 2444.70410, 1821.54822, 34.27909,   65.98389, 90.00000, 303.05914);
	CreateDynamicObject_FR(979, 2445.60645, 1819.66272, 34.27909,   65.98389, 90.00000, 294.86795);
	CreateDynamicObject_FR(979, 2446.38574, 1817.86816, 34.27909,   65.98389, 90.00000, 289.71957);
	CreateDynamicObject_FR(979, 2446.87793, 1816.28235, 34.27909,   65.98389, 90.00000, 289.71497);
	CreateDynamicObject_FR(1461, 2428.13477, 1824.00317, 38.56032,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1461, 2425.08984, 1823.54370, 38.56032,   0.00000, 0.00000, 16.00000);
	CreateDynamicObject_FR(1461, 2422.28613, 1822.31982, 38.56032,   0.00000, 0.00000, 29.99609);
	CreateDynamicObject_FR(1461, 2419.88867, 1820.53284, 38.56032,   0.00000, 0.00000, 39.99268);
	CreateDynamicObject_FR(1461, 2417.98340, 1818.13416, 38.56032,   0.00000, 0.00000, 59.99023);
	CreateDynamicObject_FR(1461, 2416.75293, 1815.58875, 38.56032,   0.00000, 0.00000, 71.98535);
	CreateDynamicObject_FR(1461, 2416.10156, 1812.48059, 38.56032,   0.00000, 0.00000, 87.98242);
	CreateDynamicObject_FR(1461, 2416.22461, 1809.67468, 38.56032,   0.00000, 0.00000, 99.97852);
	CreateDynamicObject_FR(1461, 2417.12207, 1806.62769, 38.56032,   0.00000, 0.00000, 115.97559);
	CreateDynamicObject_FR(1461, 2418.60254, 1804.09045, 38.56032,   0.00000, 0.00000, 127.97168);
	CreateDynamicObject_FR(1461, 2420.76270, 1801.85486, 38.56032,   0.00000, 0.00000, 141.96875);
	CreateDynamicObject_FR(1461, 2423.17383, 1800.34595, 38.56032,   0.00000, 0.00000, 151.96533);
	CreateDynamicObject_FR(1461, 2434.80762, 1800.80408, 38.56032,   0.00000, 0.00000, 207.95264);
	CreateDynamicObject_FR(1461, 2437.13965, 1802.57947, 38.56032,   0.00000, 0.00000, 221.94922);
	CreateDynamicObject_FR(1461, 2439.06152, 1804.91174, 38.56032,   0.00000, 0.00000, 237.94580);
	CreateDynamicObject_FR(1461, 2440.35352, 1807.61499, 38.56032,   0.00000, 0.00000, 251.94189);
	CreateDynamicObject_FR(1461, 2440.94336, 1810.65076, 38.56032,   0.00000, 0.00000, 263.93848);
	CreateDynamicObject_FR(3502, 2479.12012, 1912.51880, 13.97591,   0.00000, 0.00000, 190.00000);
	CreateDynamicObject_FR(3502, 2478.89453, 1904.50354, 13.97591,   0.00000, 0.00000, 165.99756);
	CreateDynamicObject_FR(3502, 2475.73438, 1897.00403, 13.97591,   0.00000, 0.00000, 147.86438);
	CreateDynamicObject_FR(3502, 2470.38574, 1891.56506, 13.97591,   0.00000, 0.00000, 123.85950);
	CreateDynamicObject_FR(3502, 2462.97168, 1888.70825, 13.97591,   0.00000, 0.00000, 97.62036);
	CreateDynamicObject_FR(3502, 2455.22461, 1894.51270, 13.97591,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(3502, 2455.22461, 1903.32813, 12.33791,   338.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2951, 2455.73267, 1889.72754, 12.41436,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(2951, 2452.81445, 1886.88208, 12.41436,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(2951, 2455.75293, 1885.88293, 12.41436,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(3502, 2455.01953, 1924.83215, 8.72591,   15.98999, 2.08053, 359.42664);
	CreateDynamicObject_FR(3502, 2455.10156, 1933.33630, 11.14951,   15.98511, 2.07642, 359.42322);
	CreateDynamicObject_FR(3502, 2455.18359, 1941.65247, 13.52191,   15.98511, 2.07642, 359.42322);
	CreateDynamicObject_FR(3502, 2455.24512, 1950.16309, 14.52151,   0.00000, 2.07642, 359.42322);
	CreateDynamicObject_FR(3502, 2452.44141, 1952.98926, 14.52151,   0.00000, 2.07092, 89.41772);
	CreateDynamicObject_FR(3502, 2443.86328, 1953.07080, 14.52151,   0.00000, 2.06543, 89.41223);
	CreateDynamicObject_FR(3502, 2435.19922, 1953.15186, 14.52151,   0.00000, 2.06543, 89.41223);
	CreateDynamicObject_FR(3502, 2426.66309, 1953.23291, 14.52151,   0.00000, 2.06543, 89.41223);
	CreateDynamicObject_FR(3502, 2418.03613, 1953.33435, 14.52151,   0.00000, 2.06543, 89.41223);
	CreateDynamicObject_FR(3502, 2409.37988, 1953.41553, 14.52151,   0.00000, 2.06543, 89.41223);
	CreateDynamicObject_FR(3502, 2401.04395, 1951.78308, 13.73591,   352.04507, 6.12457, 112.26300);
	CreateDynamicObject_FR(18671, 2477.26318, 1921.68042, 8.31954,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2476.09082, 1925.45068, 9.88852,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2483.61987, 1883.67590, 8.98051,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2485.55762, 1906.89575, 9.10291,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2486.36914, 1906.89551, 9.10291,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2487.18848, 1906.89551, 9.10291,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2488.02051, 1906.89551, 9.10291,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2485.78613, 1908.28101, 9.10291,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2486.61816, 1908.28027, 9.10291,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2487.47070, 1908.28027, 9.10291,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2488.31152, 1908.28027, 9.10291,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2488.51660, 1936.64209, 8.93972,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2432.69507, 1876.25684, 15.72493,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2441.24658, 1872.38782, 31.44811,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2439.42090, 1863.35120, 31.44811,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18707, 2402.28906, 1852.14856, 12.64700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18707, 2402.28906, 1846.51001, 12.64700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18707, 2402.28906, 1840.05054, 12.64700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18709, 2455.07837, 1908.14221, 9.86473,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18740, 2428.71851, 1811.69629, 37.87031,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(18761, 2436.02246, 1819.17871, 37.76921,   0.00000, 0.00000, 317.19189);
	CreateDynamicObject_FR(978, 2397.83496, 1933.36328, 11.42344,   0.00000, 0.00000, 359.98901);
	CreateDynamicObject_FR(978, 2393.17090, 1938.03174, 11.42344,   0.00000, 0.00000, 269.98901);
	CreateDynamicObject_FR(978, 2397.82324, 1942.89392, 11.42344,   0.00000, 0.00000, 179.98901);
	CreateDynamicObject_FR(978, 2397.80176, 1951.89819, 11.42344,   0.00000, 0.00000, 359.97803);
	CreateDynamicObject_FR(979, 2393.24316, 1957.02051, 11.43064,   0.00000, 0.00000, 179.99451);
	CreateDynamicObject_FR(979, 2383.88281, 1957.02051, 11.43064,   0.00000, 0.00000, 179.99451);
	CreateDynamicObject_FR(978, 2388.43652, 1951.89746, 11.42344,   0.00000, 0.00000, 359.97803);
	CreateDynamicObject_FR(979, 2375.14063, 1954.68896, 11.43064,   0.00000, 0.00000, 209.99451);
	CreateDynamicObject_FR(978, 2382.62085, 1947.43982, 11.42344,   0.00000, 0.00000, 73.97803);
	CreateDynamicObject_FR(978, 2381.36377, 1938.30615, 11.42344,   0.00000, 0.00000, 89.97803);
	CreateDynamicObject_FR(978, 2381.36328, 1928.93872, 11.42344,   0.00000, 0.00000, 89.97803);
	CreateDynamicObject_FR(978, 2381.36328, 1919.57581, 11.42344,   0.00000, 0.00000, 89.97803);
	CreateDynamicObject_FR(978, 2381.36328, 1910.23828, 11.42344,   0.00000, 0.00000, 89.97803);
	CreateDynamicObject_FR(978, 2381.36328, 1900.90137, 11.42344,   0.00000, 0.00000, 89.97803);
	CreateDynamicObject_FR(1655, 2376.54028, 1892.51782, 11.69116,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject_FR(3625, 2377.26953, 1868.68713, 13.14462,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(3625, 2382.54004, 1868.68652, 13.14462,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(978, 2388.91211, 1861.23621, 11.42344,   0.00000, 0.00000, 89.97803);
	CreateDynamicObject_FR(979, 2376.60474, 1832.30737, 11.43064,   0.00000, 0.00000, 359.99451);
	CreateDynamicObject_FR(979, 2385.98340, 1832.30664, 11.43064,   0.00000, 0.00000, 359.98901);
	CreateDynamicObject_FR(979, 2395.26953, 1832.30664, 11.43064,   0.00000, 0.00000, 359.98901);
	CreateDynamicObject_FR(18609, 2389.79150, 1850.57690, 11.17594,   359.06409, 0.93613, 1.18530);
	CreateDynamicObject_FR(18609, 2389.39746, 1851.69849, 11.17594,   359.06067, 0.93384, 181.18103);
	CreateDynamicObject_FR(18609, 2389.41797, 1839.80908, 11.17594,   359.05518, 0.93384, 1.17554);
	CreateDynamicObject_FR(18609, 2389.00781, 1840.88757, 11.17594,   359.05518, 0.93384, 181.17004);
	CreateDynamicObject_FR(18609, 2389.02832, 1829.03552, 11.17594,   359.05518, 0.93384, 1.16455);
	CreateDynamicObject_FR(19132, 2395.09375, 1854.37109, 8.90954,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(19132, 2395.09375, 1850.38171, 8.90954,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(19132, 2395.09375, 1846.37659, 8.90954,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(19132, 2395.09375, 1842.37610, 8.90954,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(19132, 2395.09375, 1838.38501, 8.90954,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(19132, 2395.09375, 1834.38953, 8.90954,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(3502, 2393.11816, 1948.54724, 12.53671,   352.04041, 6.11938, 112.25830);
	CreateDynamicObject_FR(3502, 2386.57324, 1946.03186, 9.25591,   41.96204, 2.77112, 289.55405);
	CreateDynamicObject_FR(2951, 2381.31250, 1890.32336, 10.65625,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(2951, 2381.31250, 1895.73633, 10.65625,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject_FR(1655, 2385.20508, 1892.51758, 11.69116,   0.00000, 0.00000, 179.99451);
	CreateDynamicObject_FR(1655, 2385.20508, 1890.66138, 12.34396,   10.00000, 0.00000, 179.99451);
	CreateDynamicObject_FR(1245, 2385.51489, 1879.90417, 14.44642,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1245, 2385.65820, 1883.50635, 12.24322,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject_FR(1225, 2393.78052, 1933.94849, 11.03171,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2378.44312, 1951.40894, 11.03171,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2389.86499, 1896.93274, 11.03171,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2379.21680, 1882.08923, 13.65332,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2377.05664, 1881.96655, 13.65332,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1225, 2375.21191, 1879.76624, 13.69412,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject_FR(1461, 2426.18555, 1799.33496, 38.56032,   0.00000, 0.00000, 167.96289);
	CreateDynamicObject_FR(1461, 2428.99316, 1799.13110, 38.56032,   0.00000, 0.00000, 181.95898);
	CreateDynamicObject_FR(1461, 2432.02148, 1799.60510, 38.56032,   0.00000, 0.00000, 193.95557);


	//house 10 millones 10.000score
	
	new PlayerHouse = CreateObjectHouse(19329, 1517.328491, -1096.024291, 129.009124, 0.000007, 0.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19329, 1516.234497, -1094.968017, 129.009124, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19329, 1519.472534, -1096.024291, 129.009124, 0.000007, 0.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19329, 1516.228515, -1093.040039, 128.685424, 0.000000, -18.999992, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19329, 1516.236450, -1091.926147, 127.957122, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19329, 1516.220458, -1092.010009, 128.331420, 0.000000, -18.999992, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19172, 1515.922729, -1075.456542, 127.836791, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-70-percent");
	SetDynamicObjectMaterial(PlayerHouse, 1, 18646, "matcolours", "grey-70-percent");
	CreateObjectHouse(1668, 1509.908691, -1082.707519, 128.556137, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19348, 1514.630004, -1076.111816, 127.768218, 0.000000, 179.999984, 90.000015);
	CreateObjectHouse(19348, 1514.630004, -1074.773803, 127.768188, 0.000000, 179.999984, 90.000015);
	CreateObjectHouse(19348, 1517.208007, -1076.111816, 127.768218, 0.000000, 179.999984, 90.000015);
	CreateObjectHouse(19348, 1517.208007, -1074.773803, 127.768218, 0.000000, 179.999984, 90.000015);
	PlayerHouse = CreateObjectHouse(19172, 1508.956420, -1074.303833, 128.023498, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	SetDynamicObjectMaterial(PlayerHouse, 1, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19172, 1506.956420, -1074.303833, 128.019515, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	SetDynamicObjectMaterial(PlayerHouse, 1, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19420, 1505.809936, -1074.880004, 127.208114, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "black");
	PlayerHouse = CreateObjectHouse(19420, 1505.809936, -1073.648071, 127.208114, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "black");
	PlayerHouse = CreateObjectHouse(19420, 1510.119995, -1074.880004, 127.208160, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "black");
	PlayerHouse = CreateObjectHouse(19420, 1510.119995, -1073.648071, 127.208114, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "black");
	PlayerHouse = CreateObjectHouse(19429, 1519.904052, -1099.270507, 130.330017, 0.000007, 0.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19429, 1519.904052, -1099.270507, 133.828018, 0.000007, 0.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19429, 1520.129394, -1100.055664, 130.330017, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19429, 1520.129394, -1100.055664, 133.828018, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19386, 1518.081420, -1100.041625, 130.330017, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19356, 1518.081420, -1100.041625, 133.828018, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(18762, 1510.006225, -1099.483032, 130.934921, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1511.006225, -1099.483032, 130.934921, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1512.006225, -1099.483032, 130.934921, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1513.006225, -1099.483032, 130.934921, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1514.006225, -1099.483032, 130.934921, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1515.006225, -1099.483032, 130.934921, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1516.006225, -1099.483032, 130.934906, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1511.022827, -1095.405029, 129.589920, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1510.022827, -1095.405029, 129.589920, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1511.018920, -1093.552978, 131.067413, 0.000000, -44.999992, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1511.018920, -1093.552978, 132.481414, 0.000000, -44.999992, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1510.018920, -1093.552978, 129.656616, 0.000000, -44.999992, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1511.022827, -1095.405029, 134.588012, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1511.022827, -1094.407104, 134.588012, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1510.022827, -1095.405029, 134.588012, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1513.739624, -1095.479125, 128.037521, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1503.031372, -1071.021606, 132.101715, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1520.473510, -1078.305664, 125.160766, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1520.473510, -1083.305664, 125.160720, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1520.473510, -1088.305664, 125.160720, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1511.022827, -1094.419067, 129.589920, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1511.022827, -1090.384765, 132.095718, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1511.018920, -1093.552978, 129.656616, 0.000000, -44.999992, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1511.022827, -1085.384765, 132.095718, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1511.022827, -1080.384765, 132.095718, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1511.028808, -1078.384765, 132.103713, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1511.014892, -1092.062988, 131.156616, 0.000000, -44.999992, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1510.014892, -1092.062988, 131.156616, 0.000000, -44.999992, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1520.471435, -1081.631591, 126.788818, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1518.691406, -1071.021606, 126.788818, 89.999992, 89.999992, -179.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1520.473510, -1088.305664, 120.984024, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1520.471435, -1086.631591, 126.788818, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1520.471435, -1088.303588, 126.798812, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1513.691406, -1071.021606, 126.788818, 89.999992, 89.999992, -179.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1508.691406, -1071.021606, 126.788818, 89.999992, 89.999992, -179.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1503.691406, -1071.021606, 126.788818, 89.999992, 89.999992, -179.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1520.471435, -1076.631591, 126.260818, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1520.471435, -1073.131591, 126.260818, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1520.473510, -1083.305664, 120.984024, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1520.473510, -1078.305664, 120.984024, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1513.739624, -1094.751098, 127.815551, -29.999990, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1513.739624, -1093.907104, 127.327514, -29.999990, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1513.739624, -1093.049072, 126.827514, -29.999990, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1513.739624, -1092.189086, 126.331512, -29.999990, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1513.739624, -1091.359130, 125.851516, -29.999990, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1510.012817, -1078.859008, 127.879425, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1510.012817, -1078.187011, 127.879714, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1509.295288, -1078.187011, 127.899414, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1509.295288, -1078.859008, 127.879425, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1509.295288, -1078.859008, 132.875823, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1509.295288, -1078.187011, 132.893310, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1510.012817, -1078.187011, 132.875823, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1510.012817, -1078.859008, 132.875823, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1510.022827, -1090.384765, 132.095718, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1510.022827, -1085.384765, 132.095718, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1510.022827, -1080.384765, 132.095718, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1510.028808, -1078.384765, 132.083724, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1513.031372, -1071.021606, 132.101715, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1518.031372, -1071.021606, 132.095718, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1520.471435, -1081.835815, 132.095718, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1520.471435, -1086.835815, 132.095718, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1520.465454, -1088.311767, 132.095718, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1502.460449, -1083.557373, 132.125717, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(18762, 1508.384521, -1083.557373, 132.125717, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(18762, 1502.438720, -1085.212402, 132.125717, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(18762, 1508.390502, -1085.212402, 132.125717, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(18762, 1505.419921, -1088.195312, 132.125717, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(18762, 1505.419921, -1080.579345, 132.125717, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(18762, 1518.457519, -1077.816040, 132.095718, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1516.453125, -1083.474609, 132.095718, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1507.034790, -1076.385864, 132.109710, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1502.034790, -1076.385864, 132.109710, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1501.985595, -1073.389404, 132.107711, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1516.449096, -1079.974609, 132.101715, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1502.424438, -1078.187011, 127.379425, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1502.424438, -1079.187011, 127.379425, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1502.424438, -1078.187011, 132.375823, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1502.424438, -1079.187011, 132.375823, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1501.424438, -1079.187011, 132.375823, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1501.424438, -1079.187011, 127.379425, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1501.424438, -1078.187011, 127.379425, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18762, 1501.424438, -1078.187011, 132.375823, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent");
	PlayerHouse = CreateObjectHouse(18766, 1520.469482, -1097.589477, 127.598022, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18766, "concretebits", "StoneWallTile1-3", -52480);
	PlayerHouse = CreateObjectHouse(18766, 1520.467529, -1093.301635, 127.598022, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18766, "concretebits", "StoneWallTile1-3", -52480);
	PlayerHouse = CreateObjectHouse(18766, 1520.445556, -1098.801635, 126.094619, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18766, "concretebits", "StoneWallTile1-3", -52480);
	PlayerHouse = CreateObjectHouse(18766, 1520.467529, -1095.801635, 120.098617, 0.000000, 0.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18766, "concretebits", "StoneWallTile1-3", -52480);
	PlayerHouse = CreateObjectHouse(19377, 1506.005981, -1075.775512, 132.637924, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-40-percent");
	PlayerHouse = CreateObjectHouse(19377, 1506.005981, -1096.775512, 132.637924, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-40-percent");
	PlayerHouse = CreateObjectHouse(19377, 1515.640014, -1096.775512, 132.637924, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-40-percent");
	PlayerHouse = CreateObjectHouse(19377, 1515.640014, -1086.275512, 132.637924, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-40-percent");
	PlayerHouse = CreateObjectHouse(19377, 1515.640014, -1075.775512, 132.637924, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-40-percent");
	PlayerHouse = CreateObjectHouse(19377, 1516.145996, -1079.775512, 132.661911, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-40-percent");
	PlayerHouse = CreateObjectHouse(19377, 1516.145996, -1090.275512, 132.661911, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-40-percent");
	PlayerHouse = CreateObjectHouse(19377, 1505.686035, -1086.275512, 132.443008, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-40-percent");
	PlayerHouse = CreateObjectHouse(19435, 1508.722534, -1082.771972, 131.694213, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19435, 1502.116577, -1082.771972, 131.694213, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19435, 1503.723022, -1089.466674, 131.694213, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19435, 1502.116577, -1086.271972, 131.694213, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19435, 1502.116577, -1089.771972, 131.694213, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19435, 1508.722534, -1086.271972, 131.694213, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19435, 1508.532592, -1089.466674, 131.690216, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19435, 1505.324951, -1089.466674, 131.694213, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19435, 1506.928955, -1089.466674, 131.694213, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19435, 1518.386596, -1079.094360, 131.694213, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19435, 1518.386596, -1080.700317, 131.694213, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19435, 1518.386596, -1082.304321, 131.694213, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19435, 1518.386596, -1083.908325, 131.694213, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19435, 1518.386596, -1085.510375, 131.694213, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19454, 1504.722045, -1077.639526, 131.694213, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(19454, 1504.722045, -1079.271484, 131.688217, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-10-percent");
	PlayerHouse = CreateObjectHouse(18766, 1518.453247, -1086.472167, 130.309616, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(18766, 1520.471435, -1076.851562, 130.613739, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(18766, 1520.475463, -1073.021728, 130.613723, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(18766, 1501.001342, -1081.091674, 129.383712, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(18766, 1501.001342, -1073.021728, 129.383743, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(18766, 1507.623901, -1091.714355, 130.251815, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(18766, 1509.561401, -1089.661621, 130.251800, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(18766, 1501.358520, -1089.840454, 129.383712, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(18766, 1508.043334, -1071.021606, 129.383712, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(18766, 1511.890258, -1098.217895, 123.550018, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 19448, "all_walls", "CJ_LIGHTWOOD");
	PlayerHouse = CreateObjectHouse(18766, 1500.991333, -1077.521728, 129.383712, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(18766, 1502.625854, -1091.714355, 129.853210, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(18766, 1502.424438, -1090.237670, 129.383712, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(18766, 1511.888305, -1096.717895, 123.550018, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 19448, "all_walls", "CJ_LIGHTWOOD");
	PlayerHouse = CreateObjectHouse(18766, 1511.894287, -1093.713867, 122.050018, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 19448, "all_walls", "CJ_LIGHTWOOD");
	PlayerHouse = CreateObjectHouse(18766, 1511.890258, -1089.833862, 121.625488, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 19448, "all_walls", "CJ_LIGHTWOOD");
	PlayerHouse = CreateObjectHouse(18766, 1501.424438, -1090.237670, 129.383712, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19448, 1501.232666, -1084.373535, 128.463699, 0.000007, 0.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 2558, "hospital", "CJ_H_CURTAIN1");
	PlayerHouse = CreateObjectHouse(19448, 1501.223754, -1084.380981, 131.850021, 0.000007, 0.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 2558, "hospital", "CJ_H_CURTAIN1");
	PlayerHouse = CreateObjectHouse(19435, 1515.967651, -1076.244750, 127.265121, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19435, 1515.967651, -1074.634765, 127.265121, 0.000007, 90.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19435, 1517.177246, -1082.616699, 127.265121, 0.000006, 90.000000, 30.000001);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19435, 1517.980957, -1083.993408, 127.265121, 0.000006, 90.000000, 30.000001);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19435, 1505.810668, -1082.753662, 127.265075, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19435, 1504.206665, -1082.753662, 127.265121, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19435, 1507.755859, -1080.128906, 121.416610, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19435, 1509.353881, -1080.128906, 121.416610, 0.000000, 90.000007, -89.999969);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-50-percent");
	PlayerHouse = CreateObjectHouse(19386, 1509.441406, -1097.381591, 130.320022, 0.000007, 0.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 2082, "cj_tables", "CJ_WOOD6");
	PlayerHouse = CreateObjectHouse(19356, 1509.441406, -1097.381591, 133.820114, 0.000007, 0.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 2082, "cj_tables", "CJ_WOOD6");
	CreateObjectHouse(19448, 1519.211914, -1087.421630, 121.565322, 89.999992, 270.000000, -179.999984);
	PlayerHouse = CreateObjectHouse(19448, 1510.107421, -1092.141601, 130.381210, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 2082, "cj_tables", "CJ_WOOD6");
	PlayerHouse = CreateObjectHouse(19448, 1510.111328, -1088.881591, 130.381210, 89.999992, 179.999984, -179.999984);
	SetDynamicObjectMaterial(PlayerHouse, 0, 2082, "cj_tables", "CJ_WOOD6");
	PlayerHouse = CreateObjectHouse(14407, 1518.203613, -1092.881958, 124.070022, -0.000007, -0.000000, -179.999954);
	SetDynamicObjectMaterial(PlayerHouse, 0, 19378, "all_walls", "mp_diner_woodwall");
	PlayerHouse = CreateObjectHouse(14407, 1514.281372, -1092.701660, 120.850021, 0.000007, 0.000000, 0.000007);
	SetDynamicObjectMaterial(PlayerHouse, 0, 19378, "all_walls", "mp_diner_woodwall");
	CreateObjectHouse(19379, 1516.154418, -1085.927124, 125.258911, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19448, 1516.143310, -1100.723388, 126.657623, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19448, 1516.143310, -1100.723388, 123.158020, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19356, 1516.171386, -1092.511596, 120.532012, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19356, 1516.187377, -1095.491699, 126.828125, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19356, 1505.261352, -1100.041625, 130.330017, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19448, 1516.143310, -1104.286865, 130.330017, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19356, 1511.910766, -1101.641845, 130.330017, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19325, 1520.956176, -1102.159301, 129.371612, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(19429, 1519.210083, -1100.874267, 132.019714, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(18756, 1513.854614, -1102.130371, 130.526916, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(18757, 1513.854614, -1102.130371, 130.526916, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(1533, 1516.521118, -1104.155029, 128.546051, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(948, 1520.053833, -1100.596679, 128.595169, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19448, 1511.671386, -1100.041625, 130.330017, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19448, 1517.831420, -1090.897705, 121.876022, 89.999992, 270.000000, -179.999984);
	CreateObjectHouse(19448, 1518.319335, -1090.893676, 121.830017, 89.999992, 270.000000, -179.999984);
	CreateObjectHouse(19448, 1502.481323, -1096.251586, 130.330017, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19356, 1505.377441, -1087.421630, 123.220016, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19448, 1511.491333, -1078.711669, 123.220016, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19448, 1505.491333, -1082.451660, 123.220016, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19429, 1510.681396, -1083.481567, 123.220016, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19429, 1506.341430, -1083.481567, 123.220016, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19429, 1510.981323, -1087.401611, 123.220016, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(14867, 1505.856079, -1079.528442, 123.014511, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(14867, 1511.100097, -1079.528442, 123.014511, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2528, 1508.0675, -1091.6196, 121.4630, 0.000000, 0.0000, 180.0);
	CreateObjectHouse(2526, 1506.0585, -1090.4041, 121.4686, 0.000000, -0.000007, -90.0);
	CreateObjectHouse(1724, 1518.804443, -1081.821289, 127.278015, 0.000004, 0.000006, -54.499980);
	CreateObjectHouse(1724, 1515.567871, -1082.407836, 127.278015, 0.000005, -0.000005, 45.500003);
	CreateObjectHouse(1724, 1515.915161, -1084.679687, 127.278015, -0.000003, -0.000006, 113.459991);
	CreateObjectHouse(19379, 1511.427490, -1099.150512, 128.500015, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19379, 1501.795410, -1099.150512, 128.500015, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19378, 1515.401367, -1099.981567, 123.980010, 0.079999, 90.000007, -89.999969);
	CreateObjectHouse(19379, 1506.171508, -1076.762939, 127.198013, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19448, 1516.141357, -1076.871582, 123.220016, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19448, 1511.521362, -1078.761596, 123.220016, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19448, 1506.791381, -1077.571655, 123.220016, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19386, 1508.581420, -1087.421630, 123.220016, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19448, 1505.491333, -1092.085571, 123.220016, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19448, 1506.751342, -1092.211669, 123.220016, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19448, 1510.491333, -1092.211669, 123.220016, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(2315, 1509.533325, -1085.379638, 127.916015, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2315, 1509.533325, -1082.961669, 127.916015, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2350, 1510.551391, -1086.817138, 127.629913, -0.000007, -0.000001, 165.513549);
	CreateObjectHouse(2248, 1502.361816, -1087.132324, 127.780136, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(1744, 1501.346679, -1081.970458, 127.419219, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(19172, 1508.039306, -1071.548950, 129.978622, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(948, 1518.156494, -1077.401855, 121.485351, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(948, 1513.296630, -1077.398315, 121.485321, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19173, 1518.042968, -1087.526977, 123.099716, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(2562, 1512.118408, -1081.734008, 121.438217, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(19173, 1502.585083, -1096.732299, 130.399719, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(1502, 1509.371337, -1087.381591, 121.460021, -0.000007, -0.000000, -179.999954);
	CreateObjectHouse(1502, 1509.461425, -1098.121582, 128.580017, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(19325, 1504.855712, -1070.527099, 129.371612, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(19325, 1518.605712, -1070.527099, 129.371612, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(19325, 1514.479736, -1070.527099, 129.371612, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(19325, 1520.960205, -1081.174682, 129.371612, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(19325, 1520.960205, -1085.300781, 129.371612, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(19325, 1520.960205, -1089.426879, 129.371612, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(19379, 1506.171508, -1087.262939, 127.198013, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19379, 1515.801513, -1076.762939, 127.198013, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19379, 1515.801513, -1085.710937, 127.192016, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19356, 1516.169433, -1092.925659, 126.406021, -18.999990, 0.000000, 0.000007);
	CreateObjectHouse(19356, 1516.161376, -1095.491699, 123.335311, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19356, 1509.441406, -1094.175659, 130.320022, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19356, 1516.178588, -1092.526123, 124.025177, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19379, 1516.154418, -1075.431152, 125.258911, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19379, 1506.522338, -1085.553100, 125.270004, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19379, 1506.522338, -1075.795166, 125.258911, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19379, 1506.522338, -1096.053100, 125.270019, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19325, 1520.960205, -1080.174682, 122.764114, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19325, 1520.960205, -1086.816772, 122.764114, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19325, 1520.960205, -1093.454833, 122.764114, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(2563, 1514.244506, -1079.471069, 121.465911, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19325, 1510.353393, -1070.527099, 129.371612, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(19429, 1509.214721, -1093.802612, 130.282318, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19325, 1500.729858, -1070.526733, 129.371612, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(19379, 1515.995483, -1101.212524, 128.494613, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19448, 1504.596313, -1093.809326, 130.330017, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19429, 1511.910766, -1104.045776, 130.330017, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19429, 1502.857421, -1100.041625, 130.330017, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19378, 1506.522338, -1082.053100, 121.383819, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19378, 1516.154418, -1082.053100, 121.383819, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19378, 1516.154418, -1092.553100, 121.383819, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19378, 1506.522338, -1092.553100, 121.383819, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19429, 1515.710083, -1100.874267, 132.019714, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19429, 1512.210083, -1100.874267, 132.019714, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19429, 1512.210083, -1102.472167, 132.019714, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19429, 1512.210083, -1104.072143, 132.019714, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19429, 1515.710083, -1102.472167, 132.019714, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19429, 1519.210083, -1102.472167, 132.019714, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19429, 1515.710083, -1104.072143, 132.019714, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19429, 1519.210083, -1104.072143, 132.019714, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19430, 1520.157226, -1101.887084, 128.533218, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19430, 1520.157226, -1102.887084, 128.517211, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(2139, 1508.563598, -1091.589355, 126.744522, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(1714, 1504.225463, -1098.361816, 128.585510, 0.000005, 0.000005, -44.999984);
	CreateObjectHouse(2175, 1503.671997, -1099.390991, 128.576812, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(1818, 1517.349121, -1084.063720, 127.278701, 0.000006, -0.000003, 30.000001);
	CreateObjectHouse(2251, 1509.783203, -1086.869750, 129.061645, -0.000006, -0.000003, 149.999969);
	CreateObjectHouse(948, 1520.053833, -1103.596679, 128.595214, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2123, 1507.222167, -1073.537597, 127.938018, -0.000000, -0.000007, 94.685989);
	CreateObjectHouse(2123, 1508.441162, -1073.452636, 127.938018, 0.000000, -0.000007, 87.159988);
	CreateObjectHouse(2123, 1509.722167, -1073.594604, 127.938018, 0.000000, -0.000007, 85.171981);
	CreateObjectHouse(2123, 1509.722167, -1075.144653, 127.938018, 0.000000, 0.000007, -85.409973);
	CreateObjectHouse(2123, 1508.585449, -1075.059692, 127.938018, -0.000000, 0.000007, -97.143974);
	CreateObjectHouse(2123, 1507.281860, -1075.022338, 127.938018, 0.000000, 0.000007, -88.072975);
	CreateObjectHouse(2069, 1501.867553, -1076.881469, 127.338623, -0.000006, -0.000003, 149.999969);
	CreateObjectHouse(2069, 1501.881591, -1072.095458, 127.338623, -0.000006, -0.000003, 149.999969);
	CreateObjectHouse(2333, 1502.983520, -1075.917358, 127.252517, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2252, 1502.001098, -1075.882080, 128.492813, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(19173, 1501.536621, -1074.535888, 129.512924, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2291, 1513.210449, -1074.589355, 127.272415, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2291, 1513.210449, -1075.511352, 127.272415, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2291, 1513.210449, -1076.415405, 127.272415, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2291, 1513.210449, -1077.317260, 127.272415, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2292, 1513.210449, -1077.761352, 127.272415, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2291, 1514.678466, -1077.761352, 127.272415, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(2291, 1515.640502, -1077.761352, 127.272415, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(2291, 1516.602416, -1077.761352, 127.272415, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(2291, 1517.564331, -1077.761352, 127.272415, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(2084, 1514.426757, -1078.845703, 127.259246, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(2257, 1518.134155, -1087.053710, 129.499618, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(2571, 1518.266235, -1082.080810, 121.485610, -0.000005, 0.000004, -140.728576);
	CreateObjectHouse(2293, 1516.452270, -1082.270385, 121.483978, -0.000007, -0.000000, 175.345581);
	CreateObjectHouse(2727, 1508.444702, -1077.844604, 123.371826, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(19356, 1509.441406, -1100.591674, 130.320022, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19443, 1514.401367, -1094.231567, 128.325729, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1514.401367, -1093.731567, 128.154724, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1510.901367, -1093.731567, 128.154724, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1513.263427, -1094.241577, 128.324615, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1509.764526, -1094.701171, 128.321716, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1514.401367, -1093.231567, 127.991134, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1513.263427, -1093.237548, 127.985122, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1509.764526, -1093.731567, 127.985122, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1514.401367, -1092.731567, 127.814010, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1510.901367, -1092.731567, 127.814010, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1509.764526, -1092.731567, 127.643722, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1514.401367, -1092.231567, 127.643722, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1513.263427, -1092.237548, 127.637710, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1514.401367, -1091.731567, 127.463714, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1510.901367, -1091.731567, 127.463714, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1514.401367, -1091.731567, 127.279724, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19443, 1510.901367, -1091.731567, 127.279724, 0.000007, 90.000000, 0.000007);
	CreateObjectHouse(19448, 1511.671386, -1100.041625, 133.828018, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19356, 1509.441406, -1094.175659, 133.828018, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19448, 1504.596313, -1093.809326, 133.828018, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19448, 1502.481323, -1096.251586, 133.828018, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19356, 1505.261352, -1100.041625, 133.828018, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19429, 1502.857421, -1100.041625, 133.828018, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19356, 1509.441406, -1100.591674, 133.828018, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(19379, 1515.495483, -1101.212524, 128.318817, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19429, 1519.204223, -1076.871582, 125.765319, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(19429, 1515.704223, -1076.871582, 125.765319, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(19429, 1512.204223, -1076.871582, 125.765319, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(19429, 1511.521362, -1081.825561, 125.765319, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(19429, 1511.521362, -1078.325561, 125.765319, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(19429, 1510.681396, -1083.473510, 123.521011, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19429, 1506.341430, -1083.473510, 123.521011, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19429, 1505.491333, -1085.689575, 125.765319, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(19429, 1505.491333, -1082.189575, 125.765319, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(19429, 1505.491333, -1078.689575, 125.765319, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(19429, 1509.791381, -1077.571655, 125.765319, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(19429, 1506.291381, -1077.571655, 125.765319, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(19429, 1510.034179, -1087.421630, 125.765319, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(19429, 1506.534179, -1087.421630, 125.765319, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(19429, 1505.491333, -1089.189575, 125.765319, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(19429, 1505.491333, -1092.689575, 125.765319, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(19429, 1509.034179, -1092.211669, 125.765319, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(19429, 1505.534179, -1092.211669, 125.765319, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(19429, 1510.491333, -1092.689575, 125.765319, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(19429, 1510.491333, -1089.189575, 125.765319, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(1744, 1505.423095, -1085.886352, 121.690612, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2084, 1515.409667, -1078.581298, 127.259216, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(2226, 1501.957519, -1074.419311, 128.224319, 0.000001, -0.000007, 79.999984);
	CreateObjectHouse(2333, 1502.983520, -1074.045288, 127.252517, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2350, 1510.592163, -1085.835693, 127.629913, -0.000007, 0.000000, -178.622726);
	CreateObjectHouse(2350, 1510.573608, -1084.876464, 127.629913, -0.000007, -0.000000, 172.857635);
	CreateObjectHouse(2350, 1510.573608, -1083.876464, 127.629913, -0.000006, -0.000004, 145.806564);
	CreateObjectHouse(2350, 1510.591308, -1082.933837, 127.629913, -0.000007, 0.000001, -169.550369);
	CreateObjectHouse(2435, 1520.377685, -1091.290283, 127.083114, 0.000000, 36.500007, -89.999969);
	CreateObjectHouse(2435, 1520.377685, -1092.043334, 126.533813, 0.000000, 36.500007, -89.999969);
	CreateObjectHouse(2435, 1520.377685, -1092.791259, 125.977722, 0.000000, 36.500007, -89.999969);
	CreateObjectHouse(2435, 1520.377685, -1093.537231, 125.421722, 0.000000, 36.500007, -89.999969);
	CreateObjectHouse(2333, 1518.881958, -1071.915527, 126.766815, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2728, 1508.444702, -1077.278564, 123.371810, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(948, 1510.696044, -1090.616699, 127.303268, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(948, 1510.696044, -1089.116699, 127.303314, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(948, 1510.696044, -1087.616699, 127.303314, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2011, 1502.308837, -1087.162963, 127.214248, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2333, 1509.870483, -1083.896484, 127.374221, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2333, 1509.370483, -1083.896484, 128.935913, -89.999992, -89.999992, -0.000007);
	CreateObjectHouse(2333, 1509.396484, -1083.896484, 128.095916, -89.999992, -89.999992, -0.000007);
	CreateObjectHouse(2333, 1509.870483, -1085.772460, 127.374221, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2333, 1509.370483, -1085.772460, 128.935913, -89.999992, -89.999992, -0.000007);
	CreateObjectHouse(2333, 1509.396484, -1085.772460, 128.095916, -89.999992, -89.999992, -0.000007);
	CreateObjectHouse(2333, 1509.870483, -1087.654418, 127.374221, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2333, 1509.370483, -1087.654418, 128.935913, -89.999992, -89.999992, -0.000007);
	CreateObjectHouse(2333, 1509.396484, -1087.654418, 128.095916, -89.999992, -89.999992, -0.000007);
	CreateObjectHouse(2139, 1508.559326, -1083.007324, 127.225021, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2139, 1508.559326, -1084.007324, 127.225021, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2139, 1508.559326, -1085.007324, 127.225021, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2139, 1508.559326, -1086.007324, 127.225021, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2139, 1508.559326, -1087.007324, 127.225021, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2132, 1508.559326, -1088.009399, 127.299011, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2333, 1509.370483, -1089.538452, 128.935913, -89.999992, -89.999992, -0.000007);
	CreateObjectHouse(2333, 1509.396484, -1089.538452, 128.095916, -89.999992, -89.999992, -0.000007);
	CreateObjectHouse(2333, 1509.870483, -1090.938476, 127.374221, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2333, 1509.370483, -1091.412475, 128.935913, -89.999992, -89.999992, -0.000007);
	CreateObjectHouse(2333, 1509.396484, -1091.412475, 128.095916, -89.999992, -89.999992, -0.000007);
	CreateObjectHouse(2333, 1509.870483, -1083.356933, 127.914016, 0.000000, 89.999992, 89.999984);
	CreateObjectHouse(2333, 1510.690429, -1083.356933, 127.914016, 0.000000, 89.999992, 89.999984);
	CreateObjectHouse(2333, 1510.690429, -1083.896484, 127.374221, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2333, 1510.690429, -1085.772460, 127.374221, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2333, 1510.690429, -1087.654418, 127.374221, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2333, 1509.124511, -1083.846435, 126.862213, 89.999992, -89.999992, 179.999984);
	CreateObjectHouse(2333, 1509.124511, -1085.730468, 126.862213, 89.999992, -89.999992, 179.999984);
	CreateObjectHouse(2333, 1509.124511, -1087.618286, 126.862213, 89.999992, -89.999992, 179.999984);
	CreateObjectHouse(2333, 1509.114501, -1083.846435, 126.024917, 89.999992, -89.999992, 179.999984);
	CreateObjectHouse(2333, 1509.114501, -1085.730468, 126.024917, 89.999992, -89.999992, 179.999984);
	CreateObjectHouse(2333, 1509.114501, -1087.618286, 126.024917, 89.999992, -89.999992, 179.999984);
	CreateObjectHouse(2139, 1508.559326, -1090.007324, 127.225021, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2333, 1506.927246, -1091.866088, 127.374221, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(2333, 1506.927246, -1091.351440, 128.935913, -89.999992, 0.000000, 0.000007);
	CreateObjectHouse(2333, 1506.927246, -1091.409423, 128.095916, -89.999992, 0.000000, 0.000007);
	CreateObjectHouse(2333, 1505.061279, -1091.866088, 127.374221, 0.000007, 0.000000, 0.000007);
	CreateObjectHouse(2333, 1505.061279, -1091.351440, 128.935913, -89.999992, 0.000000, 0.000007);
	CreateObjectHouse(2333, 1505.061279, -1091.409423, 128.095916, -89.999992, 0.000000, 0.000007);
	CreateObjectHouse(2131, 1504.446044, -1090.556274, 127.225021, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(2131, 1504.442016, -1090.818359, 127.219024, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(2139, 1507.917968, -1090.533447, 127.225021, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(2139, 1505.917968, -1090.533447, 127.225021, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(2139, 1504.917968, -1090.533447, 127.225021, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(2149, 1508.711547, -1090.226074, 128.487823, -0.000002, 0.000007, -109.499969);
	CreateObjectHouse(2139, 1506.917968, -1090.533447, 127.225021, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(2821, 1508.323852, -1090.687133, 128.377914, -0.000007, -0.000002, 164.341186);
	CreateObjectHouse(2822, 1508.709960, -1088.062255, 128.343734, -0.000007, -0.000002, 164.341171);
	CreateObjectHouse(2823, 1507.101562, -1090.706787, 128.363128, -0.000007, 0.000000, -176.791824);
	CreateObjectHouse(2828, 1501.980712, -1073.199340, 128.236312, -0.000001, 0.000007, -104.999969);
	CreateObjectHouse(2829, 1509.688598, -1083.359130, 128.422012, -0.000001, 0.000007, -104.999969);
	CreateObjectHouse(2832, 1517.377807, -1083.303466, 127.790481, -0.000003, 0.000006, -116.956542);
	CreateObjectHouse(2123, 1506.281860, -1075.022338, 127.938018, -0.000001, 0.000007, -97.698974);
	CreateObjectHouse(2123, 1506.222167, -1073.537597, 127.938018, -0.000000, -0.000007, 90.936553);
	CreateObjectHouse(2333, 1518.881958, -1073.797485, 126.766815, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2333, 1518.881958, -1075.667480, 126.766815, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2333, 1518.881958, -1077.539550, 126.766815, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2333, 1520.469238, -1077.539550, 126.243820, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(2333, 1520.469238, -1075.667480, 126.243820, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(2333, 1520.469238, -1073.797485, 126.243820, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(2333, 1520.469238, -1071.915527, 126.243820, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(2333, 1520.974731, -1072.445068, 127.317123, 0.000000, 89.999992, 89.999984);
	CreateObjectHouse(2333, 1518.882568, -1078.028320, 127.303115, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(19448, 1519.937133, -1073.967163, 124.957015, 89.999992, 179.999984, -179.999984);
	CreateObjectHouse(2291, 1513.210449, -1073.621337, 127.272415, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2239, 1517.908569, -1077.959106, 127.280944, -0.000006, -0.000003, 149.999969);
	CreateObjectHouse(2253, 1519.724609, -1078.688354, 128.003723, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2238, 1519.724609, -1078.262329, 128.137542, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(2230, 1519.888183, -1071.622680, 127.215011, 0.000000, 90.000007, -89.999969);
	CreateObjectHouse(2082, 1520.047851, -1077.193969, 128.761215, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(2083, 1520.047851, -1076.732910, 127.943222, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(2083, 1520.047851, -1076.233032, 128.906417, 89.999992, 89.999992, -179.999969);
	CreateObjectHouse(2435, 1520.377685, -1094.283203, 124.867721, 0.000000, 36.500007, -89.999969);
	CreateObjectHouse(19174, 1512.402465, -1089.385742, 123.433212, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(19448, 1517.831420, -1087.415649, 121.565322, 89.999992, 270.000000, -179.999984);
	CreateObjectHouse(19172, 1514.343383, -1098.907226, 130.640548, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(2169, 1505.612426, -1099.358398, 128.575012, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(2169, 1507.550415, -1099.358398, 128.575012, -0.000007, 0.000000, -179.999954);
	CreateObjectHouse(2169, 1503.184082, -1098.552001, 128.575012, 0.000000, -0.000007, 89.999984);
	CreateObjectHouse(2435, 1511.991455, -1094.403564, 123.986938, 0.000000, 36.499992, 89.999984);
	CreateObjectHouse(2435, 1511.991455, -1093.653564, 123.437118, 0.000000, 36.499992, 89.999984);
	CreateObjectHouse(2435, 1511.991455, -1092.909545, 122.883117, 0.000000, 36.499992, 89.999984);
	CreateObjectHouse(2435, 1511.991455, -1092.165527, 122.335113, 0.000000, 36.499992, 89.999984);
	CreateObjectHouse(2491, 1510.239501, -1091.879638, 121.460037, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1516.618408, -1078.455322, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1519.618408, -1078.455322, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1516.618408, -1081.455322, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1519.618408, -1081.455322, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1516.618408, -1076.455322, 132.505615, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1516.618408, -1072.455322, 132.507156, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1516.618408, -1084.455322, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1516.618408, -1081.455322, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1519.618408, -1084.455322, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1510.785766, -1089.389160, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1510.785766, -1083.389160, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1510.785766, -1077.389160, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1513.618408, -1079.455322, 132.505615, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1513.618408, -1085.455322, 132.505615, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1512.618408, -1094.455322, 132.505615, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1512.618408, -1097.955322, 132.505615, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1508.391357, -1098.880493, 132.505615, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1508.391357, -1094.880493, 132.505615, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1503.217407, -1098.880493, 132.505615, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1503.217407, -1094.880493, 132.505615, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1508.285766, -1085.389160, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1508.285766, -1083.389160, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1505.285766, -1080.389160, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1502.285766, -1083.389160, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1502.285766, -1085.389160, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1505.285766, -1088.097534, 131.581222, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1510.618408, -1072.455322, 132.507110, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1510.618408, -1074.955322, 132.507110, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1504.618408, -1074.955322, 132.507110, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1504.618408, -1072.455322, 132.507110, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1518.118408, -1088.455322, 132.505615, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1518.118408, -1091.455322, 132.505615, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1518.118408, -1097.955322, 132.505615, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1512.423828, -1078.048095, 125.127014, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1518.423828, -1078.048095, 125.127014, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1512.423828, -1084.048095, 125.127014, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1518.423828, -1084.048095, 125.127014, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1508.569335, -1082.570800, 125.127014, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1508.569335, -1081.070800, 125.127014, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1508.569335, -1079.570800, 125.127014, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1508.569335, -1078.070800, 125.127014, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1509.490234, -1088.001831, 125.127014, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1509.490234, -1091.897827, 125.127014, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1506.490234, -1088.001831, 125.127014, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(957, 1506.490234, -1091.897827, 125.127014, 0.000000, 0.000007, -89.999969);
	CreateObjectHouse(19893, 1504.74670, -1099.31995, 129.36430,   0.00000, 0.00000, 184.00000);
	CreateObjectHouse(19897, 1505.20300, -1099.34460, 129.37570,   0.00000, 0.00000, 208.06149);
	CreateObjectHouse(19609, 1506.26990, -1095.97253, 128.57980,   0.00000, 0.00000, 0.00000);
	CreateObjectHouse(2125, 1506.07458, -1095.28467, 128.89679,   0.00000, 0.00000, 0.00000);
	CreateObjectHouse(19787, 1506.26990, -1099.90796, 130.85809,   4.00000, 0.00000, 180.00000);
	CreateObjectHouse(19835, 1503.01770, -1098.66443, 129.43080,   0.00000, 0.00000, 342.40811);
	CreateObjectHouse(19814, 1507.73083, -1099.94507, 129.41260,   0.00000, 0.00000, 180.00000);
	CreateObjectHouse(19878, 1508.01318, -1094.63562, 128.66176,   0.00000, 0.00000, 303.76901);
	CreateObjectHouse(19617, 1506.26990, -1093.90112, 130.60760,   0.00000, 0.00000, 0.00000);
	CreateObjectHouse(19617, 1507.26990, -1093.88916, 130.60760,   0.00000, 0.00000, 0.00000);
	CreateObjectHouse(19617, 1505.26990, -1093.90112, 130.60760,   0.00000, 0.00000, 0.00000);
	CreateObjectHouse(19616, 1504.50818, -1094.49524, 128.58142,   0.00000, 0.00000, 12.38882);
	CreateObjectHouse(19612, 1504.53711, -1094.52551, 129.82884,   0.00000, 0.00000, 9.28460);
	CreateObjectHouse(19319, 1507.98169, -1093.90234, 130.85310,   0.00000, -18.50000, 0.00000);
	CreateObjectHouse(19319, 1504.48169, -1093.90234, 130.85310,   0.00000, 18.50000, 0.00000);
	CreateObjectHouse(11717, 1503.06042, -1095.71399, 128.48865,   0.00000, 0.00000, 90.00000);
	CreateObjectHouse(11728, 1517.00269, -1100.01648, 130.37399,   0.00000, 0.00000, 180.00000);
	CreateObjectHouse(11733, 1506.06592, -1094.26575, 128.59810,   0.00000, 0.00000, 90.00000);
	CreateObjectHouse(11737, 1518.10352, -1100.66125, 128.58569,   0.00000, 0.00000, 0.00000);
	CreateObjectHouse(11745, 1507.22009, -1099.32495, 129.54497,   0.00000, 0.00000, 306.39252);
	CreateObjectHouse(19786, 1519.83569, -1073.98315, 128.70930,   0.00000, 0.00000, -90.00000);
	CreateObjectHouse(19575, 1509.62305, -1083.89417, 128.44998,   0.00000, 0.00000, 0.00000);
	CreateObjectHouse(11743, 1506.15198, -1091.01990, 128.34247,   0.00000, 0.00000, 180.00000);
	CreateObjectHouse(11734, 1512.96741, -1100.00195, 124.08900,   0.00000, 0.00000, 130.16019);
	CreateObjectHouse(11707, 1510.33240, -1090.66333, 122.73510,   0.00000, 0.00000, -90.00000);
	CreateObjectHouse(11709, 1509.96875, -1089.47534, 122.14910,   0.00000, 0.00000, -90.00000);
	CreateObjectHouse(19874, 1510.30530, -1089.86230, 122.58990,   0.00000, 0.00000, -107.00000);
	CreateObjectHouse(19871, 1508.69824, -1091.82275, 121.47317,   0.00000, 0.00000, 0.00000);
	CreateObjectHouse(19873, 1508.69824, -1091.82275, 122.23923,   0.00000, 0.00000, 0.00000);
	CreateObjectHouse(19873, 1508.69824, -1091.82275, 122.36961,   0.00000, 0.00000, 0.00000);
	CreateObjectHouse(19873, 1508.69824, -1091.82275, 121.57117,   0.00000, 0.00000, 0.00000);
	CreateObjectHouse(19603, 1503.96570, -1092.52563, 121.91821,   0.00000, 0.00000, 0.00000);
	CreateObjectHouse(19787, 1506.46362, -1087.53308, 123.54550,   4.00000, 0.00000, 0.00000);
	PlayerHouse = CreateObjectHouse(1492, 1518.86804, -1100.03418, 128.56900,   0.00000, 0.00000, 180.00000);
	SetDynamicObjectMaterial(PlayerHouse, 0, 18646, "matcolours", "grey-20-percent", 0xFFFFFFFF);
	SetDynamicObjectMaterial(PlayerHouse, 1, 2226, "cj_hi_fi2", "CJ_CHROME2", 0xFFFFFFFF);
	
	PlayerHouse = CreateObjectHouse(19353, 1518.4337, -1086.0255, 129.5038, 0.0000, 0.0000, 90.1000);
	SetDynamicObjectMaterialText(PlayerHouse, 0, "Legacy Freeroam", 140, "Arial", 70, 1, 0xFFFFFFFF, 0xFFFF0000, 1);

	PlayerHouse = CreateObjectHouse(19353, 1503.7977, -1081.4372, 127.2946, 0.4000, -90.3999, -43.7307);
	SetDynamicObjectMaterialText(PlayerHouse, 0, "{00CCFF}s{FFFFFF}f{CC0000}r", 140, "Arial", 70, 1, 0xFFFFFFFF, 0x0, 1);
	
	
	
	
	//MINECRAFT MAP BY NAMENAME
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1185.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1193.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1201.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1201.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1201.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1201.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1201.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1201.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1201.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1201.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1193.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1185.117919,129.931961,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1185.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1193.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1201.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1201.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1201.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1201.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1201.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1201.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1201.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1201.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1193.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1185.117919,136.831954,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,143.731948,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,143.731948,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,143.731948,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,143.731948,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,143.731948,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,143.731948,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,143.731948,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,143.731948,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,150.631942,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,150.631942,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,150.631942,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,150.631942,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,150.631942,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,150.631942,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,150.631942,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,150.631942,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,157.531936,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,157.531936,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,157.531936,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,157.531936,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,157.531936,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,157.531936,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,157.531936,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,157.531936,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,164.431930,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,164.431930,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,164.431930,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,164.431930,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,164.431930,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,164.431930,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,164.431930,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,164.431930,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,171.331924,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,178.231918,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,185.131912,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,192.031906,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,192.031906,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,185.131912,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,178.231918,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,171.331924,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,171.331924,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,171.331924,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,171.331924,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,171.331924,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,171.331924,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,171.331924,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,178.231918,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,185.131912,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,192.031906,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,178.231918,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,185.131912,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,192.031906,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,178.231918,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,185.131912,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,192.031906,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,178.231918,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,185.131912,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,192.031906,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,178.231918,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,185.131912,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,192.031906,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,178.231918,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,185.131912,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,192.031906,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,212.731887,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,219.631881,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,226.531875,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,233.431869,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,240.331863,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1182.802978,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1190.843017,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1198.883056,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1206.923095,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1206.923095,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1198.883056,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1190.843017,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1182.802978,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1182.802978,-1177.117919,240.331863,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1190.843017,-1177.117919,240.331863,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.923095,-1177.117919,240.331863,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.923095,-1177.117919,233.431869,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.923095,-1177.117919,226.531875,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1198.883056,-1177.117919,219.631881,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.923095,-1177.117919,219.631881,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1190.843017,-1177.117919,219.631881,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1190.843017,-1177.117919,226.531875,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1190.843017,-1177.117919,233.431869,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1198.883056,-1177.117919,233.431869,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1198.883056,-1177.117919,240.331863,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1182.802978,-1177.117919,233.431869,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1182.802978,-1177.117919,226.531875,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1182.802978,-1177.117919,219.631881,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1190.843017,-1177.117919,233.431869,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1198.883056,-1177.117919,226.531875,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1198.883056,-1177.117919,212.731887,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.923095,-1177.117919,212.731887,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1190.843017,-1177.117919,212.731887,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1182.802978,-1177.117919,212.731887,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1182.802978,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1198.883056,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1198.883056,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.923095,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1190.843017,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1182.802978,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1190.843017,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1206.923095,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,212.731887,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,212.731887,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,212.731887,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,219.631881,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,226.531875,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,233.431869,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,233.431869,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,226.531875,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,240.331863,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,240.331863,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1110.442626,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1086.322509,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1094.362548,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1102.402587,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1110.442626,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.322509,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1094.362548,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1102.402587,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1102.402587,-1177.117919,240.331863,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1110.442626,-1177.117919,240.331863,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.322509,-1177.117919,240.331863,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.322509,-1177.117919,233.431869,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.322509,-1177.117919,226.531875,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.322509,-1177.117919,219.631881,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.322509,-1177.117919,212.731887,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1094.362548,-1177.117919,212.731887,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1110.442626,-1177.117919,212.731887,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1102.402587,-1177.117919,212.731887,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1110.442626,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1094.362548,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.322509,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1094.362548,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1094.362548,-1177.117919,219.631881,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1094.362548,-1177.117919,226.531875,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1102.402587,-1177.117919,226.531875,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1102.402587,-1177.117919,233.431869,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1102.402587,-1177.117919,219.631881,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1094.362548,-1177.117919,240.331863,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1094.362548,-1177.117919,233.431869,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1110.442626,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1110.442626,-1177.117919,226.531875,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1110.442626,-1177.117919,219.631881,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1110.442626,-1177.117919,233.431869,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1102.402587,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1102.402587,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1086.322509,-1177.117919,198.931900,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,240.331863,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1206.923095,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1086.322509,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1201.117919,143.731948,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,219.631881,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,219.631881,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,219.631881,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,226.531875,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,233.431869,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,233.431869,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,226.531875,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,240.331863,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1110.442626,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1102.402587,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1094.362548,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1102.402587,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1102.402587,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1198.883056,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1190.843017,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1190.843017,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1190.843017,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1110.442626,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1086.322509,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1086.322509,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1086.322509,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1094.362548,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1094.362548,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1110.442626,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1206.923095,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1206.923095,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1198.883056,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1198.883056,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,240.331878,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,219.631896,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,233.431884,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,226.531890,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,212.731903,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,212.731903,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,212.731903,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,205.831893,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,212.731887,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,219.631881,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,226.531875,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,233.431869,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,240.331863,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,219.631881,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,240.331878,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,226.531890,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,233.431884,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,247.231857,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,254.131851,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1182.802978,-1177.117919,261.031860,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1182.802978,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1182.802978,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1177.117919,274.831848,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1177.117919,267.931854,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1161.117919,285.231933,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF663300);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF663300);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF663300);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1161.117919,288.631835,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF663300);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF663300);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF663300);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1161.117919,285.221618,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF663300);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF663300);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF663300);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1161.117919,285.211730,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF663300);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF663300);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF663300);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1161.117919,288.631835,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF663300);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF663300);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF663300);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1161.117919,285.231658,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF663300);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF663300);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF663300);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1161.117919,295.531829,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF994D00);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF994D00);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF994D00);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1161.117919,295.531829,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF994D00);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF994D00);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF994D00);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1161.117919,288.631835,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF990000);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF990000);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF990000);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1161.117919,288.631835,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF990000);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF990000);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF990000);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1161.117919,285.231994,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1161.117919,285.251831,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1161.117919,285.281921,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1161.117919,285.301849,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1161.117919,288.631835,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1161.117919,295.531829,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1161.117919,288.631835,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFBF8040);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFBF8040);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFBF8040);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1161.117919,288.631835,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFBF8040);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFBF8040);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFBF8040);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1161.117919,288.631835,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFBF8040);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFBF8040);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFBF8040);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1161.117919,295.531829,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFBF8040);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFBF8040);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFBF8040);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1161.117919,295.531829,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFBF8040);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFBF8040);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFBF8040);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1161.117919,295.531829,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1161.117919,295.531829,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1161.117919,295.531829,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1161.117919,302.431823,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1161.117919,302.431823,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1161.117919,302.431823,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1161.117919,302.431823,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1161.117919,302.431823,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFFFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFFFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFFFFF);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1161.117919,302.431823,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFFFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFFFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFFFFF);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1161.117919,302.431823,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF6600CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF6600CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF6600CC);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1161.117919,302.431823,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF6600CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF6600CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF6600CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1161.117919,309.331817,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1161.117919,316.231811,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1161.117919,316.231811,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1161.117919,323.131805,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1161.117919,309.331817,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1161.117919,309.331817,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1161.117919,309.331817,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1161.117919,309.331817,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1161.117919,309.331817,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1161.117919,309.331817,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1161.117919,309.331817,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1161.117919,316.231811,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1161.117919,316.231811,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1161.117919,316.231811,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1161.117919,316.231811,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD5A776);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD5A776);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1161.117919,316.231811,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1161.117919,330.031799,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1161.117919,323.131805,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1161.117919,323.131805,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1161.117919,323.131805,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1161.117919,323.131805,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1161.117919,323.131805,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1161.117919,323.131805,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1161.117919,323.131805,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1161.117919,316.231811,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1161.117919,330.031799,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1166.722900,-1161.117919,330.031799,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1158.682861,-1161.117919,330.031799,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1150.642822,-1161.117919,330.031799,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1142.602783,-1161.117919,330.031799,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1134.562744,-1161.117919,330.031799,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1126.522705,-1161.117919,330.031799,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF271A0C);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF271A0C);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1193.117919,143.731948,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1185.117919,143.731948,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1193.117919,143.731948,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1185.117919,150.631942,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1185.117919,157.531936,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1193.117919,157.531936,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1201.117919,157.531936,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1201.117919,150.631942,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1193.117919,150.631942,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1185.117919,164.431930,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1185.117919,171.331924,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1185.117919,178.231918,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1193.117919,192.031906,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1185.117919,192.031906,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1193.117919,164.431930,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1193.117919,171.331924,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1193.117919,178.231918,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1193.117919,178.231918,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1185.117919,185.131912,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1193.117919,185.131912,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1201.117919,164.431930,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1201.117919,171.331924,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1201.117919,178.231918,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1201.117919,185.131912,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1118.482666,-1201.117919,192.031921,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1201.117919,143.731948,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1193.117919,143.731948,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1185.117919,143.731948,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1185.117919,150.631942,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1185.117919,157.531936,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1185.117919,164.431930,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1185.117919,171.331924,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1185.117919,178.231918,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3333CC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3333CC);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1185.117919,185.131912,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1193.117919,185.131912,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1185.117919,192.031906,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1174.762939,-1193.117919,178.231918,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);

	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1193.083007,171.376342,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1193.083007,164.476348,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1193.083007,157.576354,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1193.083007,150.676361,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,150.676361,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,157.576354,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,164.476348,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,171.376342,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,178.276336,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,185.176330,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,192.076324,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1193.083007,192.076324,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,143.776367,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,143.776367,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,143.776367,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,143.776367,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,143.776367,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,143.776367,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF777777);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF777777);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,150.676361,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,150.676361,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,150.676361,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,150.676361,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,150.676361,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,150.676361,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,157.576354,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,157.576354,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,157.576354,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,157.576354,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,157.576354,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,157.576354,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1193.083007,164.476348,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,164.476348,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,164.476348,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,164.476348,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,164.476348,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,164.476348,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,164.476348,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,171.376342,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,171.376342,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,171.376342,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,171.376342,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,171.376342,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,171.376342,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,178.276336,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,178.276336,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,178.276336,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,178.276336,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,178.276336,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,178.276336,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,185.176330,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,185.176330,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,185.176330,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,185.176330,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,185.176330,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,185.176330,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,192.076324,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,192.076324,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,192.076324,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,192.076324,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,192.076324,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,192.076324,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF1F1F7A);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF3434CB);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF3434CB);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1185.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1193.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1094.356323,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1094.356323,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1193.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1193.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1193.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1193.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1185.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1094.356323,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1193.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1193.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1193.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1185.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1185.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1185.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1110.436401,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1185.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1185.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1185.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1094.356323,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1102.396362,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1102.396362,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1102.396362,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1102.396362,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1110.436401,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1110.436401,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1110.436401,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1110.436401,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1110.436401,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1110.436401,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1110.436401,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1110.436401,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1102.396362,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1102.396362,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1102.396362,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1102.396362,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1094.356323,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1094.356323,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1094.356323,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1094.356323,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1185.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1216.983032,330.076202,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1193.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1193.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1193.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1185.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1185.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1185.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1169.062988,285.215972,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFAC7339);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFAC7339);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFAC7339);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1185.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1185.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1185.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1185.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1193.123046,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1193.123046,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1193.123046,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1193.123046,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1193.123046,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1190.836791,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1190.836791,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1190.836791,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1190.836791,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1198.876831,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFD2A679);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFD2A679);
	Unused_Object = CreateDynamicObject(5259,-1198.876831,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1190.836791,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1182.796752,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1182.796752,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1190.836791,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1198.876831,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1182.796752,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1182.796752,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1190.836791,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1198.876831,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1198.876831,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1190.836791,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1182.796752,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1182.796752,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1182.796752,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1182.796752,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1198.876831,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1198.876831,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1198.876831,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFBB99);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,198.976318,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF009999);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF009999);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,205.876312,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1201.083007,219.676300,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,212.776306,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1182.796752,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1190.836791,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1198.876831,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1198.876831,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1190.836791,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1182.796752,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1182.796752,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1190.836791,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1198.876831,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1198.876831,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1190.836791,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1182.796752,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1201.083007,226.576293,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1201.083007,233.476287,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1201.083007,240.376281,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1201.083007,247.276275,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1110.436401,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1102.396362,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1094.356323,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1201.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1110.436401,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1110.436401,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1102.396362,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1102.396362,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1102.396362,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1094.356323,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1094.356323,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1094.356323,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1201.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1201.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1201.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1185.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1193.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1193.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1185.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1185.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1193.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1185.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1086.316284,-1193.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1110.436401,-1193.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1110.436401,-1185.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1102.396362,-1185.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1094.356323,-1185.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1094.356323,-1193.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1102.396362,-1193.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1193.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1185.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1198.876831,-1185.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1198.876831,-1193.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1190.836791,-1193.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1190.836791,-1185.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1182.796752,-1185.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1182.796752,-1193.083007,274.876251,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1185.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1193.083007,267.976257,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1185.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1193.083007,261.076263,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00CCCC);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1185.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1206.916870,-1193.083007,254.176269,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF00FFFF);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1177.083007,302.476226,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFAC7339);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFAC7339);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFAC7339);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1217.083007,285.286163,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFAC7339);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFAC7339);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFAC7339);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1209.083007,285.276306,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFAC7339);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFAC7339);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFAC7339);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1169.083007,295.576232,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFAC7339);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFAC7339);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFAC7339);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1169.083007,330.076202,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1169.083007,316.276214,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1169.083007,323.176208,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1177.083007,316.276214,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1177.083007,323.176208,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1177.083007,330.076202,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1184.983032,330.076202,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1184.983032,323.176208,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1184.983032,316.276214,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1192.983032,330.076202,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1200.983032,330.076202,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1208.983032,330.076202,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1216.983032,330.076202,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1216.983032,323.176208,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1216.983032,316.276214,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1216.983032,309.376220,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1216.983032,302.476226,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1216.983032,295.576232,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1216.983032,288.676239,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1192.983032,323.176208,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1200.983032,323.176208,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1208.983032,323.176208,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1192.983032,316.276214,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1200.983032,316.276214,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1208.983032,316.276214,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1208.983032,288.676239,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1208.983032,295.576232,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1208.983032,302.476226,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1208.983032,309.376220,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1200.983032,288.676239,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1200.983032,295.576232,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1200.983032,302.476226,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1200.983032,309.376220,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1192.983032,295.576232,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1192.983032,302.476226,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1192.983032,309.376220,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1184.983032,309.376220,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1184.983032,302.476226,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1184.983032,295.576232,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1176.983032,309.376220,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1169.083007,309.376220,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFC68C53);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1177.083007,281.776245,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFC68C53);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1201.083007,281.776245,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFC68C53);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1185.083007,281.776245,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFCC9966);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1185.083007,288.676239,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFCC9966);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1193.083007,281.776245,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFAC7339);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFAC7339);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFAC7339);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1193.083007,288.676239,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF734D26);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF734D26);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF734D26);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1169.083007,288.676239,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFCC9966);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1177.083007,288.676239,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1177.083007,295.576232,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1118.476440,-1169.083007,302.476226,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1216.983032,288.676239,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1216.983032,288.676239,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1216.983032,288.676239,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1216.983032,288.676239,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1216.983032,288.676239,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1216.983032,288.676239,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1216.983032,285.246215,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1216.983032,285.236328,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1216.983032,285.236389,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1216.983032,285.236419,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1216.983032,288.676239,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1216.983032,295.576232,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1216.983032,295.576232,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1216.983032,295.576232,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1150.636596,-1216.983032,295.576232,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1216.983032,295.576232,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1134.556518,-1216.983032,295.576232,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1216.983032,295.576232,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1126.516479,-1217.083007,285.276092,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFC68C53);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1217.083007,285.246185,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFC68C53);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1217.083007,285.246185,0.000000,180.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFAC7339);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFAC7339);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFAC7339);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1216.983032,302.476226,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1216.983032,309.376220,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1216.983032,316.276214,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1216.983032,323.176208,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1174.756713,-1216.983032,330.076202,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1166.716674,-1216.983032,330.076202,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1158.676635,-1216.983032,330.076202,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);
	Unused_Object = CreateDynamicObject(5259,-1142.596557,-1216.983032,330.076202,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF251A0E);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF251A0E);

	Unused_Object = CreateDynamicObject(5259,-1166.610961,-1216.971191,302.532836,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1158.570922,-1216.971191,302.532836,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1150.530883,-1216.971191,302.532836,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1142.490844,-1216.971191,302.532836,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1134.450805,-1216.971191,302.532836,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1126.410766,-1216.971191,302.532836,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1126.410766,-1216.971191,309.432830,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1126.410766,-1216.971191,316.332824,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1126.410766,-1216.971191,323.232818,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1126.410766,-1216.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1134.450805,-1216.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1134.450805,-1216.971191,323.232818,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1134.450805,-1216.971191,316.332824,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1134.450805,-1216.971191,309.432830,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1142.490844,-1216.971191,309.432830,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1150.530883,-1216.971191,309.432830,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1158.570922,-1216.971191,309.432830,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1166.610961,-1216.971191,309.432830,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1166.610961,-1216.971191,316.332824,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1166.610961,-1216.971191,323.232818,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1158.570922,-1216.971191,323.232818,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1150.530883,-1216.971191,323.232818,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1142.490844,-1216.971191,323.232818,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1142.490844,-1216.971191,316.332824,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1150.530883,-1216.971191,316.332824,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1158.570922,-1216.971191,316.332824,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1208.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1200.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1192.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1184.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1176.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1168.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1168.971191,323.232818,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1176.971191,323.232818,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1184.971191,323.232818,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1192.971191,323.232818,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1200.971191,323.232818,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1208.971191,323.232818,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1208.971191,316.332824,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1200.971191,316.332824,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1192.971191,316.332824,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1184.971191,316.332824,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1176.971191,316.332824,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1168.971191,316.332824,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1176.971191,309.432830,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1184.971191,309.432830,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1192.971191,309.432830,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1200.971191,309.432830,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1208.971191,309.432830,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1184.971191,302.532836,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1184.971191,295.632843,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1192.971191,302.532836,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1200.971191,302.532836,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1208.971191,302.532836,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1192.971191,295.632843,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1200.971191,295.632843,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1208.971191,295.632843,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1208.971191,288.732849,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1200.971191,288.732849,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1166.610961,-1208.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1166.610961,-1200.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1166.610961,-1192.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1166.610961,-1184.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1166.610961,-1176.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1166.610961,-1168.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1158.570922,-1168.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1158.570922,-1176.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1158.570922,-1184.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1158.570922,-1192.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1158.570922,-1200.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1158.570922,-1208.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1150.530883,-1208.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1150.530883,-1200.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1150.530883,-1192.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1150.530883,-1184.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1150.530883,-1176.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1150.530883,-1168.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1142.490844,-1168.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1142.490844,-1176.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1142.490844,-1184.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1142.490844,-1192.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1142.490844,-1200.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1142.490844,-1208.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1134.450805,-1208.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1134.450805,-1200.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1134.450805,-1192.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1134.450805,-1184.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1134.450805,-1176.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1134.450805,-1168.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1126.410766,-1168.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1126.410766,-1176.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1126.410766,-1184.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1126.410766,-1192.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1126.410766,-1200.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1126.410766,-1208.971191,330.132812,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF261A0D);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF261A0D);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1209.021240,285.272766,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFC68C53);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1200.971191,281.832855,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFCC9966);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1192.971191,281.832855,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFCC9966);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1184.971191,281.832855,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFCC9966);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1176.971191,281.832855,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFCC9966);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1184.971191,288.732849,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFCC9966);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFCC9966);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1176.971191,288.732849,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFC68C53);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1168.971191,295.632843,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFC68C53);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1168.971191,302.532836,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFC68C53);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1192.971191,288.732849,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF734D26);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF734D26);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF734D26);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1168.971191,309.432830,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF734D26);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF734D26);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF734D26);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1176.971191,302.532836,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF734D26);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF734D26);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF734D26);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1176.971191,295.632843,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1168.971191,288.732849,0.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1174.651000,-1168.971191,285.302673,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1166.610961,-1209.021240,285.272766,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFC68C53);
	Unused_Object = CreateDynamicObject(5259,-1158.570922,-1209.021240,285.272766,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFC68C53);
	Unused_Object = CreateDynamicObject(5259,-1150.530883,-1209.021240,285.272766,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFC68C53);
	Unused_Object = CreateDynamicObject(5259,-1142.490844,-1209.021240,285.272766,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFC68C53);
	Unused_Object = CreateDynamicObject(5259,-1134.450805,-1209.021240,285.272766,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFC68C53);
	Unused_Object = CreateDynamicObject(5259,-1126.410766,-1209.021240,285.272766,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFFC68C53);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFC68C53);
	Unused_Object = CreateDynamicObject(5259,-1166.610961,-1168.971191,285.302673,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1158.570922,-1168.971191,285.302673,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1150.530883,-1168.971191,285.302673,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1142.490844,-1168.971191,285.302673,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1134.450805,-1168.971191,285.302673,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(5259,-1126.410766,-1168.971191,285.302673,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 1, 3924, "rc_warhoose", "white", 0xFF996633);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFF996633);
	Unused_Object = CreateDynamicObject(8661,-1102.226440,-1195.039550,197.239135,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 2, 3924, "rc_warhoose", "white", 0xFFFFCC99);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFCC99);
	SetDynamicObjectMaterial(Unused_Object, 1, 1, "none", "none", 0xFF);
	Unused_Object = CreateDynamicObject(8661,-1102.226440,-1183.088378,197.204162,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFCC99);
	Unused_Object = CreateDynamicObject(8661,-1191.004760,-1195.049560,197.239135,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFCC99);
	Unused_Object = CreateDynamicObject(8661,-1191.004760,-1183.108154,197.203109,180.000000,0.000000,0.000000,555,0, -1, 500.0, 500.0);
	SetDynamicObjectMaterial(Unused_Object, 0, 3924, "rc_warhoose", "white", 0xFFFFCC99);
	Create3DTextLabel("{22AD10}Minecraft!\n{8CFF7D}(/minecraft)", -1, -1149.381469, -962.833618, 129.218750, 50.0, 555, 0);
	Minecraft_Area = CreateDynamicRectangle(-946.919311, -891.080871, -1302.904052, -1316.787231, 555);
	return 1;
}

CreateTextDraws()
{	
	TD_LSR_SERVER_INFO = TextDrawCreate(530.000000, 270.000000, "TOTAL_PLAYERS:_0~n~--------------------------------~n~TOTAL_PLAYERS_FR:_0~n~TOTAL_PLAYERS_DM:_0~n~TOTAL_PLAYERS_GANG:_0~n~TOTAL_PLAYER_EVENT:_0~n~DI[D_PLAYERS]:_0~n~FI[F_PLAYERS]:_0~n~ZI[Z_PLAYERS]:_0~n~TOTAL_PLAYERS_DUEL:_0~n~--------------------------------~n~SUM:_0~n~");
	TextDrawLetterSize(TD_LSR_SERVER_INFO, 0.263332, 1.156147);
	TextDrawAlignment(TD_LSR_SERVER_INFO, 3);
	TextDrawColor(TD_LSR_SERVER_INFO, -141);
	TextDrawSetShadow(TD_LSR_SERVER_INFO, 0);
	TextDrawSetOutline(TD_LSR_SERVER_INFO, 0);
	TextDrawBackgroundColor(TD_LSR_SERVER_INFO, 255);
	TextDrawFont(TD_LSR_SERVER_INFO, 1);
	TextDrawSetProportional(TD_LSR_SERVER_INFO, 1);
	TextDrawSetShadow(TD_LSR_SERVER_INFO, 0);

	TD_LSR_WEB_INFO = TextDrawCreate(320.000000, 370.000000, SERVER_WEB);
	TextDrawLetterSize(TD_LSR_WEB_INFO, 0.487666, 1.940148);
	TextDrawAlignment(TD_LSR_WEB_INFO, 2);
	TextDrawColor(TD_LSR_WEB_INFO, -206);
	TextDrawSetShadow(TD_LSR_WEB_INFO, 0);
	TextDrawSetOutline(TD_LSR_WEB_INFO, 0);
	TextDrawBackgroundColor(TD_LSR_WEB_INFO, 255);
	TextDrawFont(TD_LSR_WEB_INFO, 3);
	TextDrawSetProportional(TD_LSR_WEB_INFO, 1);
	TextDrawSetShadow(TD_LSR_WEB_INFO, 0);


	/*
	*/

	//LSR HUD

	TD_LSR_HUD[0] = TextDrawCreate(434.000000, 12.000000, "LEGACY");
	TextDrawLetterSize(TD_LSR_HUD[0], 0.333332, 1.850000);
	TextDrawAlignment(TD_LSR_HUD[0], 1);
	TextDrawColor(TD_LSR_HUD[0], -16776961);
	TextDrawSetShadow(TD_LSR_HUD[0], 0);
	TextDrawSetOutline(TD_LSR_HUD[0], 0);
	TextDrawBackgroundColor(TD_LSR_HUD[0], 255);
	TextDrawFont(TD_LSR_HUD[0], 2);
	TextDrawSetProportional(TD_LSR_HUD[0], 1);
	TextDrawSetShadow(TD_LSR_HUD[0], 0);

	TD_LSR_HUD[1] = TextDrawCreate(453.000000, 26.000000, "FREEROAM");
	TextDrawLetterSize(TD_LSR_HUD[1], 0.212500, 0.850000);
	TextDrawAlignment(TD_LSR_HUD[1], 1);
	TextDrawColor(TD_LSR_HUD[1], -1061109505);
	TextDrawSetShadow(TD_LSR_HUD[1], 0);
	TextDrawSetOutline(TD_LSR_HUD[1], 1);
	TextDrawBackgroundColor(TD_LSR_HUD[1], 255);
	TextDrawFont(TD_LSR_HUD[1], 2);
	TextDrawSetProportional(TD_LSR_HUD[1], 1);
	TextDrawSetShadow(TD_LSR_HUD[1], 0);

	TD_LSR_HUD[2] = TextDrawCreate(10.000000, 430.000000, "__~r~~h~~h~/help_~p~/command_~b~~h~~h~/tele_~g~~h~~h~/mode");
	TextDrawLetterSize(TD_LSR_HUD[2], 0.245666, 1.040000);
	TextDrawAlignment(TD_LSR_HUD[2], 1);
	TextDrawColor(TD_LSR_HUD[2], -1);
	TextDrawSetShadow(TD_LSR_HUD[2], 0);
	TextDrawSetOutline(TD_LSR_HUD[2], 1);
	TextDrawBackgroundColor(TD_LSR_HUD[2], 255);
	TextDrawFont(TD_LSR_HUD[2], 3);
	TextDrawSetProportional(TD_LSR_HUD[2], 1);
	TextDrawSetShadow(TD_LSR_HUD[2], 0);

	TD_LSR_HUD[3] = TextDrawCreate(635.000000, 3.000000, ""SERVER_NAME"");
	TextDrawLetterSize(TD_LSR_HUD[3], 0.236333, 1.135407);
	TextDrawAlignment(TD_LSR_HUD[3], 3);
	TextDrawColor(TD_LSR_HUD[3], -211);
	TextDrawSetShadow(TD_LSR_HUD[3], 0);
	TextDrawSetOutline(TD_LSR_HUD[3], 0);
	TextDrawBackgroundColor(TD_LSR_HUD[3], 255);
	TextDrawFont(TD_LSR_HUD[3], 1);
	TextDrawSetProportional(TD_LSR_HUD[3], 1);
	TextDrawSetShadow(TD_LSR_HUD[3], 0);
	
	//LSR TP INFO

	TD_LSR_TPINFO[0] = TextDrawCreate(17.000000, 130.000000, "");
	TextDrawLetterSize(TD_LSR_TPINFO[0], 0.376332, 1.380148);
	TextDrawAlignment(TD_LSR_TPINFO[0], 1);
	TextDrawColor(TD_LSR_TPINFO[0], -76);
	TextDrawSetShadow(TD_LSR_TPINFO[0], 0);
	TextDrawSetOutline(TD_LSR_TPINFO[0], 1);
	TextDrawBackgroundColor(TD_LSR_TPINFO[0], 110);
	TextDrawFont(TD_LSR_TPINFO[0], 0);
	TextDrawSetProportional(TD_LSR_TPINFO[0], 1);
	TextDrawSetShadow(TD_LSR_TPINFO[0], 0);

	TD_LSR_TPINFO[1] = TextDrawCreate(15.000004, 140.459274, "");
	TextDrawLetterSize(TD_LSR_TPINFO[1], 0.289332, 1.346960);
	TextDrawTextSize(TD_LSR_TPINFO[1], 145.000000, 0.000000);
	TextDrawAlignment(TD_LSR_TPINFO[1], 1);
	TextDrawColor(TD_LSR_TPINFO[1], -56);
	TextDrawUseBox(TD_LSR_TPINFO[1], 1);
	TextDrawBoxColor(TD_LSR_TPINFO[1], 140);
	TextDrawSetShadow(TD_LSR_TPINFO[1], 0);
	TextDrawSetOutline(TD_LSR_TPINFO[1], 0);
	TextDrawBackgroundColor(TD_LSR_TPINFO[1], 255);
	TextDrawFont(TD_LSR_TPINFO[1], 1);
	TextDrawSetProportional(TD_LSR_TPINFO[1], 1);
	TextDrawSetShadow(TD_LSR_TPINFO[1], 0);
	
	
	//TD_LSR_EVENTINFO
	TD_LSR_EVENTINFO[0] = TextDrawCreate(17.000000, 191.000000, "event");
	TextDrawLetterSize(TD_LSR_EVENTINFO[0], 0.376332, 1.380148);
	TextDrawAlignment(TD_LSR_EVENTINFO[0], 1);
	TextDrawColor(TD_LSR_EVENTINFO[0], -76);
	TextDrawSetShadow(TD_LSR_EVENTINFO[0], 0);
	TextDrawSetOutline(TD_LSR_EVENTINFO[0], 1);
	TextDrawBackgroundColor(TD_LSR_EVENTINFO[0], 110);
	TextDrawFont(TD_LSR_EVENTINFO[0], 0);
	TextDrawSetProportional(TD_LSR_EVENTINFO[0], 1);
	TextDrawSetShadow(TD_LSR_EVENTINFO[0], 0);

	TD_LSR_EVENTINFO[1] = TextDrawCreate(15.000000, 200.000000, "~n~~g~_event~p~~h~__~g~_activated.~n~~p~~h~_/ejoin_~b~~h~To join.~n~_");
	TextDrawLetterSize(TD_LSR_EVENTINFO[1], 0.289332, 1.346958);
	TextDrawTextSize(TD_LSR_EVENTINFO[1], 145.000000, 0.000000);
	TextDrawAlignment(TD_LSR_EVENTINFO[1], 1);
	TextDrawColor(TD_LSR_EVENTINFO[1], -56);
	TextDrawUseBox(TD_LSR_EVENTINFO[1], 1);
	TextDrawBoxColor(TD_LSR_EVENTINFO[1], 140);
	TextDrawSetShadow(TD_LSR_EVENTINFO[1], 0);
	TextDrawSetOutline(TD_LSR_EVENTINFO[1], 0);
	TextDrawBackgroundColor(TD_LSR_EVENTINFO[1], 255);
	TextDrawFont(TD_LSR_EVENTINFO[1], 1);
	TextDrawSetProportional(TD_LSR_EVENTINFO[1], 1);
	TextDrawSetShadow(TD_LSR_EVENTINFO[1], 0);

	//WELCOME
	TD_WELCOME[0] = TextDrawCreate(-1.405576, -49.583057, "LD_SPAC:white");
	TextDrawLetterSize(TD_WELCOME[0], -0.148052, 2.083178);
	TextDrawTextSize(TD_WELCOME[0], 673.909423, 551.833312);
	TextDrawAlignment(TD_WELCOME[0], 1);
	TextDrawColor(TD_WELCOME[0], -1);
	TextDrawUseBox(TD_WELCOME[0], true);
	TextDrawBoxColor(TD_WELCOME[0], 0);
	TextDrawSetShadow(TD_WELCOME[0], 0);
	TextDrawSetOutline(TD_WELCOME[0], 0);
	TextDrawBackgroundColor(TD_WELCOME[0], 255);
	TextDrawFont(TD_WELCOME[0], 5);
	TextDrawSetPreviewModel(TD_WELCOME[0], 19129);
	TextDrawSetPreviewRot(TD_WELCOME[0], 90.000000, 0.000000, 100.000000, 0.000000);

	TD_WELCOME[1] = TextDrawCreate(320.000000, 177.000000, "LEGACY");
	TextDrawLetterSize(TD_WELCOME[1], 1.048666, 4.084741);
	TextDrawAlignment(TD_WELCOME[1], 2);
	TextDrawColor(TD_WELCOME[1], -13434625);
	TextDrawSetShadow(TD_WELCOME[1], 0);
	TextDrawSetOutline(TD_WELCOME[1], 2);
	TextDrawBackgroundColor(TD_WELCOME[1], 255);
	TextDrawFont(TD_WELCOME[1], 3);
	TextDrawSetProportional(TD_WELCOME[1], 1);
	TextDrawSetShadow(TD_WELCOME[1], 0);

	TD_WELCOME[2] = TextDrawCreate(320.000000, 213.000000, "freeroam");
	TextDrawLetterSize(TD_WELCOME[2], 0.479999, 2.811258);
	TextDrawAlignment(TD_WELCOME[2], 2);
	TextDrawColor(TD_WELCOME[2], -4849409);
	TextDrawSetShadow(TD_WELCOME[2], 0);
	TextDrawSetOutline(TD_WELCOME[2], 2);
	TextDrawBackgroundColor(TD_WELCOME[2], 255);
	TextDrawFont(TD_WELCOME[2], 2);
	TextDrawSetProportional(TD_WELCOME[2], 1);
	TextDrawSetShadow(TD_WELCOME[2], 0);

	TD_WELCOME[3] = TextDrawCreate(320.000000, 239.000000, "Version_"SERVER_VERSION"_-_"VERSION_DATE_1"");
	TextDrawLetterSize(TD_WELCOME[3], 0.355999, 1.512889);
	TextDrawAlignment(TD_WELCOME[3], 2);
	TextDrawColor(TD_WELCOME[3], -211);
	TextDrawSetShadow(TD_WELCOME[3], 0);
	TextDrawSetOutline(TD_WELCOME[3], 0);
	TextDrawBackgroundColor(TD_WELCOME[3], 255);
	TextDrawFont(TD_WELCOME[3], 1);
	TextDrawSetProportional(TD_WELCOME[3], 1);
	TextDrawSetShadow(TD_WELCOME[3], 0);
	
	//TD_SELECTMODE
	TD_LSR_SELECTMODE[0] = TextDrawCreate(-40.000000, -40.000000, "box");
	TextDrawLetterSize(TD_LSR_SELECTMODE[0], 0.000000, 80.266666);
	TextDrawTextSize(TD_LSR_SELECTMODE[0], 940.000000, 0.000000);
	TextDrawAlignment(TD_LSR_SELECTMODE[0], 1);
	TextDrawColor(TD_LSR_SELECTMODE[0], -1);
	TextDrawUseBox(TD_LSR_SELECTMODE[0], 1);
	TextDrawBoxColor(TD_LSR_SELECTMODE[0], 1077952607);
	TextDrawSetShadow(TD_LSR_SELECTMODE[0], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[0], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[0], 255);
	TextDrawFont(TD_LSR_SELECTMODE[0], 1);
	TextDrawSetProportional(TD_LSR_SELECTMODE[0], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[0], 0);

	TD_LSR_SELECTMODE[1] = TextDrawCreate(320.000000, 67.000000, "box");
	TextDrawLetterSize(TD_LSR_SELECTMODE[1], 0.000000, 7.966669);
	TextDrawTextSize(TD_LSR_SELECTMODE[1], 0.000000, 305.5);
	TextDrawAlignment(TD_LSR_SELECTMODE[1], 2);
	TextDrawColor(TD_LSR_SELECTMODE[1], -1);
	TextDrawUseBox(TD_LSR_SELECTMODE[1], 1);
	TextDrawBoxColor(TD_LSR_SELECTMODE[1], 1010580625);
	TextDrawSetShadow(TD_LSR_SELECTMODE[1], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[1], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[1], 255);
	TextDrawFont(TD_LSR_SELECTMODE[1], 1);
	TextDrawSetProportional(TD_LSR_SELECTMODE[1], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[1], 0);

	TD_LSR_SELECTMODE[TD_COUNTER_LSR] = TextDrawCreate(472.000000, 68.000000, "0");
	TextDrawLetterSize(TD_LSR_SELECTMODE[TD_COUNTER_LSR], 0.274333, 1.172740);
	TextDrawAlignment(TD_LSR_SELECTMODE[TD_COUNTER_LSR], 3);
	TextDrawColor(TD_LSR_SELECTMODE[TD_COUNTER_LSR], -186);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_LSR], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[TD_COUNTER_LSR], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[TD_COUNTER_LSR], 255);
	TextDrawFont(TD_LSR_SELECTMODE[TD_COUNTER_LSR], 1);
	TextDrawSetProportional(TD_LSR_SELECTMODE[TD_COUNTER_LSR], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_LSR], 0);
	
	TD_LSR_SELECTMODE[2] = TextDrawCreate(257.000000, 93.000000, "_");
	TextDrawLetterSize(TD_LSR_SELECTMODE[2], 0.693997, 3.976891);//F
	TextDrawAlignment(TD_LSR_SELECTMODE[2], 1);
	TextDrawColor(TD_LSR_SELECTMODE[2], -1433665281);
	TextDrawSetShadow(TD_LSR_SELECTMODE[2], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[2], 1);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[2], 255);
	TextDrawFont(TD_LSR_SELECTMODE[2], 2);
	TextDrawSetProportional(TD_LSR_SELECTMODE[2], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[2], 0);

	TD_LSR_SELECTMODE[3] = TextDrawCreate(390.000000, 93.000000, "_");
	TextDrawLetterSize(TD_LSR_SELECTMODE[3], 0.693997, 3.976891);//M
	TextDrawAlignment(TD_LSR_SELECTMODE[3], 3);
	TextDrawColor(TD_LSR_SELECTMODE[3], -1433665281);
	TextDrawSetShadow(TD_LSR_SELECTMODE[3], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[3], 1);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[3], 255);
	TextDrawFont(TD_LSR_SELECTMODE[3], 2);
	TextDrawSetProportional(TD_LSR_SELECTMODE[3], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[3], 0);

	TD_LSR_SELECTMODE[4] = TextDrawCreate(320.000000, 75.000000, "LEGACY");
	TextDrawLetterSize(TD_LSR_SELECTMODE[4], 0.866333, 3.462517);
	TextDrawAlignment(TD_LSR_SELECTMODE[4], 2);
	TextDrawColor(TD_LSR_SELECTMODE[4], -15461186);
	TextDrawSetShadow(TD_LSR_SELECTMODE[4], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[4], 1);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[4], 255);
	TextDrawFont(TD_LSR_SELECTMODE[4], 3);
	TextDrawSetProportional(TD_LSR_SELECTMODE[4], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[4], 0);

	TD_LSR_SELECTMODE[5] = TextDrawCreate(320.000000, 103.000000, "freeroam");
	TextDrawLetterSize(TD_LSR_SELECTMODE[5], 0.577997, 2.620445);
	TextDrawAlignment(TD_LSR_SELECTMODE[5], 2);
	TextDrawColor(TD_LSR_SELECTMODE[5], -1433665281);
	TextDrawSetShadow(TD_LSR_SELECTMODE[5], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[5], 1);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[5], 255);
	TextDrawFont(TD_LSR_SELECTMODE[5], 2);
	TextDrawSetProportional(TD_LSR_SELECTMODE[5], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[5], 0);

	//FREEROAM
	TD_LSR_SELECTMODE[6] = TextDrawCreate(166.0, 144.0, "");
	TextDrawLetterSize(TD_LSR_SELECTMODE[6], 0.000000, 0.000000);
	TextDrawTextSize(TD_LSR_SELECTMODE[6], 100.000000, 105.000000);
	TextDrawAlignment(TD_LSR_SELECTMODE[6], 1);
	TextDrawColor(TD_LSR_SELECTMODE[6], -1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[6], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[6], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[6], 1179010730);
	TextDrawFont(TD_LSR_SELECTMODE[6], 5);
	TextDrawSetProportional(TD_LSR_SELECTMODE[6], 0);
	TextDrawSetShadow(TD_LSR_SELECTMODE[6], 0);
	TextDrawSetSelectable(TD_LSR_SELECTMODE[6], true);
	TextDrawSetPreviewModel(TD_LSR_SELECTMODE[6], 18778);
	TextDrawSetPreviewRot(TD_LSR_SELECTMODE[6], 333.000000, 0.000000, 213.000000, 1.000000);

	TD_LSR_SELECTMODE[TD_COUNTER_FR] = TextDrawCreate(264.000000, 145.000000, "0");
	TextDrawLetterSize(TD_LSR_SELECTMODE[TD_COUNTER_FR], 0.274333, 1.172740);
	TextDrawAlignment(TD_LSR_SELECTMODE[TD_COUNTER_FR], 3);
	TextDrawColor(TD_LSR_SELECTMODE[TD_COUNTER_FR], -186);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_FR], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[TD_COUNTER_FR], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[TD_COUNTER_FR], 255);
	TextDrawFont(TD_LSR_SELECTMODE[TD_COUNTER_FR], 1);
	TextDrawSetProportional(TD_LSR_SELECTMODE[TD_COUNTER_FR], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_FR], 0);
	
	TD_LSR_SELECTMODE[7] = TextDrawCreate(216.0, 228.0, "FreeROAM");
	TextDrawLetterSize(TD_LSR_SELECTMODE[7], 0.309998, 1.496299);
	TextDrawAlignment(TD_LSR_SELECTMODE[7], 2);
	TextDrawColor(TD_LSR_SELECTMODE[7], -1433665281);
	TextDrawSetShadow(TD_LSR_SELECTMODE[7], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[7], 1);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[7], 255);
	TextDrawFont(TD_LSR_SELECTMODE[7], 2);
	TextDrawSetProportional(TD_LSR_SELECTMODE[7], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[7], 0);
	
	//GANG WARS
	TD_LSR_SELECTMODE[8] = TextDrawCreate(166.0, 144.0, "");
	TextDrawLetterSize(TD_LSR_SELECTMODE[8], 0.000000, 0.000000);
	TextDrawTextSize(TD_LSR_SELECTMODE[8], 100.000000, 105.000000);
	TextDrawAlignment(TD_LSR_SELECTMODE[8], 1);
	TextDrawColor(TD_LSR_SELECTMODE[8], -1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[8], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[8], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[8], 1179010730);
	TextDrawFont(TD_LSR_SELECTMODE[8], 5);
	TextDrawSetProportional(TD_LSR_SELECTMODE[8], 0);
	TextDrawSetShadow(TD_LSR_SELECTMODE[8], 0);
	TextDrawSetSelectable(TD_LSR_SELECTMODE[8], true);
	TextDrawSetPreviewModel(TD_LSR_SELECTMODE[8], 1313);
	TextDrawSetPreviewRot(TD_LSR_SELECTMODE[8], 333.000000, 0.000000, 213.000000, 1.000000);

	TD_LSR_SELECTMODE[TD_COUNTER_GANG] = TextDrawCreate(264.000000, 145.000000, "0");
	TextDrawLetterSize(TD_LSR_SELECTMODE[TD_COUNTER_GANG], 0.274333, 1.172740);
	TextDrawAlignment(TD_LSR_SELECTMODE[TD_COUNTER_GANG], 3);
	TextDrawColor(TD_LSR_SELECTMODE[TD_COUNTER_GANG], -186);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_GANG], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[TD_COUNTER_GANG], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[TD_COUNTER_GANG], 255);
	TextDrawFont(TD_LSR_SELECTMODE[TD_COUNTER_GANG], 1);
	TextDrawSetProportional(TD_LSR_SELECTMODE[TD_COUNTER_GANG], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_GANG], 0);
	
	TD_LSR_SELECTMODE[9] = TextDrawCreate(216.0, 228.0, "Gang_wars");
	TextDrawLetterSize(TD_LSR_SELECTMODE[9], 0.309998, 1.496299);
	TextDrawAlignment(TD_LSR_SELECTMODE[9], 2);
	TextDrawColor(TD_LSR_SELECTMODE[9], -1433665281);
	TextDrawSetShadow(TD_LSR_SELECTMODE[9], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[9], 1);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[9], 255);
	TextDrawFont(TD_LSR_SELECTMODE[9], 2);
	TextDrawSetProportional(TD_LSR_SELECTMODE[9], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[9], 0);

	//DERBY
	TD_LSR_SELECTMODE[10] = TextDrawCreate(166.0, 253.0, "");
	TextDrawLetterSize(TD_LSR_SELECTMODE[10], 0.000000, 0.000000);
	TextDrawTextSize(TD_LSR_SELECTMODE[10], 100.000000, 105.000000);
	TextDrawAlignment(TD_LSR_SELECTMODE[10], 1);
	TextDrawColor(TD_LSR_SELECTMODE[10], -1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[10], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[10], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[10], 1179010730);
	TextDrawFont(TD_LSR_SELECTMODE[10], 5);
	TextDrawSetProportional(TD_LSR_SELECTMODE[10], 0);
	TextDrawSetShadow(TD_LSR_SELECTMODE[10], 0);
	TextDrawSetSelectable(TD_LSR_SELECTMODE[10], true);
	TextDrawSetPreviewModel(TD_LSR_SELECTMODE[10], 415);
	TextDrawSetPreviewRot(TD_LSR_SELECTMODE[10], 340.000000, 0.000000, 50.000000, 1.000000);
	TextDrawSetPreviewVehCol(TD_LSR_SELECTMODE[10], 341, 1);

	TD_LSR_SELECTMODE[TD_COUNTER_DERBY] = TextDrawCreate(264.000000, 254.000000, "0");
	TextDrawLetterSize(TD_LSR_SELECTMODE[TD_COUNTER_DERBY], 0.274333, 1.172740);
	TextDrawAlignment(TD_LSR_SELECTMODE[TD_COUNTER_DERBY], 3);
	TextDrawColor(TD_LSR_SELECTMODE[TD_COUNTER_DERBY], -186);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_DERBY], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[TD_COUNTER_DERBY], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[TD_COUNTER_DERBY], 255);
	TextDrawFont(TD_LSR_SELECTMODE[TD_COUNTER_DERBY], 1);
	TextDrawSetProportional(TD_LSR_SELECTMODE[TD_COUNTER_DERBY], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_DERBY], 0);
	
	TD_LSR_SELECTMODE[11] = TextDrawCreate(216.0, 338.0, "Derby");
	TextDrawLetterSize(TD_LSR_SELECTMODE[11], 0.309998, 1.496299);
	TextDrawAlignment(TD_LSR_SELECTMODE[11], 2);
	TextDrawColor(TD_LSR_SELECTMODE[11], -1433665281);
	TextDrawSetShadow(TD_LSR_SELECTMODE[11], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[11], 1);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[11], 255);
	TextDrawFont(TD_LSR_SELECTMODE[11], 2);
	TextDrawSetProportional(TD_LSR_SELECTMODE[11], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[11], 0);
	
	//DM
	TD_LSR_SELECTMODE[12] = TextDrawCreate(270.0, 253.0, "");
	TextDrawLetterSize(TD_LSR_SELECTMODE[12], 0.000000, 0.000000);
	TextDrawTextSize(TD_LSR_SELECTMODE[12], 100.000000, 105.000000);
	TextDrawAlignment(TD_LSR_SELECTMODE[12], 1);
	TextDrawColor(TD_LSR_SELECTMODE[12], -1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[12], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[12], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[12], 1179010730);
	TextDrawFont(TD_LSR_SELECTMODE[12], 5);
	TextDrawSetProportional(TD_LSR_SELECTMODE[12], 0);
	TextDrawSetShadow(TD_LSR_SELECTMODE[12], 0);
	TextDrawSetSelectable(TD_LSR_SELECTMODE[12], true);
	TextDrawSetPreviewModel(TD_LSR_SELECTMODE[12], 11737);
	TextDrawSetPreviewRot(TD_LSR_SELECTMODE[12], 288.000000, 347.000000, 197.000000, 1.000000);

	TD_LSR_SELECTMODE[TD_COUNTER_DM] = TextDrawCreate(368.000000, 254.000000, "0");
	TextDrawLetterSize(TD_LSR_SELECTMODE[TD_COUNTER_DM], 0.274333, 1.172740);
	TextDrawAlignment(TD_LSR_SELECTMODE[TD_COUNTER_DM], 3);
	TextDrawColor(TD_LSR_SELECTMODE[TD_COUNTER_DM], -186);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_DM], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[TD_COUNTER_DM], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[TD_COUNTER_DM], 255);
	TextDrawFont(TD_LSR_SELECTMODE[TD_COUNTER_DM], 1);
	TextDrawSetProportional(TD_LSR_SELECTMODE[TD_COUNTER_DM], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_DM], 0);
	
	TD_LSR_SELECTMODE[13] = TextDrawCreate(320.0, 338.0, "Deathmatch");
	TextDrawLetterSize(TD_LSR_SELECTMODE[13], 0.309998, 1.496299);
	TextDrawAlignment(TD_LSR_SELECTMODE[13], 2);
	TextDrawColor(TD_LSR_SELECTMODE[13], -1433665281);
	TextDrawSetShadow(TD_LSR_SELECTMODE[13], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[13], 1);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[13], 255);
	TextDrawFont(TD_LSR_SELECTMODE[13], 2);
	TextDrawSetProportional(TD_LSR_SELECTMODE[13], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[13], 0);
	
	//FALL
	TD_LSR_SELECTMODE[14] = TextDrawCreate(374.0, 144.0, "");
	TextDrawLetterSize(TD_LSR_SELECTMODE[14], 0.000000, 0.000000);
	TextDrawTextSize(TD_LSR_SELECTMODE[14], 100.000000, 105.000000);
	TextDrawAlignment(TD_LSR_SELECTMODE[14], 1);
	TextDrawColor(TD_LSR_SELECTMODE[14], -1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[14], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[14], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[14], 1179010730);
	TextDrawFont(TD_LSR_SELECTMODE[14], 5);
	TextDrawSetProportional(TD_LSR_SELECTMODE[14], 0);
	TextDrawSetShadow(TD_LSR_SELECTMODE[14], 0);
	TextDrawSetSelectable(TD_LSR_SELECTMODE[14], true);
	TextDrawSetPreviewModel(TD_LSR_SELECTMODE[14], 1649);
	TextDrawSetPreviewRot(TD_LSR_SELECTMODE[14], 238.000000, 34.000000, 7.000000, 1.000000);

	TD_LSR_SELECTMODE[TD_COUNTER_FALL] = TextDrawCreate(472.000000, 145.000000, "0");
	TextDrawLetterSize(TD_LSR_SELECTMODE[TD_COUNTER_FALL], 0.274333, 1.172740);
	TextDrawAlignment(TD_LSR_SELECTMODE[TD_COUNTER_FALL], 3);
	TextDrawColor(TD_LSR_SELECTMODE[TD_COUNTER_FALL], -186);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_FALL], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[TD_COUNTER_FALL], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[TD_COUNTER_FALL], 255);
	TextDrawFont(TD_LSR_SELECTMODE[TD_COUNTER_FALL], 1);
	TextDrawSetProportional(TD_LSR_SELECTMODE[TD_COUNTER_FALL], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_FALL], 0);
	
	TD_LSR_SELECTMODE[15] = TextDrawCreate(424.0, 228.0, "Donotfall");
	TextDrawLetterSize(TD_LSR_SELECTMODE[15], 0.309998, 1.496299);
	TextDrawAlignment(TD_LSR_SELECTMODE[15], 2);
	TextDrawColor(TD_LSR_SELECTMODE[15], -1433665281);
	TextDrawSetShadow(TD_LSR_SELECTMODE[15], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[15], 1);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[15], 255);
	TextDrawFont(TD_LSR_SELECTMODE[15], 2);
	TextDrawSetProportional(TD_LSR_SELECTMODE[15], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[15], 0);
	
	//ZOMBIE
	TD_LSR_SELECTMODE[21] = TextDrawCreate(270.0, 144.0, "");
	TextDrawLetterSize(TD_LSR_SELECTMODE[21], 0.000000, 0.000000);
	TextDrawTextSize(TD_LSR_SELECTMODE[21], 100.000000, 105.000000);
	TextDrawAlignment(TD_LSR_SELECTMODE[21], 1);
	TextDrawColor(TD_LSR_SELECTMODE[21], -1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[21], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[21], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[21], 1179010730);
	TextDrawFont(TD_LSR_SELECTMODE[21], 5);
	TextDrawSetProportional(TD_LSR_SELECTMODE[21], 0);
	TextDrawSetShadow(TD_LSR_SELECTMODE[21], 0);
	TextDrawSetSelectable(TD_LSR_SELECTMODE[21], true);
	TextDrawSetPreviewModel(TD_LSR_SELECTMODE[21], 11711);
	TextDrawSetPreviewRot(TD_LSR_SELECTMODE[21], 340.000000, 0.000000, 333.000000, 1.000000);

	TD_LSR_SELECTMODE[TD_COUNTER_ZOMBIE] = TextDrawCreate(368.000000, 145.000000, "0");
	TextDrawLetterSize(TD_LSR_SELECTMODE[TD_COUNTER_ZOMBIE], 0.274333, 1.172740);
	TextDrawAlignment(TD_LSR_SELECTMODE[TD_COUNTER_ZOMBIE], 3);
	TextDrawColor(TD_LSR_SELECTMODE[TD_COUNTER_ZOMBIE], -186);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_ZOMBIE], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[TD_COUNTER_ZOMBIE], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[TD_COUNTER_ZOMBIE], 255);
	TextDrawFont(TD_LSR_SELECTMODE[TD_COUNTER_ZOMBIE], 1);
	TextDrawSetProportional(TD_LSR_SELECTMODE[TD_COUNTER_ZOMBIE], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_ZOMBIE], 0);
	
	TD_LSR_SELECTMODE[23] = TextDrawCreate(320.0, 228.0, "Zombie");
	TextDrawLetterSize(TD_LSR_SELECTMODE[23], 0.309998, 1.496299);
	TextDrawAlignment(TD_LSR_SELECTMODE[23], 2);
	TextDrawColor(TD_LSR_SELECTMODE[23], -1433665281);
	TextDrawSetShadow(TD_LSR_SELECTMODE[23], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[23], 1);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[23], 255);
	TextDrawFont(TD_LSR_SELECTMODE[23], 2);
	TextDrawSetProportional(TD_LSR_SELECTMODE[23], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[23], 0);
	
	//TDM
	TD_LSR_SELECTMODE[25] = TextDrawCreate(270.0, 144.0, "");
	TextDrawLetterSize(TD_LSR_SELECTMODE[25], 0.000000, 0.000000);
	TextDrawTextSize(TD_LSR_SELECTMODE[25], 100.000000, 105.000000);
	TextDrawAlignment(TD_LSR_SELECTMODE[25], 1);
	TextDrawColor(TD_LSR_SELECTMODE[25], -1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[25], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[25], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[25], 1179010730);
	TextDrawFont(TD_LSR_SELECTMODE[25], 5);
	TextDrawSetProportional(TD_LSR_SELECTMODE[25], 0);
	TextDrawSetShadow(TD_LSR_SELECTMODE[25], 0);
	TextDrawSetSelectable(TD_LSR_SELECTMODE[25], true);
	TextDrawSetPreviewModel(TD_LSR_SELECTMODE[25], 1584);
	TextDrawSetPreviewRot(TD_LSR_SELECTMODE[25], 0.000000, 0.000000, 200.000000, 1.000000);

	TD_LSR_SELECTMODE[TD_COUNTER_TDM] = TextDrawCreate(368.000000, 145.000000, "0");
	TextDrawLetterSize(TD_LSR_SELECTMODE[TD_COUNTER_TDM], 0.274333, 1.172740);
	TextDrawAlignment(TD_LSR_SELECTMODE[TD_COUNTER_TDM], 3);
	TextDrawColor(TD_LSR_SELECTMODE[TD_COUNTER_TDM], -186);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_TDM], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[TD_COUNTER_TDM], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[TD_COUNTER_TDM], 255);
	TextDrawFont(TD_LSR_SELECTMODE[TD_COUNTER_TDM], 1);
	TextDrawSetProportional(TD_LSR_SELECTMODE[TD_COUNTER_TDM], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_TDM], 0);
	
	TD_LSR_SELECTMODE[27] = TextDrawCreate(320.0, 228.0, "TEAM_DM");
	TextDrawLetterSize(TD_LSR_SELECTMODE[27], 0.309998, 1.496299);
	TextDrawAlignment(TD_LSR_SELECTMODE[27], 2);
	TextDrawColor(TD_LSR_SELECTMODE[27], -1433665281);
	TextDrawSetShadow(TD_LSR_SELECTMODE[27], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[27], 1);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[27], 255);
	TextDrawFont(TD_LSR_SELECTMODE[27], 2);
	TextDrawSetProportional(TD_LSR_SELECTMODE[27], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[27], 0);
	
	//SHOOTER
	TD_LSR_SELECTMODE[28] = TextDrawCreate(374.0, 253.0, "");
	TextDrawLetterSize(TD_LSR_SELECTMODE[28], 0.000000, 0.000000);
	TextDrawTextSize(TD_LSR_SELECTMODE[28], 100.000000, 105.000000);
	TextDrawAlignment(TD_LSR_SELECTMODE[28], 1);
	TextDrawColor(TD_LSR_SELECTMODE[28], -1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[28], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[28], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[28], 1179010730);
	TextDrawFont(TD_LSR_SELECTMODE[28], 5);
	TextDrawSetProportional(TD_LSR_SELECTMODE[28], 0);
	TextDrawSetShadow(TD_LSR_SELECTMODE[28], 0);
	TextDrawSetSelectable(TD_LSR_SELECTMODE[28], true);
	TextDrawSetPreviewModel(TD_LSR_SELECTMODE[28], 10281);
	TextDrawSetPreviewRot(TD_LSR_SELECTMODE[28], 0.000000, 0.000000, 180.000000, 0.604796);

	TD_LSR_SELECTMODE[TD_COUNTER_SHOOTER] = TextDrawCreate(472.000000, 254.000000, "0");
	TextDrawLetterSize(TD_LSR_SELECTMODE[TD_COUNTER_SHOOTER], 0.274333, 1.172740);
	TextDrawAlignment(TD_LSR_SELECTMODE[TD_COUNTER_SHOOTER], 3);
	TextDrawColor(TD_LSR_SELECTMODE[TD_COUNTER_SHOOTER], -186);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_SHOOTER], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[TD_COUNTER_SHOOTER], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[TD_COUNTER_SHOOTER], 255);
	TextDrawFont(TD_LSR_SELECTMODE[TD_COUNTER_SHOOTER], 1);
	TextDrawSetProportional(TD_LSR_SELECTMODE[TD_COUNTER_SHOOTER], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[TD_COUNTER_SHOOTER], 0);
	
	TD_LSR_SELECTMODE[30] = TextDrawCreate(424.0, 338.0, "Shooter");
	TextDrawLetterSize(TD_LSR_SELECTMODE[30], 0.309998, 1.496299);
	TextDrawAlignment(TD_LSR_SELECTMODE[30], 2);
	TextDrawColor(TD_LSR_SELECTMODE[30], -1433665281);
	TextDrawSetShadow(TD_LSR_SELECTMODE[30], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[30], 1);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[30], 255);
	TextDrawFont(TD_LSR_SELECTMODE[30], 2);
	TextDrawSetProportional(TD_LSR_SELECTMODE[30], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[30], 0);
	
	//RACES
	TD_LSR_SELECTMODE[31] = TextDrawCreate(374.0, 144.0, "");
	TextDrawLetterSize(TD_LSR_SELECTMODE[31], 0.000000, 0.000000);
	TextDrawTextSize(TD_LSR_SELECTMODE[31], 100.000000, 105.000000);
	TextDrawAlignment(TD_LSR_SELECTMODE[31], 1);
	TextDrawColor(TD_LSR_SELECTMODE[31], -1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[31], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[31], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[31], 1179010730);
	TextDrawFont(TD_LSR_SELECTMODE[31], 5);
	TextDrawSetProportional(TD_LSR_SELECTMODE[31], 0);
	TextDrawSetShadow(TD_LSR_SELECTMODE[31], 0);
	TextDrawSetSelectable(TD_LSR_SELECTMODE[31], true);
	TextDrawSetPreviewModel(TD_LSR_SELECTMODE[31], 429);
	TextDrawSetPreviewRot(TD_LSR_SELECTMODE[31], 345.000000, 0.000000, 315.000000, 0.855057);
	TextDrawSetPreviewVehCol(TD_LSR_SELECTMODE[31], 0, 3);

	TD_LSR_SELECTMODE[TD_COUNTER_RACES] = TextDrawCreate(472.000000, 145.000000, "0");
	TextDrawLetterSize(TD_LSR_SELECTMODE[32], 0.274333, 1.172740);
	TextDrawAlignment(TD_LSR_SELECTMODE[32], 3);
	TextDrawColor(TD_LSR_SELECTMODE[32], -186);
	TextDrawSetShadow(TD_LSR_SELECTMODE[32], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[32], 0);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[32], 255);
	TextDrawFont(TD_LSR_SELECTMODE[32], 1);
	TextDrawSetProportional(TD_LSR_SELECTMODE[32], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[32], 0);
	
	TD_LSR_SELECTMODE[33] = TextDrawCreate(424.0, 228.0, "CAR RACE");
	TextDrawLetterSize(TD_LSR_SELECTMODE[33], 0.309998, 1.496299);
	TextDrawAlignment(TD_LSR_SELECTMODE[33], 2);
	TextDrawColor(TD_LSR_SELECTMODE[33], -1433665281);
	TextDrawSetShadow(TD_LSR_SELECTMODE[33], 0);
	TextDrawSetOutline(TD_LSR_SELECTMODE[33], 1);
	TextDrawBackgroundColor(TD_LSR_SELECTMODE[33], 255);
	TextDrawFont(TD_LSR_SELECTMODE[33], 2);
	TextDrawSetProportional(TD_LSR_SELECTMODE[33], 1);
	TextDrawSetShadow(TD_LSR_SELECTMODE[33], 0);
	
	
	TD_LSR_SMODE_PAGE[0] = TextDrawCreate(495.000000, 240.000000, ">>");
	TextDrawLetterSize(TD_LSR_SMODE_PAGE[0], 0.251333, 2.002370);
	TextDrawTextSize(TD_LSR_SMODE_PAGE[0], 20.000000, 30.000000);
	TextDrawAlignment(TD_LSR_SMODE_PAGE[0], 2);
	TextDrawColor(TD_LSR_SMODE_PAGE[0], -1433665281);
	TextDrawUseBox(TD_LSR_SMODE_PAGE[0], 1);
	TextDrawBoxColor(TD_LSR_SMODE_PAGE[0], 1179010730);
	TextDrawSetShadow(TD_LSR_SMODE_PAGE[0], 0);
	TextDrawSetOutline(TD_LSR_SMODE_PAGE[0], 1);
	TextDrawBackgroundColor(TD_LSR_SMODE_PAGE[0], 255);
	TextDrawFont(TD_LSR_SMODE_PAGE[0], 2);
	TextDrawSetProportional(TD_LSR_SMODE_PAGE[0], 1);
	TextDrawSetShadow(TD_LSR_SMODE_PAGE[0], 0);
	TextDrawSetSelectable(TD_LSR_SMODE_PAGE[0], true);

	TD_LSR_SMODE_PAGE[1] = TextDrawCreate(145.000000, 240.000000, "<<");
	TextDrawLetterSize(TD_LSR_SMODE_PAGE[1], 0.251333, 2.002370);
	TextDrawTextSize(TD_LSR_SMODE_PAGE[1], 20.000000, 30.000000);
	TextDrawAlignment(TD_LSR_SMODE_PAGE[1], 2);
	TextDrawColor(TD_LSR_SMODE_PAGE[1], -1433665281);
	TextDrawUseBox(TD_LSR_SMODE_PAGE[1], 1);
	TextDrawBoxColor(TD_LSR_SMODE_PAGE[1], 1179010730);
	TextDrawSetShadow(TD_LSR_SMODE_PAGE[1], 0);
	TextDrawSetOutline(TD_LSR_SMODE_PAGE[1], 1);
	TextDrawBackgroundColor(TD_LSR_SMODE_PAGE[1], 255);
	TextDrawFont(TD_LSR_SMODE_PAGE[1], 2);
	TextDrawSetProportional(TD_LSR_SMODE_PAGE[1], 1);
	TextDrawSetShadow(TD_LSR_SMODE_PAGE[1], 0);
	TextDrawSetSelectable(TD_LSR_SMODE_PAGE[1], true);

	
	//ZOMBIE EDITION
	TD_LSR_ZOMBIE_EDITION[0] = TextDrawCreate(-10.300001, -1.000000, "box");
	TextDrawLetterSize(TD_LSR_ZOMBIE_EDITION[0], 0.000000, 10.000000);
	TextDrawTextSize(TD_LSR_ZOMBIE_EDITION[0], 660.000000, 0.000000);
	TextDrawAlignment(TD_LSR_ZOMBIE_EDITION[0], 1);
	TextDrawColor(TD_LSR_ZOMBIE_EDITION[0], -1);
	TextDrawUseBox(TD_LSR_ZOMBIE_EDITION[0], 1);
	TextDrawBoxColor(TD_LSR_ZOMBIE_EDITION[0], 255);
	TextDrawSetShadow(TD_LSR_ZOMBIE_EDITION[0], 0);
	TextDrawSetOutline(TD_LSR_ZOMBIE_EDITION[0], 0);
	TextDrawBackgroundColor(TD_LSR_ZOMBIE_EDITION[0], 255);
	TextDrawFont(TD_LSR_ZOMBIE_EDITION[0], 1);
	TextDrawSetProportional(TD_LSR_ZOMBIE_EDITION[0], 1);
	TextDrawSetShadow(TD_LSR_ZOMBIE_EDITION[0], 0);

	TD_LSR_ZOMBIE_EDITION[1] = TextDrawCreate(-10.000000, 361.000000, "box");
	TextDrawLetterSize(TD_LSR_ZOMBIE_EDITION[1], 0.000000, 10.000000);
	TextDrawTextSize(TD_LSR_ZOMBIE_EDITION[1], 661.000000, 0.000000);
	TextDrawAlignment(TD_LSR_ZOMBIE_EDITION[1], 1);
	TextDrawColor(TD_LSR_ZOMBIE_EDITION[1], -1);
	TextDrawUseBox(TD_LSR_ZOMBIE_EDITION[1], 1);
	TextDrawBoxColor(TD_LSR_ZOMBIE_EDITION[1], 255);
	TextDrawSetShadow(TD_LSR_ZOMBIE_EDITION[1], 0);
	TextDrawSetOutline(TD_LSR_ZOMBIE_EDITION[1], 0);
	TextDrawBackgroundColor(TD_LSR_ZOMBIE_EDITION[1], 255);
	TextDrawFont(TD_LSR_ZOMBIE_EDITION[1], 1);
	TextDrawSetProportional(TD_LSR_ZOMBIE_EDITION[1], 1);
	TextDrawSetShadow(TD_LSR_ZOMBIE_EDITION[1], 0);

	TD_LSR_ZOMBIE_EDITION[2] = TextDrawCreate(160.000000, 300.000000, "~g~~h~Humanos_(0)");
	TextDrawLetterSize(TD_LSR_ZOMBIE_EDITION[2], 0.400000, 1.600000);
	TextDrawTextSize(TD_LSR_ZOMBIE_EDITION[2], 15.000000, 150.000000);
	TextDrawAlignment(TD_LSR_ZOMBIE_EDITION[2], 2);
	TextDrawColor(TD_LSR_ZOMBIE_EDITION[2], -1);
	TextDrawUseBox(TD_LSR_ZOMBIE_EDITION[2], 1);
	TextDrawBoxColor(TD_LSR_ZOMBIE_EDITION[2], -236);
	TextDrawSetShadow(TD_LSR_ZOMBIE_EDITION[2], 0);
	TextDrawSetOutline(TD_LSR_ZOMBIE_EDITION[2], 1);
	TextDrawBackgroundColor(TD_LSR_ZOMBIE_EDITION[2], 255);
	TextDrawFont(TD_LSR_ZOMBIE_EDITION[2], 2);
	TextDrawSetProportional(TD_LSR_ZOMBIE_EDITION[2], 1);
	TextDrawSetShadow(TD_LSR_ZOMBIE_EDITION[2], 0);
	TextDrawSetSelectable(TD_LSR_ZOMBIE_EDITION[2], true);

	TD_LSR_ZOMBIE_EDITION[3] = TextDrawCreate(478.000000, 300.000000, "~r~Zombies_(0)");
	TextDrawLetterSize(TD_LSR_ZOMBIE_EDITION[3], 0.400000, 1.600000);
	TextDrawTextSize(TD_LSR_ZOMBIE_EDITION[3], 15.000000, 150.000000);
	TextDrawAlignment(TD_LSR_ZOMBIE_EDITION[3], 2);
	TextDrawColor(TD_LSR_ZOMBIE_EDITION[3], -1);
	TextDrawUseBox(TD_LSR_ZOMBIE_EDITION[3], 1);
	TextDrawBoxColor(TD_LSR_ZOMBIE_EDITION[3], -236);
	TextDrawSetShadow(TD_LSR_ZOMBIE_EDITION[3], 0);
	TextDrawSetOutline(TD_LSR_ZOMBIE_EDITION[3], 1);
	TextDrawBackgroundColor(TD_LSR_ZOMBIE_EDITION[3], 255);
	TextDrawFont(TD_LSR_ZOMBIE_EDITION[3], 2);
	TextDrawSetProportional(TD_LSR_ZOMBIE_EDITION[3], 1);
	TextDrawSetShadow(TD_LSR_ZOMBIE_EDITION[3], 0);
	TextDrawSetSelectable(TD_LSR_ZOMBIE_EDITION[3], true);

	TD_LSR_ZOMBIE_EDITION[4] = TextDrawCreate(320.000000, 31.000000, "LEGACY_freeroam");
	TextDrawLetterSize(TD_LSR_ZOMBIE_EDITION[4], 0.697667, 2.678520);
	TextDrawAlignment(TD_LSR_ZOMBIE_EDITION[4], 2);
	TextDrawColor(TD_LSR_ZOMBIE_EDITION[4], -2139062017);
	TextDrawSetShadow(TD_LSR_ZOMBIE_EDITION[4], 0);
	TextDrawSetOutline(TD_LSR_ZOMBIE_EDITION[4], 1);
	TextDrawBackgroundColor(TD_LSR_ZOMBIE_EDITION[4], 255);
	TextDrawFont(TD_LSR_ZOMBIE_EDITION[4], 3);
	TextDrawSetProportional(TD_LSR_ZOMBIE_EDITION[4], 1);
	TextDrawSetShadow(TD_LSR_ZOMBIE_EDITION[4], 0);

	TD_LSR_ZOMBIE_EDITION[5] = TextDrawCreate(359.000000, 46.000000, "Zombie_edition");
	TextDrawLetterSize(TD_LSR_ZOMBIE_EDITION[5], 0.433333, 1.641481);
	TextDrawAlignment(TD_LSR_ZOMBIE_EDITION[5], 1);
	TextDrawColor(TD_LSR_ZOMBIE_EDITION[5], -2097152168);
	TextDrawSetShadow(TD_LSR_ZOMBIE_EDITION[5], 0);
	TextDrawSetOutline(TD_LSR_ZOMBIE_EDITION[5], 1);
	TextDrawBackgroundColor(TD_LSR_ZOMBIE_EDITION[5], 255);
	TextDrawFont(TD_LSR_ZOMBIE_EDITION[5], 0);
	TextDrawSetProportional(TD_LSR_ZOMBIE_EDITION[5], 1);
	TextDrawSetShadow(TD_LSR_ZOMBIE_EDITION[5], 0);

	//TD_LSR_ZOMBIE_INFECTED
	TD_LSR_ZOMBIE_INFECTED = TextDrawCreate(-25.000000, -10.000000, "box");
	TextDrawLetterSize(TD_LSR_ZOMBIE_INFECTED, 0.000000, 55.000000);
	TextDrawTextSize(TD_LSR_ZOMBIE_INFECTED, 810.000000, 0.000000);
	TextDrawAlignment(TD_LSR_ZOMBIE_INFECTED, 1);
	TextDrawColor(TD_LSR_ZOMBIE_INFECTED, -1);
	TextDrawUseBox(TD_LSR_ZOMBIE_INFECTED, 1);
	TextDrawBoxColor(TD_LSR_ZOMBIE_INFECTED, -1862270916);
	TextDrawSetShadow(TD_LSR_ZOMBIE_INFECTED, 0);
	TextDrawSetOutline(TD_LSR_ZOMBIE_INFECTED, 0);
	TextDrawBackgroundColor(TD_LSR_ZOMBIE_INFECTED, 255);
	TextDrawFont(TD_LSR_ZOMBIE_INFECTED, 1);
	TextDrawSetProportional(TD_LSR_ZOMBIE_INFECTED, 1);
	TextDrawSetShadow(TD_LSR_ZOMBIE_INFECTED, 0);

	//TD_TDM  
	
	TD_TDM[0] = TextDrawCreate(613.000488, 402.375091, "5:00");
	TextDrawLetterSize(TD_TDM[0], 0.284999, 1.280626);
	TextDrawAlignment(TD_TDM[0], 3);
	TextDrawColor(TD_TDM[0], -116);
	TextDrawSetShadow(TD_TDM[0], 0);
	TextDrawSetOutline(TD_TDM[0], 0);
	TextDrawBackgroundColor(TD_TDM[0], 255);
	TextDrawFont(TD_TDM[0], 1);
	TextDrawSetProportional(TD_TDM[0], 1);
	TextDrawSetShadow(TD_TDM[0], 0);

	TD_TDM[1] = TextDrawCreate(581.700622, 403.974700, "TIME");
	TextDrawLetterSize(TD_TDM[1], 0.205000, 1.000626);
	TextDrawAlignment(TD_TDM[1], 3);
	TextDrawColor(TD_TDM[1], -116);
	TextDrawSetShadow(TD_TDM[1], 0);
	TextDrawSetOutline(TD_TDM[1], 0);
	TextDrawBackgroundColor(TD_TDM[1], 255);
	TextDrawFont(TD_TDM[1], 1);
	TextDrawSetProportional(TD_TDM[1], 1);
	TextDrawSetShadow(TD_TDM[1], 0);

	TD_TDM[2] = TextDrawCreate(537.500000, 403.062500, "_");
	TextDrawLetterSize(TD_TDM[2], 0.390500, 1.315626);
	TextDrawTextSize(TD_TDM[2], 614.000000, 0.000000);
	TextDrawAlignment(TD_TDM[2], 1);
	TextDrawColor(TD_TDM[2], -1);
	TextDrawUseBox(TD_TDM[2], 1);
	TextDrawBoxColor(TD_TDM[2], 90);
	TextDrawSetShadow(TD_TDM[2], 0);
	TextDrawSetOutline(TD_TDM[2], 0);
	TextDrawBackgroundColor(TD_TDM[2], 255);
	TextDrawFont(TD_TDM[2], 1);
	TextDrawSetProportional(TD_TDM[2], 1);
	TextDrawSetShadow(TD_TDM[2], 0);
	
	TD_TDM[3] = TextDrawCreate(613.000488, (402.375091)-34.0, "0");
	TextDrawLetterSize(TD_TDM[3], 0.284999, 1.280626);
	TextDrawAlignment(TD_TDM[3], 3);
	TextDrawColor(TD_TDM[3], -116);
	TextDrawSetShadow(TD_TDM[3], 0);
	TextDrawSetOutline(TD_TDM[3], 0);
	TextDrawBackgroundColor(TD_TDM[3], 255);
	TextDrawFont(TD_TDM[3], 1);
	TextDrawSetProportional(TD_TDM[3], 1);
	TextDrawSetShadow(TD_TDM[3], 0);

	TD_TDM[4] = TextDrawCreate(581.700622, (403.974700)-34.0, "EQUIPMENT 1");
	TextDrawLetterSize(TD_TDM[4], 0.205000, 1.000626);
	TextDrawAlignment(TD_TDM[4], 3);
	TextDrawColor(TD_TDM[4], TDM_TeamColors[0]); // -116
	TextDrawSetShadow(TD_TDM[4], 0);
	TextDrawSetOutline(TD_TDM[4], 0);
	TextDrawBackgroundColor(TD_TDM[4], 255);
	TextDrawFont(TD_TDM[4], 1);
	TextDrawSetProportional(TD_TDM[4], 1);
	TextDrawSetShadow(TD_TDM[4], 0);

	TD_TDM[5] = TextDrawCreate(537.500000, (403.062500)-34.0, "_");
	TextDrawLetterSize(TD_TDM[5], 0.390500, 1.315626);
	TextDrawTextSize(TD_TDM[5], 614.000000, 0.000000);
	TextDrawAlignment(TD_TDM[5], 1);
	TextDrawColor(TD_TDM[5], -1);
	TextDrawUseBox(TD_TDM[5], 1);
	TextDrawBoxColor(TD_TDM[5], 90);
	TextDrawSetShadow(TD_TDM[5], 0);
	TextDrawSetOutline(TD_TDM[5], 0);
	TextDrawBackgroundColor(TD_TDM[5], 255);
	TextDrawFont(TD_TDM[5], 1);
	TextDrawSetProportional(TD_TDM[5], 1);
	TextDrawSetShadow(TD_TDM[5], 0);
	
	TD_TDM[6] = TextDrawCreate(613.000488, (402.375091)-51.0, "0");
	TextDrawLetterSize(TD_TDM[6], 0.284999, 1.280626);
	TextDrawAlignment(TD_TDM[6], 3);
	TextDrawColor(TD_TDM[6], -116);
	TextDrawSetShadow(TD_TDM[6], 0);
	TextDrawSetOutline(TD_TDM[6], 0);
	TextDrawBackgroundColor(TD_TDM[6], 255);
	TextDrawFont(TD_TDM[6], 1);
	TextDrawSetProportional(TD_TDM[6], 1);
	TextDrawSetShadow(TD_TDM[6], 0);

	TD_TDM[7] = TextDrawCreate(581.700622, (403.974700)-51.0, "AIM");
	TextDrawLetterSize(TD_TDM[7], 0.205000, 1.000626);
	TextDrawAlignment(TD_TDM[7], 3);
	TextDrawColor(TD_TDM[7], -116);
	TextDrawSetShadow(TD_TDM[7], 0);
	TextDrawSetOutline(TD_TDM[7], 0);
	TextDrawBackgroundColor(TD_TDM[7], 255);
	TextDrawFont(TD_TDM[7], 1);
	TextDrawSetProportional(TD_TDM[7], 1);
	TextDrawSetShadow(TD_TDM[7], 0);

	TD_TDM[8] = TextDrawCreate(537.500000, (403.062500)-51.0, "_");
	TextDrawLetterSize(TD_TDM[8], 0.390500, 1.315626);
	TextDrawTextSize(TD_TDM[8], 614.000000, 0.000000);
	TextDrawAlignment(TD_TDM[8], 1);
	TextDrawColor(TD_TDM[8], -1);
	TextDrawUseBox(TD_TDM[8], 1);
	TextDrawBoxColor(TD_TDM[8], 90);
	TextDrawSetShadow(TD_TDM[8], 0);
	TextDrawSetOutline(TD_TDM[8], 0);
	TextDrawBackgroundColor(TD_TDM[8], 255);
	TextDrawFont(TD_TDM[8], 1);
	TextDrawSetProportional(TD_TDM[8], 1);
	TextDrawSetShadow(TD_TDM[8], 0);
	
	TD_TDM[9] = TextDrawCreate(613.000488, (402.375091)-68.0, "0");
	TextDrawLetterSize(TD_TDM[9], 0.284999, 1.280626);
	TextDrawAlignment(TD_TDM[9], 3);
	TextDrawColor(TD_TDM[9], -116);
	TextDrawSetShadow(TD_TDM[9], 0);
	TextDrawSetOutline(TD_TDM[9], 0);
	TextDrawBackgroundColor(TD_TDM[9], 255);
	TextDrawFont(TD_TDM[9], 1);
	TextDrawSetProportional(TD_TDM[9], 1);
	TextDrawSetShadow(TD_TDM[9], 0);

	TD_TDM[10] = TextDrawCreate(581.700622, (403.974700)-68.0, "PLAYERS");
	TextDrawLetterSize(TD_TDM[10], 0.205000, 1.000626);
	TextDrawAlignment(TD_TDM[10], 3);
	TextDrawColor(TD_TDM[10], -116);
	TextDrawSetShadow(TD_TDM[10], 0);
	TextDrawSetOutline(TD_TDM[10], 0);
	TextDrawBackgroundColor(TD_TDM[10], 255);
	TextDrawFont(TD_TDM[10], 1);
	TextDrawSetProportional(TD_TDM[10], 1);
	TextDrawSetShadow(TD_TDM[10], 0);

	TD_TDM[11] = TextDrawCreate(537.500000, (403.062500)-68.0, "_");
	TextDrawLetterSize(TD_TDM[11], 0.390500, 1.315626);
	TextDrawTextSize(TD_TDM[11], 614.000000, 0.000000);
	TextDrawAlignment(TD_TDM[11], 1);
	TextDrawColor(TD_TDM[11], -1);
	TextDrawUseBox(TD_TDM[11], 1);
	TextDrawBoxColor(TD_TDM[11], 90);
	TextDrawSetShadow(TD_TDM[11], 0);
	TextDrawSetOutline(TD_TDM[11], 0);
	TextDrawBackgroundColor(TD_TDM[11], 255);
	TextDrawFont(TD_TDM[11], 1);
	TextDrawSetProportional(TD_TDM[11], 1);
	TextDrawSetShadow(TD_TDM[11], 0);
	
	TD_TDM[12] = TextDrawCreate(613.000488, (402.375091)-17.0, "0");
	TextDrawLetterSize(TD_TDM[12], 0.284999, 1.280626);
	TextDrawAlignment(TD_TDM[12], 3);
	TextDrawColor(TD_TDM[12], -116);
	TextDrawSetShadow(TD_TDM[12], 0);
	TextDrawSetOutline(TD_TDM[12], 0);
	TextDrawBackgroundColor(TD_TDM[12], 255);
	TextDrawFont(TD_TDM[12], 1);
	TextDrawSetProportional(TD_TDM[12], 1);
	TextDrawSetShadow(TD_TDM[12], 0);

	TD_TDM[13] = TextDrawCreate(581.700622, (403.974700)-17.0, "EQUIPMENT 2");
	TextDrawLetterSize(TD_TDM[13], 0.205000, 1.000626);
	TextDrawAlignment(TD_TDM[13], 3);
	TextDrawColor(TD_TDM[13], TDM_TeamColors[1]);
	TextDrawSetShadow(TD_TDM[13], 0);
	TextDrawSetOutline(TD_TDM[13], 0);
	TextDrawBackgroundColor(TD_TDM[13], 255);
	TextDrawFont(TD_TDM[13], 1);
	TextDrawSetProportional(TD_TDM[13], 1);
	TextDrawSetShadow(TD_TDM[13], 0);

	TD_TDM[14] = TextDrawCreate(537.500000, (403.062500)-17.0, "_");
	TextDrawLetterSize(TD_TDM[14], 0.390500, 1.315626);
	TextDrawTextSize(TD_TDM[14], 614.000000, 0.000000);
	TextDrawAlignment(TD_TDM[14], 1);
	TextDrawColor(TD_TDM[14], -1);
	TextDrawUseBox(TD_TDM[14], 1);
	TextDrawBoxColor(TD_TDM[14], 90);
	TextDrawSetShadow(TD_TDM[14], 0);
	TextDrawSetOutline(TD_TDM[14], 0);
	TextDrawBackgroundColor(TD_TDM[14], 255);
	TextDrawFont(TD_TDM[14], 1);
	TextDrawSetProportional(TD_TDM[14], 1);
	TextDrawSetShadow(TD_TDM[14], 0);
	
	TD_TDM[15] = TextDrawCreate(320.000000, 190.000000, "_");
	TextDrawLetterSize(TD_TDM[15], 0.840333, 3.304888);
	TextDrawAlignment(TD_TDM[15], 2);
	TextDrawColor(TD_TDM[15], -4652801);
	TextDrawSetShadow(TD_TDM[15], 0);
	TextDrawSetOutline(TD_TDM[15], 1);
	TextDrawBackgroundColor(TD_TDM[15], 255);
	TextDrawFont(TD_TDM[15], 3);
	TextDrawSetProportional(TD_TDM[15], 1);
	TextDrawSetShadow(TD_TDM[15], 0);
	
	//TD_DM
	TD_DM[2] = TextDrawCreate(537.500000, 403.062500, "_");
	TextDrawLetterSize(TD_DM[2], 0.390500, 1.315626);
	TextDrawTextSize(TD_DM[2], 614.000000, 0.000000);
	TextDrawAlignment(TD_DM[2], 1);
	TextDrawColor(TD_DM[2], -1);
	TextDrawUseBox(TD_DM[2], 1);
	TextDrawBoxColor(TD_DM[2], 90);
	TextDrawSetShadow(TD_DM[2], 0);
	TextDrawSetOutline(TD_DM[2], 0);
	TextDrawBackgroundColor(TD_DM[2], 255);
	TextDrawFont(TD_DM[2], 1);
	TextDrawSetProportional(TD_DM[2], 1);
	TextDrawSetShadow(TD_DM[2], 0);
	
	TD_DM[0] = TextDrawCreate(613.000488, 402.375091, "5:00");
	TextDrawLetterSize(TD_DM[0], 0.284999, 1.280626);
	TextDrawAlignment(TD_DM[0], 3);
	TextDrawColor(TD_DM[0], -116);
	TextDrawSetShadow(TD_DM[0], 0);
	TextDrawSetOutline(TD_DM[0], 0);
	TextDrawBackgroundColor(TD_DM[0], 255);
	TextDrawFont(TD_DM[0], 1);
	TextDrawSetProportional(TD_DM[0], 1);
	TextDrawSetShadow(TD_DM[0], 0);

	TD_DM[1] = TextDrawCreate(581.700622, 403.974700, "TIME");
	TextDrawLetterSize(TD_DM[1], 0.205000, 1.000626);
	TextDrawAlignment(TD_DM[1], 3);
	TextDrawColor(TD_DM[1], -116);
	TextDrawSetShadow(TD_DM[1], 0);
	TextDrawSetOutline(TD_DM[1], 0);
	TextDrawBackgroundColor(TD_DM[1], 255);
	TextDrawFont(TD_DM[1], 1);
	TextDrawSetProportional(TD_DM[1], 1);
	TextDrawSetShadow(TD_DM[1], 0);

	TD_DM[5] = TextDrawCreate(537.500000, (403.062500)-17.0, "_");
	TextDrawLetterSize(TD_DM[5], 0.390500, 1.315626);
	TextDrawTextSize(TD_DM[5], 614.000000, 0.000000);
	TextDrawAlignment(TD_DM[5], 1);
	TextDrawColor(TD_DM[5], -1);
	TextDrawUseBox(TD_DM[5], 1);
	TextDrawBoxColor(TD_DM[5], 90);
	TextDrawSetShadow(TD_DM[5], 0);
	TextDrawSetOutline(TD_DM[5], 0);
	TextDrawBackgroundColor(TD_DM[5], 255);
	TextDrawFont(TD_DM[5], 1);
	TextDrawSetProportional(TD_DM[5], 1);
	TextDrawSetShadow(TD_DM[5], 0);
	
	TD_DM[3] = TextDrawCreate(613.000488, (402.375091)-17.0, "0");
	TextDrawLetterSize(TD_DM[3], 0.284999, 1.280626);
	TextDrawAlignment(TD_DM[3], 3);
	TextDrawColor(TD_DM[3], -116);
	TextDrawSetShadow(TD_DM[3], 0);
	TextDrawSetOutline(TD_DM[3], 0);
	TextDrawBackgroundColor(TD_DM[3], 255);
	TextDrawFont(TD_DM[3], 1);
	TextDrawSetProportional(TD_DM[3], 1);
	TextDrawSetShadow(TD_DM[3], 0);

	TD_DM[4] = TextDrawCreate(581.700622, (403.974700)-17.0, "PLAYERS");
	TextDrawLetterSize(TD_DM[4], 0.205000, 1.000626);
	TextDrawAlignment(TD_DM[4], 3);
	TextDrawColor(TD_DM[4], -116);
	TextDrawSetShadow(TD_DM[4], 0);
	TextDrawSetOutline(TD_DM[4], 0);
	TextDrawBackgroundColor(TD_DM[4], 255);
	TextDrawFont(TD_DM[4], 1);
	TextDrawSetProportional(TD_DM[4], 1);
	TextDrawSetShadow(TD_DM[4], 0);
	
	//DERBY
	TD_DERBY[2] = TextDrawCreate(537.500000, 403.062500, "_");
	TextDrawLetterSize(TD_DERBY[2], 0.390500, 1.315626);
	TextDrawTextSize(TD_DERBY[2], 614.000000, 0.000000);
	TextDrawAlignment(TD_DERBY[2], 1);
	TextDrawColor(TD_DERBY[2], -1);
	TextDrawUseBox(TD_DERBY[2], 1);
	TextDrawBoxColor(TD_DERBY[2], 90);
	TextDrawSetShadow(TD_DERBY[2], 0);
	TextDrawSetOutline(TD_DERBY[2], 0);
	TextDrawBackgroundColor(TD_DERBY[2], 255);
	TextDrawFont(TD_DERBY[2], 1);
	TextDrawSetProportional(TD_DERBY[2], 1);
	TextDrawSetShadow(TD_DERBY[2], 0);
	
	TD_DERBY[0] = TextDrawCreate(613.000488, 402.375091, "5:00");
	TextDrawLetterSize(TD_DERBY[0], 0.284999, 1.280626);
	TextDrawAlignment(TD_DERBY[0], 3);
	TextDrawColor(TD_DERBY[0], -116);
	TextDrawSetShadow(TD_DERBY[0], 0);
	TextDrawSetOutline(TD_DERBY[0], 0);
	TextDrawBackgroundColor(TD_DERBY[0], 255);
	TextDrawFont(TD_DERBY[0], 1);
	TextDrawSetProportional(TD_DERBY[0], 1);
	TextDrawSetShadow(TD_DERBY[0], 0);

	TD_DERBY[1] = TextDrawCreate(581.700622, 403.974700, "TIME");
	TextDrawLetterSize(TD_DERBY[1], 0.205000, 1.000626);
	TextDrawAlignment(TD_DERBY[1], 3);
	TextDrawColor(TD_DERBY[1], -116);
	TextDrawSetShadow(TD_DERBY[1], 0);
	TextDrawSetOutline(TD_DERBY[1], 0);
	TextDrawBackgroundColor(TD_DERBY[1], 255);
	TextDrawFont(TD_DERBY[1], 1);
	TextDrawSetProportional(TD_DERBY[1], 1);
	TextDrawSetShadow(TD_DERBY[1], 0);

	TD_DERBY[5] = TextDrawCreate(537.500000, (403.062500)-17.0, "_");
	TextDrawLetterSize(TD_DERBY[5], 0.390500, 1.315626);
	TextDrawTextSize(TD_DERBY[5], 614.000000, 0.000000);
	TextDrawAlignment(TD_DERBY[5], 1);
	TextDrawColor(TD_DERBY[5], -1);
	TextDrawUseBox(TD_DERBY[5], 1);
	TextDrawBoxColor(TD_DERBY[5], 90);
	TextDrawSetShadow(TD_DERBY[5], 0);
	TextDrawSetOutline(TD_DERBY[5], 0);
	TextDrawBackgroundColor(TD_DERBY[5], 255);
	TextDrawFont(TD_DERBY[5], 1);
	TextDrawSetProportional(TD_DERBY[5], 1);
	TextDrawSetShadow(TD_DERBY[5], 0);
	
	TD_DERBY[3] = TextDrawCreate(613.000488, (402.375091)-17.0, "0");
	TextDrawLetterSize(TD_DERBY[3], 0.284999, 1.280626);
	TextDrawAlignment(TD_DERBY[3], 3);
	TextDrawColor(TD_DERBY[3], -116);
	TextDrawSetShadow(TD_DERBY[3], 0);
	TextDrawSetOutline(TD_DERBY[3], 0);
	TextDrawBackgroundColor(TD_DERBY[3], 255);
	TextDrawFont(TD_DERBY[3], 1);
	TextDrawSetProportional(TD_DERBY[3], 1);
	TextDrawSetShadow(TD_DERBY[3], 0);

	TD_DERBY[4] = TextDrawCreate(581.700622, (403.974700)-17.0, "ASSETS");
	TextDrawLetterSize(TD_DERBY[4], 0.205000, 1.000626);
	TextDrawAlignment(TD_DERBY[4], 3);
	TextDrawColor(TD_DERBY[4], -116);
	TextDrawSetShadow(TD_DERBY[4], 0);
	TextDrawSetOutline(TD_DERBY[4], 0);
	TextDrawBackgroundColor(TD_DERBY[4], 255);
	TextDrawFont(TD_DERBY[4], 1);
	TextDrawSetProportional(TD_DERBY[4], 1);
	TextDrawSetShadow(TD_DERBY[4], 0);

	TD_DERBY[8] = TextDrawCreate(537.500000, (403.062500)-34.0, "_");
	TextDrawLetterSize(TD_DERBY[8], 0.390500, 1.315626);
	TextDrawTextSize(TD_DERBY[8], 614.000000, 0.000000);
	TextDrawAlignment(TD_DERBY[8], 1);
	TextDrawColor(TD_DERBY[8], -1);
	TextDrawUseBox(TD_DERBY[8], 1);
	TextDrawBoxColor(TD_DERBY[8], 90);
	TextDrawSetShadow(TD_DERBY[8], 0);
	TextDrawSetOutline(TD_DERBY[8], 0);
	TextDrawBackgroundColor(TD_DERBY[8], 255);
	TextDrawFont(TD_DERBY[8], 1);
	TextDrawSetProportional(TD_DERBY[8], 1);
	TextDrawSetShadow(TD_DERBY[8], 0);
	
	TD_DERBY[6] = TextDrawCreate(613.000488, (402.375091)-34.0, "0");
	TextDrawLetterSize(TD_DERBY[6], 0.284999, 1.280626);
	TextDrawAlignment(TD_DERBY[6], 3);
	TextDrawColor(TD_DERBY[6], -116);
	TextDrawSetShadow(TD_DERBY[6], 0);
	TextDrawSetOutline(TD_DERBY[6], 0);
	TextDrawBackgroundColor(TD_DERBY[6], 255);
	TextDrawFont(TD_DERBY[6], 1);
	TextDrawSetProportional(TD_DERBY[6], 1);
	TextDrawSetShadow(TD_DERBY[6], 0);

	TD_DERBY[7] = TextDrawCreate(581.700622, (403.974700)-34.0, "PLAYERS");
	TextDrawLetterSize(TD_DERBY[7], 0.205000, 1.000626);
	TextDrawAlignment(TD_DERBY[7], 3);
	TextDrawColor(TD_DERBY[7], -116);
	TextDrawSetShadow(TD_DERBY[7], 0);
	TextDrawSetOutline(TD_DERBY[7], 0);
	TextDrawBackgroundColor(TD_DERBY[7], 255);
	TextDrawFont(TD_DERBY[7], 1);
	TextDrawSetProportional(TD_DERBY[7], 1);
	TextDrawSetShadow(TD_DERBY[7], 0);
	
	TD_DerbyMessage = TextDrawCreate(320.000000, 320.000000, "_");
	TextDrawLetterSize(TD_DerbyMessage, 0.281332, 1.077334);
	TextDrawAlignment(TD_DerbyMessage, 2);
	TextDrawColor(TD_DerbyMessage, -1);
	TextDrawSetShadow(TD_DerbyMessage, 0);
	TextDrawSetOutline(TD_DerbyMessage, 1);
	TextDrawFont(TD_DerbyMessage, 3);
	TextDrawSetProportional(TD_DerbyMessage, 1);
	TextDrawSetShadow(TD_DerbyMessage, 0);
	
	//SHOOTER
	TD_SHOOTER[2] = TextDrawCreate(537.500000, 403.062500, "_");
	TextDrawLetterSize(TD_SHOOTER[2], 0.390500, 1.315626);
	TextDrawTextSize(TD_SHOOTER[2], 614.000000, 0.000000);
	TextDrawAlignment(TD_SHOOTER[2], 1);
	TextDrawColor(TD_SHOOTER[2], -1);
	TextDrawUseBox(TD_SHOOTER[2], 1);
	TextDrawBoxColor(TD_SHOOTER[2], 90);
	TextDrawSetShadow(TD_SHOOTER[2], 0);
	TextDrawSetOutline(TD_SHOOTER[2], 0);
	TextDrawBackgroundColor(TD_SHOOTER[2], 255);
	TextDrawFont(TD_SHOOTER[2], 1);
	TextDrawSetProportional(TD_SHOOTER[2], 1);
	TextDrawSetShadow(TD_SHOOTER[2], 0);
	
	TD_SHOOTER[0] = TextDrawCreate(613.000488, 402.375091, "5:00");
	TextDrawLetterSize(TD_SHOOTER[0], 0.284999, 1.280626);
	TextDrawAlignment(TD_SHOOTER[0], 3);
	TextDrawColor(TD_SHOOTER[0], -116);
	TextDrawSetShadow(TD_SHOOTER[0], 0);
	TextDrawSetOutline(TD_SHOOTER[0], 0);
	TextDrawBackgroundColor(TD_SHOOTER[0], 255);
	TextDrawFont(TD_SHOOTER[0], 1);
	TextDrawSetProportional(TD_SHOOTER[0], 1);
	TextDrawSetShadow(TD_SHOOTER[0], 0);

	TD_SHOOTER[1] = TextDrawCreate(581.700622, 403.974700, "TIME");
	TextDrawLetterSize(TD_SHOOTER[1], 0.205000, 1.000626);
	TextDrawAlignment(TD_SHOOTER[1], 3);
	TextDrawColor(TD_SHOOTER[1], -116);
	TextDrawSetShadow(TD_SHOOTER[1], 0);
	TextDrawSetOutline(TD_SHOOTER[1], 0);
	TextDrawBackgroundColor(TD_SHOOTER[1], 255);
	TextDrawFont(TD_SHOOTER[1], 1);
	TextDrawSetProportional(TD_SHOOTER[1], 1);
	TextDrawSetShadow(TD_SHOOTER[1], 0);

	TD_SHOOTER[5] = TextDrawCreate(537.500000, (403.062500)-17.0, "_");
	TextDrawLetterSize(TD_SHOOTER[5], 0.390500, 1.315626);
	TextDrawTextSize(TD_SHOOTER[5], 614.000000, 0.000000);
	TextDrawAlignment(TD_SHOOTER[5], 1);
	TextDrawColor(TD_SHOOTER[5], -1);
	TextDrawUseBox(TD_SHOOTER[5], 1);
	TextDrawBoxColor(TD_SHOOTER[5], 90);
	TextDrawSetShadow(TD_SHOOTER[5], 0);
	TextDrawSetOutline(TD_SHOOTER[5], 0);
	TextDrawBackgroundColor(TD_SHOOTER[5], 255);
	TextDrawFont(TD_SHOOTER[5], 1);
	TextDrawSetProportional(TD_SHOOTER[5], 1);
	TextDrawSetShadow(TD_SHOOTER[5], 0);
	
	TD_SHOOTER[3] = TextDrawCreate(613.000488, (402.375091)-17.0, "0");
	TextDrawLetterSize(TD_SHOOTER[3], 0.284999, 1.280626);
	TextDrawAlignment(TD_SHOOTER[3], 3);
	TextDrawColor(TD_SHOOTER[3], -116);
	TextDrawSetShadow(TD_SHOOTER[3], 0);
	TextDrawSetOutline(TD_SHOOTER[3], 0);
	TextDrawBackgroundColor(TD_SHOOTER[3], 255);
	TextDrawFont(TD_SHOOTER[3], 1);
	TextDrawSetProportional(TD_SHOOTER[3], 1);
	TextDrawSetShadow(TD_SHOOTER[3], 0);

	TD_SHOOTER[4] = TextDrawCreate(581.700622, (403.974700)-17.0, "ASSETS");
	TextDrawLetterSize(TD_SHOOTER[4], 0.205000, 1.000626);
	TextDrawAlignment(TD_SHOOTER[4], 3);
	TextDrawColor(TD_SHOOTER[4], -116);
	TextDrawSetShadow(TD_SHOOTER[4], 0);
	TextDrawSetOutline(TD_SHOOTER[4], 0);
	TextDrawBackgroundColor(TD_SHOOTER[4], 255);
	TextDrawFont(TD_SHOOTER[4], 1);
	TextDrawSetProportional(TD_SHOOTER[4], 1);
	TextDrawSetShadow(TD_SHOOTER[4], 0);

	TD_SHOOTER[8] = TextDrawCreate(537.500000, (403.062500)-34.0, "_");
	TextDrawLetterSize(TD_SHOOTER[8], 0.390500, 1.315626);
	TextDrawTextSize(TD_SHOOTER[8], 614.000000, 0.000000);
	TextDrawAlignment(TD_SHOOTER[8], 1);
	TextDrawColor(TD_SHOOTER[8], -1);
	TextDrawUseBox(TD_SHOOTER[8], 1);
	TextDrawBoxColor(TD_SHOOTER[8], 90);
	TextDrawSetShadow(TD_SHOOTER[8], 0);
	TextDrawSetOutline(TD_SHOOTER[8], 0);
	TextDrawBackgroundColor(TD_SHOOTER[8], 255);
	TextDrawFont(TD_SHOOTER[8], 1);
	TextDrawSetProportional(TD_SHOOTER[8], 1);
	TextDrawSetShadow(TD_SHOOTER[8], 0);
	
	TD_SHOOTER[6] = TextDrawCreate(613.000488, (402.375091)-34.0, "0");
	TextDrawLetterSize(TD_SHOOTER[6], 0.284999, 1.280626);
	TextDrawAlignment(TD_SHOOTER[6], 3);
	TextDrawColor(TD_SHOOTER[6], -116);
	TextDrawSetShadow(TD_SHOOTER[6], 0);
	TextDrawSetOutline(TD_SHOOTER[6], 0);
	TextDrawBackgroundColor(TD_SHOOTER[6], 255);
	TextDrawFont(TD_SHOOTER[6], 1);
	TextDrawSetProportional(TD_SHOOTER[6], 1);
	TextDrawSetShadow(TD_SHOOTER[6], 0);

	TD_SHOOTER[7] = TextDrawCreate(581.700622, (403.974700)-34.0, "PLAYERS");
	TextDrawLetterSize(TD_SHOOTER[7], 0.205000, 1.000626);
	TextDrawAlignment(TD_SHOOTER[7], 3);
	TextDrawColor(TD_SHOOTER[7], -116);
	TextDrawSetShadow(TD_SHOOTER[7], 0);
	TextDrawSetOutline(TD_SHOOTER[7], 0);
	TextDrawBackgroundColor(TD_SHOOTER[7], 255);
	TextDrawFont(TD_SHOOTER[7], 1);
	TextDrawSetProportional(TD_SHOOTER[7], 1);
	TextDrawSetShadow(TD_SHOOTER[7], 0);
	
	TD_ShooterMessage = TextDrawCreate(320.000000, 320.000000, "_");
	TextDrawLetterSize(TD_ShooterMessage, 0.281332, 1.077334);
	TextDrawAlignment(TD_ShooterMessage, 2);
	TextDrawColor(TD_ShooterMessage, -1);
	TextDrawSetShadow(TD_ShooterMessage, 0);
	TextDrawSetOutline(TD_ShooterMessage, 1);
	TextDrawFont(TD_ShooterMessage, 3);
	TextDrawSetProportional(TD_ShooterMessage, 1);
	TextDrawSetShadow(TD_ShooterMessage, 0);
	
	//RACE COLLISIONS
	TD_RACE_Collisions[2] = TextDrawCreate(525.000000, 305.000000, "box");
	TextDrawLetterSize(TD_RACE_Collisions[2], 0.000000, 6.566666);
	TextDrawTextSize(TD_RACE_Collisions[2], 613.000000, 0.000000);
	TextDrawAlignment(TD_RACE_Collisions[2], 1);
	TextDrawColor(TD_RACE_Collisions[2], -1);
	TextDrawUseBox(TD_RACE_Collisions[2], 1);
	TextDrawBoxColor(TD_RACE_Collisions[2], 255);
	TextDrawSetShadow(TD_RACE_Collisions[2], 0);
	TextDrawSetOutline(TD_RACE_Collisions[2], 0);
	TextDrawBackgroundColor(TD_RACE_Collisions[2], 255);
	TextDrawFont(TD_RACE_Collisions[2], 1);
	TextDrawSetProportional(TD_RACE_Collisions[2], 1);
	TextDrawSetShadow(TD_RACE_Collisions[2], 0);
	
	TD_RACE_Collisions[0] = TextDrawCreate(545.000000, 341.000000, "~g~~h~~h~SI");
	TextDrawLetterSize(TD_RACE_Collisions[0], 0.400000, 1.600000);
	TextDrawTextSize(TD_RACE_Collisions[0], 15.000000, 25.000000);
	TextDrawAlignment(TD_RACE_Collisions[0], 2);
	TextDrawColor(TD_RACE_Collisions[0], -1);
	TextDrawUseBox(TD_RACE_Collisions[0], 1);
	TextDrawBoxColor(TD_RACE_Collisions[0], -1600085852);
	TextDrawSetShadow(TD_RACE_Collisions[0], 0);
	TextDrawSetOutline(TD_RACE_Collisions[0], 1);
	TextDrawBackgroundColor(TD_RACE_Collisions[0], 255);
	TextDrawFont(TD_RACE_Collisions[0], 1);
	TextDrawSetProportional(TD_RACE_Collisions[0], 1);
	TextDrawSetShadow(TD_RACE_Collisions[0], 0);
	TextDrawSetSelectable(TD_RACE_Collisions[0], true);

	TD_RACE_Collisions[1] = TextDrawCreate(591.000000, 341.000000, "~r~~h~~h~NO");
	TextDrawLetterSize(TD_RACE_Collisions[1], 0.400000, 1.600000);
	TextDrawTextSize(TD_RACE_Collisions[1], 15.000000, 25.000000);
	TextDrawAlignment(TD_RACE_Collisions[1], 2);
	TextDrawColor(TD_RACE_Collisions[1], -1);
	TextDrawUseBox(TD_RACE_Collisions[1], 1);
	TextDrawBoxColor(TD_RACE_Collisions[1], -1600085852);
	TextDrawSetShadow(TD_RACE_Collisions[1], 0);
	TextDrawSetOutline(TD_RACE_Collisions[1], 1);
	TextDrawBackgroundColor(TD_RACE_Collisions[1], 255);
	TextDrawFont(TD_RACE_Collisions[1], 1);
	TextDrawSetProportional(TD_RACE_Collisions[1], 1);
	TextDrawSetShadow(TD_RACE_Collisions[1], 0);
	TextDrawSetSelectable(TD_RACE_Collisions[1], true);

	TD_RACE_Collisions[3] = TextDrawCreate(600.000000, 309.000000, "With_contact:_0~n~No contact:_0~n~_");
	TextDrawLetterSize(TD_RACE_Collisions[3], 0.266333, 1.197629);
	TextDrawAlignment(TD_RACE_Collisions[3], 3);
	TextDrawColor(TD_RACE_Collisions[3], -65281);
	TextDrawSetShadow(TD_RACE_Collisions[3], 0);
	TextDrawSetOutline(TD_RACE_Collisions[3], 1);
	TextDrawBackgroundColor(TD_RACE_Collisions[3], 255);
	TextDrawFont(TD_RACE_Collisions[3], 1);
	TextDrawSetProportional(TD_RACE_Collisions[3], 1);
	TextDrawSetShadow(TD_RACE_Collisions[3], 0);

	//RACE
	TD_RACE[2] = TextDrawCreate(537.500000, 403.062500, "_");
	TextDrawLetterSize(TD_RACE[2], 0.390500, 1.315626);
	TextDrawTextSize(TD_RACE[2], 614.000000, 0.000000);
	TextDrawAlignment(TD_RACE[2], 1);
	TextDrawColor(TD_RACE[2], -1);
	TextDrawUseBox(TD_RACE[2], 1);
	TextDrawBoxColor(TD_RACE[2], 90);
	TextDrawSetShadow(TD_RACE[2], 0);
	TextDrawSetOutline(TD_RACE[2], 0);
	TextDrawBackgroundColor(TD_RACE[2], 255);
	TextDrawFont(TD_RACE[2], 1);
	TextDrawSetProportional(TD_RACE[2], 1);
	TextDrawSetShadow(TD_RACE[2], 0);
	
	TD_RACE[0] = TextDrawCreate(613.000488, 402.375091, "5:00");
	TextDrawLetterSize(TD_RACE[0], 0.284999, 1.280626);
	TextDrawAlignment(TD_RACE[0], 3);
	TextDrawColor(TD_RACE[0], -116);
	TextDrawSetShadow(TD_RACE[0], 0);
	TextDrawSetOutline(TD_RACE[0], 0);
	TextDrawBackgroundColor(TD_RACE[0], 255);
	TextDrawFont(TD_RACE[0], 1);
	TextDrawSetProportional(TD_RACE[0], 1);
	TextDrawSetShadow(TD_RACE[0], 0);

	TD_RACE[1] = TextDrawCreate(581.700622, 403.974700, "TIME");
	TextDrawLetterSize(TD_RACE[1], 0.205000, 1.000626);
	TextDrawAlignment(TD_RACE[1], 3);
	TextDrawColor(TD_RACE[1], -116);
	TextDrawSetShadow(TD_RACE[1], 0);
	TextDrawSetOutline(TD_RACE[1], 0);
	TextDrawBackgroundColor(TD_RACE[1], 255);
	TextDrawFont(TD_RACE[1], 1);
	TextDrawSetProportional(TD_RACE[1], 1);
	TextDrawSetShadow(TD_RACE[1], 0);

	TD_RACE[5] = TextDrawCreate(537.500000, (403.062500)-17.0, "_");
	TextDrawLetterSize(TD_RACE[5], 0.390500, 1.315626);
	TextDrawTextSize(TD_RACE[5], 614.000000, 0.000000);
	TextDrawAlignment(TD_RACE[5], 1);
	TextDrawColor(TD_RACE[5], -1);
	TextDrawUseBox(TD_RACE[5], 1);
	TextDrawBoxColor(TD_RACE[5], 90);
	TextDrawSetShadow(TD_RACE[5], 0);
	TextDrawSetOutline(TD_RACE[5], 0);
	TextDrawBackgroundColor(TD_RACE[5], 255);
	TextDrawFont(TD_RACE[5], 1);
	TextDrawSetProportional(TD_RACE[5], 1);
	TextDrawSetShadow(TD_RACE[5], 0);
	
	TD_RACE[3] = TextDrawCreate(613.000488, (402.375091)-17.0, "0");
	TextDrawLetterSize(TD_RACE[3], 0.284999, 1.280626);
	TextDrawAlignment(TD_RACE[3], 3);
	TextDrawColor(TD_RACE[3], -116);
	TextDrawSetShadow(TD_RACE[3], 0);
	TextDrawSetOutline(TD_RACE[3], 0);
	TextDrawBackgroundColor(TD_RACE[3], 255);
	TextDrawFont(TD_RACE[3], 1);
	TextDrawSetProportional(TD_RACE[3], 1);
	TextDrawSetShadow(TD_RACE[3], 0);

	TD_RACE[4] = TextDrawCreate(581.700622, (403.974700)-17.0, "ASSETS");
	TextDrawLetterSize(TD_RACE[4], 0.205000, 1.000626);
	TextDrawAlignment(TD_RACE[4], 3);
	TextDrawColor(TD_RACE[4], -116);
	TextDrawSetShadow(TD_RACE[4], 0);
	TextDrawSetOutline(TD_RACE[4], 0);
	TextDrawBackgroundColor(TD_RACE[4], 255);
	TextDrawFont(TD_RACE[4], 1);
	TextDrawSetProportional(TD_RACE[4], 1);
	TextDrawSetShadow(TD_RACE[4], 0);

	TD_RACE[8] = TextDrawCreate(537.500000, (403.062500)-34.0, "_");
	TextDrawLetterSize(TD_RACE[8], 0.390500, 1.315626);
	TextDrawTextSize(TD_RACE[8], 614.000000, 0.000000);
	TextDrawAlignment(TD_RACE[8], 1);
	TextDrawColor(TD_RACE[8], -1);
	TextDrawUseBox(TD_RACE[8], 1);
	TextDrawBoxColor(TD_RACE[8], 90);
	TextDrawSetShadow(TD_RACE[8], 0);
	TextDrawSetOutline(TD_RACE[8], 0);
	TextDrawBackgroundColor(TD_RACE[8], 255);
	TextDrawFont(TD_RACE[8], 1);
	TextDrawSetProportional(TD_RACE[8], 1);
	TextDrawSetShadow(TD_RACE[8], 0);
	
	TD_RACE[6] = TextDrawCreate(613.000488, (402.375091)-34.0, "0");
	TextDrawLetterSize(TD_RACE[6], 0.284999, 1.280626);
	TextDrawAlignment(TD_RACE[6], 3);
	TextDrawColor(TD_RACE[6], -116);
	TextDrawSetShadow(TD_RACE[6], 0);
	TextDrawSetOutline(TD_RACE[6], 0);
	TextDrawBackgroundColor(TD_RACE[6], 255);
	TextDrawFont(TD_RACE[6], 1);
	TextDrawSetProportional(TD_RACE[6], 1);
	TextDrawSetShadow(TD_RACE[6], 0);

	TD_RACE[7] = TextDrawCreate(581.700622, (403.974700)-34.0, "PLAYERS");
	TextDrawLetterSize(TD_RACE[7], 0.205000, 1.000626);
	TextDrawAlignment(TD_RACE[7], 3);
	TextDrawColor(TD_RACE[7], -116);
	TextDrawSetShadow(TD_RACE[7], 0);
	TextDrawSetOutline(TD_RACE[7], 0);
	TextDrawBackgroundColor(TD_RACE[7], 255);
	TextDrawFont(TD_RACE[7], 1);
	TextDrawSetProportional(TD_RACE[7], 1);
	TextDrawSetShadow(TD_RACE[7], 0);
	
	TD_RACEMessage = TextDrawCreate(320.000000, 320.000000, "_");
	TextDrawLetterSize(TD_RACEMessage, 0.281332, 1.077334);
	TextDrawAlignment(TD_RACEMessage, 2);
	TextDrawColor(TD_RACEMessage, -1);
	TextDrawSetShadow(TD_RACEMessage, 0);
	TextDrawSetOutline(TD_RACEMessage, 1);
	TextDrawFont(TD_RACEMessage, 3);
	TextDrawSetProportional(TD_RACEMessage, 1);
	TextDrawSetShadow(TD_RACEMessage, 0);
	
	//FALL
	TD_FALL[2] = TextDrawCreate(537.500000, 403.062500, "_");
	TextDrawLetterSize(TD_FALL[2], 0.390500, 1.315626);
	TextDrawTextSize(TD_FALL[2], 614.000000, 0.000000);
	TextDrawAlignment(TD_FALL[2], 1);
	TextDrawColor(TD_FALL[2], -1);
	TextDrawUseBox(TD_FALL[2], 1);
	TextDrawBoxColor(TD_FALL[2], 90);
	TextDrawSetShadow(TD_FALL[2], 0);
	TextDrawSetOutline(TD_FALL[2], 0);
	TextDrawBackgroundColor(TD_FALL[2], 255);
	TextDrawFont(TD_FALL[2], 1);
	TextDrawSetProportional(TD_FALL[2], 1);
	TextDrawSetShadow(TD_FALL[2], 0);
	
	TD_FALL[0] = TextDrawCreate(613.000488, 402.375091, "5:00");
	TextDrawLetterSize(TD_FALL[0], 0.284999, 1.280626);
	TextDrawAlignment(TD_FALL[0], 3);
	TextDrawColor(TD_FALL[0], -116);
	TextDrawSetShadow(TD_FALL[0], 0);
	TextDrawSetOutline(TD_FALL[0], 0);
	TextDrawBackgroundColor(TD_FALL[0], 255);
	TextDrawFont(TD_FALL[0], 1);
	TextDrawSetProportional(TD_FALL[0], 1);
	TextDrawSetShadow(TD_FALL[0], 0);

	TD_FALL[1] = TextDrawCreate(581.700622, 403.974700, "TIME");
	TextDrawLetterSize(TD_FALL[1], 0.205000, 1.000626);
	TextDrawAlignment(TD_FALL[1], 3);
	TextDrawColor(TD_FALL[1], -116);
	TextDrawSetShadow(TD_FALL[1], 0);
	TextDrawSetOutline(TD_FALL[1], 0);
	TextDrawBackgroundColor(TD_FALL[1], 255);
	TextDrawFont(TD_FALL[1], 1);
	TextDrawSetProportional(TD_FALL[1], 1);
	TextDrawSetShadow(TD_FALL[1], 0);

	TD_FALL[5] = TextDrawCreate(537.500000, (403.062500)-17.0, "_");
	TextDrawLetterSize(TD_FALL[5], 0.390500, 1.315626);
	TextDrawTextSize(TD_FALL[5], 614.000000, 0.000000);
	TextDrawAlignment(TD_FALL[5], 1);
	TextDrawColor(TD_FALL[5], -1);
	TextDrawUseBox(TD_FALL[5], 1);
	TextDrawBoxColor(TD_FALL[5], 90);
	TextDrawSetShadow(TD_FALL[5], 0);
	TextDrawSetOutline(TD_FALL[5], 0);
	TextDrawBackgroundColor(TD_FALL[5], 255);
	TextDrawFont(TD_FALL[5], 1);
	TextDrawSetProportional(TD_FALL[5], 1);
	TextDrawSetShadow(TD_FALL[5], 0);
	
	TD_FALL[3] = TextDrawCreate(613.000488, (402.375091)-17.0, "0");
	TextDrawLetterSize(TD_FALL[3], 0.284999, 1.280626);
	TextDrawAlignment(TD_FALL[3], 3);
	TextDrawColor(TD_FALL[3], -116);
	TextDrawSetShadow(TD_FALL[3], 0);
	TextDrawSetOutline(TD_FALL[3], 0);
	TextDrawBackgroundColor(TD_FALL[3], 255);
	TextDrawFont(TD_FALL[3], 1);
	TextDrawSetProportional(TD_FALL[3], 1);
	TextDrawSetShadow(TD_FALL[3], 0);

	TD_FALL[4] = TextDrawCreate(581.700622, (403.974700)-17.0, "ASSETS");
	TextDrawLetterSize(TD_FALL[4], 0.205000, 1.000626);
	TextDrawAlignment(TD_FALL[4], 3);
	TextDrawColor(TD_FALL[4], -116);
	TextDrawSetShadow(TD_FALL[4], 0);
	TextDrawSetOutline(TD_FALL[4], 0);
	TextDrawBackgroundColor(TD_FALL[4], 255);
	TextDrawFont(TD_FALL[4], 1);
	TextDrawSetProportional(TD_FALL[4], 1);
	TextDrawSetShadow(TD_FALL[4], 0);

	TD_FALL[8] = TextDrawCreate(537.500000, (403.062500)-34.0, "_");
	TextDrawLetterSize(TD_FALL[8], 0.390500, 1.315626);
	TextDrawTextSize(TD_FALL[8], 614.000000, 0.000000);
	TextDrawAlignment(TD_FALL[8], 1);
	TextDrawColor(TD_FALL[8], -1);
	TextDrawUseBox(TD_FALL[8], 1);
	TextDrawBoxColor(TD_FALL[8], 90);
	TextDrawSetShadow(TD_FALL[8], 0);
	TextDrawSetOutline(TD_FALL[8], 0);
	TextDrawBackgroundColor(TD_FALL[8], 255);
	TextDrawFont(TD_FALL[8], 1);
	TextDrawSetProportional(TD_FALL[8], 1);
	TextDrawSetShadow(TD_FALL[8], 0);
	
	TD_FALL[6] = TextDrawCreate(613.000488, (402.375091)-34.0, "0");
	TextDrawLetterSize(TD_FALL[6], 0.284999, 1.280626);
	TextDrawAlignment(TD_FALL[6], 3);
	TextDrawColor(TD_FALL[6], -116);
	TextDrawSetShadow(TD_FALL[6], 0);
	TextDrawSetOutline(TD_FALL[6], 0);
	TextDrawBackgroundColor(TD_FALL[6], 255);
	TextDrawFont(TD_FALL[6], 1);
	TextDrawSetProportional(TD_FALL[6], 1);
	TextDrawSetShadow(TD_FALL[6], 0);

	TD_FALL[7] = TextDrawCreate(581.700622, (403.974700)-34.0, "PLAYERS");
	TextDrawLetterSize(TD_FALL[7], 0.205000, 1.000626);
	TextDrawAlignment(TD_FALL[7], 3);
	TextDrawColor(TD_FALL[7], -116);
	TextDrawSetShadow(TD_FALL[7], 0);
	TextDrawSetOutline(TD_FALL[7], 0);
	TextDrawBackgroundColor(TD_FALL[7], 255);
	TextDrawFont(TD_FALL[7], 1);
	TextDrawSetProportional(TD_FALL[7], 1);
	TextDrawSetShadow(TD_FALL[7], 0);
	
	TD_FallMessage = TextDrawCreate(320.000000, 320.000000, "_");
	TextDrawLetterSize(TD_FallMessage, 0.281332, 1.077334);
	TextDrawAlignment(TD_FallMessage, 2);
	TextDrawColor(TD_FallMessage, -1);
	TextDrawSetShadow(TD_FallMessage, 0);
	TextDrawSetOutline(TD_FallMessage, 1);
	TextDrawFont(TD_FallMessage, 3);
	TextDrawSetProportional(TD_FallMessage, 1);
	TextDrawSetShadow(TD_FallMessage, 0);
	
	//buvehicle cons
	TD_CarShop[0] = TextDrawCreate(169.000000, 120.000000, "box");
	TextDrawLetterSize(TD_CarShop[0], 0.000000, 21.000000);
	TextDrawTextSize(TD_CarShop[0], 0.000000, 120.000000);
	TextDrawAlignment(TD_CarShop[0], 2);
	TextDrawColor(TD_CarShop[0], -1);
	TextDrawUseBox(TD_CarShop[0], 1);
	TextDrawBoxColor(TD_CarShop[0], 100);
	TextDrawSetShadow(TD_CarShop[0], 0);
	TextDrawSetOutline(TD_CarShop[0], 0);
	TextDrawBackgroundColor(TD_CarShop[0], 255);
	TextDrawFont(TD_CarShop[0], 1);
	TextDrawSetProportional(TD_CarShop[0], 1);
	TextDrawSetShadow(TD_CarShop[0], 0);

	TD_CarShop[1] = TextDrawCreate(169.000000, 110.000000, "Vehicles");
	TextDrawLetterSize(TD_CarShop[1], 0.400000, 1.600000);
	TextDrawAlignment(TD_CarShop[1], 2);
	TextDrawColor(TD_CarShop[1], -4456193);
	TextDrawSetShadow(TD_CarShop[1], 0);
	TextDrawSetOutline(TD_CarShop[1], 1);
	TextDrawBackgroundColor(TD_CarShop[1], 255);
	TextDrawFont(TD_CarShop[1], 0);
	TextDrawSetProportional(TD_CarShop[1], 1);
	TextDrawSetShadow(TD_CarShop[1], 0);

	TD_CarShop[2] = TextDrawCreate(169.000000, 241.000000, "Buy");
	TextDrawLetterSize(TD_CarShop[2], 0.267666, 1.301332);
	TextDrawTextSize(TD_CarShop[2], 15.000000, 87.000000);
	TextDrawAlignment(TD_CarShop[2], 2);
	TextDrawColor(TD_CarShop[2], -1);
	TextDrawUseBox(TD_CarShop[2], 1);
	TextDrawBoxColor(TD_CarShop[2], 1844177764);
	TextDrawSetShadow(TD_CarShop[2], 0);
	TextDrawSetOutline(TD_CarShop[2], 1);
	TextDrawBackgroundColor(TD_CarShop[2], 255);
	TextDrawFont(TD_CarShop[2], 2);
	TextDrawSetProportional(TD_CarShop[2], 1);
	TextDrawSetShadow(TD_CarShop[2], 0);
	TextDrawSetSelectable(TD_CarShop[2], true);

	TD_CarShop[3] = TextDrawCreate(192.000000, 259.000000, ">>");
	TextDrawLetterSize(TD_CarShop[3], 0.267666, 1.301332);
	TextDrawTextSize(TD_CarShop[3], 15.000000, 41.000000);
	TextDrawAlignment(TD_CarShop[3], 2);
	TextDrawColor(TD_CarShop[3], -1);
	TextDrawUseBox(TD_CarShop[3], 1);
	TextDrawBoxColor(TD_CarShop[3], 1844177764);
	TextDrawSetShadow(TD_CarShop[3], 0);
	TextDrawSetOutline(TD_CarShop[3], 1);
	TextDrawBackgroundColor(TD_CarShop[3], 255);
	TextDrawFont(TD_CarShop[3], 2);
	TextDrawSetProportional(TD_CarShop[3], 1);
	TextDrawSetShadow(TD_CarShop[3], 0);
	TextDrawSetSelectable(TD_CarShop[3], true);

	TD_CarShop[4] = TextDrawCreate(146.000000, 259.000000, "<<");
	TextDrawLetterSize(TD_CarShop[4], 0.267666, 1.301332);
	TextDrawTextSize(TD_CarShop[4], 15.000000, 41.000000);
	TextDrawAlignment(TD_CarShop[4], 2);
	TextDrawColor(TD_CarShop[4], -1);
	TextDrawUseBox(TD_CarShop[4], 1);
	TextDrawBoxColor(TD_CarShop[4], 1844177764);
	TextDrawSetShadow(TD_CarShop[4], 0);
	TextDrawSetOutline(TD_CarShop[4], 1);
	TextDrawBackgroundColor(TD_CarShop[4], 255);
	TextDrawFont(TD_CarShop[4], 2);
	TextDrawSetProportional(TD_CarShop[4], 1);
	TextDrawSetShadow(TD_CarShop[4], 0);
	TextDrawSetSelectable(TD_CarShop[4], true);
	
	//LSR TUNING
	TD_LSR_TUNING[0] = TextDrawCreate(181.000000, 97.000000, "LSR TUNING");
	TextDrawLetterSize(TD_LSR_TUNING[0], 0.310665, 1.442370);
	TextDrawTextSize(TD_LSR_TUNING[0], 0.000000, 205.000000);
	TextDrawAlignment(TD_LSR_TUNING[0], 2);
	TextDrawColor(TD_LSR_TUNING[0], 65420);
	TextDrawUseBox(TD_LSR_TUNING[0], 1);
	TextDrawBoxColor(TD_LSR_TUNING[0], 1099417855);
	TextDrawSetShadow(TD_LSR_TUNING[0], -1);
	TextDrawSetOutline(TD_LSR_TUNING[0], 0);
	TextDrawBackgroundColor(TD_LSR_TUNING[0], 255);
	TextDrawFont(TD_LSR_TUNING[0], 2);
	TextDrawSetProportional(TD_LSR_TUNING[0], 1);
	TextDrawSetShadow(TD_LSR_TUNING[0], -1);

	TD_LSR_TUNING[1] = TextDrawCreate(181.000000, 113.000000, "_");
	TextDrawLetterSize(TD_LSR_TUNING[1], 0.310665, 1.301331);
	TextDrawTextSize(TD_LSR_TUNING[1], 0.000000, 205.000000);
	TextDrawAlignment(TD_LSR_TUNING[1], 2);
	TextDrawColor(TD_LSR_TUNING[1], 65420);
	TextDrawUseBox(TD_LSR_TUNING[1], 1);
	TextDrawBoxColor(TD_LSR_TUNING[1], 100);
	TextDrawSetShadow(TD_LSR_TUNING[1], 0);
	TextDrawSetOutline(TD_LSR_TUNING[1], 0);
	TextDrawBackgroundColor(TD_LSR_TUNING[1], 255);
	TextDrawFont(TD_LSR_TUNING[1], 2);
	TextDrawSetProportional(TD_LSR_TUNING[1], 1);
	TextDrawSetShadow(TD_LSR_TUNING[1], 0);

	TD_LSR_TUNING[2] = TextDrawCreate(79.000000, 132.000000, "box");
	TextDrawLetterSize(TD_LSR_TUNING[2], 0.000000, 21.500000);
	TextDrawTextSize(TD_LSR_TUNING[2], 181.000000, 0.000000);
	TextDrawAlignment(TD_LSR_TUNING[2], 1);
	TextDrawColor(TD_LSR_TUNING[2], -1);
	TextDrawUseBox(TD_LSR_TUNING[2], 1);
	TextDrawBoxColor(TD_LSR_TUNING[2], 100);
	TextDrawSetShadow(TD_LSR_TUNING[2], 0);
	TextDrawSetOutline(TD_LSR_TUNING[2], 0);
	TextDrawBackgroundColor(TD_LSR_TUNING[2], 255);
	TextDrawFont(TD_LSR_TUNING[2], 1);
	TextDrawSetProportional(TD_LSR_TUNING[2], 1);
	TextDrawSetShadow(TD_LSR_TUNING[2], 0);

	
	TD_MUSIC_YT[0] = TextDrawCreate(320.000000, 220.000000, "box");
	TextDrawLetterSize(TD_MUSIC_YT[0], 0.000000, 5.100002);
	TextDrawTextSize(TD_MUSIC_YT[0], 0.000000, 138.000000);
	TextDrawAlignment(TD_MUSIC_YT[0], 2);
	TextDrawColor(TD_MUSIC_YT[0], -1);
	TextDrawUseBox(TD_MUSIC_YT[0], 1);
	TextDrawBoxColor(TD_MUSIC_YT[0], 205);
	TextDrawSetShadow(TD_MUSIC_YT[0], 0);
	TextDrawSetOutline(TD_MUSIC_YT[0], 0);
	TextDrawBackgroundColor(TD_MUSIC_YT[0], 255);
	TextDrawFont(TD_MUSIC_YT[0], 1);
	TextDrawSetProportional(TD_MUSIC_YT[0], 1);
	TextDrawSetShadow(TD_MUSIC_YT[0], 0);

	TD_MUSIC_YT[1] = TextDrawCreate(320.000000, 235.000000, "Looking_ resulted...");
	TextDrawLetterSize(TD_MUSIC_YT[1], 0.287000, 1.293036);
	TextDrawAlignment(TD_MUSIC_YT[1], 2);
	TextDrawColor(TD_MUSIC_YT[1], -36);
	TextDrawSetShadow(TD_MUSIC_YT[1], 0);
	TextDrawSetOutline(TD_MUSIC_YT[1], 0);
	TextDrawBackgroundColor(TD_MUSIC_YT[1], 255);
	TextDrawFont(TD_MUSIC_YT[1], 1);
	TextDrawSetProportional(TD_MUSIC_YT[1], 1);
	TextDrawSetShadow(TD_MUSIC_YT[1], 0);
	return 1;
}

ResetPlayerVariables(playerid)
{
	ExitPlayerGameMode(playerid);
	if(IsValidVehicle(PI[playerid][P_FRVEHICLE]))
	{
		VEHICLES_PLAYER[PI[playerid][P_FRVEHICLE]] = false;
		DestroyVehicleEx(PI[playerid][P_FRVEHICLE]);
	}
	
	if(IsValidDynamic3DTextLabel(PI[playerid][P_VIP_LABEL])) DestroyDynamic3DTextLabel(PI[playerid][P_VIP_LABEL]);
	if(IsValidDynamic3DTextLabel(PI[playerid][P_CREW_LABEL])) DestroyDynamic3DTextLabel(PI[playerid][P_CREW_LABEL]);
	for(new i = 0; i != MAX_HOUSES_PER_PLAYER; i++)
	{
		if(IsValidDynamicMapIcon(PI[playerid][P_HOUSEICONS][i]))
		{
			DestroyDynamicMapIcon(PI[playerid][P_HOUSEICONS][i]);
		}
	}
	for(new i = 0; i != MAX_TIMERS_PER_PLAYER; i++) KillTimer(PI[playerid][P_TIMERS][i]);
	for(new i; i < sizeof(PI[]); i++) PI[playerid][P_INFO: i] = 0;
	return 1;
}

OpenDataBase()
{	
	Database = db_open("SERVER/LSRDB.db");
	
	/*db_query(Database, "ALTER TABLE USERS ADD IMUSIC INTEGER DEFAULT 0");
	db_query(Database, "ALTER TABLE USERS ADD ISOUND INTEGER DEFAULT 0");
	db_query(Database, "ALTER TABLE USERS ADD ITPTD INTEGER DEFAULT 0");
	db_query(Database, "ALTER TABLE USERS ADD ILSRTD INTEGER DEFAULT 0");*/
	//db_query(Database, "ALTER TABLE USERS ADD LCONNECT INTEGER DEFAULT 0");
	
    format(DB_Query, sizeof(DB_Query), "");
    strcat(DB_Query, "CREATE TABLE IF NOT EXISTS USERS (");
	strcat(DB_Query, "ID INTEGER PRIMARY KEY AUTOINCREMENT,");  
	strcat(DB_Query, "IP TEXT DEFAULT '',");   	
	strcat(DB_Query, "NAME TEXT DEFAULT '',");          
	strcat(DB_Query, "PASS INTEGER DEFAULT 0,");        
	strcat(DB_Query, "DATEREG INTEGER DEFAULT 0,");   
	strcat(DB_Query, "BANNED INTEGER DEFAULT 0,");
	strcat(DB_Query, "TEMPBAN INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD INTEGER DEFAULT 0,");   
	strcat(DB_Query, "KILLS INTEGER DEFAULT 0,");   
	strcat(DB_Query, "DEATHS INTEGER DEFAULT 0,");   
	strcat(DB_Query, "MONEY INTEGER DEFAULT 0,");   
	strcat(DB_Query, "SCORE INTEGER DEFAULT 0,"); 
	strcat(DB_Query, "FIGHTSTYLE INTEGER DEFAULT 0,");
	strcat(DB_Query, "HOUSES INTEGER DEFAULT 0,"); 
	strcat(DB_Query, "VEHICLES INTEGER DEFAULT 0,");    
	strcat(DB_Query, "VIP INTEGER DEFAULT 0,");
	strcat(DB_Query, "VIPTIME INTEGER DEFAULT 0,");  
	strcat(DB_Query, "CHATCOLOR INTEGER DEFAULT 13421772,"); 
	strcat(DB_Query, "CREWI INTEGER DEFAULT 0,");
	strcat(DB_Query, "CREWR INTEGER DEFAULT 0,");
	strcat(DB_Query, "COLOR INTEGER DEFAULT 0,");
	strcat(DB_Query, "PMS INTEGER DEFAULT 0,");
	strcat(DB_Query, "SKIN INTEGER DEFAULT 0,");
	strcat(DB_Query, "CONNECTED INTEGER DEFAULT 0,");
	strcat(DB_Query, "PLAYERID INTEGER DEFAULT -1,");
	strcat(DB_Query, "IGNOREDL INTEGER DEFAULT 0,");
	strcat(DB_Query, "IMUSIC INTEGER DEFAULT 0,");
	strcat(DB_Query, "ISOUND INTEGER DEFAULT 0,");
	strcat(DB_Query, "ITPTD INTEGER DEFAULT 0,");
	strcat(DB_Query, "ILSRTD INTEGER DEFAULT 0,");
	strcat(DB_Query, "LCONNECT INTEGER DEFAULT 0)");
	db_query(Database, DB_Query);
	
	format(DB_Query, sizeof(DB_Query), "");
    strcat(DB_Query, "CREATE TABLE IF NOT EXISTS HOUSES (");
	strcat(DB_Query, "ID INTEGER PRIMARY KEY AUTOINCREMENT,");          
	strcat(DB_Query, "MPRICE INTEGER DEFAULT 0,");
	strcat(DB_Query, "SPRICE INTEGER DEFAULT 0,");
	strcat(DB_Query, "OWNERID INTEGER DEFAULT 0,");    
	strcat(DB_Query, "OWNER TEXT DEFAULT '',");  	
	strcat(DB_Query, "SOLD INTEGER DEFAULT 0,");   
	strcat(DB_Query, "EXTX FLOAT DEFAULT 0,");  
	strcat(DB_Query, "EXTY FLOAT DEFAULT 0,");   
	strcat(DB_Query, "EXTZ FLOAT DEFAULT 0,");
	strcat(DB_Query, "EXTA FLOAT DEFAULT 0,"); 	
	strcat(DB_Query, "INTX FLOAT DEFAULT 0,"); 
	strcat(DB_Query, "INTY FLOAT DEFAULT 0,");
	strcat(DB_Query, "INTZ FLOAT DEFAULT 0,");
	strcat(DB_Query, "INTA FLOAT DEFAULT 0,");
	strcat(DB_Query, "INTID INTEGER DEFAULT 0,");
	strcat(DB_Query, "FREEZE INTEGER DEFAULT 0,");	
	strcat(DB_Query, "WORLD INTEGER DEFAULT 0)");	
	db_query(Database, DB_Query);
	
	format(DB_Query, sizeof(DB_Query), "");
    strcat(DB_Query, "CREATE TABLE IF NOT EXISTS VEHICLES (");
	strcat(DB_Query, "ID INTEGER PRIMARY KEY AUTOINCREMENT,");          
	strcat(DB_Query, "OWNERID INTEGER DEFAULT 0,");    
	strcat(DB_Query, "OWNER TEXT DEFAULT '',"); 
	strcat(DB_Query, "KEY INTEGER DEFAULT 0,");   	
	strcat(DB_Query, "MODELID INTEGER DEFAULT 0,");
	strcat(DB_Query, "LOCKED INTEGER DEFAULT 0,");
	strcat(DB_Query, "NEON INTEGER DEFAULT 0,");
	strcat(DB_Query, "SIREN INTEGER DEFAULT 0,");
	strcat(DB_Query, "PLATE TEXT DEFAULT '',");
	strcat(DB_Query, "COL1 INTEGER DEFAULT 0, COL2 INTEGER DEFAULT 0, PAINTJOB INTEGER DEFAULT 0,");	
	strcat(DB_Query, "MOD1 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD2 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD3 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD4 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD5 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD6 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD7 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD8 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD9 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD10 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD11 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD12 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD13 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD14 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD15 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD16 INTEGER DEFAULT 0,");
	strcat(DB_Query, "MOD17 INTEGER DEFAULT 0)");
	db_query(Database, DB_Query);
	
	format(DB_Query, sizeof(DB_Query), "");
    strcat(DB_Query, "CREATE TABLE IF NOT EXISTS CREWS (");	
	strcat(DB_Query, "ID INTEGER PRIMARY KEY AUTOINCREMENT,");
	strcat(DB_Query, "NAME TEXT DEFAULT '',");     
	strcat(DB_Query, "MEMBERS INTEGER DEFAULT 1,");
	strcat(DB_Query, "COLOR INTEGER DEFAULT 16742981)");	
	db_query(Database, DB_Query);
	
	format(DB_Query, sizeof(DB_Query), "");
    strcat(DB_Query, "CREATE TABLE IF NOT EXISTS MUSIC (");	
	strcat(DB_Query, "ID INTEGER PRIMARY KEY AUTOINCREMENT,");
	strcat(DB_Query, "TITLE TEXT DEFAULT '',");
	strcat(DB_Query, "URL TEXT DEFAULT '',");
	strcat(DB_Query, "OWNERID INTEGER DEFAULT 0,");
	strcat(DB_Query, "OWNER TEXT DEFAULT '',");
	strcat(DB_Query, "PRIVATE INTEGER DEFAULT 0,");
	strcat(DB_Query, "PLAYS INTEGER DEFAULT 0)");
	db_query(Database, DB_Query);
	
	format(DB_Query, sizeof(DB_Query), "");
    strcat(DB_Query, "CREATE TABLE IF NOT EXISTS LIKES (");	
	strcat(DB_Query, "ID_USUARIO INTEGER, ");
	strcat(DB_Query, "ID_SONG INTEGER)");
	db_query(Database, DB_Query);
	
	//CreateHouses();
	//AddSongs();
	return 1;
}

NewUserRegister(playerid)
{
	new str[MAX_PLAYER_NAME+4];
	new y, m, d, h, mn, s; getdate(y, m, d); gettime(h, mn, s);
	
	format(DB_Query, sizeof(DB_Query), "INSERT INTO USERS (IP, NAME, PASS, DATEREG, CONNECTED, PLAYERID) VALUES ");
	format(str, sizeof(str), "('%s',", PI[playerid][P_IP]); strcat(DB_Query, str);
	format(str, sizeof(str), "'%s',", PI[playerid][P_NAME]); strcat(DB_Query, str);
	format(str, sizeof(str), "'%d',", PI[playerid][P_PASS]); strcat(DB_Query, str);
	format(str, sizeof(str), "'%04d%02d%02d%02d%02d%02d',", y, m, d, h, mn, s); strcat(DB_Query, str);
	format(str, sizeof(str), "'1','%d')", playerid); strcat(DB_Query, str);
	db_query(Database, DB_Query);
	
	new DBResult:Result;
	format(DB_Query, sizeof(DB_Query), "SELECT ID FROM USERS WHERE NAME = '%s'", PI[playerid][P_NAME]);
	Result = db_query(Database, DB_Query);
	if(db_num_rows(Result))
	{
		PI[playerid][P_ID] = db_get_field_int(Result, 0);
	}
	db_free_result(Result);
	return 1;
}

LoadPlayerData(playerid)
{
	new DBResult:Result;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM USERS WHERE NAME = '%s'", PI[playerid][P_NAME]);
	Result = db_query(Database, DB_Query);
	if(db_num_rows(Result))
	{
		PI[playerid][P_ID] = db_get_field_int(Result, DB_GET_ID);
		PI[playerid][P_DATEREG] = db_get_field_int(Result, DB_GET_DATREG);
		//PI[playerid][P_BANNED] = db_get_field_int(Result, DB_GET_BANNED);
		//PI[playerid][P_TEMPBAN] = db_get_field_int(Result, DB_GET_TEMPBAN);
		PI[playerid][P_MOD] = db_get_field_int(Result, DB_GET_MOD);
		PI[playerid][P_KILLS] = db_get_field_int(Result, DB_GET_KILLS);
		PI[playerid][P_DEATHS] = db_get_field_int(Result, DB_GET_DEATHS);
		PI[playerid][P_MONEY] = db_get_field_int(Result, DB_GET_MONEY);
		PI[playerid][P_SCORE] = db_get_field_int(Result, DB_GET_SCORE);
		PI[playerid][P_FIGHTSTYLE] = db_get_field_int(Result, DB_GET_FIGHTSTYLE);
		PI[playerid][P_HOUSES] = db_get_field_int(Result, DB_GET_HOUSES);
		PI[playerid][P_VEHICLES] = db_get_field_int(Result, DB_GET_VEHICLES);
		PI[playerid][P_VIP] = db_get_field_int(Result, DB_GET_VIP);
		PI[playerid][P_VIPTIME] = db_get_field_int(Result, DB_GET_VIPTIME);
		PI[playerid][P_CHATCOLOR] = db_get_field_int(Result, DB_GET_CHATCOLOR);
		PI[playerid][P_CREW_ID] = db_get_field_int(Result, DB_GET_CREW_ID);
		PI[playerid][P_CREW_RANK] = db_get_field_int(Result, DB_GET_CREW_RANK);
		PI[playerid][P_COLOR] = db_get_field_int(Result, DB_GET_COLOR);
		if(PI[playerid][P_COLOR] == 0) PI[playerid][P_COLOR] = RandomColors[random(sizeof RandomColors)];
		PI[playerid][P_PMS] = db_get_field_int(Result, DB_GET_PMS);
		PI[playerid][P_SAVED_SKIN] = db_get_field_int(Result, DB_GET_SKIN);
		PI[playerid][P_IGNORE_DUELS] = db_get_field_int(Result, DB_GET_IGNOREDL);
		PI[playerid][P_IGNORE_MUSIC] = db_get_field_int(Result, DB_GET_IGNORE_MUSIC);
		PI[playerid][P_IGNORE_SOUNDS] = db_get_field_int(Result, DB_GET_IGNORE_SOUNDS);
		PI[playerid][P_IGNORE_TPTD] = db_get_field_int(Result, DB_GET_IGNORE_TPTD);
		PI[playerid][P_IGNORE_LSRTD] = db_get_field_int(Result, DB_GET_IGNORE_LSRTD);
	}
	db_free_result(Result);
	
	SetPlayerScore(playerid, PI[playerid][P_SCORE]);
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PI[playerid][P_MONEY]);
	SetPlayerFightingStyle(playerid, PI[playerid][P_FIGHTSTYLE]);
	return 1;
}

UpdateUserData(playerid, disconnect = 0)
{
	new str[64];
    format(DB_Query, sizeof(DB_Query), "");
	strcat(DB_Query, "UPDATE USERS SET ");
	format(str, 64, "IP = '%s',", PI[playerid][P_IP]); strcat(DB_Query, str);
    format(str, 64, "BANNED = '%d',", PI[playerid][P_BANNED]); strcat(DB_Query, str);
	format(str, 64, "TEMPBAN = '%d',", PI[playerid][P_TEMPBAN]); strcat(DB_Query, str);
	format(str, 64, "MOD = '%d',", PI[playerid][P_MOD]); strcat(DB_Query, str);
	format(str, 64, "KILLS = '%d',", PI[playerid][P_KILLS]); strcat(DB_Query, str);
	format(str, 64, "DEATHS = '%d',", PI[playerid][P_DEATHS]); strcat(DB_Query, str);
	format(str, 64, "MONEY = '%d',", PI[playerid][P_MONEY]); strcat(DB_Query, str);
	format(str, 64, "SCORE = '%d',", PI[playerid][P_SCORE]); strcat(DB_Query, str);
	format(str, 64, "FIGHTSTYLE = '%d',", GetPlayerFightingStyle(playerid)); strcat(DB_Query, str);
	format(str, 64, "HOUSES = '%d',", PI[playerid][P_HOUSES]); strcat(DB_Query, str);
	format(str, 64, "VEHICLES = '%d',", PI[playerid][P_VEHICLES]); strcat(DB_Query, str);
	format(str, 64, "VIP = '%d',", PI[playerid][P_VIP]); strcat(DB_Query, str);
	format(str, 64, "VIPTIME = '%d',", PI[playerid][P_VIPTIME]); strcat(DB_Query, str);
	format(str, 64, "CHATCOLOR = '%d',", PI[playerid][P_CHATCOLOR]); strcat(DB_Query, str);
	format(str, 64, "CREWI = '%d',", PI[playerid][P_CREW_ID]); strcat(DB_Query, str);
	format(str, 64, "CREWR = '%d',", PI[playerid][P_CREW_RANK]); strcat(DB_Query, str);	
	format(str, 64, "COLOR = '%d',", PI[playerid][P_COLOR]); strcat(DB_Query, str);
	format(str, 64, "PMS = '%d',", PI[playerid][P_PMS]); strcat(DB_Query, str);
	format(str, 64, "SKIN = '%d',", PI[playerid][P_SAVED_SKIN]); strcat(DB_Query, str);	
	format(str, 64, "IGNOREDL = '%d',", PI[playerid][P_IGNORE_DUELS]); strcat(DB_Query, str);
	format(str, 64, "IMUSIC = '%d',", PI[playerid][P_IGNORE_MUSIC]); strcat(DB_Query, str);
	format(str, 64, "ISOUND = '%d',", PI[playerid][P_IGNORE_SOUNDS]); strcat(DB_Query, str);
	format(str, 64, "ITPTD = '%d',", PI[playerid][P_IGNORE_TPTD]); strcat(DB_Query, str);
	format(str, 64, "ILSRTD = '%d',", PI[playerid][P_IGNORE_LSRTD]); strcat(DB_Query, str);
	format(str, 64, "LCONNECT = '%d'", gettime()); strcat(DB_Query, str);
	if(disconnect) strcat(DB_Query, ",CONNECTED = '0', PLAYERID = '-1'");
    format(str, 64, " WHERE NAME = '%s'", PI[playerid][P_NAME]); strcat(DB_Query, str);
	db_query(Database, DB_Query);
	return 1;
}

SendClientMessageEx(playerid, color, form[], {Float, _}: ...) {
    #pragma unused form

    static
        tmp[145]
    ;
    new
        t1 = playerid,
        t2 = color
    ;
    const
        n4 = -4,
        n16 = -16,
        size = sizeof tmp
    ;
    #emit stack 28
    #emit push.c size
    #emit push.c tmp
    #emit stack n4
    #emit sysreq.c format
    #emit stack n16

    return (t1 == -1 ? (SendClientMessageToAll(t2, tmp)) : (SendClientMessage(t1, t2, tmp)) );
}

CreatePickups()
{	
	//Grove Street
	CreatePickup(1318, 1, 2495.439697, -1690.764648, 14.765625, GANGWAR_VW); //Grove Street CJ House Enter
	Create3DTextLabel("{"GREY"}Press {C6D855}~k~~VEHICLE_ENTER_EXIT~ {"GREY"}to enter.", -1, 2495.439697, -1690.764648, 14.765625, 3.0, GANGWAR_VW, 0);
	GROVE_STREET_HEALTH_PICKUP = CreatePickup(1240, 2, 2496.170654, -1708.603515, 1014.742187, GANGWAR_VW);
	GROVE_STREET_WEAPON_PICKUP[0] = CreatePickup(346, 2, 2499.089111, -1707.444580, 1014.742187, GANGWAR_VW);
	GROVE_STREET_WEAPON_PICKUP[1] = CreatePickup(352, 2, 2499.089111, -1709.444580, 1014.742187, GANGWAR_VW);
	GROVE_STREET_WEAPON_PICKUP[2] = CreatePickup(344, 2, 2499.089111, -1711.444580, 1014.742187, GANGWAR_VW);
	
	//Ballas
	CreatePickup(1318, 1, 2637.048095, -1991.733276, 14.324020, GANGWAR_VW); //Ballas entrance
	Create3DTextLabel("{"GREY"}Press {C6D855}~k~~VEHICLE_ENTER_EXIT~ {"GREY"}to enter.", -1, 2637.048095, -1991.733276, 14.324020, 3.0, GANGWAR_VW, 0);
	BALLAS_HEALTH_PICKUP = CreatePickup(1240, 2, 2461.920898, -1698.272216, 1013.507812, GANGWAR_VW);
	BALLAS_WEAPON_PICKUP[0] = CreatePickup(346, 2, 2453.427490, -1700.940917, 1013.507812, GANGWAR_VW);
	BALLAS_WEAPON_PICKUP[1] = CreatePickup(352, 2, 2451.385009, -1700.442749, 1013.507812, GANGWAR_VW);
	BALLAS_WEAPON_PICKUP[2] = CreatePickup(335, 2, 2450.159423, -1702.528198, 1013.507812, GANGWAR_VW);
	
	//POLICECAPs
	CreatePickup(1318, 1, 1555.178833, -1675.459838, 16.195312, GANGWAR_VW); //Police entrance
	Create3DTextLabel("{"GREY"}Press {C6D855}~k~~VEHICLE_ENTER_EXIT~ {"GREY"}to enter.", -1, 1555.178833, -1675.459838, 16.195312, 3.0, GANGWAR_VW, 0);
	POLICE_HEALTH_PICKUP = CreatePickup(1240, 2, 246.786911, 66.290473, 1003.640625, GANGWAR_VW);
	POLICE_WEAPON_PICKUP[0] = CreatePickup(346, 2, 246.326141, 70.379981, 1003.640625, GANGWAR_VW);
	POLICE_WEAPON_PICKUP[1] = CreatePickup(355, 2, 244.551452, 70.609901, 1003.640625, GANGWAR_VW);
	POLICE_WEAPON_PICKUP[2] = CreatePickup(334, 2, 247.921661, 70.641540, 1003.640625, GANGWAR_VW);
	
	//Tele infos
	for(new i = 0; i != sizeof TI; i++)
	{
		new str[64]; format(str, sizeof str, "{99CC00}%s\n{B0E66A}(%s)", TI[i][TP_Name], TI[i][TP_Command]);
		Create3DTextLabel(str, -1, TI[i][TP_X], TI[i][TP_Y], TI[i][TP_Z], 50.0, TI[i][TP_VirtualWorld], 0);
	}
	
	//PORTALES
	SetDynamicObjectMaterial(CreateDynamicObject_FR(1317, 2030.01855, 1501.66150, 9.74290,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "red", 0xAAFFFFFF);
	SetDynamicObjectMaterial(CreateDynamicObject_FR(1317, 2030.01855, 1504.66150, 9.74290,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "orange", 0xAAFFFFFF);
	SetDynamicObjectMaterial(CreateDynamicObject_FR(1317, 2030.01855, 1507.66150, 9.74290,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "yellow", 0xAAFFFFFF);
	SetDynamicObjectMaterial(CreateDynamicObject_FR(1317, 2030.01855, 1510.66150, 9.74290,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "green", 0xAAFFFFFF);
	SetDynamicObjectMaterial(CreateDynamicObject_FR(1317, 2030.01855, 1513.66150, 9.74290,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey-20-percent", 0xAAFFFFFF);
	SetDynamicObjectMaterial(CreateDynamicObject_FR(1317, 2030.01855, 1516.66150, 9.74290,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "samporange", 0xAAFFFFFF);
	SetDynamicObjectMaterial(CreateDynamicObject_FR(1317, 2030.01855, 1519.66150, 9.74290,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "grey", 0xAAFFFFFF);
	SetDynamicObjectMaterial(CreateDynamicObject_FR(1317, 2030.01855, 1522.66150, 9.74290,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "yellow", 0xAAFFFFFF);
	SetDynamicObjectMaterial(CreateDynamicObject_FR(1317, 2030.01855, 1525.66150, 9.74290,   0.00000, 0.00000, 0.00000), 0, 18646, "matcolours", "white", 0xAAFFFFFF);

	Create3DTextLabel("Los Santos", 				0xCCFF0066, 2030.01855, 1501.66150, 10.2429, 				50.0, FREEROAM_VW, 0);
	Create3DTextLabel("San Fierro", 				0xCCFF0066, 2030.01855, 1504.66150, 10.2429, 				50.0, FREEROAM_VW, 0);
	Create3DTextLabel("Liberty City",				0xCCFF0066, 2030.01855, 1507.66150, 10.2429, 				50.0, FREEROAM_VW, 0);
	Create3DTextLabel("Airport Las Venturas", 	0xCCFF0066, 2030.01855, 1510.66150, 10.2429, 	50.0, FREEROAM_VW, 0);
	Create3DTextLabel("Airport San Fierro", 		0xCCFF0066, 2030.01855, 1513.66150, 10.2429, 	50.0, FREEROAM_VW, 0);
	Create3DTextLabel("Airport Abandoned", 		0xCCFF0066, 2030.01855, 1516.66150, 10.2429, 	50.0, FREEROAM_VW, 0);
	Create3DTextLabel("Monte Chilliad", 			0xCCFF0066, 2030.01855, 1519.66150, 10.2429, 			50.0, FREEROAM_VW, 0);
	Create3DTextLabel("Puente San Fierro", 			0xCCFF0066, 2030.01855, 1522.66150, 10.2429, 		50.0, FREEROAM_VW, 0);
	Create3DTextLabel("Cemetery Los Santos", 		0xCCFF0066, 2030.01855, 1525.66150, 10.2429, 	50.0, FREEROAM_VW, 0);
	
	PORTAL_PICKUP[0] = CreatePickup(0, 1, 2030.01855, 1501.66150, 10.2429, FREEROAM_VW);
	PORTAL_PICKUP[1] = CreatePickup(0, 1, 2030.01855, 1504.66150, 10.2429, FREEROAM_VW);
	PORTAL_PICKUP[2] = CreatePickup(0, 1, 2030.01855, 1507.66150, 10.2429, FREEROAM_VW);
	PORTAL_PICKUP[3] = CreatePickup(0, 1, 2030.01855, 1510.66150, 10.2429, FREEROAM_VW);
	PORTAL_PICKUP[4] = CreatePickup(0, 1, 2030.01855, 1513.66150, 10.2429, FREEROAM_VW);
	PORTAL_PICKUP[5] = CreatePickup(0, 1, 2030.01855, 1516.66150, 10.2429, FREEROAM_VW);
	PORTAL_PICKUP[6] = CreatePickup(0, 1, 2030.01855, 1519.66150, 10.2429, FREEROAM_VW);
	PORTAL_PICKUP[7] = CreatePickup(0, 1, 2030.01855, 1522.66150, 10.2429, FREEROAM_VW);
	PORTAL_PICKUP[8] = CreatePickup(0, 1, 2030.01855, 1525.66150, 10.2429, FREEROAM_VW);
	
	
	//MAP ICONS
	
	CreateDynamicMapIcon(2486.064453, -1670.159667, 13.335947, 62, -1, GANGWAR_VW); //Grove Street
	CreateDynamicMapIcon(2640.711914, -2004.129760, 13.554687, 59, -1, GANGWAR_VW); //ballas
	CreateDynamicMapIcon(1554.312133, -1675.729614, 16.195312, 58, -1, GANGWAR_VW); //POLICECAP
	CreateDynamicMapIcon(1657.651489, 1796.443115, 10.820312, 55, -1, FREEROAM_VW, .streamdistance = 1000.0, .style = MAPICON_GLOBAL); //cardealerSIONARIO
	Create3DTextLabel("{"ORANGE"}use {C6D855}/buvehicle {"ORANGE"}To buy a vehicle.", -1, 1657.651489, 1796.443115, 10.820312, 10.0, FREEROAM_VW, 0);
	CreatePickup(18749, 1, 1657.651489, 1796.443115, 10.820312, FREEROAM_VW);
	
	CreateDynamicMapIcon(822.6,-1590.3,13.5,7,-1, FREEROAM_VW);
	CreateDynamicMapIcon(-2570.1,245.4,10.3,7,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2726.6,-2026.4,17.5,7,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2080.3,2119.0,10.8,7,-1, FREEROAM_VW);
	CreateDynamicMapIcon(675.7,-496.6,16.8,7,-1, FREEROAM_VW);
	CreateDynamicMapIcon(-1805.7,943.2,24.8,29,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2750.9,2470.9,11.0,29,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2351.8,2529.0,10.8,29,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2635.5,1847.4,11.0,29,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2083.4,2221.0,11.0,29,-1, FREEROAM_VW);
	CreateDynamicMapIcon(-1719.1,1359.4,8.6,29,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2330.2,75.2,31.0,29,-1, FREEROAM_VW);
	CreateDynamicMapIcon(203.2,-200.4,6.5,29,-1, FREEROAM_VW);
	CreateDynamicMapIcon(812.9,-1616.1,13.6,10,-1, FREEROAM_VW);
	CreateDynamicMapIcon(1199.1,-924.0,43.3,10,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2362.2,2069.9,10.8,10,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2469.5,2033.8,10.8,10,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2172.9,2795.7,10.8,10,-1, FREEROAM_VW);
	CreateDynamicMapIcon(1875.3,2072.0,10.8,10,-1, FREEROAM_VW);
	CreateDynamicMapIcon(1161.5,2072.0,10.8,10,-1, FREEROAM_VW);
	CreateDynamicMapIcon(-2356.0,1009.0,49.0,10,-1, FREEROAM_VW);
	CreateDynamicMapIcon(-1913.3,826.2,36.9,10,-1, FREEROAM_VW);
	CreateDynamicMapIcon(-2335.6,-165.6,39.5,10,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2397.8,-1895.6,13.7,14,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2421.6,-1509.6,24.1,14,-1, FREEROAM_VW);
	CreateDynamicMapIcon(-2671.6,257.4,4.6,14,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2392.4,2046.5,10.8,14,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2844.5,2401.1,11.0,14,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2635.5,1674.3,11.0,14,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2105.7,2228.7,11.0,14,-1, FREEROAM_VW);
	CreateDynamicMapIcon(-2154.0,-2461.2,30.8,14,-1, FREEROAM_VW);
	CreateDynamicMapIcon(-1816.2,620.8,37.5,14,-1, FREEROAM_VW);
	CreateDynamicMapIcon(-1216.0,1831.4,45.3,14,-1, FREEROAM_VW);
	CreateDynamicMapIcon(172.73,1176.76,13.7,14,-1, FREEROAM_VW);
	CreateDynamicMapIcon(932.0,-1353.0,14.0,14,-1, FREEROAM_VW);
	CreateDynamicMapIcon(1971.7,-2036.6,13.5,39,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2071.6,-1779.9,13.5,39,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2094.6,2119.0,10.8,39,-1, FREEROAM_VW);
	CreateDynamicMapIcon(-2490.5,-40.1,39.3,39,-1, FREEROAM_VW);
	CreateDynamicMapIcon(1372.9,-1278.8,12.5,6,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2400.5,-1978.4,13.5,6,-1, FREEROAM_VW);
	CreateDynamicMapIcon(-2626.6,209.4,4.9,6,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2535.9,2083.5,10.8,6,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2156.5,943.2,10.8,6,-1, FREEROAM_VW);
	CreateDynamicMapIcon(779.7,1874.3,4.9,6,-1, FREEROAM_VW);
	CreateDynamicMapIcon(-2092.7,-2463.8,30.6,6,-1, FREEROAM_VW);
	CreateDynamicMapIcon(240.0,-178.2,2.0,6,-1, FREEROAM_VW);
	CreateDynamicMapIcon(-1509.4,2611.8,58.5,6,-1, FREEROAM_VW);
	CreateDynamicMapIcon(-315.67,829.87,13.43,6,-1, FREEROAM_VW);
	CreateDynamicMapIcon(2332.9,63.6,31.0,6,-1, FREEROAM_VW);
	
	//SHELTERS ZOMBIE
	CreateDynamicMapIcon(2478.669433, -1664.632568, 13.329092, 22, -1, ZOMBIE_WORLD);
	Create3DTextLabel("{C6D855}SHELTER\n\n{"ORANGE"}use {"GREY"}/auxilios {"ORANGE"}To take food or weapons.", -1, 2478.669433, -1664.632568, 13.329092, 15.0, ZOMBIE_WORLD, 0);
	CreateDynamicMapIcon(2693.755371, -1089.728759, 69.125000, 22, -1, ZOMBIE_WORLD);
	Create3DTextLabel("{C6D855}SHELTER\n\n{"ORANGE"}use {"GREY"}/auxilios {"ORANGE"}To take food or weapons.", -1, 2693.755371, -1089.728759, 69.125000, 15.0, ZOMBIE_WORLD, 0);
	CreateDynamicMapIcon(2355.956787, -1232.644042, 27.976562, 22, -1, ZOMBIE_WORLD);
	Create3DTextLabel("{C6D855}SHELTER\n\n{"ORANGE"}use {"GREY"}/auxilios {"ORANGE"}To take food or weapons.", -1, 2355.956787, -1232.644042, 27.976562, 15.0, ZOMBIE_WORLD, 0);
	CreateDynamicMapIcon(1652.444458, -1008.928894, 24.062427, 22, -1, ZOMBIE_WORLD);
	Create3DTextLabel("{C6D855}SHELTER\n\n{"ORANGE"}use {"GREY"}/auxilios {"ORANGE"}To take food or weapons.", -1, 1652.444458, -1008.928894, 24.062427, 15.0, ZOMBIE_WORLD, 0);
	CreateDynamicMapIcon(1199.899414, -1337.947143, 13.398426, 22, -1, ZOMBIE_WORLD);
	Create3DTextLabel("{C6D855}SHELTER\n\n{"ORANGE"}use {"GREY"}/auxilios {"ORANGE"}To take food or weapons.", -1, 1199.899414, -1337.947143, 13.398426, 15.0, ZOMBIE_WORLD, 0);
	CreateDynamicMapIcon(736.144165, -1346.766601, 13.513442, 22, -1, ZOMBIE_WORLD);
	Create3DTextLabel("{C6D855}SHELTER\n\n{"ORANGE"}use {"GREY"}/auxilios {"ORANGE"}To take food or weapons.", -1, 736.144165, -1346.766601, 13.513442, 15.0, ZOMBIE_WORLD, 0);
	return 1;
}

CreateDynamicObject_FR(modelid, Float:X, Float:Y, Float:Z, Float:RX, Float:RY, Float:RZ, worldid = FREEROAM_VW)
{
	return CreateDynamicObject(modelid, X, Y, Z, RX, RY, RZ, worldid, .streamdistance = 650.0, .drawdistance = 650.0);
}

CreateObjectHouse(modelid, Float:X, Float:Y, Float:Z, Float:RX, Float:RY, Float:RZ)
{
	return CreateDynamicObject(modelid, X, Y, Z, RX, RY, RZ, 666, -1, -1, 500.0, 500.0);
}

ActivePlayerGodMode(playerid)
{
	if(!PI[playerid][P_SPAWN_PROTECTION]) GetPlayerHealth(playerid, PI[playerid][P_HEALTH]);
	PI[playerid][P_GODMODE] = true;
	SetPlayerHealth(playerid, 9999999.0);
	ResetPlayerWeapons(playerid);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		RepairVehicle(GetPlayerVehicleID(playerid));
		PI[playerid][P_TIMERS][1] = SetTimerEx("GODMODE_RepairVeh", 1000, false, "d", playerid);
	}
	GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~~h~~y~godmode_~g~~h~on~n~_", 3000, 6);
	return 1;
}

DeactivePlayerGodMode(playerid)
{
	if(PI[playerid][P_SPAWN_PROTECTION]) PI[playerid][P_SPAWN_PROTECTION] = false;
	PI[playerid][P_GODMODE] = false;
	SetPlayerHealth(playerid, PI[playerid][P_HEALTH]);
	if(PI[playerid][P_GAMEMODE] == M_FREEROAM)
	{
		ResetPlayerWeapons(playerid);
		for(new i = 0; i != 10; i ++) GivePlayerWeapon(playerid, Random_Weapons[random(sizeof(Random_Weapons))], 500);
	}
	GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~~h~~y~godmode_~r~~h~off~n~_", 3000, 6);
	return 1;
}

SetPlayerPosEx(playerid, Float:X, Float:Y, Float:Z, Float:Angle = 0.0, interior = 0, virtualworld = FREEROAM_VW, freeze = 0, allowcar = 1, carmodelid = 0, spcarspawn = 0)
{
	if(spcarspawn && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new Float:ang = random(360);
		X += 15.0 * floatcos(ang, degrees);
		Y += 15.0 * floatsin(ang, degrees);
		allowcar = true;
	}
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || !allowcar)
	{
		if(carmodelid != 0)
		{
			SetPlayerInterior(playerid, interior);
			SetPlayerVirtualWorld(playerid, virtualworld);
			
			if(IsValidVehicle(PI[playerid][P_FRVEHICLE]))
			{
				VEHICLES_PLAYER[PI[playerid][P_FRVEHICLE]] = false;
				DestroyVehicleEx(PI[playerid][P_FRVEHICLE]);
			}
			PI[playerid][P_FRVEHICLE] = CreateVehicle(carmodelid, X, Y, Z, Angle, minrand(128, 255), minrand(128, 255), -1);
			VEHICLES_PLAYER[PI[playerid][P_FRVEHICLE]] = true;
			LinkVehicleToInterior(PI[playerid][P_FRVEHICLE], interior);
			SetVehicleVirtualWorld(PI[playerid][P_FRVEHICLE], virtualworld);
			PutPlayerInVehicleEx(playerid, PI[playerid][P_FRVEHICLE], 0);
			
			if(freeze) SetVehicleVelocity(PI[playerid][P_FRVEHICLE], floatsin(-Angle, degrees) * 0.1, floatcos(-Angle, degrees) * 0.1, 0.2);
			return 1;
		}
		else
		{
			E_SetPlayerPosEx(playerid, X, Y, Z);
			SetPlayerFacingAngle(playerid, Angle);
			SetPlayerInterior(playerid, interior);
			SetPlayerVirtualWorld(playerid, virtualworld);
			
			if(freeze) SetPlayerVelocity(playerid, 0.0, 0.0, 0.2);
			return 1;
		}
	}
	else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && allowcar)
	{
		new veh = GetPlayerVehicleID(playerid);
		SetVehiclePos(veh, X, Y, Z);
		SetVehicleZAngle(veh, Angle);
		SetPlayerInterior(playerid, interior);
		SetPlayerVirtualWorld(playerid, virtualworld);
		LinkVehicleToInterior(veh, interior);
		SetVehicleVirtualWorld(veh, virtualworld);
		if(freeze) SetVehicleVelocity(veh, floatsin(-Angle, degrees) * 0.1, floatcos(-Angle, degrees) * 0.1, 0.2);
		return 1;
	}
	return 1;
}

forward UnfreezePlayer(playerid);
public UnfreezePlayer(playerid)
{
	return TogglePlayerControllable(playerid, true);
}

ShowDialog(playerid, dialogid)
{
	switch(dialogid)
	{
		case DIALOG_LOGIN: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_PASSWORD, "{B0E66A}"SERVER_NAME" - Login", 
			"{99CC00}This account is registered.\nEnter your password to continue.", ">>", "cancle");
			
		
		case DIALOG_REGISTER: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_PASSWORD, "{B0E66A}"SERVER_NAME" - Record",
			"{99CC00}Enter your password to record this account.", ">>", "X");
			
		
		case DIALOG_TELEPORTS:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - Teleportation", 
				"{"ORANGE"}Cities\n{"ORANGE"}Stunts\n{"ORANGE"}Zone DM\n{"ORANGE"}legacy leaps\n{"ORANGE"}Parkour\n{"ORANGE"}Skydiving\n{"ORANGE"}Zone Drift\n{"ORANGE"}Interiors\n{"ORANGE"}Others\n{"ORANGE"}Tuning garages", ">>", "X");
			return 1;
		}
		
		case DIALOG_SOCIAL_MUSIC:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - Music", "{999900}My published songs\n{999900}The most popular songs\n{999900}I like songs\n{999900}Add song\n{999900}Add Song using search engine", ">>", "X");
			return 1;
		}

		case DIALOG_SOCIAL_ADD:
		{
			new dialog[260], url[32];
			format(url, 32, "%s", PI[playerid][P_MUSIC_URL]);
			if(strlen(url) > 28)
			{
				strdel(url, strlen(url) - 3, strlen(url));
				strins(url, "...", strlen(url));
			}
			format(dialog, sizeof dialog, "{999900}Tilt\t{90C3D4}%s\n{999900}URL\t{90C3D4}%s\n{999900}Guy\t{90C3D4}%s\n{CC9900}Add song\n{CC9900}Prove", PI[playerid][P_MUSIC_TITLE], url, (PI[playerid][P_MUSIC_TYPE] == 0 ? ("Pblica") : ("Privada")) );
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST, "{"ORANGE"}"SERVER_NAME" - Add song", dialog, ">>", "<<");
			return 1;
		}
		
		case DIALOG_SOCIAL_ADD + 1:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "{"ORANGE"}"SERVER_NAME" - Add song", "{999900}Indicate the song title (max. 32 characters)", ">>", "<<");
			return 1;
		}
		
		case DIALOG_SOCIAL_ADD + 2:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "{"ORANGE"}"SERVER_NAME" - Add song", "{999900}Indicate the URL of the song (max. 128 characters)", ">>", "<<");
			return 1;
		}
		
		case DIALOG_SOCIAL_ADD_AUTO:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "{"ORANGE"}"SERVER_NAME" - Add song", "{999900}Generate the URL of the song automatically?\n\n{999900}It is recommended to insert a dropbox url or any\n{999900}Platform where the song can be downloaded directly.", "Yeah", "No");
			return 1;
		}
		
		case DIALOG_SOCIAL_SEARCH_YT:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "{"ORANGE"}"SERVER_NAME" - Look for chives", "{999900}Introduce the name of the song you want to add\n\n{999900}It is recommended to search by name and artist, and also specify\n{999900}That is the audio and not a triailer where the song takes to start.", "Look for", "<<");
			return 1;
		}
		
		case DIALOG_SOCIAL_MY:
		{
			new str[80];
			format(DIALOG_SOCIAL_String, sizeof DIALOG_SOCIAL_String, "");
			strcat(DIALOG_SOCIAL_String, "{CCCCCC}Ttulo\t{90C3D4}Tipo\t{CC9900}Reproduciones\n");
			new DBResult:Result;
			format(DB_Query, sizeof(DB_Query), "SELECT ID, TITLE, PLAYS, PRIVATE FROM MUSIC WHERE OWNERID = '%d' ORDER BY PLAYS * 1 DESC LIMIT 10 OFFSET %d", PI[playerid][P_ID], PI[playerid][P_MUSIC_PAGE] * 10);
			Result = db_query(Database, DB_Query);
			new song_title[32], lines;
			for(new i; i < db_num_rows(Result); i++ )
			{
				db_get_field(Result, 1, song_title, 32);
				format(str, 80, "{CCCCCC}%s\t{90C3D4}%s\t{CC9900}%d\n", song_title, (db_get_field_int(Result, 3) == 0 ? ("Publica") : ("Privada")), db_get_field_int(Result, 2));
				strcat(DIALOG_SOCIAL_String, str);
				PI[playerid][P_MUSIC_ID][lines] = db_get_field_int(Result, 0);
				lines ++;
				db_next_row(Result);
			}
			db_free_result(Result);
			
			if(lines == 0)
			{
				SendClientMessage(playerid, -1, "{CCCCCC}You have no song published.");
				return 1;
			}
			
			PI[playerid][P_MUSIC_ID][lines] = 0;
			strcat(DIALOG_SOCIAL_String, "{C1FF63}Next pier\n");
			lines ++;
			PI[playerid][P_MUSIC_ID][lines] = -1;
			strcat(DIALOG_SOCIAL_String, "{C1FF63}Last pion");
			
			new dialog_Title[64];
			format(dialog_Title, 64, "{"ORANGE"}"SERVER_NAME" - My music {90C3D4}(%d/%d)", PI[playerid][P_MUSIC_PAGE] + 1, GetUserMusicPages(playerid));
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, dialog_Title, DIALOG_SOCIAL_String, ">>", "<<");
			return 1;
		}
		
		case DIALOG_SOCIAL_BEST:
		{
			new str[94], startpos = PI[playerid][P_MUSIC_PAGE] + (PI[playerid][P_MUSIC_PAGE] * 9) + 1;
			format(DIALOG_SOCIAL_String, sizeof DIALOG_SOCIAL_String, "");
			strcat(DIALOG_SOCIAL_String, "{CCCCCC}Tilt\t{90C3D4}Aadida by\t{CC9900}Views\n");
			new DBResult:Result;
			format(DB_Query, sizeof(DB_Query), "SELECT ID, TITLE, OWNER, PLAYS FROM MUSIC WHERE PRIVATE = '0' ORDER BY PLAYS * 1 DESC LIMIT 10 OFFSET %d", PI[playerid][P_MUSIC_PAGE] * 10);
			//format(DB_Query, sizeof(DB_Query), "SELECT MUSIC.ID, MUSIC.TITLE, MUSIC.OWNER, (SELECT COUNT(*) FROM LIKES WHERE LIKES.ID_SONG = MUSIC.ID) AS POS FROM MUSIC WHERE MUSIC.PRIVATE = '0' ORDER BY POS * 1 DESC LIMIT 10 OFFSET %d", PI[playerid][P_MUSIC_PAGE] * 10);
			Result = db_query(Database, DB_Query);
			new song_title[32], owner[24], lines;
			for(new i; i < db_num_rows(Result); i++ )
			{
				db_get_field(Result, 1, song_title, 32);
				db_get_field(Result, 2, owner, 24);
				format(str, 94, "{CCCCCC}%d. %s\t{90C3D4}%s\t{CC9900}%d\n", i + startpos, song_title, owner, db_get_field_int(Result, 3));
				strcat(DIALOG_SOCIAL_String, str);
				PI[playerid][P_MUSIC_ID][lines] = db_get_field_int(Result, 0);
				lines ++;
				db_next_row(Result);
			}
			db_free_result(Result);
			
			if(lines == 0)
			{
				SendClientMessage(playerid, -1, "{CCCCCC}There is no published song.");
				return 1;
			}
			
			PI[playerid][P_MUSIC_ID][lines] = 0;
			strcat(DIALOG_SOCIAL_String, "{C1FF63}Next pier\n");
			lines ++;
			PI[playerid][P_MUSIC_ID][lines] = -1;
			strcat(DIALOG_SOCIAL_String, "{C1FF63}Last pion");
			new dialog_Title[64];
			format(dialog_Title, 64, "{"ORANGE"}"SERVER_NAME" - I am more {90C3D4}(%d/%d)", PI[playerid][P_MUSIC_PAGE] + 1, GetMusicPages());
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, dialog_Title, DIALOG_SOCIAL_String, ">>", "<<");
			return 1;
		}
	
		case DIALOG_SOCIAL_MY_BEST:
		{
			new str[94], startpos = PI[playerid][P_MUSIC_PAGE] + (PI[playerid][P_MUSIC_PAGE] * 9) + 1;
			format(DIALOG_SOCIAL_String, sizeof DIALOG_SOCIAL_String, "");
			strcat(DIALOG_SOCIAL_String, "{CCCCCC}Tilt\t{90C3D4}Aadida by\n");
			
			new DBResult:Result;
			format(DB_Query, sizeof(DB_Query), "SELECT MUSIC.ID, MUSIC.TITLE, MUSIC.OWNER FROM MUSIC WHERE EXISTS(SELECT LIKES.ID_SONG FROM LIKES WHERE LIKES.ID_USUARIO = '%d' AND LIKES.ID_SONG = MUSIC.ID) LIMIT 10 OFFSET %d", PI[playerid][P_ID], PI[playerid][P_MUSIC_PAGE] * 10);
			Result = db_query(Database, DB_Query);
			new song_title[32], owner[24], lines;
			for(new i; i < db_num_rows(Result); i++ )
			{
				db_get_field(Result, 1, song_title, 32);
				db_get_field(Result, 2, owner, 24);
				format(str, 94, "{CCCCCC}%d. %s\t{90C3D4}%s\n", i + startpos, song_title, owner);
				strcat(DIALOG_SOCIAL_String, str);
				PI[playerid][P_MUSIC_ID][lines] = db_get_field_int(Result, 0);
				lines ++;
				db_next_row(Result);
			}
			db_free_result(Result);
			
			if(lines == 0)
			{
				SendClientMessage(playerid, -1, "{CCCCCC}There is no song that you like, use {C4FF66}/like <id> {CCCCCC}To indicate that you like a song.");
				return 1;
			}
			
			PI[playerid][P_MUSIC_ID][lines] = 0;
			strcat(DIALOG_SOCIAL_String, "{C1FF63}Next pier\n");
			lines ++;
			PI[playerid][P_MUSIC_ID][lines] = -1;
			strcat(DIALOG_SOCIAL_String, "{C1FF63}Last pion");
			
			new dialog_Title[128];
			format(dialog_Title, 128, "{"ORANGE"}"SERVER_NAME" - I like songs {90C3D4}(%d/%d)", PI[playerid][P_MUSIC_PAGE] + 1, GetPlayerFavMusicPages(playerid));
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, dialog_Title, DIALOG_SOCIAL_String, ">>", "<<");
			return 1;
		}
		
		/*case DIALOG_SOCIAL_BEST:
		{
			new str[94], startpos = PI[playerid][P_MUSIC_PAGE] + (PI[playerid][P_MUSIC_PAGE] * 9) + 1;
			format(DIALOG_SOCIAL_String, sizeof DIALOG_SOCIAL_String, "");
			strcat(DIALOG_SOCIAL_String, "{CCCCCC}Ttulo\t{90C3D4}Aadida por\t{CC9900}Likes\n");
			new DBResult:Result;
			//format(DB_Query, sizeof(DB_Query), "SELECT ID, TITLE, PLAYS, OWNER FROM MUSIC WHERE PRIVATE = '0' ORDER BY PLAYS * 1 DESC LIMIT 10 OFFSET %d", PI[playerid][P_MUSIC_PAGE] * 10);
			format(DB_Query, sizeof(DB_Query), "SELECT MUSIC.ID, MUSIC.TITLE, MUSIC.OWNER, (SELECT COUNT(*) FROM LIKES WHERE LIKES.ID_SONG = MUSIC.ID) AS POS FROM MUSIC WHERE MUSIC.PRIVATE = '0' ORDER BY POS * 1 DESC LIMIT 10 OFFSET %d", PI[playerid][P_MUSIC_PAGE] * 10);
			Result = db_query(Database, DB_Query);
			new song_title[32], owner[24], lines;
			for(new i; i < db_num_rows(Result); i++ )
			{
				db_get_field(Result, 1, song_title, 32);
				db_get_field(Result, 2, owner, 24);
				format(str, 94, "{CCCCCC}%d. %s\t{90C3D4}%s\t{CC9900}%d\n", i + startpos, song_title, owner, db_get_field_int(Result, 3));
				strcat(DIALOG_SOCIAL_String, str);
				PI[playerid][P_MUSIC_ID][lines] = db_get_field_int(Result, 0);
				lines ++;
				db_next_row(Result);
			}
			db_free_result(Result);
			
			if(lines == 0)
			{
				SendClientMessage(playerid, -1, "{CCCCCC}No hay ninguna cancin publicada.");
				return 1;
			}
			
			PI[playerid][P_MUSIC_ID][lines] = 0;
			strcat(DIALOG_SOCIAL_String, "{C1FF63}Siguiente pgina\n");
			lines ++;
			PI[playerid][P_MUSIC_ID][lines] = -1;
			strcat(DIALOG_SOCIAL_String, "{C1FF63}Pgina Last");
			new dialog_Title[64];
			format(dialog_Title, 64, "{"ORANGE"}"SERVER_NAME" - Lo ms {90C3D4}(%d/%d)", PI[playerid][P_MUSIC_PAGE] + 1, GetMusicPages());
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, dialog_Title, DIALOG_SOCIAL_String, ">>", "<<");
			return 1;
		}*/

		case DIALOG_SOCIAL_MY + 1:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - My music", "{CCCCCC}play\n{CCCCCC}Eliminate", ">>", "<<");
			return 1;
		}
		
		case DIALOG_RADIO:
		{
			new dialog[256], line[45];
			format(dialog, 256, "{CC0000}Stop radio");
			for(new i = 0; i != sizeof(Radios); i++)
			{
				format(line, sizeof(line), "\n{999900}%s", Radios[i][0]);
				strcat(dialog, line);
			}
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - Radio", dialog, ">>", "X");
			return 1;
		}
		
		case DIALOG_VEHICLES:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - Vehculos", 
				"{267F00}Sports\n{267F00}Tunable and elegant\n{267F00}Motorcycles and bicycles\n{267F00}All terrain\
				\n{267F00}Planes\n{267F00}Helicopteros\n{267F00}Aquotics\n{267F00}Public service\
				\n{267F00}Industrialists\n{267F00}Saloon\n{267F00}Trucks\n{267F00}Loads\
				\n{267F00}Unique vehicles\n{267F00}RC vehicles", ">>", "X");
			return 1;
		}
		
		case DIALOG_WEAPONS:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - Armas", 
			"{267F00}Body to body\n{267F00}thrown out\n{267F00}Pistols\n{267F00}Shotguns\n{267F00}Machine guns\n{267F00}Rifles\n{267F00}Heavy weapons\n{267F00}Explosivos\n{267F00}Others", ">>", "X");
			return 1;
		}
		
		case DIALOG_ITEMS: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - Items", DIALOG_ITEMS_String, ">>", "X");

		case DIALOG_ANIMS: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - animlist", DIALOG_ANIMS_String, ">>", "X");
		
		case DIALOG_HELP1: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "{"ORANGE"}"SERVER_NAME" - help 1 {90C3D4}(/help1)", DIALOG_HELP1_String, "Close", "Following");
		case DIALOG_HELP2: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "{"ORANGE"}"SERVER_NAME" - help 2 {90C3D4}(/help2)", DIALOG_HELP2_String, "Former", "Following");
		case DIALOG_HELP3: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "{"ORANGE"}"SERVER_NAME" - help 3 {90C3D4}(/help3)", DIALOG_HELP3_String, "Former", "Close");

		case DIALOG_COMMANDS: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "{"ORANGE"}"SERVER_NAME" - command", DIALOG_COMMANDS_String, "X", "");
		case DIALOG_RULES: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "{"ORANGE"}"SERVER_NAME" - rules", DIALOG_RULES_String, "X", "");
		case DIALOG_CREDITS: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "{"ORANGE"}"SERVER_NAME" - Crditos", DIALOG_CREDITS_String, "X", "");

		case DIALOG_SELECT_GANG_TEAM:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - Select Band", "{00CC33}[GROVE STREET]\n{993399}[BALLAS]\n{0066FF}[Police]", ">>", "X");
			return 1;
		}
		
		case DIALOG_SELECT_TDM_TEAM:
		{
			new dialog[300];
			format(dialog, sizeof dialog, "{999900}EQUIPMENT\t{99CC00}PLAYERS\n{999900}EQUIPMENT 1\t{99CC00}%d\n{999900}EQUIPMENT 2\t{99CC00}%d", TDMI[T_TeamPLAYERS][0], TDMI[T_TeamPLAYERS][1]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "{"ORANGE"}"SERVER_NAME" - Seleccionar EQUIPMENT", dialog, ">>", "X");
			return 1;
		}
		
		case DIALOG_SELECT_MODE:
		{
			new str[400];
			format(str, sizeof(str), "{999900}mode\t{99CC00}PLAYERS\n{999900}FreeRoam\t{99CC00}%d\n{999900}Death Match\t{99CC00}%d\n{999900}Derby\t{99CC00}%d\n{999900}Gang Wars\t{99CC00}%d\n{999900}DoNotFall\t{99CC00}%d\n{999900}Zombie\t{99CC00}%d\n{999900}Team Deathmatch\t{99CC00}%d\n{999900}Shooter\t{99CC00}%d\n{999900}Car Race\t{99CC00}%d", TOTAL_PLAYERS_FR, TOTAL_PLAYERS_DM, DI[D_PLAYERS], TOTAL_PLAYERS_GANG, FI[F_PLAYERS], ZI[Z_PLAYERS], TDMI[T_PLAYERS], ST[S_PLAYERS], RC[R_PLAYERS]);

			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "{"ORANGE"}"SERVER_NAME" - mode", str, ">>", "X");
			return 1;
		}
	
		case DIALOG_EVENT:
		{
			new str[120], dialog[500];
			strcat(dialog, "{999900}VARIABLE\t{99CC00}WORTH\n");
			format(str, sizeof(str), "{999900}STATE\t{99CC00}%s\n", String_Event_Status(EVENT_STATUS)); strcat(dialog, str);
			format(str, sizeof(str), "{999900}NAME\t{99CC00}%s\n", EVENT_NAME); strcat(dialog, str);
			format(str, sizeof(str), "{999900}TELEPORT\t{99CC00}{X:%.2f, Y:%.2f, Z:%.2f, A:%.2f, INT:%d, VW:%d}\n", EVENT_POS[0], EVENT_POS[1], EVENT_POS[2], EVENT_POS[3], EVENT_INT, EVENT_VIRUALWORLD); strcat(dialog, str);
			format(str, sizeof(str), "{999900}WEAPONS\t{99CC00}{%d, %d, %d, %d, %d}\n", EVENT_WEP[0], EVENT_WEP[1], EVENT_WEP[2], EVENT_WEP[3], EVENT_WEP[4]); strcat(dialog, str);
			format(str, sizeof(str), "{999900}VEHICULO\t{99CC00}%d\n", EVENT_VEHICLE); strcat(dialog, str);
			format(str, sizeof(str), "{999900}TIME OF THE DAY\t{99CC00}%d\n", EVENT_TIME); strcat(dialog, str);
			format(str, sizeof(str), "{999900}CLIMATE\t{99CC00}%s (%d)\n", WEATHERS[EVENT_WEATHER], EVENT_WEATHER); strcat(dialog, str);
			format(str, sizeof(str), "{999900}Freeze in TP\t{99CC00}%s\n", (EVENT_FREEZE == 1 ? ("YES"):("NO"))); strcat(dialog, str);
			format(str, sizeof(str), "{999999}PLAYERS\t{999999}%d", TOTAL_PLAYERS_EVENT); strcat(dialog, str);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "{"ORANGE"}"SERVER_NAME" - Organizar event", dialog, ">>", "X");
			return 1;
		}
		
		case DIALOG_EVENT+1:
		{
			new dialog[150];
			format(dialog, sizeof dialog, "{%s}CLOSED\n{%s}Joining players\n{%s}IN A HURRY", (EVENT_STATUS == EVENT_CLOSED ? ("6699CC"):("CCCCCC")), (EVENT_STATUS == EVENT_JOINING ? ("6699CC"):("CCCCCC")), (EVENT_STATUS == EVENT_RUNNING ? ("6699CC"):("CCCCCC")) );
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - Organize Event", dialog, ">>", "<<");
			return 1;
		}
		
		case DIALOG_EVENT+2:
		{
			if(EVENT_STATUS == EVENT_RUNNING) return SendClientMessage(playerid, -1, "{"ORANGE"}Event was already activated.");
			new dialog[60];
			format(dialog, sizeof dialog, "{CCCCCC}Current name: {6699CC}%s", EVENT_NAME);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "{"ORANGE"}"SERVER_NAME" - Organize Event", dialog, ">>", "<<");
			return 1;
		}
		
		case DIALOG_EVENT+3:
		{
			new str[128], dialog[600];
			for(new i = 0; i < sizeof WEATHERS; i++)
			{
				if(i == EVENT_WEATHER) format(str, sizeof str, "{66CC00}%s (%d)\n", WEATHERS[i], i); 
				else format(str, sizeof str, "{CCCCCC}%s (%d)\n", WEATHERS[i], i); 
				
				strcat(dialog, str);
			}
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - Organize Event", dialog, ">>", "<<");
			return 1;
		}
		
		case DIALOG_EVENT+4:
		{
			new dialog[160];
			format(dialog, sizeof dialog, "{CCCCCC}ACTUAL WEAPONS: {6699CC}%d %d %d %d %d\n{CCCCCC}Format: Armaid1 Armaid2 Armaid3 Armaid4 Armaid5", EVENT_WEP[0], EVENT_WEP[1], EVENT_WEP[2], EVENT_WEP[3], EVENT_WEP[4]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "{"ORANGE"}"SERVER_NAME" - Organize Event", dialog, ">>", "<<");
			return 1;
		}
		
		case DIALOG_EVENT+5:
		{
			new dialog[120];
			format(dialog, sizeof dialog, "{CCCCCC}Current vehicle (leave at 0 not to give vehicle): {6699CC}%d", EVENT_VEHICLE);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "{"ORANGE"}"SERVER_NAME" - Organize Event", dialog, ">>", "<<");
			return 1;
		}
		
		case DIALOG_EVENT+6:
		{
			new dialog[60];
			format(dialog, sizeof dialog, "{CCCCCC}CURRENT TIME (12 = da): {6699CC}%d", EVENT_TIME);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "{"ORANGE"}"SERVER_NAME" - Organize Event", dialog, ">>", "<<");
			return 1;
		}
		
		case DIALOG_TOPS:
		{
			new str[64], startpos = PI[playerid][P_DIALOG_PAGE] + (PI[playerid][P_DIALOG_PAGE] * 19) + 1;
			format(DIALOG_TOPS_String, sizeof DIALOG_TOPS_String, "");
			strcat(DIALOG_TOPS_String, "{CCCCCC}Name\t{CC9900}Score\t{90C3D4}Crew\n");
			new DBResult:Result, player_crew, lines;
			format(DB_Query, sizeof(DB_Query), "SELECT ID, NAME, SCORE, CREWI, CONNECTED FROM USERS ORDER BY SCORE * 1 DESC LIMIT 20 OFFSET %d", PI[playerid][P_DIALOG_PAGE] * 20);
			Result = db_query(Database, DB_Query);
			new player_name[24], crew_name[24];
			for(new i; i < db_num_rows(Result); i++ )
			{
				db_get_field(Result, 1, player_name, 24);
				format(crew_name, 24, "{90C3D4}No");
				player_crew = db_get_field_int(Result, 3);
				if(player_crew != 0)
				{
					new DBResult:E_Result, name[12], color;
					format(DB_Query, sizeof(DB_Query), "SELECT NAME, COLOR FROM CREWS WHERE ID = '%d'", player_crew);
					E_Result = db_query(Database, DB_Query);
					if(db_num_rows(E_Result))
					{
						db_get_field(E_Result, 0, name, 12);
						color = db_get_field_int(E_Result, 1);
						format(crew_name, 24, "{%x}%s", color, name);
					}
					db_free_result(E_Result);
					
				}
				format(str, 64, "{%s}%d. %s\t{CC9900}%d\t%s\n", (db_get_field_int(Result, 0) == PI[playerid][P_ID] ? ("C1FF63") : ("CCCCCC") ), i + startpos, player_name, db_get_field_int(Result, 2), crew_name);
				strcat(DIALOG_TOPS_String, str);
				lines ++;
				db_next_row(Result);
			}
			db_free_result(Result);
			
			strcat(DIALOG_TOPS_String, "{C1FF63}Close dialogue");
			PI[playerid][P_TOP_CLOSE] = lines;
			new dialog_Title[64];
			format(dialog_Title, 64, "{"ORANGE"}"SERVER_NAME" - Top {90C3D4}(%d - %d)", startpos, startpos + lines - 1);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, dialog_Title, DIALOG_TOPS_String, ">>", "<<");
			return 1;
		}
		
		case DIALOG_ADMINS:
		{
			new str[90], startpos = PI[playerid][P_DIALOG_PAGE] + (PI[playerid][P_DIALOG_PAGE] * 18) + 1;
			format(DIALOG_ADMINS_String, sizeof DIALOG_ADMINS_String, "");
			strcat(DIALOG_ADMINS_String, "{CCCCCC}Name\t{90C3D4}Range\n");
			new DBResult:Result, lines;
			format(DB_Query, sizeof(DB_Query), "SELECT ID, NAME, MOD, CONNECTED FROM USERS WHERE MOD > '0' ORDER BY MOD * 1 DESC LIMIT 19 OFFSET %d", PI[playerid][P_DIALOG_PAGE] * 19);
			Result = db_query(Database, DB_Query);
			new player_name[24];
			for(new i; i < db_num_rows(Result); i++ )
			{
				PI[playerid][P_ADMINS_DIALOG][lines] = db_get_field_int(Result, 0);
				
				db_get_field(Result, 1, player_name, 24);
				format(str, 90, "{%s}%d. %s %s\t{90C3D4}%s\n", (db_get_field_int(Result, 0) == PI[playerid][P_ID] ? ("C1FF63") : ("CCCCCC") ), i + startpos, player_name, ( db_get_field_int(Result, 3) == 1 ? ("{A7EB54}(Conectado)") : ("{D40808}(Desconectado)") ), adminLevel(db_get_field_int(Result, 2)));
				strcat(DIALOG_ADMINS_String, str);
				lines ++;
				db_next_row(Result);
			}
			db_free_result(Result);
			
			strcat(DIALOG_ADMINS_String, "{C1FF63}Next Page\n");
			PI[playerid][P_ADMINS_DIALOG][lines++] = 0;
			strcat(DIALOG_ADMINS_String, "{C1FF63}Last page\n");
			PI[playerid][P_ADMINS_DIALOG][lines] = -1;
			
			new dialog_Title[64];
			format(dialog_Title, 64, "{"ORANGE"}"SERVER_NAME" - Admins {90C3D4}(%d - %d)", startpos, startpos + lines - 2);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, dialog_Title, DIALOG_ADMINS_String, ">>", "Cerrar");
			return 1;
		}
		
		case DIALOG_STATS:
		{
			new str[145], dialog[850];
			strcat(dialog, "\n{009900}Statistics\n\n");
			format(str, sizeof(str), "{999900}ID\t\t{99CC00}%d\n", PI[playerid][P_ID]); strcat(dialog, str);
			format(str, sizeof(str), "{999900}NAME\t{99CC00}%s\n", PI[playerid][P_NAME]); strcat(dialog, str);
			format(str, sizeof(str), "{999900}Murders\t{99CC00}%d\n", PI[playerid][P_KILLS]); strcat(dialog, str);
			format(str, sizeof(str), "{999900}DEATHS\t{99CC00}%d\n", PI[playerid][P_DEATHS]); strcat(dialog, str);
			format(str, sizeof(str), "{999900}SCORE\t\t{99CC00}%d\n", PI[playerid][P_SCORE]); strcat(dialog, str);
			format(str, sizeof(str), "{999900}MONEY\t{99CC00}%d\n", PI[playerid][P_MONEY]); strcat(dialog, str);
			format(str, sizeof(str), "{999900}PROPERTIES\t{99CC00}%d\n", PI[playerid][P_HOUSES]); strcat(dialog, str);
			format(str, sizeof(str), "{999900}VEHICLES\t{99CC00}%d\n", PI[playerid][P_VEHICLES]); strcat(dialog, str);
			format(str, sizeof(str), "{999900}VIP\t\t{99CC00}%d\n", PI[playerid][P_VIP]); strcat(dialog, str);
			if(PI[playerid][P_CREW_ID] == 0)
			{
				format(str, sizeof(str), "{999900}CREW\t\t{99CC00}No"); 
				strcat(dialog, str);
			}
			else
			{
				format(str, sizeof(str), "{999900}CREW\t\t{99CC00}{%x}%s", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], CI[PI[playerid][P_CREW_SLOT]][C_NAME]);
				strcat(dialog, str);
			}
			strcat(dialog, "\n\n{009900}  "SERVER_NAME" \n\n");
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "{"ORANGE"}"SERVER_NAME" - STATS", dialog, "X", "");
			return 1;
		}
		
		case DIALOG_SONG: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, " ", "Enter the URL\nMUST TO BE STREAM.", ">>", "X");
		
		case DIALOG_ACMDS: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "{"ORANGE"}"SERVER_NAME" - ACMDS", DIALOG_ACMDS_String, "X", "");
		
		case DIALOG_FIGHTSTYLE:
		{
			ShowPlayerDialog(playerid, DIALOG_FIGHTSTYLE, DIALOG_STYLE_TABLIST_HEADERS, "{"ORANGE"}"SERVER_NAME" - Fightstyles of fighting", "{999900}fightstyle\t{99CC00}Necessary score\n{999900}NORMAL\t{99CC00}0\n{999900}ELBOW\t{99CC00}300\n{999900}GRABKICK\t{99CC00}500\n{999900}KUNGFU\t{99CC00}1000\n{999900}KNEEHEAD\t{99CC00}5000\n{999900}BOXEO\t{99CC00}5000", ">>", "X");
			return 1;
		}
		
		case DIALOG_HOUSE_MANAGE:
		{
			new str[120], dialog[250];
			strcat(dialog, "{999900}VARIABLE\t{99CC00}VALOR\n");
			format(str, sizeof(str), "{999900}DOOR\t{99CC00}%s\n", (HI[PI[playerid][P_TEMPHOUSE_INDEX]][H_OPENED] ? ("Open"):("CLOSED")) ); strcat(dialog, str);
			format(str, sizeof(str), "{999900}SELL HOUSE\t{99CC00}%d$\n", floatround(floatmul(HI[PI[playerid][P_TEMPHOUSE_INDEX]][H_PRICE][0], 0.75)) ); strcat(dialog, str);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "{"ORANGE"}"SERVER_NAME" - Home", dialog, ">>", "X");
			return 1;
		}
		
		case DIALOG_PERSONAL_VEHICLES:
		{
			new string[1512];
			for(new i = 0; i != MAX_VEHICLES_PER_PLAYER; i++)
			{
				if(PI[playerid][P_VEHICLES_MODEL][i] != 0) format(string, sizeof(string), "%s {999900}Vehicle #%d (%s)\t{99CC00}%s\n", string, i+1, VehicleNames[ PI[playerid][P_VEHICLES_MODEL][i] - 400], (PI[playerid][P_VEHICLES_VEH_ID][i] == 0) ? ("EN GARAJE"):("FUERA") );
				else format(string, sizeof(string), "%s {999900}Vehicle #%d\t{999999}(EMPTY)\n", string, i+1);
			}
			ShowPlayerDialog(playerid, DIALOG_PERSONAL_VEHICLES, DIALOG_STYLE_TABLIST, "{"ORANGE"}"SERVER_NAME" - Your vehicles", string, ">>", "X");
			return 1;
		}
		
		case DIALOG_SELECT_ZOMBIE_TEAM:
		{
			new str[250];
			format(str, sizeof(str), "{999900}EQUIPMENT\t{99CC00}PLAYERS\n{999900}Humans\t{99CC00}%d\n{999900}Zombies\t{99CC00}%d", ZI[Z_TEAM_PLAYERS][0], ZI[Z_TEAM_PLAYERS][1]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "{"ORANGE"}"SERVER_NAME" - Select EQUIPMENT", str, ">>", "X");
			return 1;
		}
		
		case DIALOG_AUX:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "{"ORANGE"}"SERVER_NAME" - Auxilios", 
			"{999900}Guy\t{99CC00}Price\n{999900}Food (+35 life)\t{99CC00}560$\n{999900}Desert Eagle\t{99CC00}1560$\n{999900}Shotgun\t{99CC00}2340$\n{999900}AAnthotust{99CC00}8600$", ">>", "X");
			return 1;
		}
		
		case DIALOG_CHATCOLOR:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - Chat Color", 
			"{CCCCCC}Gray (default)\n{CCFF00}Green lime\n{FFCC00}Gold orange\n{3AA0E8}Azul cielo\n{31D613}Green\n{C6D855}Yellow\n{ED0018}Red\n{FF36EE}Pink\n{FF00B3}Purple\n{EB99FF}Rose 2", ">>", "X");
			return 1;
		}
		
		case DIALOG_VIPINFO: return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "{"ORANGE"}"SERVER_NAME" - VIP Info", DIALOG_VIPINFO_String, "X", "");
		
		case DIALOG_PLATE:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "{"ORANGE"}"SERVER_NAME" - Custom Plate", "Enter the text for the plate\nof this vehicle.\n\nLeave empty to remove custom plate.\n", ">>", "X");
			return 1;
		}
		
		case DIALOG_CREW_MANAGE:
		{
			if(PI[playerid][P_CREW_SLOT] == -1) return 1;
			new dialog_Title[82];
			format(dialog_Title, 82, "{"ORANGE"}"SERVER_NAME" - {%x}%s {CFD600}(%d members)", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], CI[PI[playerid][P_CREW_SLOT]][C_NAME], CI[PI[playerid][P_CREW_SLOT]][C_MEMBERS]);
			switch(PI[playerid][P_CREW_RANK])
			{
				case RANK_NOOB .. RANK_PROFESSIONAL:
				{
					ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, dialog_Title, "{CFD600}See members\n{CFD600}Leave Crew", ">>", "X");
					return 1;
				}
				case RANK_LEADER:
				{
					ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, dialog_Title, "{CFD600}See members\n{CFD600}Manage Memory\n{CFD600}Abandon crew", ">>", "X");
					return 1;
				}
				case RANK_FOUNDER:
				{
					ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, dialog_Title, "{CFD600}See members\n{CFD600}Manage members\n{CFD600}Change color crew\n{CFD600}Dissolve Crew", ">>", "X");
					return 1;
				}
			}
			return 1;
		}
		
		case DIALOG_CREW_MEMBERS:
		{
			if(PI[playerid][P_CREW_SLOT] == -1) return 1;
			new dialog_Title[82], startpos = PI[playerid][P_CREW_DIALOG_PAGE] + (PI[playerid][P_CREW_DIALOG_PAGE] * 19) + 1;
			format(dialog_Title, 82, "{"ORANGE"}"SERVER_NAME" - {%x}%s {CFD600}(%d miembros)", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], CI[PI[playerid][P_CREW_SLOT]][C_NAME], CI[PI[playerid][P_CREW_SLOT]][C_MEMBERS]);
		
			new DBResult:Result, dialog[1280], name[24], lines;
			format(DB_Query, sizeof(DB_Query), "SELECT NAME, CREWR FROM USERS WHERE CREWI = '%d' ORDER BY CREWR * 1 DESC LIMIT 20 OFFSET %d", PI[playerid][P_CREW_ID], PI[playerid][P_CREW_DIALOG_PAGE] * 19);
			Result = db_query(Database, DB_Query);
			for(new i; i < db_num_rows(Result); i++ )
			{
				db_get_field(Result, 0, name, 24);
				format(dialog, sizeof dialog, "%s{DCDEA6}%d. %s {CFD600}(%s)\n", dialog, i + startpos, name, Crew_Ranks[db_get_field_int(Result, 1)]);
				lines ++;
				db_next_row(Result);
			}
			db_free_result(Result);
			
			strcat(dialog, "{C1FF63}Close dialogue");
			PI[playerid][P_TOP_CLOSE] = lines;
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, dialog_Title, dialog, ">>", "<<");
			return 1;
		}
		
		case DIALOG_CREW_EDIT_MEMBERS:
		{
			if(PI[playerid][P_CREW_SLOT] == -1) return 1;
			new dialog_Title[82], startpos = PI[playerid][P_CREW_DIALOG_PAGE] + (PI[playerid][P_CREW_DIALOG_PAGE] * 18) + 1;
			format(dialog_Title, 82, "{"ORANGE"}"SERVER_NAME" - {%x}%s {CFD600}(%d miembros)", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], CI[PI[playerid][P_CREW_SLOT]][C_NAME], CI[PI[playerid][P_CREW_SLOT]][C_MEMBERS]);
		
			new DBResult:Result, dialog[1280], name[24], players;
			format(DB_Query, sizeof(DB_Query), "SELECT ID, NAME, CREWR FROM USERS WHERE CREWI = '%d' ORDER BY CREWR * 1 DESC LIMIT 19 OFFSET %d", PI[playerid][P_CREW_ID], PI[playerid][P_CREW_DIALOG_PAGE] * 19);
			Result = db_query(Database, DB_Query);
			for(new i; i < db_num_rows(Result); i++ )
			{
				PI[playerid][P_CREW_DIALOG_PID][players++] = db_get_field_int(Result, 0);
				db_get_field(Result, 1, name, 24);
				format(dialog, sizeof dialog, "%s{DCDEA6}%d. %s {CFD600}(%s)\n", dialog, i + startpos, name, Crew_Ranks[db_get_field_int(Result, 2)]);
				db_next_row(Result);
			}
			db_free_result(Result);
			
			PI[playerid][P_CREW_DIALOG_PID][players] = 0;
			strcat(dialog, "{C1FF63}Next Page\n");
			players ++;
			PI[playerid][P_CREW_DIALOG_PID][players] = -1;
			strcat(dialog, "{C1FF63}Last page");
			
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST, dialog_Title, dialog, "Edit", "Atrs");
			return 1;
		}
		
		case DIALOG_CREW_EDIT_COLOR:
		{
			if(PI[playerid][P_CREW_SLOT] == -1) return 1;
			new dialog_Title[82];
			format(dialog_Title, 82, "{"ORANGE"}"SERVER_NAME" - {%x}%s {CFD600}(%d miembros)", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], CI[PI[playerid][P_CREW_SLOT]][C_NAME], CI[PI[playerid][P_CREW_SLOT]][C_MEMBERS]);
		
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, dialog_Title, 
			"{FF7A45}Default\n{CCFF00}Green lime\n{FFCC00}Gold orange\n{3AA0E8}Sky Blue\n{31D613}Green\n{C6D855}Yellow\n{ED0018}Red\n{FF36EE}Pink\n{FF00B3}Purple\n{EB99FF}Rose 2", ">>", "<<");
			return 1;
		}
		
		case DIALOG_SELECT_COLOR:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - Colors", DIALOG_SELECT_COLOR_String, ">>", "X");
			return 1;
		}
		
		case DIALOG_NPASS:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_PASSWORD, "{"ORANGE"}"SERVER_NAME" - Password", "Enter your current password:", ">>", "X");
			return 1;
		}
		
		case DIALOG_DUEL:
		{	
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - Location", DIALOG_DUEL_String, ">>", "X");
			return 1;
		}
		
		case DIALOG_DUEL_WEAPONS:
		{
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - Weapons", DIALOG_DUEL_WEAPONS_String, ">>", "<<");
			return 1;
		}
		
		case DIALOG_NEW_DUEL:
		{
			new dialog[300], d_id = PI[playerid][P_DUEL_ID];
			format(dialog, sizeof dialog, "DUEL PETITION: %s (%d)\n\nlugar: %s\nWeapon(s): %s\nBet: %d$\n\nNote: To block duel's requests, use the command /dls.", PI[ DLI[d_id][DL_PLAYER_ONE] ][P_NAME], DLI[d_id][DL_PLAYER_ONE], DUEL_LIST[ DLI[d_id][DL_DUEL_LIST_ID] ][DUEL_LIST_NAME], DUEL_WEAPONS[ DLI[d_id][DL_DUEL_WEAPON_ID] ][WEAPON_PACKNAME], DLI[d_id][DL_BET]);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "{"ORANGE"}"SERVER_NAME" - duel", dialog, "acceptinvite", "Decline");
			return 1;
		}
		
		/*case DIALOG_DNS:
		{
			new dialog[600], str[47];
			format(dialog, 300, "BANNED DNS:\n\n");
			for(new i = 0; i != sizeof BANNED_DNS; i++)
			{
				if(!isnull(BANNED_DNS[i]))
				{
					format(str, 47, "%s\n", BANNED_DNS[i]);
					strcat(dialog, str);
				}
			}
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_INPUT, "{"ORANGE"}"SERVER_NAME" - DNS Baneadas", dialog, "Cancelar", "Insertar");
			return 1;
		}*/
		
		case DIALOG_USER_PANEL:
		{
			new dialog[362];
			format
			(
				dialog, 
				362, 
				"{CCCCCC}Private messages (/pms)\t%s\n\
				{CCCCCC}Duel invitations (/dls)\t%s\n\
				{CCCCCC}Server music\t%s\n\
				{CCCCCC}Server sounds\t%s\n\
				{CCCCCC}TD Teleports Information\t%s\n\
				{CCCCCC}TD Legacy Freeroam\t%s", 
				( PI[playerid][P_PMS] == 0 ? ("{A7EB54}(Enabled)") : ("{D40808}(Disabled)") ), 
				( PI[playerid][P_IGNORE_DUELS] == 0 ? ("{A7EB54}(Enabled)") : ("{D40808}(Disabled)") ), 
				( PI[playerid][P_IGNORE_MUSIC] == 0 ? ("{A7EB54}(Enabled)") : ("{D40808}(Disabled)") ), 
				( PI[playerid][P_IGNORE_SOUNDS] == 0 ? ("{A7EB54}(Enabled)") : ("{D40808}(Disabled)") ),
				( PI[playerid][P_IGNORE_TPTD] == 0 ? ("{A7EB54}(Enabled)") : ("{D40808}(Disabled)") ),
				( PI[playerid][P_IGNORE_LSRTD] == 0 ? ("{A7EB54}(Enabled)") : ("{D40808}(Disabled)") )
			);
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_TABLIST, "{"ORANGE"}"SERVER_NAME" - User panel", dialog, "Change", "X");
			return 1;
		}
	}
	return 1;
}


public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	switch(dialogid)
	{
		
		/*case DIALOG_DNS:
		{
			if(!response)
			{
				if(isnull(inputtext)) return SendClientMessage(playerid, -1, "Error: No introduciste nada.");
				AddDNS(inputtext);
				UpdateDNS();
				SendClientMessage(playerid, -1, "DNS aadida a la lista negra.");
			}
			return 1;
		}*/
		
		case DIALOG_HELP1:
		{
			if(!response) ShowDialog(playerid, DIALOG_HELP2);
			return 1;
		}
		case DIALOG_HELP2:
		{
			if(response) ShowDialog(playerid, DIALOG_HELP1);
			else ShowDialog(playerid, DIALOG_HELP3);
			return 1;
		}
		case DIALOG_HELP3:
		{
			if(response) ShowDialog(playerid, DIALOG_HELP2);
			return 1;
		}
		
		case DIALOG_LOGIN:
    	{
	        if(response)
	        {
				if(udb_hash(inputtext) == PI[playerid][P_PASS])
				{
					SendClientMessageEx(-1, -1, "{B0E66A}%s {CCCCCC}has entered the server", PI[playerid][P_NAME]);
					LoadPlayerData(playerid);
						
					if(PI[playerid][P_VIP])
					{
						if(gettime() >= PI[playerid][P_VIPTIME])
						{
							SendClientMessage(playerid, -1, "{C6D855}Your VIP membership has expired.");
							PI[playerid][P_VIP] = false;
							PI[playerid][P_VIPTIME] = 0;
							PI[playerid][P_CHATCOLOR] = 0xCCCCCC;
						}
						else
						{
							new d, h, m, s;
							TimeConvertEx((PI[playerid][P_VIPTIME] - gettime()), d, h, m, s);
							s = 0;
							new message[128], str[12];
							message = "{C6D855}VipTimer Left ";
							if(d != 0)
							{
								format(str, 12, "%d Day, ", d);
								strcat(message, str);
							}
							if(h != 0)
							{
								format(str, 12, "%d hours ", h);
								strcat(message, str);
							}
							if(m != 0)
							{
								format(str, 12, "%d minutes", m);
								strcat(message, str);
							}
							strcat(message, " VIP membership.");
							
							SendClientMessage(playerid, -1, message);
							
							PI[playerid][P_VIP_LABEL] = CreateDynamic3DTextLabel("VIP user", 0xFFCC00AA, 0.0, 0.0, 0.3, 10.0, playerid);
						}
					}
					if(PI[playerid][P_CREW_ID] != 0)
					{
						PI[playerid][P_CREW_SLOT] = GetCrewSlotById(PI[playerid][P_CREW_ID]);
						new label[24]; format(label, 24, "{%x}%s Crew", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], CI[PI[playerid][P_CREW_SLOT]][C_NAME]);
						PI[playerid][P_CREW_LABEL] = CreateDynamic3DTextLabel(label, 0xFFFFFFAA, 0.0, 0.0, 0.4, 10.0, playerid);
					}
					if(PI[playerid][P_SAVED_SKIN] != 0) SetPlayerSkin(playerid, PI[playerid][P_SAVED_SKIN]);
					if(PI[playerid][P_IGNORE_MUSIC]) StopAudioStreamForPlayer(playerid);
					
					new connection[94];
					format(connection, sizeof(connection), "UPDATE USERS SET CONNECTED = '1', PLAYERID = '%d' WHERE NAME = '%s'", playerid, PI[playerid][P_NAME]);
					db_query(Database, connection);
					
					PI[playerid][P_LOGGED] = true;
					if(PI[playerid][P_HOUSES] > 0) CreatePlayerHouseIcons(playerid, true);
					if(PI[playerid][P_VEHICLES] > 0) PreLoadPlayerCars(playerid);
					GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~n~~g~~h~~h~correct password", 3000, 6);
					ApplyAnimation(playerid, "ON_LOOKERS", "shout_02", 4.1, true, true, true, true, 0); //encourage
					return 1;
				}
				else
				{
					GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~_~n~~r~~h~Incorrect password", 3000, 6);
					PlayerPlaySoundEx(playerid, 1085, 0.0, 0.0, 0.0);
					ShowDialog(playerid, DIALOG_LOGIN);
					return 1;
				}
	        }
			else Kick(playerid);
	        return 1;
    	}
		
		case DIALOG_REGISTER:
		{
			if(response)
			{
				if(!strlen(inputtext))
            	{
            	    ShowDialog(playerid, DIALOG_REGISTER);
					return 1;
            	}
				if(strlen(inputtext) <= 2 || strlen(inputtext) >= 16)
				{
				    ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "{"ORANGE"}"SERVER_NAME" - Record",
					"The password must have 3 characters.", ">>", "X");
				    return 1;
				}
				PI[playerid][P_PASS] = udb_hash(inputtext);
				
				NewUserRegister(playerid);
				UpdateUserData(playerid);
				PI[playerid][P_LOGGED] = true;
				PI[playerid][P_USEREXIT] = true;
                PlayerPlaySoundEx(playerid, 1058, 0.0, 0.0, 0.0);
                GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~~y~~h~registrado correctamente", 3000, 6);
				
				SendClientMessage(playerid, -1, "Thanks for registering, you have received $5.000 y 1.000 score.");
				SendClientMessage(playerid, -1, "Use the command /stats To see your statistics y /panel To configure your account.");
				GivePlayerMoneyEx(playerid, 5000);
				GivePlayerScoreEx(playerid, 1000);
				
			}
			return 1;
		}
		
		case DIALOG_TELEPORTS:
		{
			if(response)
			{
				if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
				new dialog[1500], line[55], count;
				for(new i = 0; i != sizeof(TI); i++)
				{
					if(TI[i][TP_Type] == listitem)
					{
						PI[playerid][P_DIALOG_TP][count] = i;
						format(line, sizeof(line), "{"ORANGE"}%s (%s)\n", TI[i][TP_Name], TI[i][TP_Command]);
						strcat(dialog, line);
						count ++;
					}
				}
				ShowPlayerDialog(playerid, DIALOG_TELEPORTS_LIST, DIALOG_STYLE_LIST, "{"ORANGE"}"SERVER_NAME" - Teleportation", dialog, ">>", "<<");
			}
			return 1;
		}
		
		case DIALOG_TELEPORTS_LIST:
		{
			if(response)
			{
				if(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
				new index = PI[playerid][P_DIALOG_TP][listitem];
				SetPlayerPosEx(playerid, TI[index][TP_X], TI[index][TP_Y], TI[index][TP_Z], TI[index][TP_Angle], TI[index][TP_Interior], TI[index][TP_VirtualWorld], TI[index][TP_Freeze], TI[index][TP_AllowCarTP], TI[index][TP_CarModelid]);
				SetCameraBehindPlayer(playerid);
				GameTextForPlayer(playerid, TI[index][TP_Name], 3000, 6);
				
				new str[80]; format(str, sizeof str, "~n~~g~~h~_%s~b~~h~_fue_a~p~_%s~n~_", PI[playerid][P_NAME], TI[index][TP_Command]);
				ShowTextDrawInfo(3000, str);
			}
			else ShowDialog(playerid, DIALOG_TELEPORTS);
			return 1;
		}
		
		case DIALOG_SOCIAL_MUSIC:
		{
			if(response) 
			{
				/*if(listitem == 0) StopAudioStreamForPlayer(playerid);
				else PlayAudioStreamForPlayer(playerid, RandomMusic[listitem-1][1]);*/
				switch(listitem)
				{
					case 0:
					{
						if(!PI[playerid][P_USEREXIT])
						{
							SendClientMessage(playerid, -1, "{999999}You must be registered to see this.");
							ShowDialog(playerid, dialogid);
							return 1;
						}
						PI[playerid][P_MUSIC_PAGE] = 0;
						ShowDialog(playerid, DIALOG_SOCIAL_MY);
					}
					case 1:
					{
						PI[playerid][P_MUSIC_PAGE] = 0;
						ShowDialog(playerid, DIALOG_SOCIAL_BEST);
					}
					case 2:
					{
						if(!PI[playerid][P_USEREXIT])
						{
							SendClientMessage(playerid, -1, "{999999}You must be registered to see this.");
							ShowDialog(playerid, dialogid);
							return 1;
						}
						PI[playerid][P_MUSIC_PAGE] = 0;
						ShowDialog(playerid, DIALOG_SOCIAL_MY_BEST);
					}
					case 3:
					{
						if(!PI[playerid][P_USEREXIT]) return SendClientMessage(playerid, -1, "{999999}You must be registered to add a song.");
						format(PI[playerid][P_MUSIC_TITLE], 32, "");
						format(PI[playerid][P_MUSIC_URL], 128, "");
						PI[playerid][P_MUSIC_TYPE] = 0;
						ShowDialog(playerid, DIALOG_SOCIAL_ADD);
					}
					case 4:
					{
						if(!PI[playerid][P_USEREXIT]) return SendClientMessage(playerid, -1, "{999999}You must be registered to add a song.");
						if(gettime() < PI[playerid][P_MUSIC_YTSEARCH_AF] + 10)
						{
							SendClientMessage(playerid, -1, "{999999}You must wait 10 seconds to perform another Bsqueda.");
							return 1;
						}
						format(PI[playerid][P_MUSIC_TITLE], 32, "");
						format(PI[playerid][P_MUSIC_URL], 128, "");
						PI[playerid][P_MUSIC_TYPE] = 0;
						ShowDialog(playerid, DIALOG_SOCIAL_SEARCH_YT);
					}
				}
			}
			return 1;
		}
		
		case DIALOG_SOCIAL_ADD:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowDialog(playerid, DIALOG_SOCIAL_ADD + 1);
					case 1: ShowDialog(playerid, DIALOG_SOCIAL_ADD + 2);
					case 2:
					{
						if(PI[playerid][P_MUSIC_TYPE] == 0) PI[playerid][P_MUSIC_TYPE] = 1;
						else PI[playerid][P_MUSIC_TYPE] = 0;
						ShowDialog(playerid, DIALOG_SOCIAL_ADD);
					}
					case 3:
					{
						if(isnull(PI[playerid][P_MUSIC_TITLE]) || isnull(PI[playerid][P_MUSIC_URL])) 
						{
							SendClientMessage(playerid, -1, "{999999}Please fill out the data to insert the song.");
							ShowDialog(playerid, dialogid);
							return 1;
						}
						
						new DBResult:Result, song_id;
						format(DB_Query, sizeof(DB_Query), 
							"INSERT INTO MUSIC (TITLE, URL, OWNERID, OWNER, PRIVATE) VALUES ('%s','%s','%d','%s','%d');\
							SELECT LAST_INSERT_ROWID() FROM MUSIC", 
						PI[playerid][P_MUSIC_TITLE], PI[playerid][P_MUSIC_URL], PI[playerid][P_ID], PI[playerid][P_NAME], PI[playerid][P_MUSIC_TYPE]);
						
						Result = db_query(Database, DB_Query);
						
						if(db_num_rows(Result)) song_id = db_get_field_int(Result, 0);
						db_free_result(Result);
	
						SendClientMessageEx(playerid, -1, "{CCCCCC}Song {90C3D4}'%s' {CCFF00}(/play %d) {CCCCCC}going, You can edit it from my published songs.", PI[playerid][P_MUSIC_TITLE], song_id);
						//SendClientMessageEx(playerid, -1, "{CCCCCC}use {CCFF00}/play %d {CCCCCC}para reproducir la cancin que acabas de aadir.", song_id);
						//ShowDialog(playerid, DIALOG_SOCIAL_MUSIC);
					}
					case 4:
					{
						PlayAudioStreamForPlayer(playerid, PI[playerid][P_MUSIC_URL]);
						
						new url[32];
						format(url, 32, "%s", PI[playerid][P_MUSIC_URL]);
						strdel(url, strlen(url) - 3, strlen(url));
						strins(url, "...", strlen(url));
						
						SendClientMessageEx(playerid, -1, "{CCCCCC}Reproducing {90C3D4}'%s (%s)'", PI[playerid][P_MUSIC_TITLE], url);
						ShowDialog(playerid, DIALOG_SOCIAL_ADD);
					}
				}
			}
			else ShowDialog(playerid, DIALOG_SOCIAL_MUSIC);
			return 1;
		}
		
		case DIALOG_SOCIAL_ADD + 1:
		{
			if(response)
			{
				if(isnull(inputtext)) return ShowDialog(playerid, DIALOG_SOCIAL_ADD + 1);
				if(strlen(inputtext) > 32) return ShowDialog(playerid, DIALOG_SOCIAL_ADD + 1);
				format(PI[playerid][P_MUSIC_TITLE], 32, "%s", inputtext);
				
				for(new i = strlen(PI[playerid][P_MUSIC_TITLE]); i != 0; i --)
				{
					if(PI[playerid][P_MUSIC_TITLE][i] == 10) // New line prevention
					{
						SendClientMessage(playerid, -1, "{CCCCCC}Something did not introduce well, please try again.");
						ShowDialog(playerid, DIALOG_SOCIAL_ADD + 1);
						return 1;
					}
				}
				
				//ShowDialog(playerid, DIALOG_SOCIAL_ADD_AUTO);
				ShowDialog(playerid, DIALOG_SOCIAL_ADD);
				return 1;
			}
			ShowDialog(playerid, DIALOG_SOCIAL_ADD);
			return 1;
		}
		
		case DIALOG_SOCIAL_ADD_AUTO:
		{
			if(response) format(PI[playerid][P_MUSIC_URL], 128, "http://6t.pe?song=%s", PI[playerid][P_MUSIC_TITLE]);
			ShowDialog(playerid, DIALOG_SOCIAL_ADD);
			return 1;
		}
		
		case DIALOG_SOCIAL_SEARCH_YT:
		{
			if(response)
			{
				if(isnull(inputtext)) return ShowDialog(playerid, dialogid);
				PI[playerid][P_MUSIC_YTSEARCH_AF] = gettime();
				TextDrawShowForPlayer(playerid, TD_MUSIC_YT[0]);
				TextDrawShowForPlayer(playerid, TD_MUSIC_YT[1]);
				
				new title[100 + 1];
				title = SpaceFix(inputtext);
				new str[180]; format(str, sizeof str, "private %s", title);
				HTTP(playerid, HTTP_GET, str, "", "LSR_youtube");
			}
			else ShowDialog(playerid, DIALOG_SOCIAL_MUSIC);
			return 1;
		}
		
		case DIALOG_MUSIC_RESULTS:
		{
			if(response)
			{
				format(PI[playerid][P_MUSIC_TITLE], 32, "%s", playerdialog_video[playerid][listitem][yt_title]);
				format(PI[playerid][P_MUSIC_URL], 128, "http://www.youtubeinmp3.com/fetch/?video=http://www.youtube.com/watch?v=%s", playerdialog_video[playerid][listitem][videoID]);
				ShowDialog(playerid, DIALOG_SOCIAL_ADD);
			}
			return 1;
		}
		
		case DIALOG_SOCIAL_ADD + 2:
		{
			if(response)
			{
				if(isnull(inputtext)) return ShowDialog(playerid, DIALOG_SOCIAL_ADD + 2);
				if(strlen(inputtext) > 128) return ShowDialog(playerid, DIALOG_SOCIAL_ADD + 1);
				format(PI[playerid][P_MUSIC_URL], 128, "%s", inputtext);
			}
			ShowDialog(playerid, DIALOG_SOCIAL_ADD);
			return 1;
		}
		
		case DIALOG_SOCIAL_MY:
		{
			if(response)
			{
				if(PI[playerid][P_MUSIC_ID][listitem] == 0) // >>
				{
					if(PI[playerid][P_MUSIC_PAGE] >= GetUserMusicPages(playerid) - 1) PI[playerid][P_MUSIC_PAGE] = 0;
					else PI[playerid][P_MUSIC_PAGE] ++;
					ShowDialog(playerid, DIALOG_SOCIAL_MY);
					return 1;
				}
				else if(PI[playerid][P_MUSIC_ID][listitem] == -1) // <<
				{
					if(PI[playerid][P_MUSIC_PAGE] <= 0) PI[playerid][P_MUSIC_PAGE] = GetUserMusicPages(playerid) - 1;
					else PI[playerid][P_MUSIC_PAGE] --;
					ShowDialog(playerid, DIALOG_SOCIAL_MY);
					return 1;
				}
				else
				{
					PI[playerid][P_MUSIC_SELECTED] = PI[playerid][P_MUSIC_ID][listitem];
					ShowDialog(playerid, DIALOG_SOCIAL_MY + 1);
					return 1;
				}
			}
			else ShowDialog(playerid, DIALOG_SOCIAL_MUSIC);
			return 1;
		}
		
		case DIALOG_SOCIAL_MY_BEST:
		{
			if(response)
			{
				if(PI[playerid][P_MUSIC_ID][listitem] == 0) // >>
				{
					if(PI[playerid][P_MUSIC_PAGE] >= GetPlayerFavMusicPages(playerid) - 1) PI[playerid][P_MUSIC_PAGE] = 0;
					else PI[playerid][P_MUSIC_PAGE] ++;
					ShowDialog(playerid, DIALOG_SOCIAL_MY_BEST);
					return 1;
				}
				else if(PI[playerid][P_MUSIC_ID][listitem] == -1) // <<
				{
					if(PI[playerid][P_MUSIC_PAGE] <= 0) PI[playerid][P_MUSIC_PAGE] = GetPlayerFavMusicPages(playerid) - 1;
					else PI[playerid][P_MUSIC_PAGE] --;
					ShowDialog(playerid, DIALOG_SOCIAL_MY_BEST);
					return 1;
				}
				else
				{
					PI[playerid][P_MUSIC_SELECTED] = PI[playerid][P_MUSIC_ID][listitem];
					PlaySocialSong(playerid, PI[playerid][P_MUSIC_SELECTED]);
					return 1;
				}
			}
			else ShowDialog(playerid, DIALOG_SOCIAL_MUSIC);
			return 1;
		}
		
		case DIALOG_SOCIAL_MY + 1:
		{
			if(!response) return ShowDialog(playerid, DIALOG_SOCIAL_MY);
			
			if(listitem == 0) PlaySocialSong(playerid, PI[playerid][P_MUSIC_SELECTED]);
			else if(listitem == 1)
			{
				DeleteSocialSong(PI[playerid][P_MUSIC_SELECTED]);
				SendClientMessage(playerid, -1, "{CCCCCC}Eliminated song.");
			}
			return 1;
		}
		
		case DIALOG_SOCIAL_BEST:
		{
			if(!response) return ShowDialog(playerid, DIALOG_SOCIAL_MUSIC);
			
			if(response)
			{
				if(PI[playerid][P_MUSIC_ID][listitem] == 0) // >>
				{
					if(PI[playerid][P_MUSIC_PAGE] >= GetMusicPages() - 1) PI[playerid][P_MUSIC_PAGE] = 0;
					else PI[playerid][P_MUSIC_PAGE] ++;
					ShowDialog(playerid, DIALOG_SOCIAL_BEST);
					return 1;
				}
				else if(PI[playerid][P_MUSIC_ID][listitem] == -1) // <<
				{
					if(PI[playerid][P_MUSIC_PAGE] <= 0) PI[playerid][P_MUSIC_PAGE] = GetMusicPages() - 1;
					else PI[playerid][P_MUSIC_PAGE] --;
					ShowDialog(playerid, DIALOG_SOCIAL_BEST);
					return 1;
				}
				else
				{
					PlaySocialSong(playerid, PI[playerid][P_MUSIC_ID][listitem]);
					return 1;
				}
			}
			return 1;
		}
		
		case DIALOG_RADIO:
		{
			if(response) 
			{
				if(listitem == 0) StopAudioStreamForPlayer(playerid);
				else PlayAudioStreamForPlayer(playerid, Radios[listitem-1][1]);
			}
			return 1;
		}
		
		case DIALOG_VEHICLES:
		{
		    if(response)
		    {
				if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
		        switch(listitem)
		        {
					case 0: ShowPlayerDialog(playerid, DIALOG_VEHICLES+1, DIALOG_STYLE_LIST, "{267F00}Sports cars !", "{0094FF}Alpha\n{0094FF}Banshee\n{0094FF}Buffalo\n{0094FF}Bullet\n{0094FF}Cheetah\n{0094FF}Phoenix\n{0094FF}LEGACY GT\n{0094FF}Infernus\n{0094FF}Turismo\n{0094FF}ZR-350", ">>", "X");
					case 1: ShowPlayerDialog(playerid, DIALOG_VEHICLES+2, DIALOG_STYLE_LIST, "{267F00}Autos - Tunisable and elegant !", "{0094FF}Elegy{FF0000} [Drifting]\n{0094FF}Sultan\n{0094FF}Blade\n{0094FF}Savanna\n{0094FF}Slamvan\n{0094FF}Remington\n{0094FF}Jester\n{0094FF}Uranus\n{0094FF}Sabre\n{0094FF}Flash", ">>", "X");
					case 2: ShowPlayerDialog(playerid, DIALOG_VEHICLES+3, DIALOG_STYLE_LIST, "{267F00} Motorcycles and bicycles !", "{0094FF}Bike\n{0094FF}BMX\n{0094FF}Mountain Bike\n{0094FF}Faggio\n{0094FF}Pizzaboy\n{0094FF}BF-400\n{0094FF}NRG-500{FF0000} [Recommended]\n{0094FF}PCJ-600\n{0094FF}FCR-900\n{0094FF}Freeway\n{0094FF}Wayfarer\n{0094FF}Sanchez\n{0094FF}Quad", ">>", "X");
					case 3: ShowPlayerDialog(playerid, DIALOG_VEHICLES+4, DIALOG_STYLE_LIST, "{267F00} All terrain !", "{0094FF}Bandito\n{0094FF}BF Injection\n{0094FF}Dune\n{0094FF}Huntley\n{0094FF}Landstalker\n{0094FF}Mesa\n{0094FF}Monster\n{0094FF}Moster A\n{0094FF}Monster B\n{0094FF}Patriot\n{0094FF}Rancher\n{0094FF}Sandking", ">>", "X");
					case 4: ShowPlayerDialog(playerid, DIALOG_VEHICLES+5, DIALOG_STYLE_LIST, "{267F00} Planes !", "{0094FF}Andromada\n{0094FF}AT-400\n{0094FF}Beagle\n{0094FF}Cropduster\n{0094FF}Dodo\n{0094FF}Nevada\n{0094FF}Rustler\n{0094FF}Shamal\n{0094FF}Skimmer\n{0094FF}Stunt Plane", ">>", "X");
					case 5: ShowPlayerDialog(playerid, DIALOG_VEHICLES+6, DIALOG_STYLE_LIST, "{267F00} Helicopteros !", "{0094FF}Cargobob\n{0094FF}Leviathan\n{0094FF}Maverick\n{0094FF}Heli Noticiario\n{0094FF}Heli Polica\n{0094FF}Raindance\n{0094FF}Seasparrow {FF0000}[Deshabilitado]\n{0094FF}Sparrow {FF0000}[Deshabilitado]", ">>", "X");
					case 6: ShowPlayerDialog(playerid, DIALOG_VEHICLES+7, DIALOG_STYLE_LIST, "{267F00} Aquatic/ships/boats !", "{0094FF}Guarda costas\n{0094FF}Dinghy\n{0094FF}Jetmax\n{0094FF}Launch\n{0094FF}Marquis\n{0094FF}Predator\n{0094FF}Reefer\n{0094FF}Speeder\n{0094FF}Squallo\n{0094FF}Tropip", ">>", "X");
					case 7: ShowPlayerDialog(playerid, DIALOG_VEHICLES+8, DIALOG_STYLE_LIST, "{267F00}Public service !", "{0094FF}Ambulancia\n{0094FF}Barracks\n{0094FF}Bus\n{0094FF}Cabbie\n{0094FF}Coach\n{0094FF}Moto de polica\n{0094FF}Enforcer\n{0094FF}FBI Rancher\n{0094FF}Camioneta FBI\n{0094FF}Camin de FIREFIGHTERs\n{0094FF}Camin de FIREFIGHTERs escalera\n{0094FF}LSPD\n{0094FF}SFPD\n{0094FF}LVPD\n{0094FF}Ranger\n{0094FF}Rihno {FF0000}[Admin]\n{0094FF}SWAT\n{0094FF}Taxi", ">>", "X");
					case 8: ShowPlayerDialog(playerid, DIALOG_VEHICLES+9, DIALOG_STYLE_LIST, "{267F00}Industriales !", "{0094FF}Benson\n{0094FF}Bobcat\n{0094FF}Burrito\n{0094FF}Boxville\n{0094FF}Boxburg\n{0094FF}Mule\n{0094FF}Noticiario\n{0094FF}Picador\n{0094FF}Pony\n{0094FF}Rumpo\n{0094FF}Sadler\n{0094FF}Topfun\n{0094FF}Tractor\n{0094FF}Utility\n{0094FF}Yankee\n{0094FF}Yosemite", ">>", "X");
					case 9: ShowPlayerDialog(playerid, DIALOG_VEHICLES+10, DIALOG_STYLE_LIST, "{267F00}Saloon", "{0094FF}Admiral\n{0094FF}Bloodring Banger\n{0094FF}Bravura\n{0094FF}Buccaner\n{0094FF}Cadrona\n{0094FF}Clover\n{0094FF}Elegant\n{0094FF}Emperor\n{0094FF}Glendale\n{0094FF}Hermes\n{0094FF}Intruder\n{0094FF}Majestic\n{0094FF}Manana\n{0094FF}Merit\n{0094FF}Nebula\n{0094FF}Premier\n{0094FF}Oceanic\n{0094FF}Primo\n{0094FF}Previon\n{0094FF}Stafford\n{0094FF}Vicent\n{0094FF}Virgo\n{0094FF}Washington", ">>", "X");
					case 10: ShowPlayerDialog(playerid, DIALOG_VEHICLES+11, DIALOG_STYLE_LIST, "{267F00} TRucks and derivatives !", "{0094FF}Cement truck\n{0094FF}DFT-30\n{0094FF}Flatbed\n{0094FF}Linerunner\n{0094FF}Packer\n{0094FF}Petrol Tank\n{0094FF}Roadtrain", ">>", "X");
					case 11:
					{
						ShowPlayerDialog(playerid, DIALOG_VEHICLES+12, DIALOG_STYLE_LIST, "{267F00} Loads !", "{0094FF}Loading of articles 1\n{0094FF}Sand load\n{0094FF}ARTICLES 2 LOAD\n{0094FF}Gasoline load\n{0094FF}Train load\n{0094FF}Train\n{0094FF}Train load 2\n{0094FF}Baggage A\n{0094FF}Baggage B\n{0094FF}Stairs\n{0094FF}Farm\n{0094FF}Utility load", ">>", "X");
					}
					case 12:
					{
						ShowPlayerDialog(playerid, DIALOG_VEHICLES+13, DIALOG_STYLE_LIST, "{267F00} Unique vehicles!", "{0094FF}Baggage\n{0094FF}Tren\n{0094FF}Caddy\n{0094FF}Camper 1\n{0094FF}Camper 2\n{0094FF}Combine Harvester\n{0094FF}Dozer\n{0094FF}Dumper\n{0094FF}Forklift\n{0094FF}Tren 2\n{0094FF}Hotknife\n{0094FF}Hustler\n{0094FF}Hotdog\n{0094FF}Kart\n{0094FF}Mower\n{0094FF}Ice cream walk\n{0094FF}Romero\n{0094FF}Securicate\n{0094FF}Stretch\n{0094FF}Sweeper\n{0094FF}Tram\n{0094FF}Tug\n{0094FF}Vortex", ">>", "X");
					}
					case 13: ShowPlayerDialog(playerid, DIALOG_VEHICLES+14, DIALOG_STYLE_LIST, "{267F00} RC vehicles !", "{0094FF}RC Bandit\n{0094FF}RC Baron {FF0000}[Deshabilitado]\n{0094FF}RC Raider\n{0094FF}RC Goblin\n{0094FF}RC Tiger\n{0094FF}RC Cam", ">>", "X");
				}
		    }
			return 1;
		}
		
		case DIALOG_VEHICLES+1:
		{
		    if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			switch(listitem)
			{
				case 0: SpawnCarForPlayer(playerid, 602);
				case 1: SpawnCarForPlayer(playerid, 429);
				case 2: SpawnCarForPlayer(playerid, 402);
				case 3: SpawnCarForPlayer(playerid, 541);
				case 4: SpawnCarForPlayer(playerid, 415);
				case 5: SpawnCarForPlayer(playerid, 603);
				case 6: SpawnCarForPlayer(playerid, 506);
				case 7: SpawnCarForPlayer(playerid, 411);
				case 8: SpawnCarForPlayer(playerid, 451);
				case 9: SpawnCarForPlayer(playerid, 477);
			}
			return 1;
		}

		case DIALOG_VEHICLES+2:
		{
		    if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			switch(listitem)
			{
				case 0: SpawnCarForPlayer(playerid, 562);
				case 1: SpawnCarForPlayer(playerid, 560);
				case 2: SpawnCarForPlayer(playerid, 536);
				case 3: SpawnCarForPlayer(playerid, 567);
				case 4: SpawnCarForPlayer(playerid, 535);
				case 5: SpawnCarForPlayer(playerid, 534);
				case 6: SpawnCarForPlayer(playerid, 559);
				case 7: SpawnCarForPlayer(playerid, 558);
				case 8: SpawnCarForPlayer(playerid, 475);
				case 9: SpawnCarForPlayer(playerid, 565);
			}
			return 1;
		}

		case DIALOG_VEHICLES+3:
		{
		    if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			switch(listitem)
			{
				case 0: SpawnCarForPlayer(playerid, 509);
				case 1: SpawnCarForPlayer(playerid, 481);
				case 2: SpawnCarForPlayer(playerid, 510);
				case 3: SpawnCarForPlayer(playerid, 462);
				case 4: SpawnCarForPlayer(playerid, 448);
				case 5: SpawnCarForPlayer(playerid, 581);
				case 6: SpawnCarForPlayer(playerid, 522);
				case 7: SpawnCarForPlayer(playerid, 461);
				case 8: SpawnCarForPlayer(playerid, 521);
				case 9: SpawnCarForPlayer(playerid, 463);
				case 10: SpawnCarForPlayer(playerid, 586);
				case 11: SpawnCarForPlayer(playerid, 468);
				case 12: SpawnCarForPlayer(playerid, 471);
			}
			return 1;
		}

		case DIALOG_VEHICLES+4:
		{
		    if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			switch(listitem)
			{
				case 0: SpawnCarForPlayer(playerid, 568);
				case 1: SpawnCarForPlayer(playerid, 424);
				case 2: SpawnCarForPlayer(playerid, 573);
				case 3: SpawnCarForPlayer(playerid, 579);
				case 4: SpawnCarForPlayer(playerid, 400);
				case 5: SpawnCarForPlayer(playerid, 500);
				case 6: SpawnCarForPlayer(playerid, 444);
				case 7: SpawnCarForPlayer(playerid, 556);
				case 8: SpawnCarForPlayer(playerid, 557);
				case 9: SpawnCarForPlayer(playerid, 470);
				case 10: SpawnCarForPlayer(playerid, 489);
				case 11: SpawnCarForPlayer(playerid, 495);
			}
			return 1;
		}

		case DIALOG_VEHICLES+5:
		{
		    if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			switch(listitem)
			{
				case 0: SpawnCarForPlayer(playerid, 592);
				case 1: SpawnCarForPlayer(playerid, 577);
				case 2: SpawnCarForPlayer(playerid, 511);
				case 3: SpawnCarForPlayer(playerid, 512);
				case 4: SpawnCarForPlayer(playerid, 593);
				case 6: SpawnCarForPlayer(playerid, 553);
				case 7: SpawnCarForPlayer(playerid, 476);
				case 8: SpawnCarForPlayer(playerid, 519);
				case 9: SpawnCarForPlayer(playerid, 460);
				case 10: SpawnCarForPlayer(playerid, 513);
			}
			return 1;
		}

		case DIALOG_VEHICLES+6:
		{
		    if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			switch(listitem)
			{
				case 0: SpawnCarForPlayer(playerid, 548);
				case 1: SpawnCarForPlayer(playerid, 417);
				case 2: SpawnCarForPlayer(playerid, 487);
				case 3: SpawnCarForPlayer(playerid, 488);
				case 4: SpawnCarForPlayer(playerid, 497);
				case 5: SpawnCarForPlayer(playerid, 563);
				//case 6: SpawnCarForPlayer(playerid, 447);
				//case 7: SpawnCarForPlayer(playerid, 469);
			}
			return 1;
		}

		case DIALOG_VEHICLES+7:
		{
		    if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			switch(listitem)
			{
				case 0: SpawnCarForPlayer(playerid, 472);
				case 1: SpawnCarForPlayer(playerid, 473);
				case 2: SpawnCarForPlayer(playerid, 493);
				case 3: SpawnCarForPlayer(playerid, 595);
				case 4: SpawnCarForPlayer(playerid, 484);
				case 5: SpawnCarForPlayer(playerid, 430);
				case 6: SpawnCarForPlayer(playerid, 453);
				case 7: SpawnCarForPlayer(playerid, 452);
				case 8: SpawnCarForPlayer(playerid, 446);
				case 9: SpawnCarForPlayer(playerid, 454);
			}
			return 1;
		}

		case DIALOG_VEHICLES+8:
		{
		    if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			switch(listitem)
			{
				case 0: SpawnCarForPlayer(playerid, 416);
				case 1: SpawnCarForPlayer(playerid, 433);
				case 2: SpawnCarForPlayer(playerid, 431);
				case 3: SpawnCarForPlayer(playerid, 438);
				case 4: SpawnCarForPlayer(playerid, 437);
				case 5: SpawnCarForPlayer(playerid, 523);
				case 6: SpawnCarForPlayer(playerid, 427);
				case 7: SpawnCarForPlayer(playerid, 490);
				case 8: SpawnCarForPlayer(playerid, 528);
				case 9: SpawnCarForPlayer(playerid, 407);
				case 10: SpawnCarForPlayer(playerid, 544);
				case 11: SpawnCarForPlayer(playerid, 596);
				case 12: SpawnCarForPlayer(playerid, 597);
				case 13: SpawnCarForPlayer(playerid, 598);
				case 14: SpawnCarForPlayer(playerid, 599);
				case 15:
				{
				    if(IsPlayerAdmin(playerid)) SpawnCarForPlayer(playerid, 432);
				}
				case 16: SpawnCarForPlayer(playerid, 601);
				case 17: SpawnCarForPlayer(playerid, 420);
			}
			return 1;
		}

		case DIALOG_VEHICLES+9:
		{
		    if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			switch(listitem)
			{
				case 0: SpawnCarForPlayer(playerid, 499);
				case 1: SpawnCarForPlayer(playerid, 422);
				case 2: SpawnCarForPlayer(playerid, 482);
				case 3: SpawnCarForPlayer(playerid, 498);
				case 4: SpawnCarForPlayer(playerid, 609);
				case 5: SpawnCarForPlayer(playerid, 414);
				case 6: SpawnCarForPlayer(playerid, 582);
				case 7: SpawnCarForPlayer(playerid, 600);
				case 8: SpawnCarForPlayer(playerid, 413);
				case 9: SpawnCarForPlayer(playerid, 440);
				case 10: SpawnCarForPlayer(playerid, 543);
				case 11: SpawnCarForPlayer(playerid, 605);
				case 12: SpawnCarForPlayer(playerid, 531);
				case 13: SpawnCarForPlayer(playerid, 552);
				case 14: SpawnCarForPlayer(playerid, 456);
				case 15: SpawnCarForPlayer(playerid, 554);
			}
			return 1;
		}

		case DIALOG_VEHICLES+10:
		{
		    if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			switch(listitem)
			{
				case 0: SpawnCarForPlayer(playerid, 445);
				case 1: SpawnCarForPlayer(playerid, 504);
				case 2: SpawnCarForPlayer(playerid, 401);
				case 3: SpawnCarForPlayer(playerid, 518);
				case 4: SpawnCarForPlayer(playerid, 527);
				case 5: SpawnCarForPlayer(playerid, 542);
				case 6: SpawnCarForPlayer(playerid, 507);
				case 7: SpawnCarForPlayer(playerid, 585);
				case 8: SpawnCarForPlayer(playerid, 466);
				case 9: SpawnCarForPlayer(playerid, 474);
				case 10: SpawnCarForPlayer(playerid, 546);
				case 11: SpawnCarForPlayer(playerid, 517);
				case 12: SpawnCarForPlayer(playerid, 410);
				case 13: SpawnCarForPlayer(playerid, 551);
				case 14: SpawnCarForPlayer(playerid, 516);
				case 15: SpawnCarForPlayer(playerid, 426);
				case 16: SpawnCarForPlayer(playerid, 467);
				case 17: SpawnCarForPlayer(playerid, 547);
				case 18: SpawnCarForPlayer(playerid, 436);
				case 19: SpawnCarForPlayer(playerid, 580);
				case 20: SpawnCarForPlayer(playerid, 540);
				case 21: SpawnCarForPlayer(playerid, 491);
				case 22: SpawnCarForPlayer(playerid, 421);
			}
			return 1;
		}

		case DIALOG_VEHICLES+11:
		{
		    if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			switch(listitem)
			{
				case 0: SpawnCarForPlayer(playerid, 524);
				case 1: SpawnCarForPlayer(playerid, 578);
				case 2: SpawnCarForPlayer(playerid, 455);
				case 3: SpawnCarForPlayer(playerid, 403);
				case 4: SpawnCarForPlayer(playerid, 443);
				case 5: SpawnCarForPlayer(playerid, 514);
				case 6: SpawnCarForPlayer(playerid, 515);
			}
			return 1;
		}

		case DIALOG_VEHICLES+12:
		{
		    if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			switch(listitem)
			{
				case 0: SpawnCarForPlayer(playerid, 435);
				case 1: SpawnCarForPlayer(playerid, 450);
				case 2: SpawnCarForPlayer(playerid, 591);
				case 3: SpawnCarForPlayer(playerid, 584);
				case 4: SpawnCarForPlayer(playerid, 569);
				case 5: SpawnCarForPlayer(playerid, 570);
				case 6: SpawnCarForPlayer(playerid, 590);
				case 7: SpawnCarForPlayer(playerid, 606);
				case 8: SpawnCarForPlayer(playerid, 607);
				case 9: SpawnCarForPlayer(playerid, 608);
				case 10: SpawnCarForPlayer(playerid, 610);
				case 11: SpawnCarForPlayer(playerid, 611);
			}
			return 1;
		}

		case DIALOG_VEHICLES+13:
		{
		    if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			switch(listitem)
			{
				case 0: SpawnCarForPlayer(playerid, 485);
				case 1: SpawnCarForPlayer(playerid, 538);
				case 2: SpawnCarForPlayer(playerid, 457);
				case 3: SpawnCarForPlayer(playerid, 483);
				case 4: SpawnCarForPlayer(playerid, 508);
				case 5: SpawnCarForPlayer(playerid, 532);
				case 6: SpawnCarForPlayer(playerid, 486);
				case 7: SpawnCarForPlayer(playerid, 406);
				case 8: SpawnCarForPlayer(playerid, 530);
				case 9: SpawnCarForPlayer(playerid, 537);
				case 10: SpawnCarForPlayer(playerid, 434);
				case 11: SpawnCarForPlayer(playerid, 545);
				case 12: SpawnCarForPlayer(playerid, 588);
				case 13: SpawnCarForPlayer(playerid, 571);
				case 14: SpawnCarForPlayer(playerid, 572);
				case 15: SpawnCarForPlayer(playerid, 423);
				case 16: SpawnCarForPlayer(playerid, 442);
				case 17: SpawnCarForPlayer(playerid, 428);
				case 18: SpawnCarForPlayer(playerid, 409);
				case 19: SpawnCarForPlayer(playerid, 574);
				case 20: SpawnCarForPlayer(playerid, 449);
				case 21: SpawnCarForPlayer(playerid, 583);
				case 22: SpawnCarForPlayer(playerid, 539);
			}
			return 1;
		}

		case DIALOG_VEHICLES+14:
		{
		    if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			switch(listitem)
			{
				case 0: SpawnCarForPlayer(playerid, 441);
				//case 1: SpawnCarForPlayer(playerid, 464);
				case 2: SpawnCarForPlayer(playerid, 465);
				case 3: SpawnCarForPlayer(playerid, 501);
				case 4: SpawnCarForPlayer(playerid, 564);
				case 5: SpawnCarForPlayer(playerid, 594);
			}
			return 1;
		}
		
		case DIALOG_WEAPONS:
	    {
			if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0 || PI[playerid][P_GODMODE] || PI[playerid][P_SPAWN_PROTECTION]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, DIALOG_WEAPONS+1, DIALOG_STYLE_LIST, "{267F00}Weapons - Melee !", "{0094FF}PUPLA\n{0094FF}Golf club\n{0094FF}Club\n{0094FF}Knife\n{0094FF}Bat\n{0094FF}Shovel\n{0094FF}Taco\n{0094FF}Katana\n{0094FF}Chainsaw", ">>", "X");
				case 1: ShowPlayerDialog(playerid, DIALOG_WEAPONS+2, DIALOG_STYLE_LIST, "{267F00}Weapons - launched !", "{0094FF}Grenades\n{0094FF}Tear gas\n{0094FF}Motolov", ">>", "X");
				case 2: ShowPlayerDialog(playerid, DIALOG_WEAPONS+3, DIALOG_STYLE_LIST, "{267F00}Weapons - guns !", "{0094FF}Pistol 9MM\n{0094FF}Pistol silenced\n{0094FF}Desert eagle", ">>", "X");
				case 3: ShowPlayerDialog(playerid, DIALOG_WEAPONS+4, DIALOG_STYLE_LIST, "{267F00}Weapons - shotguns !", "{0094FF}Shotgun\n{0094FF}Sawed-off shotgun\n{0094FF}Combat shotgun", ">>", "X");
				case 4: ShowPlayerDialog(playerid, DIALOG_WEAPONS+5, DIALOG_STYLE_LIST, "{267F00}Weapons - Metrallets !", "{0094FF}Micro SMG/Uzi\n{0094FF}MP5\n{0094FF}AK-47\n{0094FF}M4\n{0094FF}TEC9", ">>", "X");
				case 5: ShowPlayerDialog(playerid, DIALOG_WEAPONS+6, DIALOG_STYLE_LIST, "{267F00}Weapons - Rifles !", "{0094FF}Country Rifle\n{0094FF}Sniper Rifle", ">>", "X");
				case 6: ShowPlayerDialog(playerid, DIALOG_WEAPONS+7, DIALOG_STYLE_LIST, "{267F00}Weapon weapons !", "{0094FF}Bazoka {FF0000}[Disabled]\n{0094FF}HS Bazoka {FF0000}[Disabled]\n{0094FF}Lanzuela\n{0094FF}Minigun {FF0000}[Disabled]", ">>", "X");
				case 7: ShowPlayerDialog(playerid, DIALOG_WEAPONS+8, DIALOG_STYLE_LIST, "{267F00}Weapons - Explosives !", "{0094FF}bomb control remoto\n{0094FF}Detonador", ">>", "X");
				case 8: ShowPlayerDialog(playerid, DIALOG_WEAPONS+9, DIALOG_STYLE_LIST, "{267F00}Weapons - Others !", "{0094FF}Spray\n{0094FF}Extinguisher\n{0094FF}Camara\n{0094FF}Night glasses {FF0000}[Disabled]\n{0094FF}Gafas trmicas {FF0000}[Disabled]\n{0094FF}Paracadas", ">>", "X");
			}
			return 1;
		}
		
		case DIALOG_WEAPONS+1:
		{
		    if(response)
		    {
				if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0 || PI[playerid][P_GODMODE] || PI[playerid][P_SPAWN_PROTECTION]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
				switch(listitem)
				{
					case 0: GivePlayerWeapon(playerid, 1, 500);
					case 1: GivePlayerWeapon(playerid, 2, 500);
					case 2: GivePlayerWeapon(playerid, 3, 500);
					case 3: GivePlayerWeapon(playerid, 4, 500);
					case 4: GivePlayerWeapon(playerid, 5, 500);
					case 5: GivePlayerWeapon(playerid, 6, 500);
					case 6: GivePlayerWeapon(playerid, 7, 500);
					case 7: GivePlayerWeapon(playerid, 8, 500);
					case 8: GivePlayerWeapon(playerid, 9, 500);
				}
			}
			return 1;
		}

		case DIALOG_WEAPONS+2:
		{
		    if(response)
		    {
				if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0 || PI[playerid][P_GODMODE] || PI[playerid][P_SPAWN_PROTECTION]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
				switch(listitem)
				{
					case 0: GivePlayerWeapon(playerid, 16, 500);
					case 1: GivePlayerWeapon(playerid, 17, 500);
					case 2: GivePlayerWeapon(playerid, 18, 500);
				}
			}
			return 1;
		}

		case DIALOG_WEAPONS+3:
		{
		    if(response)
		    {
				if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0 || PI[playerid][P_GODMODE] || PI[playerid][P_SPAWN_PROTECTION]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
				switch(listitem)
				{
					case 0: GivePlayerWeapon(playerid, 22, 500);
					case 1: GivePlayerWeapon(playerid, 23, 500);
					case 2: GivePlayerWeapon(playerid, 24, 500);
				}
			}
			return 1;
		}

		case DIALOG_WEAPONS+4:
		{
		    if(response)
		    {
				if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0 || PI[playerid][P_GODMODE] || PI[playerid][P_SPAWN_PROTECTION]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
				switch(listitem)
				{
					case 0: GivePlayerWeapon(playerid, 25, 500);
					case 1: GivePlayerWeapon(playerid, 26, 500);
					case 2: GivePlayerWeapon(playerid, 27, 500);
				}
			}
			return 1;
		}

		case DIALOG_WEAPONS+5:
		{
		    if(response)
		    {
				if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0 || PI[playerid][P_GODMODE] || PI[playerid][P_SPAWN_PROTECTION]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
				switch(listitem)
				{
					case 0: GivePlayerWeapon(playerid, 28, 500);
					case 1: GivePlayerWeapon(playerid, 29, 500);
					case 2: GivePlayerWeapon(playerid, 30, 500);
					case 3: GivePlayerWeapon(playerid, 31, 500);
					case 4: GivePlayerWeapon(playerid, 32, 500);
				}
			}
			return 1;
		}

		case DIALOG_WEAPONS+6:
		{
			if(response)
		    {
				if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0 || PI[playerid][P_GODMODE] || PI[playerid][P_SPAWN_PROTECTION]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
				switch(listitem)
				{
					case 0: GivePlayerWeapon(playerid, 33, 500);
					case 1: GivePlayerWeapon(playerid, 34, 500);
				}
			}
			return 1;
		}

		case DIALOG_WEAPONS+7:
		{
			if(response)
		    {
				if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0 || PI[playerid][P_GODMODE] || PI[playerid][P_SPAWN_PROTECTION]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
				if(listitem == 2) GivePlayerWeapon(playerid, 37, 500);
			}
			return 1;
		}

		case DIALOG_WEAPONS+8:
		{
			if(response)
		    {
				if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0 || PI[playerid][P_GODMODE] || PI[playerid][P_SPAWN_PROTECTION]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
				switch(listitem)
				{
					case 0: GivePlayerWeapon(playerid, 39, 500);
					case 1: GivePlayerWeapon(playerid, 40, 500);
				}
			}
			return 1;
		}

		case DIALOG_WEAPONS+9:
		{
		    if(response)
		    {
				if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0 || PI[playerid][P_GODMODE] || PI[playerid][P_SPAWN_PROTECTION]) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
				switch(listitem)
				{
					case 0: GivePlayerWeapon(playerid, 41, 500);
					case 1: GivePlayerWeapon(playerid, 42, 500);
					case 2: GivePlayerWeapon(playerid, 43, 500);
					case 5: GivePlayerWeapon(playerid, 46, 500);
				}
			}
			return 1;
		}
		
		case DIALOG_ITEMS:
	    {
			if(response)
			{
		    	switch(listitem)
		    	{
					case 0: SetPlayerAttachedObject(playerid, 0, 19330, 2, 0.166000, -0.038999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //FIREMAN
					case 1: SetPlayerAttachedObject(playerid, 0, 19161, 2, 0.078999, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //POLICE
					case 2: SetPlayerAttachedObject(playerid, 0, 18639, 2, 0.131000, 0.019000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //HAT MJ
					case 3: SetPlayerAttachedObject(playerid, 0, 18638, 2, 0.148999, 0.031000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //WORKER
					case 4: SetPlayerAttachedObject(playerid, 0, 18939, 2, 0.164000, 0.001999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Gorare
					case 5: SetPlayerAttachedObject(playerid, 0, 19488, 2, 0.121999, 0.000000, -0.005999, -83.199966, 98.200027, -2.500000, 1.000000, 1.000000, 1.000000); //sombrero
					case 6: SetPlayerAttachedObject(playerid, 0, 19352, 2, 0.106999, 0.016000, -0.010999, 4.500000, 82.099990, -3.100001, 1.000000, 1.000000, 1.000000); //magicosombr
					case 7: SetPlayerAttachedObject(playerid, 0, 19090, 2, -0.315999, 0.019999, 0.030000, 0.000000, 0.000000, 0.000000, 1.455999, 0.526000, 0.541000); //BAG
					case 8: SetPlayerAttachedObject(playerid, 0, 19424, 2, 0.070999, -0.026000, -0.002000, -85.299987, 1.600005, -99.500000, 0.944001, 0.915000, 0.809999); //DJ
					case 9: SetPlayerAttachedObject(playerid,0,19078,1,-1.000000,-0.517000,0.000000,0.000000,0.299999,10.499994,8.673998,9.400999,7.410993);//dizfraz de loro
					case 10: SetPlayerAttachedObject(playerid,0,19078,4,-0.067000,0.053999,0.018000,-168.400039,-169.800003,-2.800000,1.000000,1.000000,1.000000);//loro en hombro
					case 11: SetPlayerAttachedObject(playerid,0,19085,2,0.090999,0.035000,-0.015000,106.599983,83.199996,0.800003,1.000000,1.000000,1.000000);//parche
					case 12: SetPlayerAttachedObject(playerid,0,19086,15,0.051000,0.000000,-0.424999,0.000000,0.000000,-102.100006,1.000000,1.000000,1.000000);//dildo
					case 13: SetPlayerAttachedObject(playerid,0,19137,2,0.101000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);//cabeza de pollo
					case 14: SetPlayerAttachedObject(playerid,0,19137,15,0.040999,0.000000,-0.130000,-86.300003,106.100013,-96.100051,7.741999,4.874000,5.584998);//diLSRaz de pollo
					case 15: SetPlayerAttachedObject(playerid,0,19315,1,-0.247999,0.509999,-0.015999,4.300004,86.900024,85.500015,3.010000,4.463000,3.824000);//ciervo
					case 16: SetPlayerAttachedObject(playerid,0,19314,2,0.157000,0.000000,0.000000,-0.199999,-7.600006,-88.599998,1.000000,1.000000,1.000000);//cuernos 1
					case 17: SetPlayerAttachedObject(playerid,0,19314,2,0.157000,0.000000,0.000000,1.400000,-7.600006,-28.599973,0.711000,0.919999,0.361999);//cuernos 2
					case 18: SetPlayerAttachedObject(playerid,0,19320,2,0.000000,0.000000,0.000000,4.299999,72.999992,3.199999,3.594999,3.787999,4.951001);//diLSRaz de calabaza
					case 19: SetPlayerAttachedObject(playerid,0,18963,2,0.261000,0.084999,0.004999,4.999999,85.400039,84.699974,2.097000,2.627000,3.033999);//cabezon
					case 20: SetPlayerAttachedObject(playerid,0,1607,2,0.267000,0.000000,0.000000,-0.199999,81.199996,-3.499999,1.135000,1.000000,1.126999);//delfin
					case 21: SetPlayerAttachedObject(playerid,0,1608,1,0.000000,0.000000,0.000000,0.499999,89.200042,0.199999,1.000000,1.000000,1.000000);//tiburon
					case 22: SetPlayerAttachedObject(playerid,0,1609,1,-0.358000,0.000000,0.170000,0.000000,93.099998,0.000000,1.427000,1.509000,1.641000);//tortuga
					case 23: SetPlayerAttachedObject(playerid,0,16442,15,0.000000,0.000000,0.259000,0.000000,0.000000,-104.400001,1.000000,1.000000,1.000000);//vaca
					case 24:
					{
						for(new i=0; i< MAX_PLAYER_ATTACHED_OBJECTS; i++)
						{
							if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
						}
						return 1;
					}
				}
				SendClientMessage(playerid, -1, "{"ORANGE"}To take off the topic, use{"GREY"}/remove");
			}
			return 1;
		}
		
		case DIALOG_ANIMS:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);//surrender
		            case 1: ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.0, 1, 1, 1, 0, 0);//blowjob
		            case 2: ApplyAnimation(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0);//roll
		            case 3: ApplyAnimation(playerid,"PED", "WALK_DRUNK",4.0,1,1,1,1,500);//drunk
		            case 4: ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);//bomb
		            case 5: ApplyAnimation( playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1,500);//aim
		            case 6: ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0,0);//laugh
		            case 7: ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 1,500);//threaten
		            case 8: ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0, 1, 0, 0, 1, 0);//straw
		            case 9: ApplyAnimation(playerid, "SWEET", "LaFin_Sweet", 4.0, 0, 1, 1, 1, 0);//injured
		            case 10: ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 1, 1, 1, 0, 4000);//crossing
		            case 11: ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_in", 4.0, 0, 0, 0, 1, 0);//lean
		            case 12: ApplyAnimation(playerid, "ped", "cower", 4.0, 1, 0, 0, 0, 0);//crubrirse
		            case 13: ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);//vomit
		            case 14: ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);//eat
		            case 15: ApplyAnimation(playerid, "KISSING", "BD_GF_Wave", 3.0, 0, 0, 0, 0, 0);//dismiss
		            case 16: ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);//nalgada
		            case 17: ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0);//agonize
		            case 18: ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 4.0, 0, 0, 0, 0, 0);//besar
		            case 19: ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 0, 0, 0, 1, 0);//crack
		            case 20: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);//piss
		            case 21: ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_in", 4.000000, 0, 1, 1, 1, 0);//feel
		            case 22: ApplyAnimation( playerid,"ped", "fucku", 4.0, 0, 1, 1, 1, 1 );//fucku
		            case 23: ApplyAnimation(playerid, "ped", "phone_in", 4.000000, 0, 0, 0, 1, 4000);//llamar
		            case 24: ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop",  4.1,7,5,1,1,1);//taichi
		            case 25: ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000);//todrink
		            case 26: ApplyAnimation(playerid, "GYMNASIUM", "gym_shadowbox",  4.1,7,5,1,1,1);//boxer
		            case 27: ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);//greet
		            case 28: ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0);//cure
		            case 29: ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,0,0,0,0,0);//cry
		            case 30: ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0);//sleep
		            case 31: ApplyAnimation(playerid,"RAPPING","RAP_B_Loop",4.0,1,0,0,0,8000);//rap
		            case 32: ApplyAnimation(playerid,"STRIP","strip_A",4.1,7,5,1,1,1);//strip
		            case 33: ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.1,7,5,1,1,1);//dance
		            case 34: ApplyAnimation(playerid,"ON_LOOKERS","shout_02",4.1,7,5,1,1,1);//encourage
		            case 35: ApplyAnimation(playerid,"PED","IDLE_chat",4.1,7,5,1,1,1);//talk
		        }
				SendClientMessage(playerid, -1, "{C6D855}To cancel the animation uses the command {"ORANGE"}/parar");
			}
			return 1;
		}
		
		case DIALOG_SELECT_GANG_TEAM:
		{
			if(response)
			{
				if(PI[playerid][P_STATUS] == S_CLASS)
				{
					if(PI[playerid][P_GAMEMODE] != M_NONE) ExitPlayerGameMode(playerid);
					SetPlayerTeam(playerid, listitem);
					PI[playerid][P_SELECTING_MODE_TD] = false;
					CancelSelectTextDraw(playerid);
					for(new i = 0; i != sizeof TD_LSR_SELECTMODE; i++) TextDrawHideForPlayer(playerid, TD_LSR_SELECTMODE[i]);
					TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[0]);
					TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[1]);
					if(!PI[playerid][P_IGNORE_LSRTD])
					{
						TextDrawShowForPlayer(playerid, TD_LSR_HUD[0]);
						TextDrawShowForPlayer(playerid, TD_LSR_HUD[1]);
						TextDrawShowForPlayer(playerid, TD_LSR_HUD[2]);
					}
					TextDrawHideForPlayer(playerid, TD_LSR_WEB_INFO);
					
					JoinPlayerGameMode(playerid, GAME_GANGWARS);
					StopAudioStreamForPlayer(playerid);
					SpawnPlayer(playerid);
				}
				else if(PI[playerid][P_STATUS] == S_SPAWNED)
				{
					ExitPlayerGameMode(playerid);
					SetPlayerTeam(playerid, listitem);
					JoinPlayerGameMode(playerid, GAME_GANGWARS);
				}
				else SendClientMessage(playerid, -1, "{"GREY"}Now you can't change mode.");
			}
			else
			{
				if(PI[playerid][P_STATUS] == S_CLASS)
				{
					PI[playerid][P_SELECTING_MODE_TD] = true;
					SelectTextDraw(playerid, 0x999999FF);
				}
			}
			return 1;
		}
		
		case DIALOG_SELECT_TDM_TEAM:
		{
			if(response)
			{
				if(TDMI[T_TeamPLAYERS][listitem] > TDMI[T_TeamPLAYERS][ valor_contrario_booleano(listitem) ] + 1)
				{
					SendClientMessage(playerid, -1, "{CCCCCC}Please choose the other equipment to balance the players' balance.");
					ShowDialog(playerid, dialogid);
					return 1;
				}
				
				if(PI[playerid][P_STATUS] == S_CLASS)
				{
					if(PI[playerid][P_GAMEMODE] != M_NONE) ExitPlayerGameMode(playerid);
					SetPlayerTeam(playerid, listitem);
					PI[playerid][P_TEM_TEAM] = listitem;
					PI[playerid][P_SELECTING_MODE_TD] = false;
					CancelSelectTextDraw(playerid);
					for(new i = 0; i != sizeof TD_LSR_SELECTMODE; i++) TextDrawHideForPlayer(playerid, TD_LSR_SELECTMODE[i]);
					TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[0]);
					TextDrawHideForPlayer(playerid, TD_LSR_SMODE_PAGE[1]);
					if(!PI[playerid][P_IGNORE_LSRTD])
					{
						TextDrawShowForPlayer(playerid, TD_LSR_HUD[0]);
						TextDrawShowForPlayer(playerid, TD_LSR_HUD[1]);
						TextDrawShowForPlayer(playerid, TD_LSR_HUD[2]);
					}
					TextDrawHideForPlayer(playerid, TD_LSR_WEB_INFO);
					
					JoinPlayerGameMode(playerid, GAME_TDM);
					StopAudioStreamForPlayer(playerid);
					SpawnPlayer(playerid);
				}
				else if(PI[playerid][P_STATUS] == S_SPAWNED)
				{
					ExitPlayerGameMode(playerid);
					SetPlayerTeam(playerid, listitem);
					PI[playerid][P_TEM_TEAM] = listitem;
					JoinPlayerGameMode(playerid, GAME_TDM);
				}
				else SendClientMessage(playerid, -1, "{"GREY"}Now you can't change mode.");
			}
			else
			{
				if(PI[playerid][P_STATUS] == S_CLASS)
				{
					PI[playerid][P_SELECTING_MODE_TD] = true;
					SelectTextDraw(playerid, 0x999999FF);
				}
			}
			return 1;
		}
		
		case DIALOG_SELECT_MODE:
		{
			if(response)
			{
				if(PI[playerid][P_STATUS] != S_SPAWNED) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't change mode.");
				if(GetPlayerGameMode(playerid) == listitem) return 1;
				if(listitem == GAME_DERBY)
				{
					if(DI[D_PLAYERS] >= MAX_DERBY_PLAYERS)
					{
						SendClientMessage(playerid, -1, "{"ORANGE"}This game mode is complete.");
						return 1;
					}
				}
				else if(listitem == GAME_GANGWARS)
				{
					ShowDialog(playerid, DIALOG_SELECT_GANG_TEAM);
					return 1;
				}
				else if(listitem == GAME_ZOMBIE)
				{
					ShowDialog(playerid, DIALOG_SELECT_ZOMBIE_TEAM);
					return 1;
				}
				else if(listitem == GAME_TDM)
				{
					ShowDialog(playerid, DIALOG_SELECT_TDM_TEAM);
					return 1;
				}
				ExitPlayerGameMode(playerid);
				JoinPlayerGameMode(playerid, listitem);
			}
			return 1;
		}
		
		case DIALOG_EVENT:
		{
			if(response)
			{
				if(EVENT_STATUS == EVENT_RUNNING && listitem != 0) return SendClientMessage(playerid, -1, "{"ORANGE"}Event was already activated.");
				if(listitem == 2)
				{
					PI[playerid][P_EVENT_POSGET] = true;
					SendClientMessage(playerid, -1, "{"ORANGE"}Press the key {"GREY"}Y {"ORANGE"}To get the position from Event.");
					SendClientMessage(playerid, -1, "{"ORANGE"}The position, the angle, the interior and the virtual world (USA {"GREY"}/world {"ORANGE"}To change the world)");
					return 1;
				}
				else if(listitem == 6) return ShowDialog(playerid, DIALOG_EVENT+3);
				else if(listitem == 7) 
				{
					if(EVENT_FREEZE) EVENT_FREEZE = false;
					else EVENT_FREEZE = true;
					ShowDialog(playerid, DIALOG_EVENT);
					return 1;
				}
				else if(listitem == 8) return ShowDialog(playerid, DIALOG_EVENT);
				ShowDialog(playerid, DIALOG_EVENT+listitem+1);
			}
			return 1;
		}
		
		case DIALOG_EVENT+1:
		{	
			if(!response) return ShowDialog(playerid, DIALOG_EVENT);
			if(listitem == EVENT_RUNNING && TOTAL_PLAYERS_EVENT == 0)
			{
				SendClientMessage(playerid, -1, "{"ORANGE"}You can't start Event without Players.");
				ShowDialog(playerid, DIALOG_EVENT);
				return 1;
			}
			new oldstate = EVENT_STATUS;
			EVENT_STATUS = listitem;
			switch(EVENT_STATUS)
			{
				case EVENT_CLOSED:
				{
					TextDrawHideForAll(TD_LSR_EVENTINFO[0]);
					TextDrawHideForAll(TD_LSR_EVENTINFO[1]);
					if(oldstate == EVENT_JOINING)
					{
						for(new players = 0, j = GetPlayerPoolSize(); players <= j; players++) 
						{
							if(!IsPlayerConnected(players) || !PI[players][P_JOINED_EVENT]) continue;
							TOTAL_PLAYERS_EVENT -= 1;
							PI[players][P_JOINED_EVENT] = false;
						}
					}
					else if(oldstate == EVENT_RUNNING)
					{
						for(new players = 0, j = GetPlayerPoolSize(); players <= j; players++) 
						{
							if(!IsPlayerConnected(players) || PI[players][P_GAMEMODE] != M_EVENT) continue;
							ExitPlayerGameMode(players);
							JoinPlayerGameMode(players, GAME_FREEROAM);
						}
					}
				}
				case EVENT_JOINING:
				{
					TextDrawShowForAll(TD_LSR_EVENTINFO[0]);
					TextDrawShowForAll(TD_LSR_EVENTINFO[1]);
					if(oldstate == EVENT_RUNNING)
					{
						for(new players = 0, j = GetPlayerPoolSize(); players <= j; players++) 
						{
							if(!IsPlayerConnected(players) || PI[players][P_GAMEMODE] != M_EVENT) continue;
							ExitPlayerGameMode(players);
							JoinPlayerGameMode(players, GAME_FREEROAM);
						}
					}
				}
				case EVENT_RUNNING:
				{
					TextDrawHideForAll(TD_LSR_EVENTINFO[0]);
					TextDrawHideForAll(TD_LSR_EVENTINFO[1]);
					
					for(new players = 0, j = GetPlayerPoolSize(); players <= j; players++) 
					{
						if(!IsPlayerConnected(players) || !PI[players][P_JOINED_EVENT]) continue;
						PI[players][P_JOINED_EVENT] = false;
						ExitPlayerGameMode(players);
						GameTextForPlayer(players, EVENT_NAME, 3000, 6);
						PI[players][P_GAMEMODE] = M_EVENT;
						SetSpawnInfo(players, GetPlayerTeam(players), GetPlayerSkin(players), EVENT_POS[0], EVENT_POS[1], EVENT_POS[2], EVENT_POS[3], 0, 0, 0, 0, 0, 0);
						SetPlayerPosEx(players, EVENT_POS[0], EVENT_POS[1], EVENT_POS[2], EVENT_POS[3], EVENT_INT, EVENT_VIRUALWORLD, EVENT_FREEZE, false, EVENT_VEHICLE);
						ResetPlayerWeapons(players);
						GivePlayerWeapon(players, EVENT_WEP[0], 500);
						GivePlayerWeapon(players, EVENT_WEP[1], 500);
						GivePlayerWeapon(players, EVENT_WEP[2], 500);
						GivePlayerWeapon(players, EVENT_WEP[3], 500);
						GivePlayerWeapon(players, EVENT_WEP[4], 500);
						SetPlayerTime(players, EVENT_TIME, 0);
						SetPlayerWeather(players, EVENT_WEATHER);
						SetPlayerArmour(players, 0.0);
						SetPlayerHealth(players, 100.0);
						SetCameraBehindPlayer(players);
					}
				}
			}
			ShowDialog(playerid, DIALOG_EVENT);
			return 1;
		}
		
		case DIALOG_EVENT+2:
		{
			if(!response) return ShowDialog(playerid, DIALOG_EVENT);
			if(isnull(inputtext)) return ShowDialog(playerid, dialogid);
			format(EVENT_NAME, sizeof EVENT_NAME, "%s", inputtext);
			new str[128];
			format(str, sizeof str, "~n~~g~_EVENT~p~~h~_%s~g~_activated.~n~~p~~h~_/ejoin_~b~~h~To join.~n~_", EVENT_NAME);
			TextDrawSetString(TD_LSR_EVENTINFO[1], str);
			ShowDialog(playerid, DIALOG_EVENT);
			return 1;
		}
		
		case DIALOG_EVENT+3:
		{
			if(!response) return ShowDialog(playerid, DIALOG_EVENT);
			EVENT_WEATHER = listitem;
			ShowDialog(playerid, DIALOG_EVENT);
			return 1;
		}
		
		case DIALOG_EVENT+4:
		{
			if(!response) return ShowDialog(playerid, DIALOG_EVENT);
			if(sscanf(inputtext, "ddddd", EVENT_WEP[0], EVENT_WEP[1], EVENT_WEP[2], EVENT_WEP[3], EVENT_WEP[4])) return ShowDialog(playerid, dialogid);
			ShowDialog(playerid, DIALOG_EVENT);
			return 1;
		}
		
		case DIALOG_EVENT+5:
		{
			if(!response) return ShowDialog(playerid, DIALOG_EVENT);
			if(sscanf(inputtext, "d", EVENT_VEHICLE)) return ShowDialog(playerid, dialogid);
			ShowDialog(playerid, DIALOG_EVENT);
			return 1;
		}
		
		case DIALOG_EVENT+6:
		{
			if(!response) return ShowDialog(playerid, DIALOG_EVENT);
			if(sscanf(inputtext, "d", EVENT_TIME)) return ShowDialog(playerid, dialogid);
			ShowDialog(playerid, DIALOG_EVENT);
			return 1;
		}
		
		case DIALOG_SONG:
		{
			if(!response) return 1;
			new str[128];
			format(str, 128, "%s", inputtext);
			for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
			{
				if(IsPlayerConnected(i))
				{
					if(!PI[i][P_IGNORE_MUSIC])
					{
						PlayAudioStreamForPlayer(i, str);
						SendClientMessage(i, -1, "{"ORANGE"}To stop the music uses {"GREY"}/stop");
					}
				}
			}
			SendClientMessage(playerid, -1, "{"GREY"}Reproducing for all players in FREEROAM.");
			return 1;
		}
		
		case DIALOG_FIGHTSTYLE:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: { SendClientMessage(playerid, -1, "{"ORANGE"}You changed your Fightstyle fighting."); SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL); return 1; }
				case 1: if(PI[playerid][P_SCORE] >= 300) { SendClientMessage(playerid, -1, "{"ORANGE"}You changed your Fightstyle fighting."); SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW); return 1; }
				case 2: if(PI[playerid][P_SCORE] >= 500) { SendClientMessage(playerid, -1, "{"ORANGE"}You changed your Fightstyle fighting."); SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK); return 1; }
				case 3: if(PI[playerid][P_SCORE] >= 1000) { SendClientMessage(playerid, -1, "{"ORANGE"}You changed your Fightstyle fighting."); SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU); return 1; }
				case 4: if(PI[playerid][P_SCORE] >= 5000) { SendClientMessage(playerid, -1, "{"ORANGE"}You changed your Fightstyle fighting."); SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD); return 1; }
				case 5: if(PI[playerid][P_SCORE] >= 5000) { SendClientMessage(playerid, -1, "{"ORANGE"}You changed your Fightstyle fighting."); SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING); return 1; }
			}
			SendClientMessage(playerid, -1, "{CC0000}You don't have enough score for this Fightstyle fighting.");
			return 1;
		}
		
		case DIALOG_HOUSE_MANAGE:
		{
			if(!response) return PI[playerid][P_TEMPHOUSE_INDEX] = 0;
			
			if(listitem == 0)
			{
				if(HI[PI[playerid][P_TEMPHOUSE_INDEX]][H_OPENED]) HI[PI[playerid][P_TEMPHOUSE_INDEX]][H_OPENED] = false;
				else HI[PI[playerid][P_TEMPHOUSE_INDEX]][H_OPENED] = true;
				ShowDialog(playerid, DIALOG_HOUSE_MANAGE);
				return 1;
			}
			else if(listitem == 1)
			{
				new money = floatround( floatmul(HI[PI[playerid][P_TEMPHOUSE_INDEX]][H_PRICE], 0.75) );
				GivePlayerMoneyEx(playerid, money);
				GameTextForPlayer(playerid, "~r~~h~owned_ property", 5000, 1);
				PlayerPlaySoundEx(playerid, 1149, 0.0, 0.0, 0.0);
				
				HI[PI[playerid][P_TEMPHOUSE_INDEX]][H_OPENED] = false;
				format(HI[PI[playerid][P_TEMPHOUSE_INDEX]][H_OWNER], 24, "");
				HI[PI[playerid][P_TEMPHOUSE_INDEX]][H_OWNERID] = 0;
				HI[PI[playerid][P_TEMPHOUSE_INDEX]][H_SOLD] = false;
				
				PI[playerid][P_HOUSES] -= 1;
				UpdateHouse(PI[playerid][P_TEMPHOUSE_INDEX]);
				UpdateUserData(playerid);
				
				for(new i = 0; i != MAX_HOUSES_PER_PLAYER; i++)
				{
					if(IsValidDynamicMapIcon(PI[playerid][P_HOUSEICONS][i]))
					{
						DestroyDynamicMapIcon(PI[playerid][P_HOUSEICONS][i]);
					}
				}
				if(PI[playerid][P_HOUSES] > 0) CreatePlayerHouseIcons(playerid);
				
				SetPlayerPosEx(playerid, HI[PI[playerid][P_TEMPHOUSE_INDEX]][H_extPos][0], HI[PI[playerid][P_TEMPHOUSE_INDEX]][H_extPos][1], HI[PI[playerid][P_TEMPHOUSE_INDEX]][H_extPos][2], HI[PI[playerid][P_TEMPHOUSE_INDEX]][H_extPos][3], 0, FREEROAM_VW, false, false);
				SetCameraBehindPlayer(playerid);
						
				PI[playerid][P_TEMPHOUSE_INDEX] = 0;
				return 1;
			}
			return 1;
		}
		
		case DIALOG_VEHICLECONTROL:
    	{
			if(response)
			{
    	    	new vid = PI[playerid][P_TEMP_VID];
				if(!IsValidVehicleModel(VI[vid][V_MODELID])) return SendClientMessage(playerid, -1, "Error.");
		        new engine, vlights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(vid, engine, vlights, alarm, doors, bonnet, boot, objective);
				switch(listitem)
				{
				    case 0: SetVehicleParamsEx(vid, (engine == 0 ? (1):(0)), vlights, alarm, doors, bonnet, boot, objective);
	                case 1: SetVehicleParamsEx(vid, engine, (vlights == 0 ? (1):(0)), alarm, doors, bonnet, boot, objective);
	                case 2: SetVehicleParamsEx(vid, engine, vlights, alarm, (doors == 0 ? (1):(0)), bonnet, boot, objective);
	                case 3: SetVehicleParamsEx(vid, engine, vlights, alarm, doors, (bonnet == 0 ? (1):(0)), boot, objective);
	                case 4: SetVehicleParamsEx(vid, engine, vlights, alarm, doors, bonnet, (boot == 0 ? (1):(0)), objective);
	                case 5:
					{
						new slot = -1;
						for(new i = 0; i != MAX_VEHICLES_PER_PLAYER; i++)
						{
							if(PI[playerid][P_VEHICLES_VEH_ID][i] == vid)
							{
								slot = i;
								break;
							}
						}
						if(slot == -1)
						{
							PI[playerid][P_TEMP_VID] = -1;
							SendClientMessage(playerid, -1, "{996600}ERROR.");
							return 1;
						}
						RemovePlayerVehicle(playerid, slot);
						GameTextForPlayer(playerid, "~r~~h~Vehicle_Detro", 5000, 1);
						PlayerPlaySoundEx(playerid, 1149, 0.0, 0.0, 0.0);
						UpdateUserData(playerid);
						return 1;
					}
				}
				GetVehicleParamsEx(vid, engine, vlights, alarm, doors, bonnet, boot, objective);
				VI[vid][V_LOCKED] = doors;
		        new dialog[350], dialog_Title[128];
				format(dialog_Title, 128, "{"ORANGE"}"SERVER_NAME" - %s", VehicleNames[ VI[vid][V_MODELID] - 400]);
		        format(dialog, 350, "{999900}Part\t{99CC00}State\n{999900}Motor\t{99CC00}%s\n{999900}Lights\t{99CC00}%s\n{999900}Doors\t{99CC00}%s\n{999900}Cap\t{99CC00}%s\n{999900}Trunk\t{99CC00}%s\n{999999}DESTROY VEHICLE\t{CC0000}IRREVERSIBLE",
				(engine == 1 ? ("Switched on"):("Off")), (vlights == 1 ? ("Lit"):("Turned off")), (doors == 1 ? ("Closed"):("Open")), (bonnet == 1 ? ("Open"):("Closed")), (boot == 1 ? ("Open"):("Closed")));
				ShowPlayerDialog(playerid, DIALOG_VEHICLECONTROL, DIALOG_STYLE_TABLIST_HEADERS, dialog_Title, dialog, ">>", "Close");

			}
			else PI[playerid][P_TEMP_VID] = 0;
			return 1;
		}
		
		case DIALOG_PERSONAL_VEHICLES:
		{
			if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_FREEROAM || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't use this command.");
			if(PI[playerid][P_VEHICLES_MODEL][listitem] == 0) return ShowDialog(playerid, DIALOG_PERSONAL_VEHICLES);
			if(PI[playerid][P_VEHICLES_VEH_ID][listitem] == 0)
			{
				if(listitem >= 2 && !PI[playerid][P_VIP]) return SendClientMessage(playerid, -1, "{CC9900}Normal users cannot use more than 2 vehicles {C6D855}(/vipinfo)");
				SpawnPersonalCar(playerid, listitem, PI[playerid][P_VEHICLES_SQL_ID][listitem]);
			}
			else
			{
				HousePlayerVehicle(playerid, listitem);
				SendClientMessage(playerid, -1, "{CC9900} Saved vehicle!");
				ShowDialog(playerid, DIALOG_PERSONAL_VEHICLES);
			}
			return 1;
		}
		
		case DIALOG_SELECT_ZOMBIE_TEAM:
		{
			if(response)
			{
				if(PI[playerid][P_STATUS] != S_SPAWNED) return SendClientMessage(playerid, -1, "{"GREY"}Now you can't change mode.");
				if(listitem == 0)
				{
					if(ZI[Z_TEAM_PLAYERS][0] > ZI[Z_TEAM_PLAYERS][1] + 1)
					{
						SendClientMessage(playerid, -1, "{"ORANGE"}Please select the EQUIPMENT {"GREY"}ZOMBIE {"ORANGE"}to balance the PLAYERS.");
						ShowDialog(playerid, DIALOG_SELECT_ZOMBIE_TEAM);
						return 1;
					}
				}
				else if(listitem == 1)
				{
					if(ZI[Z_TEAM_PLAYERS][1] > ZI[Z_TEAM_PLAYERS][0] + 1)
					{
						SendClientMessage(playerid, -1, "{"ORANGE"}Please select the EQUIPMENT {"GREY"}HUMANS {"ORANGE"}to balance the PLAYERS.");
						ShowDialog(playerid, DIALOG_SELECT_ZOMBIE_TEAM);
						return 1;
					}
				}
				
				PI[playerid][P_ZOMBIE_TEAM] = listitem;
				SetPlayerTeam(playerid, NO_TEAM);
				ExitPlayerGameMode(playerid);
				JoinPlayerGameMode(playerid, GAME_ZOMBIE);
			}
			return 1;
		}
		
		case DIALOG_AUX:
		{
			if(!response) return 1;
			if(PI[playerid][P_GAMEMODE] != M_ZOMBIE || PI[playerid][P_ZOMBIE_TEAM] != TEAM_HUMANS || PI[playerid][P_STATUS] != S_SPAWNED) return 1;
			
			switch(listitem)
			{
				case 0:
				{
					if(PI[playerid][P_INFECTED])
					{
						ShowDialog(playerid, DIALOG_AUX);
						SendClientMessage(playerid, -1, "{"ORANGE"}Is infected, buy an antidote.");
						return 1;
					}
					new Float:h; GetPlayerHealth(playerid, h);
					if(h >= 100.0) return SendClientMessage(playerid, -1, "{"GREY"}You don't need food.");
					
					if(PI[playerid][P_MONEY] < 560) return SendClientMessage(playerid, -1, "{"GREY"}You don't have enough money.");
					GivePlayerMoneyEx(playerid, -560);
					
					SetPlayerHealth(playerid, h + 35.0);
					SendClientMessage(playerid, -1, "{"GREY"}You have bought food.");
				}
				case 1:
				{
					if(PI[playerid][P_MONEY] < 1560) return SendClientMessage(playerid, -1, "{"GREY"}}You don't have enough money.");
					GivePlayerMoneyEx(playerid, -1560);
					
					GivePlayerWeapon(playerid, 24, minrand(250, 500));
					SendClientMessage(playerid, -1, "{"GREY"}You have bought a desert eagle.");
				}
				case 2:
				{
					if(PI[playerid][P_MONEY] < 2340) return SendClientMessage(playerid, -1, "{"GREY"}}You don't have enough money.");
					GivePlayerMoneyEx(playerid, -2340);
					
					GivePlayerWeapon(playerid, 25, minrand(250, 500));
					SendClientMessage(playerid, -1, "{"GREY"}You have bought a shotgun.");
				}
				case 3:
				{
					if(!PI[playerid][P_INFECTED]) return SendClientMessage(playerid, -1, "{"GREY"}It is not infected.");
					
					if(PI[playerid][P_MONEY] < 8600) return SendClientMessage(playerid, -1, "{"GREY"}}You Don't Have Enough Money.");
					GivePlayerMoneyEx(playerid, -8600);
					
					PI[playerid][P_INFECTED] = false;
					SetPlayerDrunkLevel(playerid, 0);
					TextDrawHideForPlayer(playerid, TD_LSR_ZOMBIE_INFECTED);
					new Float:h; GetPlayerHealth(playerid, h); SetPlayerHealth(playerid, h + 10.0);
					
					SendClientMessage(playerid, -1, "{"GREY"}THE ANTITO SURGI EFFECT.");
				}
			}
			return 1;
		}
		
		case DIALOG_CHATCOLOR:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: PI[playerid][P_CHATCOLOR] = 0xCCCCCC;
					case 1: PI[playerid][P_CHATCOLOR] = 0xCCFF00;
					case 2: PI[playerid][P_CHATCOLOR] = 0xFFCC00;
					case 3: PI[playerid][P_CHATCOLOR] = 0x3AA0E8;
					case 4: PI[playerid][P_CHATCOLOR] = 0x31D613;
					case 5: PI[playerid][P_CHATCOLOR] = 0xC6D855;
					case 6: PI[playerid][P_CHATCOLOR] = 0xED0018;
					case 7: PI[playerid][P_CHATCOLOR] = 0xFF36EE;
					case 8: PI[playerid][P_CHATCOLOR] = 0xFF00B3;
					case 9: PI[playerid][P_CHATCOLOR] = 0xEB99FF;
				}
				SendClientMessage(playerid, -1, "{C6D855}Your color in the chat was changed correctly.");
			}
			return 1;
		}
		
		case DIALOG_PLATE:
		{
			if(!response) return 1;
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			new vid = GetPlayerVehicleID(playerid);
			if(VI[vid][V_VALID]) if(VI[vid][V_OWNERID] != PI[playerid][P_ID]) return SendClientMessage(playerid, -1, "{C6D855}This is not your vehicle.");
			if(isnull(inputtext))
			{
				if(VI[vid][V_VALID]) format(VI[vid][V_PLATE], 32, "");
				SetVehicleNumberPlateEx(vid, "XYZSR666", playerid);
				SendClientMessage(playerid, -1, "{"ORANGE"}INFO: {C6D855}Custom plate removed.");
				return 1;
			}
	
			if(VI[vid][V_VALID]) format(VI[vid][V_PLATE], 32, "%s", inputtext);
			
			SetVehicleNumberPlateEx(vid, inputtext, playerid);
			SendClientMessage(playerid, -1, "{"ORANGE"}INFO: {C6D855}AADIDA Custom Plate.");
			return 1;
		}
		
		case DIALOG_CREW_MANAGE:
		{
			if(PI[playerid][P_CREW_SLOT] == -1) return 1;
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						PI[playerid][P_CREW_DIALOG_PAGE] = 0;
						ShowDialog(playerid, DIALOG_CREW_MEMBERS);
					}
					case 1:
					{
						if(PI[playerid][P_CREW_RANK] >= RANK_LEADER)
						{
							PI[playerid][P_CREW_DIALOG_PAGE] = 0;
							ShowDialog(playerid, DIALOG_CREW_EDIT_MEMBERS);
						}
						else
						{
							new message[145]; format(message, 145, "{%x}%s {FFFFFF}has abandoned the crew.", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], PI[playerid][P_NAME]);
							SendMessageToCrew(PI[playerid][P_CREW_ID], -1, message);
							
							CI[PI[playerid][P_CREW_SLOT]][C_MEMBERS] --;
							UpdateCrewDatabase(PI[playerid][P_CREW_ID], "MEMBERS", CI[PI[playerid][P_CREW_SLOT]][C_MEMBERS]);
							if(IsValidDynamic3DTextLabel(PI[playerid][P_CREW_LABEL])) DestroyDynamic3DTextLabel(PI[playerid][P_CREW_LABEL]);
							PI[playerid][P_CREW_ID] = 0;
							PI[playerid][P_CREW_SLOT] = -1;
							PI[playerid][P_CREW_RANK] = RANK_NOOB;
							UpdateUserData(playerid);
						}
					}
					case 2:
					{
						if(PI[playerid][P_CREW_RANK] >= RANK_FOUNDER) ShowDialog(playerid, DIALOG_CREW_EDIT_COLOR);
						else
						{
							new message[145]; format(message, 145, "{%x}%s {FFFFFF}has abandoned the crew.", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], PI[playerid][P_NAME]);
							SendMessageToCrew(PI[playerid][P_CREW_ID], -1, message);
							
							CI[PI[playerid][P_CREW_SLOT]][C_MEMBERS] --;
							UpdateCrewDatabase(PI[playerid][P_CREW_ID], "MEMBERS", CI[PI[playerid][P_CREW_SLOT]][C_MEMBERS]);
							if(IsValidDynamic3DTextLabel(PI[playerid][P_CREW_LABEL])) DestroyDynamic3DTextLabel(PI[playerid][P_CREW_LABEL]);
							PI[playerid][P_CREW_ID] = 0;
							PI[playerid][P_CREW_SLOT] = -1;
							PI[playerid][P_CREW_RANK] = RANK_NOOB;
							UpdateUserData(playerid);
						}
					}
					case 3:
					{
						if(PI[playerid][P_CREW_SLOT] == -1) return 1;
						if(PI[playerid][P_CREW_RANK] != RANK_FOUNDER) return 1;
						DeleteCrew(PI[playerid][P_CREW_ID]);
					}
				}
			}
			return 1;
		}
		
		case DIALOG_CREW_MEMBERS:
		{
			if(PI[playerid][P_CREW_SLOT] == -1) return 1;
			if(listitem == PI[playerid][P_TOP_CLOSE]) return 1;
			if(response)
			{
				if(PI[playerid][P_CREW_DIALOG_PAGE] >= GetUserCrewPages(playerid) - 1) PI[playerid][P_CREW_DIALOG_PAGE] = 0;
				else PI[playerid][P_CREW_DIALOG_PAGE] ++;
				ShowDialog(playerid, DIALOG_CREW_MEMBERS);
			}
			else
			{
				if(PI[playerid][P_CREW_DIALOG_PAGE] <= 0) PI[playerid][P_CREW_DIALOG_PAGE] = GetUserCrewPages(playerid) - 1;
				else PI[playerid][P_CREW_DIALOG_PAGE] --;
				ShowDialog(playerid, DIALOG_CREW_MEMBERS);
			}
			return 1;
		}
		
		case DIALOG_CREW_EDIT_MEMBERS:
		{
			if(PI[playerid][P_CREW_SLOT] == -1) return 1;
			if(!response) return ShowDialog(playerid, DIALOG_CREW_MANAGE);
			
			if(PI[playerid][P_CREW_DIALOG_PID][listitem] == 0) // >>
			{
				if(PI[playerid][P_CREW_DIALOG_PAGE] >= GetUserCrewPages(playerid, 19) - 1) PI[playerid][P_CREW_DIALOG_PAGE] = 0;
				else PI[playerid][P_CREW_DIALOG_PAGE] ++;
				ShowDialog(playerid, DIALOG_CREW_EDIT_MEMBERS);
				return 1;
			}
			else if(PI[playerid][P_CREW_DIALOG_PID][listitem] == -1) // <<
			{
				if(PI[playerid][P_CREW_DIALOG_PAGE] <= 0) PI[playerid][P_CREW_DIALOG_PAGE] = GetUserCrewPages(playerid, 19) - 1;
				else PI[playerid][P_CREW_DIALOG_PAGE] --;
				ShowDialog(playerid, DIALOG_CREW_EDIT_MEMBERS);
				return 1;
			}
			
			new DBResult:Result, name[24], rank;
	
			format(DB_Query, sizeof(DB_Query), "SELECT NAME, CREWR FROM USERS WHERE ID = '%d'", PI[playerid][P_CREW_DIALOG_PID][listitem]);
			Result = db_query(Database, DB_Query);
			if(db_num_rows(Result))
			{
				db_get_field(Result, 0, name, 24);
				rank = db_get_field_int(Result, 1);
			}
			db_free_result(Result);
			
			if(rank == RANK_FOUNDER)
			{
				ShowDialog(playerid, DIALOG_CREW_EDIT_MEMBERS);
				SendClientMessage(playerid, -1, "{999999}This is the founding member and you can't change it.");
				return 1;
			}
			else if(PI[playerid][P_CREW_RANK] == RANK_LEADER && rank == RANK_LEADER)
			{
				ShowDialog(playerid, DIALOG_CREW_EDIT_MEMBERS);
				SendClientMessage(playerid, -1, "{999999}Only the founder can modify a leading member.");
				return 1;
			}
			PI[playerid][P_CREW_PLAYER_SELECTED] = PI[playerid][P_CREW_DIALOG_PID][listitem];
			new dialog_Title[128], dialog[300];
			format(dialog_Title, 128, "{"ORANGE"}"SERVER_NAME" - {%x}%s {CFD600}(%s)", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], CI[PI[playerid][P_CREW_SLOT]][C_NAME], name);
			format(dialog, 300, "%sLevel: Newo\n%sLevel: Advanced\n%sLevel: Profesional", (rank == RANK_NOOB ? ("{DCDEA6}") : ("{CFD600}")), (rank == RANK_ADVANCED ? ("{DCDEA6}") : ("{CFD600}")), (rank == RANK_PROFESSIONAL ? ("{DCDEA6}") : ("{CFD600}")) );
			if(PI[playerid][P_CREW_RANK] == RANK_FOUNDER)
			{
				format(dialog, sizeof dialog, "%s\n%sLevel: Leader", dialog, (rank == RANK_LEADER ? ("{DCDEA6}") : ("{CFD600}")) );
			}
			strcat(dialog, "\n{90C3D4}Expel member");
			
			ShowPlayerDialog(playerid, DIALOG_CREW_EDIT_MEMBER, DIALOG_STYLE_LIST, dialog_Title, dialog, ">>", "<<");
			return 1;
		}
		
		case DIALOG_CREW_EDIT_COLOR:
		{
			if(PI[playerid][P_CREW_SLOT] == -1) return 1;
			if(!response) return ShowDialog(playerid, DIALOG_CREW_MANAGE);
			switch(listitem)
			{
				case 0: CI[PI[playerid][P_CREW_SLOT]][C_COLOR] = 0xFF7A45;
				case 1: CI[PI[playerid][P_CREW_SLOT]][C_COLOR] = 0xCCFF00;
				case 2: CI[PI[playerid][P_CREW_SLOT]][C_COLOR] = 0xFFCC00;
				case 3: CI[PI[playerid][P_CREW_SLOT]][C_COLOR] = 0x3AA0E8;
				case 4: CI[PI[playerid][P_CREW_SLOT]][C_COLOR] = 0x31D613;
				case 5: CI[PI[playerid][P_CREW_SLOT]][C_COLOR] = 0xC6D855;
				case 6: CI[PI[playerid][P_CREW_SLOT]][C_COLOR] = 0xED0018;
				case 7: CI[PI[playerid][P_CREW_SLOT]][C_COLOR] = 0xFF36EE;
				case 8: CI[PI[playerid][P_CREW_SLOT]][C_COLOR] = 0xFF00B3;
				case 9: CI[PI[playerid][P_CREW_SLOT]][C_COLOR] = 0xEB99FF;
			}
			new message[64]; format(message, 64, "The color of the {%x}crew {FFFFFF}changed.", CI[PI[playerid][P_CREW_SLOT]][C_COLOR]);
			new label[24]; format(label, 24, "{%x}%s Crew", CI[PI[playerid][P_CREW_SLOT]][C_COLOR], CI[PI[playerid][P_CREW_SLOT]][C_NAME]);
			for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
			{
				if(IsPlayerConnected(i))
				{
					if(PI[i][P_CREW_ID] == PI[playerid][P_CREW_ID])
					{
						UpdateDynamic3DTextLabelText(PI[i][P_CREW_LABEL], 0xFFFFFFAA, label);
						SendClientMessage(i, -1, message);
					}
				}
			}
			UpdateCrewDatabase(PI[playerid][P_CREW_ID], "COLOR", CI[PI[playerid][P_CREW_SLOT]][C_COLOR]);
			return 1;
		}
		
		case DIALOG_CREW_EDIT_MEMBER:
		{
			if(PI[playerid][P_CREW_SLOT] == -1) return 1;
			if(!response) return ShowDialog(playerid, DIALOG_CREW_EDIT_MEMBERS);
			switch(listitem)
			{
				case 0:
				{
					ChangePlayerCrewRank(PI[playerid][P_CREW_PLAYER_SELECTED], RANK_NOOB);
					SendClientMessage(playerid, -1, "You have changed the range of this member.");
					ShowDialog(playerid, DIALOG_CREW_MANAGE);
				}
				case 1:
				{
					ChangePlayerCrewRank(PI[playerid][P_CREW_PLAYER_SELECTED], RANK_ADVANCED);
					SendClientMessage(playerid, -1, "You have changed the range of this member.");
					ShowDialog(playerid, DIALOG_CREW_MANAGE);
				}
				case 2:
				{
					ChangePlayerCrewRank(PI[playerid][P_CREW_PLAYER_SELECTED], RANK_PROFESSIONAL);
					SendClientMessage(playerid, -1, "You have changed the range of this member.");
					ShowDialog(playerid, DIALOG_CREW_MANAGE);
				}
				case 3:
				{
					if(PI[playerid][P_CREW_RANK] == RANK_LEADER)
					{
						DeletePlayerCrew(PI[playerid][P_CREW_PLAYER_SELECTED]);
						CI[PI[playerid][P_CREW_SLOT]][C_MEMBERS] --;
						UpdateCrewDatabase(PI[playerid][P_CREW_ID], "MEMBERS", CI[PI[playerid][P_CREW_SLOT]][C_MEMBERS]);
						SendClientMessage(playerid, -1, "You have expelled this CREW member.");
						ShowDialog(playerid, DIALOG_CREW_MANAGE);
						return 1;
					}
					ChangePlayerCrewRank(PI[playerid][P_CREW_PLAYER_SELECTED], RANK_LEADER);
					SendClientMessage(playerid, -1, "You have changed the range of this member.");
					ShowDialog(playerid, DIALOG_CREW_MANAGE);
				}
				case 4:
				{
					if(PI[playerid][P_CREW_RANK] == RANK_FOUNDER)
					{
						DeletePlayerCrew(PI[playerid][P_CREW_PLAYER_SELECTED]);
						CI[PI[playerid][P_CREW_SLOT]][C_MEMBERS] --;
						UpdateCrewDatabase(PI[playerid][P_CREW_ID], "MEMBERS", CI[PI[playerid][P_CREW_SLOT]][C_MEMBERS]);
						SendClientMessage(playerid, -1, "You have expelled this member of your CREW.");
						ShowDialog(playerid, DIALOG_CREW_MANAGE);
					}
				}
			}
			return 1;
		}
		
		case DIALOG_SELECT_COLOR:
		{
			if(PI[playerid][P_GAMEMODE] == M_ZOMBIE || PI[playerid][P_GAMEMODE] == M_GANGWAR || PI[playerid][P_GAMEMODE] == M_TDM) return 1;
			if(!response) return 1;
			SetPlayerColor(playerid, RandomColors[listitem]);
			PI[playerid][P_COLOR] = RandomColors[listitem];
			SendClientMessage(playerid, RandomColors[listitem], "Color changed correctly.");
			return 1;
		}
		
		case DIALOG_TOPS:
		{
			if(listitem == PI[playerid][P_TOP_CLOSE]) return 1;
			if(response)
			{
				if(PI[playerid][P_DIALOG_PAGE] >= GetTopsPages() - 1) PI[playerid][P_DIALOG_PAGE] = 0;
				else PI[playerid][P_DIALOG_PAGE] ++;
				ShowDialog(playerid, DIALOG_TOPS);
			}
			else
			{
				if(PI[playerid][P_DIALOG_PAGE] <= 0) PI[playerid][P_DIALOG_PAGE] = GetTopsPages() - 1;
				else PI[playerid][P_DIALOG_PAGE] --;
				ShowDialog(playerid, DIALOG_TOPS);
			}
			return 1;
		}
		
		case DIALOG_ADMINS:
		{
			if(!PI[playerid][P_MOD]) return 1;
			
			if(PI[playerid][P_ADMINS_DIALOG][listitem] == 0) //Next
			{
				if(PI[playerid][P_DIALOG_PAGE] >= GetAdminPages() - 1) PI[playerid][P_DIALOG_PAGE] = 0;
				else PI[playerid][P_DIALOG_PAGE] ++;
				ShowDialog(playerid, DIALOG_ADMINS);
				return 1;
			}
			else if(PI[playerid][P_ADMINS_DIALOG][listitem] == -1)
			{
				if(PI[playerid][P_DIALOG_PAGE] <= 0) PI[playerid][P_DIALOG_PAGE] = GetAdminPages() - 1;
				else PI[playerid][P_DIALOG_PAGE] --;
				ShowDialog(playerid, DIALOG_ADMINS);
				return 1;
			}
			
			if(response) 
			{
				if(PI[playerid][P_MOD] < ADMIN_LEVEL_LEADER) return 1;
				
				new DBResult:Result, name[24], rank;
				format(DB_Query, sizeof(DB_Query), "SELECT NAME, MOD FROM USERS WHERE ID = '%d'", PI[playerid][P_ADMINS_DIALOG][listitem]);
				Result = db_query(Database, DB_Query);
				if(db_num_rows(Result))
				{
					db_get_field(Result, 0, name, 24);
					rank = db_get_field_int(Result, 1);
				}
				db_free_result(Result);
				
				if(rank > PI[playerid][P_MOD])
				{
					SendClientMessage(playerid, -1, "{CCCCCC}You cannot modify a legacyior range to yours.");
					return 1;
				}
				
				if(PI[playerid][P_MOD] == ADMIN_LEVEL_LEADER && rank == ADMIN_LEVEL_LEADER)
				{
					SendClientMessage(playerid, -1, "{CCCCCC}You can't modify an admin with the same range as yours.");
					return 1;
				}
				
				PI[playerid][P_ADMIN_SELECTED] = PI[playerid][P_ADMINS_DIALOG][listitem];
				new dialog_Title[128], dialog[300];
				format(dialog_Title, 128, "{"ORANGE"}"SERVER_NAME" - Admin {CFD600}(%s)", name);
				format(dialog, 500, "%sLevel: helpers\n%sLevel:Testing\n%sRank: Standard", (rank == ADMIN_LEVEL_SAY ? ("{DCDEA6}") : ("{CFD600}")), (rank == ADMIN_LEVEL_KICK ? ("{DCDEA6}") : ("{CFD600}")), (rank == ADMIN_LEVEL_BAN ? ("{DCDEA6}") : ("{CFD600}")) );
				if(PI[playerid][P_MOD] == ADMIN_LEVEL_OWNER) format(dialog, sizeof dialog, "%s\n%sRank: Leader\n%sRank: hard", dialog, (rank == ADMIN_LEVEL_LEADER ? ("{DCDEA6}") : ("{CFD600}")), (rank == ADMIN_LEVEL_OWNER ? ("{DCDEA6}") : ("{CFD600}")) );
				strcat(dialog, "\n{90C3D4}Remove admin level");
				
				ShowPlayerDialog(playerid, DIALOG_EDIT_ADMIN, DIALOG_STYLE_LIST, dialog_Title, dialog, ">>", "<<");
				
			}
			return 1;
		}
		
		case DIALOG_EDIT_ADMIN:
		{
			if(PI[playerid][P_MOD] < ADMIN_LEVEL_LEADER) return 1;
			if(!response) return ShowDialog(playerid, DIALOG_ADMINS);
			
			switch(listitem)
			{
				case 0:
				{
					ChangeAdminRank(PI[playerid][P_ADMIN_SELECTED], ADMIN_LEVEL_SAY);
					SendClientMessage(playerid, -1, "{CCCCCC}You have modified the Range a {b0e66a} Helpers {ccccc} of this admin.");
					return 1;
				}
				case 1:
				{
					ChangeAdminRank(PI[playerid][P_ADMIN_SELECTED], ADMIN_LEVEL_KICK);
					SendClientMessage(playerid, -1, "{CCCCCC}You have modified the range A {B0E66A} to the test {ccccc} of this admin.");
					return 1;
				}
				case 2:
				{
					ChangeAdminRank(PI[playerid][P_ADMIN_SELECTED], ADMIN_LEVEL_BAN);
					SendClientMessage(playerid, -1, "{CCCCCC}You have modified the range A {b0e66a} standard {cccccc} of this admin.");
					return 1;
				}
				case 3:
				{
					if(PI[playerid][P_MOD] == ADMIN_LEVEL_OWNER)
					{
						ChangeAdminRank(PI[playerid][P_ADMIN_SELECTED], ADMIN_LEVEL_LEADER);
						SendClientMessage(playerid, -1, "{CCCCCC}You have modified the range A {b0e66a} Leader {ccccc} of this admin.");
					}
					else
					{
						ChangeAdminRank(PI[playerid][P_ADMIN_SELECTED], ADMIN_LEVEL_NOLEVEL);
						SendClientMessage(playerid, -1, "{CCCCCC}You have eliminated the administration member.");
					}
					return 1;
				}
				case 4:
				{
					if(PI[playerid][P_MOD] == ADMIN_LEVEL_OWNER)
					{
						ChangeAdminRank(PI[playerid][P_ADMIN_SELECTED], ADMIN_LEVEL_OWNER);
						SendClientMessage(playerid, -1, "{CCCCCC}You have modified the range A {B0e66a} Dueo {cccccc} of this admin.");
						return 1;
					}
				}
				case 5:
				{
					ChangeAdminRank(PI[playerid][P_ADMIN_SELECTED], ADMIN_LEVEL_NOLEVEL);
					SendClientMessage(playerid, -1, "{CCCCCC}You have eliminated the administration member.");
					return 1;
				}
			}
			return 1;
		}
		
		case DIALOG_EDIT_PLAYERNAME:
		{
			if(response) return 1;
			
			format(DB_Query, sizeof DB_Query, "UPDATE USERS SET NAME = '%s' WHERE ID = '%d'", PI[playerid][P_PLAYER_SELECTED_NAME], PI[playerid][P_PLAYER_SELECTED]); db_query(Database, DB_Query);
			format(DB_Query, sizeof DB_Query, "UPDATE HOUSES SET OWNER = '%s' WHERE OWNERID = '%d'", PI[playerid][P_PLAYER_SELECTED_NAME], PI[playerid][P_PLAYER_SELECTED]); db_query(Database, DB_Query);
			format(DB_Query, sizeof DB_Query, "UPDATE VEHICLES SET OWNER = '%s' WHERE OWNERID = '%d'", PI[playerid][P_PLAYER_SELECTED_NAME], PI[playerid][P_PLAYER_SELECTED]); db_query(Database, DB_Query);
			format(DB_Query, sizeof DB_Query, "UPDATE MUSIC SET OWNER = '%s' WHERE OWNERID = '%d'", PI[playerid][P_PLAYER_SELECTED_NAME], PI[playerid][P_PLAYER_SELECTED]); db_query(Database, DB_Query);
			
			new DBResult:Result, connected, c_id;
			format(DB_Query, sizeof(DB_Query), "SELECT CONNECTED, PLAYERID FROM USERS WHERE ID = '%d'", PI[playerid][P_PLAYER_SELECTED]);
			Result = db_query(Database, DB_Query);
			if(db_num_rows(Result))
			{
				connected = db_get_field_int(Result, 0);
				c_id = db_get_field_int(Result, 1);
			}
			db_free_result(Result);
			
			if(connected)
			{
				format(PI[c_id][P_NAME], 24, "%s", PI[playerid][P_PLAYER_SELECTED_NAME]);
				SetPlayerName(c_id, PI[c_id][P_NAME]);
				SendClientMessageEx(c_id, -1, "{99CC00}An administrator changed your name to {999900}'%s'", PI[c_id][P_NAME]);
			}
			
			SendClientMessage(playerid, -1, "{CCCCCC}You have changed the name of this user.");
			return 1;
		}
		
		case DIALOG_NPASS:
		{
			if(response)
			{
				if(udb_hash(inputtext) == PI[playerid][P_PASS]) ShowPlayerDialog(playerid, DIALOG_NPASS + 1, DIALOG_STYLE_PASSWORD, "{"ORANGE"}"SERVER_NAME" - Password", "Introduzca la nueva contrasea:", "CAMBIAR", "X");
				else SendClientMessage(playerid, -1, "{999999}The password is not correct.");
				return 1;
			}
			return 1;
		}
		
		case DIALOG_NPASS + 1:
		{
			if(response)
			{
				if(!strlen(inputtext)) return SendClientMessage(playerid, -1, "{999999}Error: no characters were detected.");
				if(strlen(inputtext) <= 2 || strlen(inputtext) >= 16) return SendClientMessage(playerid, -1, "{999999}Error: The password must contain 3 to 15 characters.");
				PI[playerid][P_PASS] = udb_hash(inputtext);
				
				format(DB_Query, sizeof DB_Query, "UPDATE USERS SET PASS = '%d' WHERE ID = '%d'", PI[playerid][P_PASS], PI[playerid][P_ID]);
				db_query(Database, DB_Query);
				
				SendClientMessage(playerid, -1, "{99CC00}The password has changed.");
				return 1;
			}
			return 1;
		}
		
		case DIALOG_DUEL:
		{
			if(response)
			{
				DLI[playerid][DL_DUEL_LIST_ID] = listitem;
				ShowDialog(playerid, DIALOG_DUEL_WEAPONS);
				return 1;
			}
			return 1;
		}
		
		case DIALOG_DUEL_WEAPONS:
		{
			if(response)
			{
				DLI[playerid][DL_DUEL_WEAPON_ID] = listitem;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~y~~h~DUEL PETICION REVISED", 3000, 4);
				
				PI[playerid][P_DUEL_ID] = playerid;
				PI[DLI[playerid][DL_PLAYER_TWO]][P_DUEL_ID] = playerid;
				PI[DLI[playerid][DL_PLAYER_TWO]][P_DUEL_PET_TIME] = gettime();
				ShowDialog(DLI[playerid][DL_PLAYER_TWO], DIALOG_NEW_DUEL);
			}
			else ShowDialog(playerid, DIALOG_DUEL);
			return 1;
		}
		
		case DIALOG_NEW_DUEL:
		{
			if(response)
			{
				if(gettime() > PI[playerid][P_DUEL_PET_TIME] + 10) return SendClientMessage(playerid, -1, "{CCCCCC}Error: Duel Expor request.");
				if(DLI[PI[playerid][P_DUEL_ID]][DL_PLAYER_TWO] != playerid) return SendClientMessage(playerid, -1, "{CCCCCC}Error: Duel Expor request.");
				if(!IsPlayerConnected( DLI[PI[playerid][P_DUEL_ID]][DL_PLAYER_ONE] )) return SendClientMessage(playerid, -1, "{CCCCCC}Error: The player who sent the petition is no longer available.");
				if(PI[ DLI[PI[playerid][P_DUEL_ID]][DL_PLAYER_ONE] ][P_STATUS] != S_SPAWNED) return SendClientMessage(playerid, -1, "{CCCCCC}Error: The player who sent the petition is no longer available.");
				
				StartDuel(DLI[PI[playerid][P_DUEL_ID]][DL_PLAYER_ONE], DLI[PI[playerid][P_DUEL_ID]][DL_PLAYER_TWO]);
				return 1;
			}
			else GameTextForPlayer(DLI[PI[playerid][P_DUEL_ID]][DL_PLAYER_ONE], "~n~~n~~n~~n~~r~~h~Rejected duel request", 3000, 4);
			return 1;
		}
		
		case DIALOG_USER_PANEL:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: if(PI[playerid][P_PMS]) PI[playerid][P_PMS] = false; else PI[playerid][P_PMS] = true;
					case 1: if(PI[playerid][P_IGNORE_DUELS]) PI[playerid][P_IGNORE_DUELS] = false; else PI[playerid][P_IGNORE_DUELS] = true;
					case 2:
					{
						if(PI[playerid][P_IGNORE_MUSIC]) PI[playerid][P_IGNORE_MUSIC] = false; 
						else
						{
							StopAudioStreamForPlayer(playerid);
							PI[playerid][P_IGNORE_MUSIC] = true;
						}
					}
					case 3: if(PI[playerid][P_IGNORE_SOUNDS]) PI[playerid][P_IGNORE_SOUNDS] = false; else PI[playerid][P_IGNORE_SOUNDS] = true;
					case 4:
					{
						if(PI[playerid][P_IGNORE_TPTD])
						{
							TextDrawShowForPlayer(playerid, TD_LSR_TPINFO[0]);
							TextDrawShowForPlayer(playerid, TD_LSR_TPINFO[1]);
							PI[playerid][P_IGNORE_TPTD] = false;
						}
						else 
						{
							TextDrawHideForPlayer(playerid, TD_LSR_TPINFO[0]);
							TextDrawHideForPlayer(playerid, TD_LSR_TPINFO[1]);
							PI[playerid][P_IGNORE_TPTD] = true;
						}
					}
					case 5:
					{
						if(PI[playerid][P_IGNORE_LSRTD])
						{
							TextDrawShowForPlayer(playerid, TD_LSR_HUD[0]);
							TextDrawShowForPlayer(playerid, TD_LSR_HUD[1]);
							TextDrawShowForPlayer(playerid, TD_LSR_HUD[2]);
							PI[playerid][P_IGNORE_LSRTD] = false; 
						}
						else
						{
							TextDrawHideForPlayer(playerid, TD_LSR_HUD[0]);
							TextDrawHideForPlayer(playerid, TD_LSR_HUD[1]);
							TextDrawHideForPlayer(playerid, TD_LSR_HUD[2]);
							PI[playerid][P_IGNORE_LSRTD] = true;
						}
					}
				}
				ShowDialog(playerid, dialogid);
			}
			return 1;
		}
		
	}
    return 0;
}

StartDuel(player_one, player_two)
{
	DLI[ PI[player_one][P_DUEL_ID] ][DL_RUNNING] = true;
	
	ExitPlayerGameMode(player_one);
	ExitPlayerGameMode(player_two);
	JoinPlayerGameMode(player_one, GAME_DUEL);
	JoinPlayerGameMode(player_two, GAME_DUEL);
	return 1;
}

FinishDuel(duel_id, winner, loser)
{
	DLI[duel_id][DL_RUNNING] = false;
	
	GivePlayerMoneyEx(winner, DLI[duel_id][DL_BET] * 2);
	GameTextForPlayer(winner, "~n~~n~~n~~n~~g~~h~~h~ganador", 3000, 4);
	SendClientMessageEx(winner, -1, "{99CC00}Money earned: %d$.", DLI[duel_id][DL_BET]);
	
	GameTextForPlayer(loser, "~n~~n~~n~~n~~r~~h~perdedor", 3000, 4);
	SendClientMessageEx(loser, -1, "{CC0000}Lost money in bets: %d$.", DLI[duel_id][DL_BET]);
	return 1;
}

ChangeAdminRank(id, rank)
{
	format(DB_Query, sizeof DB_Query, "UPDATE USERS SET MOD = '%d' WHERE ID = '%d'", rank, id);
	db_query(Database, DB_Query);
	
	new DBResult:Result, connected, c_id;
	format(DB_Query, sizeof(DB_Query), "SELECT CONNECTED, PLAYERID FROM USERS WHERE ID = '%d'", id);
	Result = db_query(Database, DB_Query);
	if(db_num_rows(Result))
	{
		connected = db_get_field_int(Result, 0);
		c_id = db_get_field_int(Result, 1);
	}
	db_free_result(Result);
	
	if(connected)
	{
		PI[c_id][P_MOD] = rank;
		SendClientMessageEx(c_id, -1, "{CCCCCC}Your administrator level is now {B0E66A}%s.", adminLevel(PI[c_id][P_MOD]));
	}
	return 1;
}

RemovePlayerHouse(id, ammount, money = 0, score = 0)
{
	format(DB_Query, sizeof DB_Query, "UPDATE USERS SET HOUSES = HOUSES - %d, MONEY = MONEY + %d, SCORE = SCORE + %d WHERE ID = '%d'", ammount, money, score, id);
	db_query(Database, DB_Query);
	
	new DBResult:Result, connected, c_id;
	format(DB_Query, sizeof(DB_Query), "SELECT CONNECTED, PLAYERID FROM USERS WHERE ID = '%d'", id);
	Result = db_query(Database, DB_Query);
	if(db_num_rows(Result))
	{
		connected = db_get_field_int(Result, 0);
		c_id = db_get_field_int(Result, 1);
	}
	db_free_result(Result);
	
	if(connected) 
	{
		GivePlayerMoneyEx(c_id, money);
		GivePlayerScoreEx(c_id, score);
		PI[c_id][P_HOUSES] -= ammount;
		
		for(new i = 0; i != MAX_HOUSES_PER_PLAYER; i++)
		{
			if(IsValidDynamicMapIcon(PI[c_id][P_HOUSEICONS][i]))
			{
				DestroyDynamicMapIcon(PI[c_id][P_HOUSEICONS][i]);
			}
		}
		if(PI[c_id][P_HOUSES] > 0) CreatePlayerHouseIcons(c_id);
	}
	return 1;
}


forward GODMODE_RepairVeh(playerid);
public GODMODE_RepairVeh(playerid)
{
	if(PI[playerid][P_GODMODE] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		RepairVehicle(GetPlayerVehicleID(playerid));
		PI[playerid][P_TIMERS][1] = SetTimerEx("GODMODE_RepairVeh", 1000, false, "d", playerid);
	}
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER) PI[playerid][P_ANTICARTROLL_TIME] = GetTickCount();
    else if(oldstate == PLAYER_STATE_DRIVER)
    {
		if(PI[playerid][P_TUNING_MENU]) HidePlayerTuningMenu(playerid);
        if(newstate != PLAYER_STATE_SPECTATING && ((GetTickCount() - PI[playerid][P_ANTICARTROLL_TIME]) < 220) )//player entered and exited vehicle faster than 220 ms.
        {
			new message[145]; format(message, 145, "{FF7A45}NOTICE: The %S player has been expelled for possible use of Car Troll / Lagger.", PI[playerid][P_NAME]);
			SendMessageToAdmins(-1, message);
			
			new log[145]; format(log, 145, "Player%S (%D) [%S] kickeado for possible use of car troll / lagger ", PI[playerid][P_NAME], PI[playerid][P_ID], PI[playerid][P_IP]);
			AntiCheatLog(log);
		
 			Kick(playerid);
			
			for(new v = 0; v < GetVehiclePoolSize(); v ++)
			{
				if(!VEHICLES_PLAYER[v] && !VI[v][V_VALID] && GetVehicleVirtualWorld(v) == FREEROAM_VW)
				{
					SetVehicleToRespawn(v);
					LinkVehicleToInterior(v, 0);
				}
			}
			SendClientMessageToAll(-1, "{"ORANGE"}All vehicles were reswar.");
			return 1;
        }
    }
	
	switch(PI[playerid][P_GAMEMODE])
	{
		case M_FREEROAM:
		{
			
			if(newstate == PLAYER_STATE_DRIVER && PI[playerid][P_GODMODE])
			{
				RepairVehicle(GetPlayerVehicleID(playerid));
				PI[playerid][P_TIMERS][1] = SetTimerEx("GODMODE_RepairVeh", 1000, false, "d", playerid);
			}
			return 1;
		}
		
		case M_DERBY:
		{
			if(oldstate == PLAYER_STATE_DRIVER) 
			{
				if(PI[playerid][P_STATUS] == S_SPAWNED && PI[playerid][P_DERBY_STATUS] == PD_NORMAL)
				{
					if(DI[D_STATUS] == DERBY_RUNNING && DI[D_RUNNINGPLAYERS] == 1 && DI[D_WINNER] == playerid)
					{
						ApplyAnimation(playerid, "CASINO", "manwind", 4.1, 1, 1, 1, 1, 1, 1);
						ApplyAnimation(playerid, "CASINO", "manwind", 4.1, 1, 1, 1, 1, 1, 1);
						return 1;
					}
					if(!IsValidVehicle(PI[playerid][P_DERBY_VEHICLEID]) && PI[playerid][P_DERBY_VEHICLEID] != INVALID_VEHICLE_ID) return SpawnDerbyCarForPlayer(playerid, DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][0], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][1], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][2]+2.0, DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][3], DI[D_VEHICLE]);
					PutPlayerInVehicleEx(playerid, PI[playerid][P_DERBY_VEHICLEID], 0);
				}
			}
			return 1;
		}
		
		case M_SHOOTER:
		{
			if(oldstate == PLAYER_STATE_DRIVER) 
			{
				if(PI[playerid][P_STATUS] == S_SPAWNED && PI[playerid][P_SHOOTER_STATUS] == PD_NORMAL)
				{
					if(ST[S_STATUS] == SHOOTER_RUNNING && ST[S_RUNNING_PLAYERS] == 1 && ST[S_WINNER] == playerid)
					{
						ApplyAnimation(playerid, "CASINO", "manwind", 4.1, 1, 1, 1, 1, 1, 1);
						ApplyAnimation(playerid, "CASINO", "manwind", 4.1, 1, 1, 1, 1, 1, 1);
						return 1;
					}
					if(!IsValidVehicle(PI[playerid][P_SHOOTER_VEHICLEID]) && PI[playerid][P_SHOOTER_VEHICLEID] == INVALID_VEHICLE_ID)
					{
						if(IsValidVehicle(PI[playerid][P_SHOOTER_VEHICLEID]) && PI[playerid][P_SHOOTER_VEHICLEID] != INVALID_VEHICLE_ID)
						{
							DestroyVehicleEx(PI[playerid][P_SHOOTER_VEHICLEID]);
							PI[playerid][P_SHOOTER_VEHICLEID] = INVALID_VEHICLE_ID;
						}
						PI[playerid][P_SHOOTER_VEHICLEID] = CreateVehicle(ST[S_VEH_MODELID], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][0], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][1], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][2], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][3], minrand(128, 255), minrand(128, 255), 99999);
						SetVehicleVirtualWorld(PI[playerid][P_SHOOTER_VEHICLEID], SHOOTER_VW);
						LinkVehicleToInterior(PI[playerid][P_SHOOTER_VEHICLEID], ST[S_INT]);
						SetVehicleParamsEx(PI[playerid][P_SHOOTER_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
						PutPlayerInVehicleEx(playerid, PI[playerid][P_SHOOTER_VEHICLEID], 0);
						return 1;
					}
					PutPlayerInVehicleEx(playerid, PI[playerid][P_SHOOTER_VEHICLEID], 0);
				}
			}
			return 1;
		}
		case M_RACE:
		{
			if(oldstate == PLAYER_STATE_DRIVER) 
			{
				if(PI[playerid][P_STATUS] == S_SPAWNED && PI[playerid][P_RACE_STATUS] == PD_NORMAL)
				{
					if(RC[R_STATUS] == RACE_RUNNING)
					{
						if(IsValidVehicle(PI[playerid][P_RACE_VEHICLEID]) && PI[playerid][P_RACE_VEHICLEID] != INVALID_VEHICLE_ID)
						{
							DestroyVehicleEx(PI[playerid][P_RACE_VEHICLEID]);
							PI[playerid][P_RACE_VEHICLEID] = INVALID_VEHICLE_ID;
						}
						new kkc = PI[playerid][P_RACE_CPCOUNT] - 1;
						if(kkc < 0) kkc = 0;
						PI[playerid][P_RACE_VEHICLEID] = CreateVehicle(RC[R_MODELID], RACE_CP[ kkc ][R_CP_POS][0], RACE_CP[ kkc ][R_CP_POS][1], RACE_CP[ kkc ][R_CP_POS][2] + 0.5, RC[R_ANGLE], minrand(128, 255), minrand(128, 255), 99999);
						SetVehicleVirtualWorld(PI[playerid][P_RACE_VEHICLEID], RACE_VW);
						LinkVehicleToInterior(PI[playerid][P_RACE_VEHICLEID], RC[R_INT]);
						SetVehicleParamsEx(PI[playerid][P_RACE_VEHICLEID], VEHICLE_PARAMS_ON, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
						PutPlayerInVehicleEx(playerid, PI[playerid][P_RACE_VEHICLEID], 0);
					}
					else if(RC[R_STATUS] == RACE_WAIT)
					{
						if(IsValidVehicle(PI[playerid][P_RACE_VEHICLEID]) && PI[playerid][P_RACE_VEHICLEID] != INVALID_VEHICLE_ID)
						{
							DestroyVehicleEx(PI[playerid][P_RACE_VEHICLEID]);
							PI[playerid][P_RACE_VEHICLEID] = INVALID_VEHICLE_ID;
							PI[playerid][P_RACE_VEHICLEID] = CreateVehicle(RC[R_MODELID], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][0], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][1], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][2] + 0.5, RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][3], minrand(128, 255), minrand(128, 255), 99999);
							SetVehicleVirtualWorld(PI[playerid][P_RACE_VEHICLEID], RACE_VW);
							LinkVehicleToInterior(PI[playerid][P_RACE_VEHICLEID], RC[R_INT]);
							SetVehicleParamsEx(PI[playerid][P_RACE_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
							PutPlayerInVehicleEx(playerid, PI[playerid][P_RACE_VEHICLEID], 0);
						}
						else
						{
							SetVehicleVirtualWorld(PI[playerid][P_RACE_VEHICLEID], RACE_VW);
							LinkVehicleToInterior(PI[playerid][P_RACE_VEHICLEID], RC[R_INT]);
							SetVehicleParamsEx(PI[playerid][P_RACE_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
							PutPlayerInVehicleEx(playerid, PI[playerid][P_RACE_VEHICLEID], 0);
						}
						
					}
				}
			}
		}
		case M_ZOMBIE:
		{
			if(newstate == PLAYER_STATE_DRIVER)
			{
				if(PI[playerid][P_ZOMBIE_TEAM] == TEAM_ZOMBIE)
				{
					RemovePlayerFromVehicleEx(playerid);
					GameTextForPlayer(playerid, "~r~Zombies do not drive...", 2000, 4);
				}
			}
			return 1;
		}
	}
    return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
{
	if(PI[playerid][P_GAMEMODE] != M_EVENT)
	{
		if(GetPlayerWeapon(playerid) == 38) //MINIGUN
		{
			Kick(playerid);
			return 1;
		}
	}
	
	switch(PI[playerid][P_GAMEMODE])
	{
		case M_FREEROAM:
		{
			if(PI[playerid][P_SPAWN_PROTECTION]) 
			{
				SetPlayerHealth(playerid, PI[playerid][P_HEALTH]);
				ResetPlayerWeapons(playerid);
				for(new w = 0; w != 10; w ++) GivePlayerWeapon(playerid, Random_Weapons[random(sizeof(Random_Weapons))], 500);
				TextDrawMessageForPlayer(playerid, "~r~~h~~h~OFF~n~Spawn_Protection", 3000);
				//GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~~h~~y~spawn_protection_~r~~h~off~n~_", 3000, 6);
				PI[playerid][P_SPAWN_PROTECTION] = false;
			}
			if(PI[playerid][P_GODMODE]) DeactivePlayerGodMode(playerid);
			else
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
				{
					new driver = GetVehicleDriver(GetPlayerVehicleID(playerid));
					if(driver != -1)
					{
						if(PI[driver][P_GODMODE]) DeactivePlayerGodMode(driver);
					}
				}
				if(IsPlayerConnected(damagedid))
				{
					if(PI[damagedid][P_GODMODE]) GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~~h~~g~Player with~p~/godmode~n~_", 3000, 6);
					if(PI[damagedid][P_SPAWN_PROTECTION]) GameTextForPlayer(playerid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~~h~~g~Player with~p~spawn_protection~n~_", 3000, 6);
				}
			}
			return 1;
		}
		
		case M_ZOMBIE:
		{
			if(PI[playerid][P_ZOMBIE_TEAM] == TEAM_ZOMBIE && PI[damagedid][P_ZOMBIE_TEAM] == TEAM_HUMANS)
			{
				new Float:h; GetPlayerHealth(damagedid, h);
				SetPlayerHealth(damagedid, h - 15.0);
				
				if(PI[damagedid][P_VIP]) return 1;
				SetPlayerDrunkLevel(damagedid, 6000);
				
				if(!PI[damagedid][P_INFECTED])
				{
					GameTextForPlayer(damagedid, "_~n~_~n~_~n~_~n~_~n~_~n~_~n~~r~infected~n~_", 3000, 6);
					TextDrawShowForPlayer(damagedid, TD_LSR_ZOMBIE_INFECTED);
					PI[damagedid][P_INFECTED] = true;
					SetTimerEx("HumanPlayerInfected", 10000, false, "i", damagedid);
				}
				return 1;
			}
			return 1;
		}
		
	}
	return 1;
}

forward FinishPlayerSpectatePlayer(playerid);
public FinishPlayerSpectatePlayer(playerid)
{
    return TogglePlayerSpectatingEx(playerid, false);
}

ShowTextDrawInfo(time, message[])
{
	TextDrawSetString(TD_LSR_TPINFO[0], "Information");
	TextDrawSetString(TD_LSR_TPINFO[1], message);
	
	KillTimer(TPINFO_Timer);
	TPINFO_Timer = SetTimer("HideTPInfo", time, false);
	return 1;
}

forward HideTPInfo();
public HideTPInfo()
{
	TextDrawSetString(TD_LSR_TPINFO[0], "");
	TextDrawSetString(TD_LSR_TPINFO[1], "");
	/*TextDrawHideForAll(TD_LSR_TPINFO[0]);
	TextDrawHideForAll(TD_LSR_TPINFO[1]);*/
	return 1;
}

SpawnCarForPlayer(playerid, modelid, Float:X = 0.0, Float:Y = 0.0, Float:Z = 0.0, Float:VAngle = 0.0, freeze = false)
{
	if(PI[playerid][P_GAMEMODE] == M_FREEROAM)
	{
		new Float:p[3]; GetPlayerPos(playerid, p[0], p[1], p[2]);
		for(new i = 0; i != sizeof(PlayerSpawnPosition_FR_LV); i++)
		{
			if(IsPlayerInDynamicArea(playerid, PlayerSpawnPosition_Areas[i]))
			{
				if(p[2] <= PlayerSpawnPosition_FR_LV[i][2] + 10.0)
				{
					SendClientMessage(playerid, -1, "{CCCCCC}You can't get a vehicle in a spawn area, {c6d855} Get a bit.");
					return 1;
				}
			}
		}
	}
	
	new Float:pos[3], Float:angle;
	
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	if(X != 0.0 && Y != 0.0 && Z != 0.0)
	{
		pos[0] = X;
		pos[1] = Y;
		pos[2] = Z;
		angle = VAngle;
	}
	else
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) GetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
		else GetPlayerFacingAngle(playerid, angle);
	}
	
	if(IsValidVehicle(PI[playerid][P_FRVEHICLE]))
	{
		VEHICLES_PLAYER[PI[playerid][P_FRVEHICLE]] = false;
		DestroyVehicleEx(PI[playerid][P_FRVEHICLE]);
	}
	PI[playerid][P_FRVEHICLE] = CreateVehicle(modelid, pos[0], pos[1], pos[2], angle, minrand(128, 255), minrand(128, 255), -1);
	VEHICLES_PLAYER[PI[playerid][P_FRVEHICLE]] = true;
	LinkVehicleToInterior(PI[playerid][P_FRVEHICLE], GetPlayerInterior(playerid));
    SetVehicleVirtualWorld(PI[playerid][P_FRVEHICLE], GetPlayerVirtualWorld(playerid));
	PutPlayerInVehicleEx(playerid, PI[playerid][P_FRVEHICLE], 0);
	
	if(freeze) SetVehicleVelocity(PI[playerid][P_FRVEHICLE], floatsin(-VAngle, degrees) * 0.1, floatcos(-VAngle, degrees) * 0.1, 0.2);
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	if(!IsPlayerConnected(killerid)) return 1;
	switch(PI[killerid][P_GAMEMODE])
	{
		case M_FREEROAM:
		{
			if(VEHICLES_PLAYER[vehicleid] && PI[killerid][P_FRVEHICLE] == vehicleid)
			{
				VEHICLES_PLAYER[PI[killerid][P_FRVEHICLE]] = false;
				DestroyVehicleEx(PI[killerid][P_FRVEHICLE]);
				PI[killerid][P_FRVEHICLE] = 0;
			}
			
			if(VI[vehicleid][V_VALID])
			{
				if(VI[vehicleid][V_OWNERID] == PI[killerid][P_ID])
				{
					for(new i = 0; i != MAX_VEHICLES_PER_PLAYER; i++)
					{
						if(PI[killerid][P_VEHICLES_VEH_ID][i] == vehicleid)
						{
							HousePlayerVehicle(killerid, i);
							return 1;
						}
					}
				}
			}
			return 1;
		}
		case M_DERBY:
		{
			if(vehicleid != PI[killerid][P_DERBY_VEHICLEID]) return 1;
			if(PI[killerid][P_STATUS] == S_SPAWNED && PI[killerid][P_DERBY_STATUS] == PD_NORMAL)
			{
				if(DI[D_STATUS] == DERBY_RUNNING && DI[D_RUNNINGPLAYERS] > 1)
				{
					PlayerDerbyDead(killerid);
				}
			}
			return 1;
		}
		case M_SHOOTER:
		{
			if(vehicleid != PI[killerid][P_SHOOTER_VEHICLEID]) return 1;
			if(PI[killerid][P_STATUS] == S_SPAWNED && PI[killerid][P_SHOOTER_STATUS] == PD_NORMAL)
			{
				if(ST[S_STATUS] == SHOOTER_RUNNING && ST[S_RUNNING_PLAYERS] > 1)
				{
					PlayerShooterDead(killerid);
				}
			}
			return 1;
		}
	}
    return 1;
}

stock udb_hash(buf[]) /*Credits to DracoBlue*/
{
    new length=strlen(buf);
    new s1 = 1;
    new s2 = 0;
    new n;
    for (n=0; n<length; n++)
    {
       s1 = (s1 + buf[n]) % 65521;
       s2 = (s2 + s1)     % 65521;
    }
    return (s2 << 16) + s1;
}

stock TimeConvert(seconds)
{
	new tmp[16];
 	new minutes = floatround(seconds/60);
  	seconds -= minutes*60;
   	format(tmp, sizeof(tmp), "%d:%02d", minutes, seconds);
   	return tmp;
}

GivePlayerMoneyEx(playerid, ammount)
{
	if(ammount > 0) PI[playerid][P_WINMONEY] += ammount;
	else if(ammount < 0) PI[playerid][P_LOSEMONEY] += -ammount;
	
	PI[playerid][P_MONEY] += ammount;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PI[playerid][P_MONEY]);
	return 1;
}

GivePlayerScoreEx(playerid, score)
{
	if(score > 0) PI[playerid][P_WINSCORE] += score;
	else if(score < 0) PI[playerid][P_LOSESCORE] += -score;
	
	PI[playerid][P_SCORE] += score;
	SetPlayerScore(playerid, PI[playerid][P_SCORE]);
	return 1;
}

GetVehicleModelIDFromName(vname[])
{
	for(new i = 0; i < 211; i++)
	{
		if ( strfind(VehicleNames[i], vname, true) != -1 )
			return i + 400;
	}
	return -1;
}

SendMessageToAdmins(color, message[])
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
	    if(IsPlayerConnected(i))
	    {
	        if(IsPlayerAdmin(i) || PI[i][P_MOD] > 0 )
	        {
	            SendClientMessage(i, color, message);
	        }
	    }
	}
	return 1;
}

SendMessageToVipUsers(color, message[])
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PI[i][P_VIP])
	        {
	            SendClientMessage(i, color, message);
	        }
	    }
	}
	return 1;
}

LoadRacesNames(mapname[])
{
	new File:Handler = fopen(mapname, io_read);
    if(!Handler) return 0;
    TOTAL_RACES = 0;
    while(fread(Handler, Object_String))
    {
        StripNewLine(Object_String);
        format(RACE_Names[TOTAL_RACES], 24, "%s", Object_String);
        TOTAL_RACES ++;
    }

    fclose(Handler);
	return 1;
}

#define IsOdd(%0) %0 % 2

LoadRace(mapname[])
{
	new File:Handler = fopen(mapname, io_read);
    if(!Handler) return 0;
	
	new tmp[RCINFO], tmp2[CPINFO], total_CP;
	tmp = RC;
    while(fread(Handler, Object_String))
    {
        StripNewLine(Object_String);
        if(!sscanf(Object_String, "p<,>s[24]ddddfd", tmp[R_NAME], tmp[R_WEATHER][0], tmp[R_WEATHER][1], tmp[R_INT], tmp[R_FREEZE], tmp[R_ANGLE], tmp[R_MODELID])) RC = tmp;
		if(!sscanf(Object_String, "p<,>dffff", tmp2[R_CP_TYPE], tmp2[R_CP_POS][0], tmp2[R_CP_POS][1], tmp2[R_CP_POS][2], tmp2[R_CP_SIZE])) RACE_CP[total_CP] = tmp2, total_CP ++;
    }
    fclose(Handler);
	RC[R_TOTAL_CP] = total_CP;
	
	for(new i = 0; i != sizeof RACE_CP[]; i ++) RACE_CP[i][R_CP_VEHS_COUNTER] = 0;
	new i, Float:c_distance = RACE_CP[0][R_CP_SIZE] + 2.0;
	while(i != sizeof RC_SPAWN_POSITIONS)
	{
		RC_SPAWN_POSITION_USED[i] = false;
		RC_SPAWN_POSITIONS[i][0] = floatsub(RACE_CP[0][R_CP_POS][0], c_distance * floatsin(-RC[R_ANGLE], degrees) ) + floatcos(RC[R_ANGLE], degrees) * 2.5;
		RC_SPAWN_POSITIONS[i][1] = floatsub(RACE_CP[0][R_CP_POS][1], c_distance * floatcos(-RC[R_ANGLE], degrees) ) + floatsin(RC[R_ANGLE], degrees) * 2.5;
		RC_SPAWN_POSITIONS[i][2] = RACE_CP[0][R_CP_POS][2] + 0.5;
		RC_SPAWN_POSITIONS[i][3] = RC[R_ANGLE];	
		i ++;
		
		RC_SPAWN_POSITION_USED[i] = false;
		RC_SPAWN_POSITIONS[i][0] = floatsub(RACE_CP[0][R_CP_POS][0], c_distance * floatsin(-RC[R_ANGLE], degrees) ) - floatcos(RC[R_ANGLE], degrees) * 2.5;
		RC_SPAWN_POSITIONS[i][1] = floatsub(RACE_CP[0][R_CP_POS][1], c_distance * floatcos(-RC[R_ANGLE], degrees) ) - floatsin(RC[R_ANGLE], degrees) * 2.5;
		RC_SPAWN_POSITIONS[i][2] = RACE_CP[0][R_CP_POS][2] + 0.5;
		RC_SPAWN_POSITIONS[i][3] = RC[R_ANGLE];	
		i ++;
		c_distance += 10.0;
	}
	return 1;
}

public RaceCountdown()
{
	if(RC[R_STATUS] == RACE_CLOSED) return KillTimer(RC[R_COUNTDOWN_TIMER]);
	if(RC[R_PLAYERS] == 0)
	{
		KillTimer(RC[R_COUNTDOWN_TIMER]);
		CloseRace();
		return 1;
	}
	if(RC[R_PLAYERS] <= 1)
	{
		RC[R_COUNTDOWN_COUNTER] = 11;
		new str[64]; format(str, 64, "~g~~h~%s~n~~y~Waiting for players", RC[R_NAME]);
		TextDrawSetString(TD_RACEMessage, str);
		return 1;
	}
	RC[R_COUNTDOWN_COUNTER] --;
	new str[145]; format(str, 145, "~g~~h~%s~n~_~n~~p~%d_PLAYERS~n~~y~%d_seconds to start", RC[R_NAME], RC[R_PLAYERS], RC[R_COUNTDOWN_COUNTER]);
	if(RC[R_COUNTDOWN_COUNTER] != 0) TextDrawSetString(TD_RACEMessage, str);
	
	if(RC[R_COUNTDOWN_COUNTER] <= 0)
	{
		KillTimer(RC[R_COUNTDOWN_TIMER]);
		if(RC[R_PLAYERS] == 0)
		{
			CloseRace();
			return 1;
		}
		else if(RC[R_PLAYERS] == 1)
		{
			format(str, 64, "~g~~h~%s~n~~y~Waiting for players", RC[R_NAME]);
			TextDrawSetString(TD_RACEMessage, str);
			RC[R_COUNTDOWN_COUNTER] = 11;
			KillTimer(RC[R_COUNTDOWN_TIMER]);
			RC[R_COUNTDOWN_TIMER] = SetTimer("RaceCountdown", 900, true);
		}
		else StartRace();
	}
	return 1;
}

StartRace()
{
	new str[10];
	if(RC[R_COLLISION_VOTES][0] > RC[R_COLLISION_VOTES][1]) RC[R_COLLISIONS] = false;
	else if(RC[R_COLLISION_VOTES][1] > RC[R_COLLISION_VOTES][0]) RC[R_COLLISIONS] = true;
	else if(RC[R_COLLISION_VOTES][0] == RC[R_COLLISION_VOTES][1]) RC[R_COLLISIONS] = random(2);
	
	RC[R_COLLISION_VOTES][0] = 0;
	RC[R_COLLISION_VOTES][1] = 0;
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
		if(!IsPlayerConnected(i) || PI[i][P_GAMEMODE] != M_RACE) continue;
		PI[i][P_RACE_STATUS] = PD_NORMAL;
		RepairVehicle(PI[i][P_RACE_VEHICLEID]);
		if(GetPlayerVehicleID(i) != PI[i][P_RACE_VEHICLEID]) PutPlayerInVehicleEx(i, PI[i][P_RACE_VEHICLEID], 0);
		new Float:p[3]; GetVehiclePos(PI[i][P_RACE_VEHICLEID], p[0], p[1], p[2]);
		if(RC[R_FREEZE] && p[2] <= (RC_SPAWN_POSITIONS[ PI[i][P_RACE_POSITION] ][2] - 0.5))
		{
			SetVehiclePos(PI[i][P_RACE_VEHICLEID], RC_SPAWN_POSITIONS[ PI[i][P_RACE_POSITION] ][0], RC_SPAWN_POSITIONS[ PI[i][P_RACE_POSITION] ][1], RC_SPAWN_POSITIONS[ PI[i][P_RACE_POSITION] ][2]);
			SetVehicleZAngle(PI[i][P_RACE_VEHICLEID], RC_SPAWN_POSITIONS[ PI[i][P_RACE_POSITION] ][3]);
		}
		PlayerPlaySoundEx(i, 3200, 0.0, 0.0, 0.0);
		SetVehicleParamsEx(PI[i][P_RACE_VEHICLEID], VEHICLE_PARAMS_ON, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, 1, 0, 0, 0);
		PI[i][P_RACE_VOTED] = false;
		for(new x; x != sizeof TD_RACE_Collisions; x ++) TextDrawHideForPlayer(i, TD_RACE_Collisions[x]);
		for(new x; x != sizeof TD_RACE; x ++) TextDrawShowForPlayer(i, TD_RACE[x]);
		for(new x; x != sizeof PTD_RACE[]; x ++) PlayerTextDrawShow(i, PTD_RACE[i][x]);
		format(str, sizeof str, "%d/%d", PI[i][P_RACE_POSITION] + 1, RC[R_PLAYERS]);
		PlayerTextDrawSetString(i, PTD_RACE[i][0], str);
		CancelSelectTextDraw(i);
		PI[i][P_RACE_CPCOUNT] = 0;
		SetPlayerRaceCheckpoint(i, RACE_CP[ PI[i][P_RACE_CPCOUNT] ][R_CP_TYPE], RACE_CP[ PI[i][P_RACE_CPCOUNT] ][R_CP_POS][0], RACE_CP[ PI[i][P_RACE_CPCOUNT] ][R_CP_POS][1], RACE_CP[ PI[i][P_RACE_CPCOUNT] ][R_CP_POS][2], RACE_CP[ PI[i][P_RACE_CPCOUNT] + 1 ][R_CP_POS][0], RACE_CP[ PI[i][P_RACE_CPCOUNT] + 1 ][R_CP_POS][1], RACE_CP[ PI[i][P_RACE_CPCOUNT] + 1 ][R_CP_POS][2], RACE_CP[ PI[i][P_RACE_CPCOUNT] ][R_CP_SIZE]);
		DisableRemoteVehicleCollisions(i, RC[R_COLLISIONS]);
	}
	
	RC[R_RUNNING_PLAYERS] = RC[R_PLAYERS];
	RC[R_MAX_PRIZE] = 750 * RC[R_PLAYERS];
	RC[R_TIMEOUT_COUNTER] = RC[R_TOTAL_CP] * 20;
	KillTimer(RC[R_TIMEOUT_TIMER]);
	RC[R_TIMEOUT_TIMER] = SetTimer("RaceTimeOutCountdown", 1000, true);
	RC[R_TICKCOUNT] = gettime();
	
	TextDrawSetString(TD_RACEMessage, "~y~go! ~r~go! ~p~go!");
	KillTimer(RC[R_MESSAGE_TIMER]);
	RC[R_MESSAGE_TIMER] = SetTimer("HideRaceMessage", 2000, false);
	RC[R_STATUS] = RACE_RUNNING;
	return 1;
}

forward HideRaceMessage();
public HideRaceMessage()
{
	return TextDrawSetString(TD_RACEMessage, "_");
}

forward RaceTimeOutCountdown();
public RaceTimeOutCountdown()
{
	if(RC[R_STATUS] != RACE_RUNNING) KillTimer(RC[R_TIMEOUT_TIMER]);
	
	RC[R_TIMEOUT_COUNTER] --;
	if(RC[R_TIMEOUT_COUNTER] < 0)
	{
		KillTimer(RC[R_TIMEOUT_TIMER]);
		KillTimer(RC[R_MESSAGE_TIMER]);
		for(new playerid = 0, j = GetPlayerPoolSize(); playerid <= j; playerid++) 
		{
			if(IsPlayerConnected(playerid))
			{
				if(PI[playerid][P_GAMEMODE] == M_RACE && PI[playerid][P_RACE_STATUS] == PD_NORMAL)
				{
					PlayerPlaySoundEx(playerid, 1057, 0.0, 0.0, 0.0);
					GivePlayerMoneyEx(playerid, RC[R_MAX_PRIZE]/RC[R_RUNNING_PLAYERS]);
					new str[256]; format(str, 256, "_~n~_~n~_~n~~y~Finished race_~n~~r~~h~p~w~~h~Prizes:_%d~r~~h~$~n~~g~~h~TIME:~p~_%s minutes~n~~r~~h~The time is over", RC[R_MAX_PRIZE]/RC[R_RUNNING_PLAYERS], TimeConvert(gettime() - RC[R_TICKCOUNT]));
					GameTextForPlayer(playerid, str, 5000, 6);
				}
			}
		}
		RC[R_RUNNING_PLAYERS] = 0;
		KillTimer(RC[R_NEXT_RACE_TIMER]);
		TextDrawSetString(TD_RACEMessage, "~g~~h~ Finished race");
		RC[R_NEXT_RACE_TIMER] = SetTimer("NextRace", 5000, false);
		return 1;
	}
	
	TextDrawSetString(TD_RACE[0], TimeConvert(RC[R_TIMEOUT_COUNTER]));
	new str[10]; 
	format(str, 10, "%d", RC[R_RUNNING_PLAYERS]); TextDrawSetString(TD_RACE[3], str);
	format(str, 10, "%d", RC[R_PLAYERS]); TextDrawSetString(TD_RACE[6], str);
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(PI[playerid][P_GAMEMODE] == M_RACE)
	{
	    if(RC[R_STATUS] == RACE_RUNNING && PI[playerid][P_RACE_STATUS] == PD_NORMAL)
	    {
			RACE_CP[ PI[playerid][P_RACE_CPCOUNT] ][R_CP_VEHS_COUNTER] ++;
			
	        if(PI[playerid][P_RACE_CPCOUNT] == RC[R_TOTAL_CP] - 1)
	        {
	            
				if(RACE_CP[ PI[playerid][P_RACE_CPCOUNT] ][R_CP_VEHS_COUNTER] == 1) GivePlayerScoreEx(playerid, 5);
	            PlayerPlaySoundEx(playerid, 1057, 0.0, 0.0, 0.0);
	            DisablePlayerRaceCheckpoint(playerid);
	            GivePlayerMoneyEx(playerid, RC[R_MAX_PRIZE]/RACE_CP[ PI[playerid][P_RACE_CPCOUNT] ][R_CP_VEHS_COUNTER]);
				new str[256]; format(str, 256, "_~n~_~n~_~n~~y~Finished race_~r~~h~%d/%d~n~~r~~h~p~w~~h~Prizes:_%d~r~~h~$~n~~g~~h~TIME:~p~_%s_minutes", RACE_CP[ PI[playerid][P_RACE_CPCOUNT] ][R_CP_VEHS_COUNTER], RC[R_RUNNING_PLAYERS], RC[R_MAX_PRIZE]/RACE_CP[ PI[playerid][P_RACE_CPCOUNT] ][R_CP_VEHS_COUNTER], TimeConvert(gettime() - RC[R_TICKCOUNT]));
				GameTextForPlayer(playerid, str, 5000, 6);
				RC[R_RUNNING_PLAYERS] --;
				//if(RC[R_TIMEOUT_COUNTER] > (RC[R_RUNNING_PLAYERS]*20)) RC[R_TIMEOUT_COUNTER] = (RC[R_RUNNING_PLAYERS]*20);
				format(str, sizeof str, "~y~%s ~g~~h~I end in position ~p~#%d", PI[playerid][P_NAME], RACE_CP[ PI[playerid][P_RACE_CPCOUNT] ][R_CP_VEHS_COUNTER]);
				TextDrawSetString(TD_RACEMessage, str);
				KillTimer(RC[R_MESSAGE_TIMER]);
				RC[R_MESSAGE_TIMER] = SetTimer("HideRaceMessage", 3000, false);
				PlayerTextDrawHide(playerid, PTD_RACE[playerid][0]);
				PlayerTextDrawHide(playerid, PTD_RACE[playerid][1]);
				PlayerTextDrawHide(playerid, PTD_RACE[playerid][2]);
				
				if(RC[R_RUNNING_PLAYERS] > 0)
				{
					if(RC[R_RUNNING_PLAYERS] <= RC[R_PLAYERS]/2)
					{
						if(RC[R_TIMEOUT_COUNTER] > 20) RC[R_TIMEOUT_COUNTER] = 20;
					}
					if(IsValidVehicle(PI[playerid][P_RACE_VEHICLEID]) && PI[playerid][P_RACE_VEHICLEID] != INVALID_VEHICLE_ID)
					{
						DestroyVehicleEx(PI[playerid][P_RACE_VEHICLEID]);
						PI[playerid][P_RACE_VEHICLEID] = INVALID_VEHICLE_ID;
					}
					
					PI[playerid][P_RACE_STATUS] = PD_SPECTATE;
					for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
					{
						if(IsPlayerConnected(i))
						{
							if(PI[i][P_GAMEMODE] == M_RACE)
							{
								if(PI[i][P_RACE_STATUS] == PD_NORMAL)
								{
									PI[playerid][P_RACE_SPECTATEPLAYER] = i;
									break;
								}
							}
						}
					}
					TogglePlayerSpectatingEx(playerid, true);
					PlayerSpectateVehicle(playerid, PI[PI[playerid][P_RACE_SPECTATEPLAYER]][P_RACE_VEHICLEID]);
					SendClientMessage(playerid, -1, "{"ORANGE"}Press the key {"GREY"}Intro {"ORANGE"}To change the player.");
				}
				else if(RC[R_RUNNING_PLAYERS] <= 0)
				{
					KillTimer(RC[R_NEXT_RACE_TIMER]);
					TextDrawSetString(TD_RACEMessage, "~g~~h~Finished race");
					RC[R_NEXT_RACE_TIMER] = SetTimer("NextRace", 5000, false);
				}
	            return 1;
	        }
			PlayerPlaySoundEx(playerid, 1058, 0.0, 0.0, 0.0);
	        SetPlayerRaceCheckpoint(playerid, RACE_CP[ PI[playerid][P_RACE_CPCOUNT] + 1 ][R_CP_TYPE], RACE_CP[ PI[playerid][P_RACE_CPCOUNT] + 1 ][R_CP_POS][0], RACE_CP[ PI[playerid][P_RACE_CPCOUNT] + 1 ][R_CP_POS][1], RACE_CP[ PI[playerid][P_RACE_CPCOUNT] + 1 ][R_CP_POS][2], RACE_CP[ PI[playerid][P_RACE_CPCOUNT] + 2 ][R_CP_POS][0], RACE_CP[ PI[playerid][P_RACE_CPCOUNT] + 2 ][R_CP_POS][1], RACE_CP[ PI[playerid][P_RACE_CPCOUNT] + 2 ][R_CP_POS][2], RACE_CP[ PI[playerid][P_RACE_CPCOUNT] + 1 ][R_CP_SIZE]);
			new str[45]; format(str, sizeof str, "%d/%d", RACE_CP[ PI[playerid][P_RACE_CPCOUNT] ][R_CP_VEHS_COUNTER], RC[R_RUNNING_PLAYERS]);
			PlayerTextDrawSetString(playerid, PTD_RACE[playerid][0], str);
			
			format(str, sizeof str, "~n~~n~~n~~n~~n~~n~~y~~h~Checkpoint_~y~%d/%d", PI[playerid][P_RACE_CPCOUNT] + 1, RC[R_TOTAL_CP]);
			GameTextForPlayer(playerid, str, 2000, 3);
			PI[playerid][P_RACE_CPCOUNT] ++;
	    }
	}
	return 1;
}

forward NextRace();
public NextRace()
{
	TextDrawSetString(TD_RACE_Collisions[3], "With_contact:_0~n~No contact:_0~n~_");
	RC[R_ID] += 1;
	if(!LoadRace( RACE_Names[ RC[R_ID] ] ))
	{
		RC[R_ID] = 0;
		LoadRace(RACE_Names[ RC[R_ID] ]);
	}

	for(new i = 0; i != sizeof TD_RACE; i ++) TextDrawHideForAll(TD_RACE[i]);
	KillTimer(RC[R_TIMEOUT_TIMER]);
	RC[R_STATUS] = RACE_WAIT;
	RC[R_COUNTDOWN_COUNTER] = 11;
	KillTimer(RC[R_COUNTDOWN_TIMER]);
	RC[R_COUNTDOWN_TIMER] = SetTimer("RaceCountdown", 900, true);
	SendClientMessageToAll(-1, "{99CC00}--> [CAREER] will start in {"ORANGE"}10 seconds. {99CC00}use {"GREY"}/race {99CC00}To join.");
	new str[64]; format(str, 64, "~g~~h~%s~n~~y~waiting_players", RC[R_NAME]);
	TextDrawSetString(TD_RACEMessage, str);
	
	for(new players = 0, j = GetPlayerPoolSize(); players <= j; players++) 
	{
		if(IsPlayerConnected(players))
		{
			if(PI[players][P_GAMEMODE] == M_RACE)
			{
				PlayerTextDrawHide(players, PTD_RACE[players][0]);
				PlayerTextDrawHide(players, PTD_RACE[players][1]);
				PlayerTextDrawHide(players, PTD_RACE[players][2]);
				
				if(GetPlayerState(players) == PLAYER_STATE_SPECTATING) TogglePlayerSpectatingEx(players, false);
				PI[players][P_RACE_STATUS] = PD_NORMAL;
				PI[players][P_RACE_VOTED] = false;
				PI[players][P_RACE_POSITION] = GetFreeRaceSlot();
				RC_SPAWN_POSITION_USED[PI[players][P_RACE_POSITION]] = true;
				
				SetPlayerArmour(players, 0.0);
				SetPlayerHealth(players, 100.0);
				ResetPlayerWeapons(players);
				SetPlayerVirtualWorld(players, RACE_VW);
				SetPlayerInterior(players, RC[R_INT]);
				SetPlayerTime(players, RC[R_WEATHER][0], 0);
				SetPlayerWeather(players, RC[R_WEATHER][1]);
				TogglePlayerControllable(players, true);
				
				if(IsValidVehicle(PI[players][P_RACE_VEHICLEID]) && PI[players][P_RACE_VEHICLEID] != INVALID_VEHICLE_ID)
				{
					DestroyVehicleEx(PI[players][P_RACE_VEHICLEID]);
					PI[players][P_RACE_VEHICLEID] = INVALID_VEHICLE_ID;
				}
				PI[players][P_RACE_VEHICLEID] = CreateVehicle(RC[R_MODELID], RC_SPAWN_POSITIONS[ PI[players][P_RACE_POSITION] ][0], RC_SPAWN_POSITIONS[ PI[players][P_RACE_POSITION] ][1], RC_SPAWN_POSITIONS[ PI[players][P_RACE_POSITION] ][2], RC_SPAWN_POSITIONS[ PI[players][P_RACE_POSITION] ][3], minrand(128, 255), minrand(128, 255), 99999);
				SetVehicleVirtualWorld(PI[players][P_RACE_VEHICLEID], RACE_VW);
				LinkVehicleToInterior(PI[players][P_RACE_VEHICLEID], RC[R_INT]);
				SetVehicleParamsEx(PI[players][P_RACE_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
				PutPlayerInVehicleEx(players, PI[players][P_RACE_VEHICLEID], 0);
				
				for(new i = 0; i != sizeof TD_RACE_Collisions; i ++) TextDrawShowForPlayer(players, TD_RACE_Collisions[i]);
				SelectTextDraw(players, 0x999999FF);
			}
		}
	}
	return 1;
}

CheckRace()
{
	if(RC[R_PLAYERS] <= 0 && RC[R_STATUS] != RACE_CLOSED) return CloseRace();
	switch(RC[R_STATUS])
	{
		case RACE_CLOSED: return 1;
		case RACE_RUNNING:
		{
			if(RC[R_RUNNING_PLAYERS] <= RC[R_PLAYERS]/2)
			{
				if(RC[R_TIMEOUT_COUNTER] > 20) RC[R_TIMEOUT_COUNTER] = 20;
			}
			if(RC[R_PLAYERS] <= 1 || RC[R_RUNNING_PLAYERS] <= 0)
			{
				KillTimer(RC[R_MESSAGE_TIMER]);
				for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
				{
					if(IsPlayerConnected(i))
					{
						if(PI[i][P_GAMEMODE] == M_RACE)
						{
							if(PI[i][P_RACE_STATUS] == PD_NORMAL)
							{
								GivePlayerScoreEx(i, 5);
								GivePlayerMoneyEx(i, RC[R_MAX_PRIZE]/1);
								break;
							}
						}
					}
				}
				TextDrawSetString(TD_RACEMessage, "~g~~h~Finished race");
				KillTimer(RC[R_NEXT_RACE_TIMER]);
				RC[R_NEXT_RACE_TIMER] = SetTimer("NextRace", 5000, false);
			}
			return 1;
		}
	}
	return 1;
}

CloseRace()
{
	TextDrawSetString(TD_RACEMessage, "_");
	TextDrawSetString(TD_RACE_Collisions[3], "With_contact:_0~n~No contact:_0~n~_");
	KillTimer(RC[R_COUNTDOWN_TIMER]);
	KillTimer(RC[R_TIMEOUT_TIMER]);
	KillTimer(RC[R_NEXT_RACE_TIMER]);
	KillTimer(RC[R_MESSAGE_TIMER]);
	
	new tmp[RCINFO], OLD_ID = RC[R_ID], tmp2[CPINFO];
	RC = tmp;
	RC[R_ID] = OLD_ID;	
	
	for(new i = 0; i != MAX_RACE_CP; i ++) RACE_CP[i] = tmp2;
	for(new i = 0; i != sizeof RC_SPAWN_POSITION_USED; i ++)
	{
		RC_SPAWN_POSITION_USED[i] = false;
		RC_SPAWN_POSITIONS[i][0] = 0.0;
		RC_SPAWN_POSITIONS[i][1] = 0.0;
		RC_SPAWN_POSITIONS[i][2] = 0.0;
		RC_SPAWN_POSITIONS[i][3] = 0.0;
	}

	return 1;
}

GetFreeRaceSlot()
{
	for(new i = 0; i != sizeof ST_SPAWN_POSITION_USED; i++)
	{
		if(!RC_SPAWN_POSITION_USED[i])
		{
			return i;
		}
	}
	return -1;
}


LoadShooterNames(mapname[])
{
	new File:Handler = fopen(mapname, io_read);
    if(!Handler) return 0;
    TOTAL_SHOOTER = 0;
    while(fread(Handler, Object_String))
    {
        StripNewLine(Object_String);
        format(SHOOTER_Names[TOTAL_SHOOTER], 24, "%s", Object_String);
        TOTAL_SHOOTER ++;
    }

    fclose(Handler);
	return 1;
}

LoadShooter(mapname[])
{
	new File:Handler = fopen(mapname, io_read);
    if(!Handler) return 0;
	
	new tmp[SHOOTERINFO];
	tmp = ST;
    while(fread(Handler, Object_String))
    {
        StripNewLine(Object_String);
        if(!sscanf(Object_String, "p<,>s[24]ddddddffffff", 
									tmp[S_NAME], 
									tmp[S_VEH_MODELID],
									tmp[S_WEATHER][0], 
									tmp[S_WEATHER][1], 
									tmp[S_INT], 
									tmp[S_FREEZE], 
									tmp[S_CENTER_MODELID], 
									tmp[S_CENTER_POS][0], 
									tmp[S_CENTER_POS][1], 
									tmp[S_CENTER_POS][2], 
									tmp[S_CENTER_POS][3], 
									tmp[S_CENTER_POS][4], 
									tmp[S_CENTER_POS][5])) ST = tmp;
    }
    fclose(Handler);
	if(IsValidDynamicObject(ST[S_CENTER_OBJECTID])) DestroyDynamicObject(ST[S_CENTER_OBJECTID]);
	ST[S_CENTER_OBJECTID] = CreateDynamicObjectEx(ST[S_CENTER_MODELID], ST[S_CENTER_POS][0], ST[S_CENTER_POS][1], ST[S_CENTER_POS][2], ST[S_CENTER_POS][3], ST[S_CENTER_POS][4], ST[S_CENTER_POS][5], 1000.0, 1000.0, {SHOOTER_VW});
	new Float:c_angle = 0.0, Float:c_distance = 15.0, c_loops = 1;
	for(new i = 0; i != sizeof ST_SPAWN_POSITIONS; i ++)
	{
		ST_SPAWN_POSITION_USED[i] = false;
		ST_SPAWN_POSITIONS[i][0] = floatadd(ST[S_CENTER_POS][0], c_distance * floatcos(c_angle, degrees) );
		ST_SPAWN_POSITIONS[i][1] = floatadd(ST[S_CENTER_POS][1], c_distance * floatsin(c_angle, degrees) );
		ST_SPAWN_POSITIONS[i][2] = ST[S_CENTER_POS][2] + 0.5;
		ST_SPAWN_POSITIONS[i][3] = c_angle - 90.0;
		
		c_angle += 20.0 / c_loops;
		if(c_angle >= 360.0)
		{
			c_angle = 0.0;
			c_distance += 10.0;
			c_loops ++;
		}
	}
	return 1;
}

public ShooterCountdown()
{
	if(ST[S_STATUS] == SHOOTER_CLOSED) return KillTimer(ST[S_COUNTDOWN_TIMER]);
	if(ST[S_PLAYERS] == 0)
	{
		KillTimer(ST[S_COUNTDOWN_TIMER]);
		CloseShooter();
		return 1;
	}
	if(ST[S_PLAYERS] <= 1)
	{
		ST[S_COUNTDOWN_COUNTER] = 11;
		new str[64]; format(str, 64, "~g~~h~%s~n~~y~waiting_players", ST[S_NAME]);
		TextDrawSetString(TD_ShooterMessage, str);
		return 1;
	}
	ST[S_COUNTDOWN_COUNTER] --;
	new str[145]; format(str, 145, "~g~~h~%s~n~_~n~~p~%d_PLAYERS~n~~y~%d_seconds to start", ST[S_NAME], ST[S_PLAYERS], ST[S_COUNTDOWN_COUNTER]);
	if(ST[S_COUNTDOWN_COUNTER] != 0) TextDrawSetString(TD_ShooterMessage, str);
	
	if(ST[S_COUNTDOWN_COUNTER] <= 0)
	{
		KillTimer(ST[S_COUNTDOWN_TIMER]);
		if(ST[S_PLAYERS] == 0)
		{
			CloseShooter();
			return 1;
		}
		else if(ST[S_PLAYERS] == 1)
		{
			format(str, 64, "~g~~h~%s~n~~y~waiting_players", ST[S_NAME]);
			TextDrawSetString(TD_ShooterMessage, str);
			ST[S_COUNTDOWN_COUNTER] = 11;
			KillTimer(ST[S_COUNTDOWN_TIMER]);
			ST[S_COUNTDOWN_TIMER] = SetTimer("ShooterCountdown", 900, true);
		}
		else StartShooter();
	}
	return 1;
}

PlayerShooterDead(playerid)
{
	if(PI[playerid][P_SHOOTER_STATUS] == PD_DEAD) return 1;
	PI[playerid][P_SHOOTER_STATUS] = PD_DEAD;
	if(IsValidVehicle(PI[playerid][P_SHOOTER_VEHICLEID]) && PI[playerid][P_SHOOTER_VEHICLEID] != INVALID_VEHICLE_ID)
	{
		DestroyVehicleEx(PI[playerid][P_SHOOTER_VEHICLEID]);
		PI[playerid][P_SHOOTER_VEHICLEID] = INVALID_VEHICLE_ID;
	}
	PlayerPlaySoundEx(playerid, 1057, 0.0, 0.0, 0.0);
	GivePlayerMoneyEx(playerid, ST[S_MAX_PRIZE] / ST[S_RUNNING_PLAYERS]);		
	new str[128]; format(str, 128, "_~n~_~n~_~n~~y~Shooter finished_~r~~h~%d/%d~n~~r~~h~p~w~~h~Prizes:_%d~r~~h~$~n~~g~~h~TIME:~p~_%s_minutes", ST[S_RUNNING_PLAYERS], ST[S_PLAYERS], ST[S_MAX_PRIZE] / ST[S_RUNNING_PLAYERS], TimeConvert(gettime() - ST[S_TICKCOUNT]));
	GameTextForPlayer(playerid, str, 5000, 6);
	
	ST[S_RUNNING_PLAYERS] -= 1;
	if(ST[S_TIMEOUT_COUNTER] > (ST[S_RUNNING_PLAYERS] * 20)) ST[S_TIMEOUT_COUNTER] = (ST[S_RUNNING_PLAYERS] * 20);
	
	if(ST[S_RUNNING_PLAYERS] == 1)
	{
		KillTimer(ST[S_MESSAGE_TIMER]);
		KillTimer(ST[S_FIREWORKS_TIMER]);
		for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
		{
			if(IsPlayerConnected(i))
			{
				if(PI[i][P_GAMEMODE] == M_SHOOTER)
				{
					if(PI[i][P_SHOOTER_STATUS] == PD_NORMAL)
					{
						ST[S_WINNER] = i;
						GivePlayerScoreEx(i, 5);
						GivePlayerMoneyEx(i, ST[S_MAX_PRIZE] / ST[S_RUNNING_PLAYERS]);
						break;
					}
				}
			}
		}
		format(str, 128, "~g~~h~winner: ~y~%s~n~~p~+5 score~n~~g~~h~+%d$", PI[ST[S_WINNER]][P_NAME], ST[S_MAX_PRIZE]/ST[S_RUNNING_PLAYERS]);
		TextDrawSetString(TD_ShooterMessage, str);
			
		PlayerPlaySoundEx(ST[S_WINNER], 1057, 0.0, 0.0, 0.0);
		
		format(str, 128, "_~n~_~n~_~n~~y~Shooter finished_~r~~h~%d/%d~n~~r~~h~p~w~~h~Prizes:_%d~r~~h~$~n~~g~~h~TIME:~p~_%s_minutes", ST[S_RUNNING_PLAYERS], ST[S_PLAYERS], ST[S_MAX_PRIZE]/ST[S_RUNNING_PLAYERS], TimeConvert(gettime() - ST[S_TICKCOUNT]));
		GameTextForPlayer(ST[S_WINNER], str, 5000, 6);
		
		TogglePlayerSpectatingEx(playerid, true);
		PlayerSpectateVehicle(playerid, PI[ST[S_WINNER]][P_SHOOTER_VEHICLEID]);
		KillTimer(ST[S_NEXT_SHOOTER_TIMER]);
		ST[S_NEXT_SHOOTER_TIMER] = SetTimer("NextShooter", 5000, false);
		return 1;
	}
	else
	{
		PI[playerid][P_SHOOTER_STATUS] = PD_SPECTATE;
		for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
		{
			if(IsPlayerConnected(i))
			{
				if(PI[i][P_GAMEMODE] == M_SHOOTER)
				{
					if(PI[i][P_SHOOTER_STATUS] == PD_NORMAL)
					{
						PI[playerid][P_SHOOTER_SPECTATEPLAYER] = i;
						break;
					}
				}
			}
		}
		TogglePlayerSpectatingEx(playerid, true);
		PlayerSpectateVehicle(playerid, PI[PI[playerid][P_SHOOTER_SPECTATEPLAYER]][P_SHOOTER_VEHICLEID]);
		SendClientMessage(playerid, -1, "{"ORANGE"}Press the key {"GREY"}Intro {"ORANGE"}To change the player.");
	}
	return 1;
}

forward NextShooter();
public NextShooter()
{
	ST[S_ID] += 1;
	if(!LoadShooter( SHOOTER_Names[ ST[S_ID] ] ))
	{
		ST[S_ID] = 0;
		LoadShooter(SHOOTER_Names[ ST[S_ID] ]);
	}
	
	for(new i = 0; i != sizeof TD_SHOOTER; i ++) TextDrawHideForAll(TD_SHOOTER[i]);		
	KillTimer(ST[S_TIMEOUT_TIMER]);
	ST[S_STATUS] = SHOOTER_WAIT;
	ST[S_COUNTDOWN_COUNTER] = 11;
	KillTimer(ST[S_COUNTDOWN_TIMER]);
	ST[S_COUNTDOWN_TIMER] = SetTimer("ShooterCountdown", 900, true);
	SendClientMessageToAll(-1, "{99CC00}--> [SHOOTER] will start in {"ORANGE"}10 seconds. {99CC00}use {"GREY"}/shooter {99CC00}To join.");
	new str[64]; format(str, 64, "~g~~h~%s~n~~y~waiting_players", ST[S_NAME]);
	TextDrawSetString(TD_ShooterMessage, str);
	
	for(new players = 0, j = GetPlayerPoolSize(); players <= j; players++) 
	{
		if(IsPlayerConnected(players))
		{
			if(PI[players][P_GAMEMODE] == M_SHOOTER)
			{
				if(GetPlayerState(players) == PLAYER_STATE_SPECTATING) TogglePlayerSpectatingEx(players, false);
				PI[players][P_SHOOTER_STATUS] = PD_NORMAL;
				PI[players][P_SHOOTER_POSITION] = GetFreeShooterSlot();
				ST_SPAWN_POSITION_USED[PI[players][P_SHOOTER_POSITION]] = true;
				
				SetPlayerArmour(players, 0.0);
				SetPlayerHealth(players, 100.0);
				ResetPlayerWeapons(players);
				SetPlayerVirtualWorld(players, SHOOTER_VW);
				SetPlayerInterior(players, ST[S_INT]);
				SetPlayerTime(players, ST[S_WEATHER][0], 0);
				SetPlayerWeather(players, ST[S_WEATHER][1]);
				TogglePlayerControllable(players, true);
				
				if(IsValidVehicle(PI[players][P_SHOOTER_VEHICLEID]) && PI[players][P_SHOOTER_VEHICLEID] != INVALID_VEHICLE_ID)
				{
					DestroyVehicleEx(PI[players][P_SHOOTER_VEHICLEID]);
					PI[players][P_SHOOTER_VEHICLEID] = INVALID_VEHICLE_ID;
				}
				PI[players][P_SHOOTER_VEHICLEID] = CreateVehicle(ST[S_VEH_MODELID], ST_SPAWN_POSITIONS[ PI[players][P_SHOOTER_POSITION] ][0], ST_SPAWN_POSITIONS[ PI[players][P_SHOOTER_POSITION] ][1], ST_SPAWN_POSITIONS[ PI[players][P_SHOOTER_POSITION] ][2], ST_SPAWN_POSITIONS[ PI[players][P_SHOOTER_POSITION] ][3], minrand(128, 255), minrand(128, 255), 99999);
				SetVehicleVirtualWorld(PI[players][P_SHOOTER_VEHICLEID], SHOOTER_VW);
				LinkVehicleToInterior(PI[players][P_SHOOTER_VEHICLEID], ST[S_INT]);
				SetVehicleParamsEx(PI[players][P_SHOOTER_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
				PutPlayerInVehicleEx(players, PI[players][P_SHOOTER_VEHICLEID], 0);
			}
		}
	}
	return 1;
}

CloseShooter()
{
	TextDrawSetString(TD_ShooterMessage, "_");
	if(IsValidDynamicObject(ST[S_CENTER_OBJECTID])) DestroyDynamicObject(ST[S_CENTER_OBJECTID]);
	KillTimer(ST[S_COUNTDOWN_TIMER]);
	KillTimer(ST[S_FIREWORKS_TIMER]);
	KillTimer(ST[S_TIMEOUT_TIMER]);
	KillTimer(ST[S_NEXT_SHOOTER_TIMER]);
	
	new tmp[SHOOTERINFO], OLD_ID = ST[S_ID];
	ST = tmp;
	ST[S_ID] = OLD_ID;
	ST[S_WINNER] = NO_WINNER;
	
	
	for(new i = 0; i != sizeof ST_SPAWN_POSITION_USED; i ++)
	{
		ST_SPAWN_POSITION_USED[i] = false;
		ST_SPAWN_POSITIONS[i][0] = 0.0;
		ST_SPAWN_POSITIONS[i][1] = 0.0;
		ST_SPAWN_POSITIONS[i][2] = 0.0;
		ST_SPAWN_POSITIONS[i][3] = 0.0;
	}

	return 1;
}


StartShooter()
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
		if(!IsPlayerConnected(i) || PI[i][P_GAMEMODE] != M_SHOOTER) continue;
		PI[i][P_SHOOTER_STATUS] = PD_NORMAL;
		RepairVehicle(PI[i][P_SHOOTER_VEHICLEID]);
		if(GetPlayerVehicleID(i) != PI[i][P_SHOOTER_VEHICLEID]) PutPlayerInVehicleEx(i, PI[i][P_SHOOTER_VEHICLEID], 0);
		new Float:p[3]; GetVehiclePos(PI[i][P_SHOOTER_VEHICLEID], p[0], p[1], p[2]);
		if(ST[S_FREEZE] && p[2] <= (ST_SPAWN_POSITIONS[ PI[i][P_SHOOTER_POSITION] ][2] - 0.5))
		{
			SetVehiclePos(PI[i][P_SHOOTER_VEHICLEID], ST_SPAWN_POSITIONS[ PI[i][P_SHOOTER_POSITION] ][0], ST_SPAWN_POSITIONS[ PI[i][P_SHOOTER_POSITION] ][1], ST_SPAWN_POSITIONS[ PI[i][P_SHOOTER_POSITION] ][2]);
			SetVehicleZAngle(PI[i][P_SHOOTER_VEHICLEID], ST_SPAWN_POSITIONS[ PI[i][P_SHOOTER_POSITION] ][3]);
		}
		PlayerPlaySoundEx(i, 3200, 0.0, 0.0, 0.0);
		SetVehicleParamsEx(PI[i][P_SHOOTER_VEHICLEID], VEHICLE_PARAMS_ON, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, 1, 0, 0, 0);
		for(new x; x != sizeof TD_SHOOTER; x ++) TextDrawShowForPlayer(i, TD_SHOOTER[x]);
		
	
	}
	
	ST[S_FIREWORKS] = false;
	ST[S_RUNNING_PLAYERS] = ST[S_PLAYERS];
	ST[S_MAX_PRIZE] = 750 * ST[S_PLAYERS];
	ST[S_TIMEOUT_COUNTER] = ST[S_PLAYERS] * 20;
	KillTimer(ST[S_TIMEOUT_TIMER]);
	ST[S_TIMEOUT_TIMER] = SetTimer("ShooterTimeOutCountdown", 1000, true);
	ST[S_TICKCOUNT] = gettime();
	ST[S_WINNER] = NO_WINNER;
	
	TextDrawSetString(TD_ShooterMessage, "~y~come on!");
	KillTimer(ST[S_MESSAGE_TIMER]);
	ST[S_MESSAGE_TIMER] = SetTimer("HideShooterMessage", 2000, false);
	KillTimer(ST[S_FIREWORKS_TIMER]);
	ST[S_FIREWORKS_TIMER] = SetTimer("ActiveFireworks", 6000, false);
	ST[S_STATUS] = SHOOTER_RUNNING;
	return 1;
}

CheckShooter()
{
	if(ST[S_PLAYERS] <= 0 && ST[S_STATUS] != SHOOTER_CLOSED) return CloseShooter();
	switch(ST[S_STATUS])
	{
		case SHOOTER_CLOSED: return 1;
		case SHOOTER_RUNNING:
		{
			if(ST[S_RUNNING_PLAYERS] == 1)
			{
				KillTimer(ST[S_MESSAGE_TIMER]);
				KillTimer(ST[S_FIREWORKS_TIMER]);
				for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
				{
					if(IsPlayerConnected(i))
					{
						if(PI[i][P_GAMEMODE] == M_SHOOTER)
						{
							if(PI[i][P_SHOOTER_STATUS] == PD_NORMAL)
							{
								ST[S_WINNER] = i;
								GivePlayerScoreEx(i, 5);
								GivePlayerMoneyEx(i, ST[S_MAX_PRIZE]/ST[S_RUNNING_PLAYERS]);
								break;
							}
						}
					}
				}
				new str[128];
				format(str, 128, "~g~~h~winner: ~y~%s~n~~p~+5 score~n~~g~~h~+%d$", PI[ST[S_WINNER]][P_NAME], ST[S_MAX_PRIZE]/ST[S_RUNNING_PLAYERS]);
				TextDrawSetString(TD_ShooterMessage, str);
				
				PlayerPlaySoundEx(ST[S_WINNER], 1057, 0.0, 0.0, 0.0);
				
				format(str, 128, "_~n~_~n~_~n~~y~ Shooter finished_~r~~h~%d/%d~n~~r~~h~p~w~~h~Prizes:_%d~r~~h~$~n~~g~~h~TIME:~p~_%s_minutes", ST[S_RUNNING_PLAYERS], ST[S_PLAYERS], ST[S_MAX_PRIZE]/ST[S_RUNNING_PLAYERS], TimeConvert(gettime() - ST[S_TICKCOUNT]));
				GameTextForPlayer(ST[S_WINNER], str, 5000, 6);
				KillTimer(ST[S_NEXT_SHOOTER_TIMER]);
				ST[S_NEXT_SHOOTER_TIMER] = SetTimer("NextShooter", 5000, false);
			}
			return 1;
		}
	}
	return 1;
}

forward ShooterTimeOutCountdown();
public ShooterTimeOutCountdown()
{
	if(ST[S_STATUS] != SHOOTER_RUNNING) KillTimer(ST[S_TIMEOUT_TIMER]);
	
	ST[S_TIMEOUT_COUNTER] --;
	if(ST[S_TIMEOUT_COUNTER] < 0)
	{
		KillTimer(ST[S_TIMEOUT_TIMER]);
		if(ST[S_WINNER] == NO_WINNER)
		{
			KillTimer(ST[S_MESSAGE_TIMER]);
			KillTimer(ST[S_FIREWORKS_TIMER]);
			for(new playerid = 0, j = GetPlayerPoolSize(); playerid <= j; playerid++) 
			{
				if(IsPlayerConnected(playerid))
				{
					if(PI[playerid][P_GAMEMODE] == M_SHOOTER && PI[playerid][P_SHOOTER_STATUS] == PD_NORMAL)
					{
						PlayerPlaySoundEx(playerid, 1057, 0.0, 0.0, 0.0);
						GivePlayerMoneyEx(playerid, ST[S_MAX_PRIZE]/ST[S_RUNNING_PLAYERS]);
						new str[256]; format(str, 256, "_~n~_~n~_~n~~y~Shooter finished_~n~~r~~h~p~w~~h~Prizes:_%d~r~~h~$~n~~g~~h~TIME:~p~_%s_minutos~n~~r~~h~The time is over", ST[S_MAX_PRIZE]/ST[S_RUNNING_PLAYERS], TimeConvert(gettime() - ST[S_TICKCOUNT]));
						GameTextForPlayer(playerid, str, 5000, 6);
					}
				}
			}
			ST[S_RUNNING_PLAYERS] = 0;
			KillTimer(ST[S_NEXT_SHOOTER_TIMER]);
			ST[S_NEXT_SHOOTER_TIMER] = SetTimer("NextShooter", 5000, false);
			return 1;
		}
		return 1;
	}
	
	TextDrawSetString(TD_SHOOTER[0], TimeConvert(ST[S_TIMEOUT_COUNTER]));
	new str[10]; 
	format(str, 10, "%d", ST[S_RUNNING_PLAYERS]); TextDrawSetString(TD_SHOOTER[3], str);
	format(str, 10, "%d", ST[S_PLAYERS]); TextDrawSetString(TD_SHOOTER[6], str);
	return 1;
}

forward ActiveFireworks();
public ActiveFireworks()
{
	TextDrawSetString(TD_ShooterMessage, "~g~~h~Rockets_activated!");
	KillTimer(ST[S_MESSAGE_TIMER]);
	ST[S_MESSAGE_TIMER] = SetTimer("HideShooterMessage", 4000, false);
	ST[S_FIREWORKS] = true;
	return 1;
}

forward HideShooterMessage();
public HideShooterMessage()
{
	TextDrawSetString(TD_ShooterMessage, "_");
	return 1;
}

GetFreeShooterSlot()
{
	for(new i = 0; i != sizeof ST_SPAWN_POSITION_USED; i++)
	{
		if(!ST_SPAWN_POSITION_USED[i])
		{
			return i;
		}
	}
	return -1;
}

SHOOTER_CreateExplosion(Float:x, Float:y, Float:z, type, Float:radius)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
		if(IsPlayerConnected(i) && PI[i][P_GAMEMODE] == M_SHOOTER)
		{
			CreateExplosionForPlayer(i, x, y, z, type, radius);
		}
	}
	return 1;
}

LoadTDMNames(mapname[])
{
	new File:Handler = fopen(mapname, io_read);
    if(!Handler) return 0;
    TOTAL_TDM = 0;
    while(fread(Handler, Object_String))
    {
        StripNewLine(Object_String);
        format(TDM_Names[TOTAL_TDM], 24, "%s", Object_String);
        TOTAL_TDM ++;
    }

    fclose(Handler);
	return 1;
}

LoadTDM(mapname[])
{
	new File:Handler = fopen(mapname, io_read);
    if(!Handler) return 0;
	
	new tmp[TDMINFO],	tmp_WEP[13][2], slot,	Float:tmp_SP[4], team, count_tm[2];
	tmp = TDMI;
    while(fread(Handler, Object_String))
    {
        StripNewLine(Object_String);
        if(!sscanf(Object_String, "p<,>s[24]ddddd", tmp[T_NAME], tmp[T_WEATHER][0], tmp[T_WEATHER][1], tmp[T_INT], tmp[T_FREEZE], tmp[T_OBJECTIVE])) TDMI = tmp;
		if(!sscanf(Object_String, "p<,>dd", tmp_WEP[slot][0], tmp_WEP[slot][1])) TDM_WEP = tmp_WEP, slot ++;
		if(!sscanf(Object_String, "p<,>dffff", team, tmp_SP[0], tmp_SP[1], tmp_SP[2], tmp_SP[3])) TDM_SP[team][count_tm[team] ++] = tmp_SP;
    }
    fclose(Handler);
	
	//TDMI[T_STATUS] = TDM_RUNNING;
	return 1;
}

UnLoadTDM()
{
	KillTimer(TDMI[T_TIMETIMER]);
	KillTimer(TDMI[T_NEXTTDM_TIMER]);
	new tmp[TDMINFO], OLD_ID = TDMI[T_ID];
	TDMI = tmp;
	TDMI[T_ID] = OLD_ID;
	
	for(new i = 0; i < 13; i++)
	{
	    TDM_WEP[i][0] = 0;
	    TDM_WEP[i][1] = 0;
	}
	for(new i = 0; i < 10; i++)
	{
		TDM_SP[0][i][0] = 0.0;
		TDM_SP[0][i][1] = 0.0;
		TDM_SP[0][i][2] = 0.0;
		TDM_SP[0][i][3] = 0.0;
		
		TDM_SP[1][i][0] = 0.0;
		TDM_SP[1][i][1] = 0.0;
		TDM_SP[1][i][2] = 0.0;
		TDM_SP[1][i][3] = 0.0;
	}
	return 1;
}

public TDMCounterBack()
{
	if(TDMI[T_STATUS] != TDM_RUNNING) KillTimer(TDMI[T_TIMETIMER]);
	TDMI[T_TIME] -= 1;
	if(TDMI[T_TIME] < 0)
	{
		if(TDMI[T_COUNTER][0] > TDMI[T_COUNTER][1])
		{
			givePrize(M_TDM, 0, 750 * TDMI[T_PLAYERS], 5);
			TextDrawSetString(TD_TDM[15], "EQUIPMENT_1_gana");
		}
		else if(TDMI[T_COUNTER][1] > TDMI[T_COUNTER][0])
		{
			givePrize(M_TDM, 1, 750 * TDMI[T_PLAYERS], 5);
			TextDrawSetString(TD_TDM[15], "EQUIPMENT_2_gana");
		}
		else if(TDMI[T_COUNTER][0] == TDMI[T_COUNTER][1]) TextDrawSetString(TD_TDM[15], "empate");
	    KillTimer(TDMI[T_TIMETIMER]);
		TDMI[T_TIME] = 0;
		KillTimer(TDMI[T_NEXTTDM_TIMER]);
		TDMI[T_NEXTTDM_TIMER] = SetTimer("NextTDM", 3000, false);
	}
	TextDrawSetString(TD_TDM[0], TimeConvert(TDMI[T_TIME]));
	new str[10];
	format(str, 10, "%d", TDMI[T_COUNTER][0]); TextDrawSetString(TD_TDM[3], str);
	format(str, 10, "%d", TDMI[T_OBJECTIVE]); TextDrawSetString(TD_TDM[6], str);
	format(str, 10, "%d", TDMI[T_PLAYERS]); TextDrawSetString(TD_TDM[9], str);
	format(str, 10, "%d", TDMI[T_COUNTER][1]); TextDrawSetString(TD_TDM[12], str);
	return 1;
}

forward NextTDM();
public NextTDM()
{
	for(new i = 0; i < 13; i++)
	{
	    TDM_WEP[i][0] = 0;
	    TDM_WEP[i][1] = 0;
	}
	
	TDMI[T_COUNTER][0] = 0;
	TDMI[T_COUNTER][1] = 0;
	
	TDMI[T_ID] ++;
	if(isnull(TDM_Names[ TDMI[T_ID] ])) TDMI[T_ID] = 0;
	if(!LoadTDM( TDM_Names[ TDMI[T_ID] ] ))
	{
		TDMI[T_ID] = 0;
		LoadTDM(TDM_Names[ TDMI[T_ID] ]);
	}
	
	TextDrawSetString(TD_TDM[15], "_");
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
		if(!IsPlayerConnected(i) || PI[i][P_GAMEMODE] != M_TDM) continue;
		
		
		new index = random(sizeof(TDM_SP[])), team = GetPlayerTeam(i);
		SetSpawnInfo(i, team, GetPlayerSkin(i), TDM_SP[team][index][0], TDM_SP[team][index][1], TDM_SP[team][index][2], TDM_SP[team][index][3], 0, 0, 0, 0, 0, 0);
		SetPlayerArmour(i, 0.0);
		SetPlayerHealth(i, 100.0);
		E_SetPlayerPosEx(i, TDM_SP[team][index][0], TDM_SP[team][index][1], TDM_SP[team][index][2]);
		SetPlayerFacingAngle(i, TDM_SP[team][index][3]);
		SetCameraBehindPlayer(i);
		ResetPlayerWeapons(i);
		SetPlayerVirtualWorld(i, TDM_VW);
		SetPlayerInterior(i, TDMI[T_INT]);
		SetPlayerTime(i, TDMI[T_WEATHER][0], 0);
		SetPlayerWeather(i, TDMI[T_WEATHER][1]);
		GameTextForPlayer(i, TDMI[T_NAME], 3000, 6);
		if(TDMI[T_FREEZE])
		{
			TogglePlayerControllable(i, false);
			PI[i][P_TIMERS][0] = SetTimerEx("UnfreezePlayer", 3000, false, "d", i);
		}
		for (new d = 0; d <= 12; d++) GivePlayerWeapon(i, TDM_WEP[d][0], TDM_WEP[d][1]);
		
	}
	
	TDMI[T_TIME] = TDM_NEXT_ROUND_TIME;
	KillTimer(TDMI[T_TIMETIMER]);
	TDMI[T_TIMETIMER] = SetTimer("TDMCounterBack", 1000, true);
	return 1;
}

LoadDMNames(mapname[])
{
	new File:Handler = fopen(mapname, io_read);
    if(!Handler) return 0;
    Total_DM = 0;
    while(fread(Handler, Object_String))
    {
        StripNewLine(Object_String);
        format(DM_Names[Total_DM], 24, "%s", Object_String);
        Total_DM ++;
    }

    fclose(Handler);
	return 1;
}

LoadDM(mapname[])
{
	new File:Handler = fopen(mapname, io_read);
    if(!Handler) return 0;
    new Line, slot, sslot, tmp_WEP[13][2], Float:tmp_SP[10][4];
    while(fread(Handler, Object_String))
    {
        StripNewLine(Object_String);
        if(Line == 0) if(sscanf(Object_String, "p<,>s[24]dddd", DM_Name, DM_TWEATHER[0], DM_TWEATHER[1], DM_INT, DM_FREEZE)) return 0;
		if(Line > 0)  
		{
			if(!sscanf(Object_String, "p<,>dd", tmp_WEP[slot][0], tmp_WEP[slot][1])) DM_WEP = tmp_WEP, slot ++;
			if(!sscanf(Object_String, "p<,>ffff", tmp_SP[sslot][0], tmp_SP[sslot][1], tmp_SP[sslot][2], tmp_SP[sslot][3])) DM_SP = tmp_SP, sslot ++;
        }
        Line ++;
    }
    fclose(Handler);
	return 1;
}

forward DMCounterBack();
public DMCounterBack()
{
	if(DM_STATUS != DM_RUNNING) KillTimer(DM_TIMETIMER);
	DM_TIME -= 1;
	if(DM_TIME < 0)
	{
	    KillTimer(DM_TIMETIMER);
	    NextDM();
	}
	TextDrawSetString(TD_DM[0], TimeConvert(DM_TIME));
	new str[10]; format(str, 10, "%d", TOTAL_PLAYERS_DM);
	TextDrawSetString(TD_DM[3], str);
	return 1;
}

NextDM()
{
    for(new i = 0; i < 13; i++)
	{
	    DM_WEP[i][0] = 0;
	    DM_WEP[i][1] = 0;
	}
	//KillTimer(DM_TIMETIMER);
	
	DM_ID ++;
	if(isnull(DM_Names[DM_ID])) DM_ID = 0;
	if(!LoadDM(DM_Names[DM_ID]))
	{
		DM_ID = 0;
		LoadDM(DM_Names[DM_ID]);
	}
	
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
		if(!IsPlayerConnected(i) || PI[i][P_GAMEMODE] != M_DM) continue;
		ResetPlayerWeapons(i);
		SetPlayerVirtualWorld(i, DM_VW);
		SetPlayerHealth(i, 100.0);

		SetPlayerInterior(i, DM_INT);
		new index = random(sizeof(DM_SP));
		E_SetPlayerPosEx(i, DM_SP[index][0], DM_SP[index][1], DM_SP[index][2]);
		SetPlayerFacingAngle(i, DM_SP[index][3]);
		SetPlayerTime(i, DM_TWEATHER[0], 0);
		SetPlayerWeather(i, DM_TWEATHER[1]);
		SetCameraBehindPlayer(i);
		GameTextForPlayer(i, DM_Name, 3000, 6);
		if(DM_FREEZE)
		{
			TogglePlayerControllable(i, false);
			PI[i][P_TIMERS][0] = SetTimerEx("UnfreezePlayer", 3000, false, "d", i);
		}
		for (new a = 0; a <= 12; a++) GivePlayerWeapon(i, DM_WEP[a][0], DM_WEP[a][1]);
	}
	
	DM_TIME = DM_NEXT_ROUND_TIME;
	KillTimer(DM_TIMETIMER);
	DM_TIMETIMER = SetTimer("DMCounterBack", 1000, true);
	return 1;
}

UnLoadDM()
{
	KillTimer(DM_TIMETIMER);
	format(DM_Name, 24, "");
	DM_INT = 0;
	DM_FREEZE = 0;
	DM_TWEATHER[0] = 0;
	DM_TWEATHER[1] = 0;
	for(new i = 0; i < 13; i++)
	{
	    DM_WEP[i][0] = 0;
	    DM_WEP[i][1] = 0;
	}
	for(new i = 0; i < MAX_DM_SP; i++)
	{
		DM_SP[i][0] = 0.0;
		DM_SP[i][1] = 0.0;
		DM_SP[i][2] = 0.0;
		DM_SP[i][3] = 0.0;
	}
	return 1;
}


GetPlayerGameMode(playerid)
{
	switch(PI[playerid][P_GAMEMODE])
	{
		case M_FREEROAM: return GAME_FREEROAM;
		case M_GANGWAR: return GAME_GANGWARS;
		case M_DM: return GAME_DEATHMATCH;
		case M_DERBY: return GAME_DERBY;
		case M_FALL: return GAME_FALL;
		case M_ZOMBIE: return GAME_ZOMBIE;
		case M_TDM: return GAME_TDM;
		case M_SHOOTER: return GAME_SHOOTER;
		case M_RACE: return GAME_RACE;
	}
	return -1;
}

JoinPlayerGameMode(playerid, mode)
{
	HidePlayerDialog(playerid);
	switch(mode)
	{
		case GAME_FREEROAM:
		{
			PI[playerid][P_GAMEMODE] = M_FREEROAM;
			TOTAL_PLAYERS_FR += 1;
			UpdateCountPlayersTextDraws();
			SetPlayerTeam(playerid, NO_TEAM);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, FREEROAM_VW);
			
			SetPlayerArmour(playerid, 0.0);
			SetPlayerHealth(playerid, 100.0);
			
			SetPlayerTime(playerid, FREEROAM_TIME, FREEROAM_MINUTE);
			SetPlayerWeather(playerid, 0);
			
			SetPlayerColor(playerid, PI[playerid][P_COLOR]);
			
			if(!PI[playerid][P_IGNORE_TPTD])
			{
				TextDrawShowForPlayer(playerid, TD_LSR_TPINFO[0]);
				TextDrawShowForPlayer(playerid, TD_LSR_TPINFO[1]);
			}
			new r = random(sizeof(PlayerSpawnPosition_FR_LV));
			if(PI[playerid][P_STATUS] == S_CLASS) SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), PlayerSpawnPosition_FR_LV[r][0], PlayerSpawnPosition_FR_LV[r][1], PlayerSpawnPosition_FR_LV[r][2], PlayerSpawnPosition_FR_LV[r][3], 0, 0, 0, 0, 0, 0);
			else if(PI[playerid][P_STATUS] == S_SPAWNED)
			{
				if(PI[playerid][P_VIP]) SetPlayerArmour(playerid, 100.0);
				E_SetPlayerPosEx(playerid, PlayerSpawnPosition_FR_LV[r][0], PlayerSpawnPosition_FR_LV[r][1], PlayerSpawnPosition_FR_LV[r][2]);
				SetPlayerFacingAngle(playerid, PlayerSpawnPosition_FR_LV[r][3]);
				SetCameraBehindPlayer(playerid);
				//for(new i = 0; i != 10; i ++) GivePlayerWeapon(playerid, Random_Weapons[random(sizeof(Random_Weapons))], 500);
			}
			return 1;
		}
		case GAME_DEATHMATCH:
		{
			if(DM_STATUS == DM_CLOSED)
			{
				if(isnull(DM_Names[DM_ID])) DM_ID = 0;
				if(!LoadDM(DM_Names[DM_ID]))
				{
					DM_ID = 0;
					LoadDM(DM_Names[DM_ID]);
				}
				TOTAL_PLAYERS_DM = 0;
				DM_STATUS = DM_RUNNING;
				DM_TIME = DM_NEXT_ROUND_TIME;
				KillTimer(DM_TIMETIMER);
				DM_TIMETIMER = SetTimer("DMCounterBack", 1000, true);
		
			}
			
			TOTAL_PLAYERS_DM ++;
			UpdateCountPlayersTextDraws();
			PI[playerid][P_GAMEMODE] = M_DM;
			PI[playerid][P_TIMERS][3] = SetTimerEx("CheckPlayerPause", 1000, true, "i", playerid);
			TextDrawShowForPlayer(playerid, TD_DM[0]);
			TextDrawShowForPlayer(playerid, TD_DM[1]);
			TextDrawShowForPlayer(playerid, TD_DM[2]);
			TextDrawShowForPlayer(playerid, TD_DM[3]);
			TextDrawShowForPlayer(playerid, TD_DM[4]);
			TextDrawShowForPlayer(playerid, TD_DM[5]);
			
			new index = random(sizeof(DM_SP));
			if(PI[playerid][P_STATUS] == S_CLASS) 
			{
				SetPlayerColor(playerid, PI[playerid][P_COLOR]);
				SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), DM_SP[index][0], DM_SP[index][1], DM_SP[index][2], DM_SP[index][3], 0, 0, 0, 0, 0, 0);
			}
			else if(PI[playerid][P_STATUS] == S_SPAWNED)
			{
				SetPlayerArmour(playerid, 0.0);
				SetPlayerHealth(playerid, 100.0);
				E_SetPlayerPosEx(playerid, DM_SP[index][0], DM_SP[index][1], DM_SP[index][2]);
				SetPlayerFacingAngle(playerid, DM_SP[index][3]);
				SetCameraBehindPlayer(playerid);
				ResetPlayerWeapons(playerid);
				SetPlayerVirtualWorld(playerid, DM_VW);
				SetPlayerInterior(playerid, DM_INT);
				for (new i = 0; i <= 12; i++) GivePlayerWeapon(playerid, DM_WEP[i][0], DM_WEP[i][1]);
				SetPlayerTime(playerid, DM_TWEATHER[0], 0);
				SetPlayerWeather(playerid, DM_TWEATHER[1]);
				if(DM_FREEZE)
				{
					TogglePlayerControllable(playerid, false);
					PI[playerid][P_TIMERS][0] = SetTimerEx("UnfreezePlayer", 3000, false, "d", playerid);
				}
			}
			return 1;
		}
		
		case GAME_TDM:
		{
			if(TDMI[T_STATUS] == TDM_CLOSED)
			{
				if(isnull(TDM_Names[ TDMI[T_ID] ])) TDMI[T_ID] = 0;
				if(!LoadTDM( TDM_Names[ TDMI[T_ID] ] ))
				{
					TDMI[T_ID] = 0;
					LoadTDM(TDM_Names[ TDMI[T_ID] ]);
				}
				TextDrawSetString(TD_TDM[15], "_");
				TDMI[T_PLAYERS] = 0;
				TDMI[T_STATUS] = TDM_RUNNING;
				TDMI[T_TIME] = TDM_NEXT_ROUND_TIME;
				KillTimer(TDMI[T_TIMETIMER]);
				TDMI[T_TIMETIMER] = SetTimer("TDMCounterBack", 1000, true);
		
			}
			new team = GetPlayerTeam(playerid);
			TDMI[T_PLAYERS] ++;
			TDMI[T_TeamPLAYERS][team] ++;
			UpdateCountPlayersTextDraws();
			PI[playerid][P_GAMEMODE] = M_TDM;
			SetPlayerColor(playerid, TDM_TeamColors[ team ]);
			PI[playerid][P_TIMERS][3] = SetTimerEx("CheckPlayerPause", 1000, true, "i", playerid);
			for(new i = 0; i != sizeof TD_TDM; i ++) TextDrawShowForPlayer(playerid, TD_TDM[i]);
			GameTextForPlayer(playerid, TDMI[T_NAME], 3000, 6);
			new index = random(sizeof(TDM_SP[]));
			if(PI[playerid][P_STATUS] == S_CLASS) SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), TDM_SP[team][index][0], TDM_SP[team][index][1], TDM_SP[team][index][2], TDM_SP[team][index][3], 0, 0, 0, 0, 0, 0);
			else if(PI[playerid][P_STATUS] == S_SPAWNED)
			{
				SetPlayerArmour(playerid, 0.0);
				SetPlayerHealth(playerid, 100.0);
				E_SetPlayerPosEx(playerid, TDM_SP[team][index][0], TDM_SP[team][index][1], TDM_SP[team][index][2]);
				SetPlayerFacingAngle(playerid, TDM_SP[team][index][3]);
				SetCameraBehindPlayer(playerid);
				ResetPlayerWeapons(playerid);
				SetPlayerVirtualWorld(playerid, TDM_VW);
				SetPlayerInterior(playerid, TDMI[T_INT]);
				for (new i = 0; i <= 12; i++) GivePlayerWeapon(playerid, TDM_WEP[i][0], TDM_WEP[i][1]);
				SetPlayerTime(playerid, TDMI[T_WEATHER][0], 0);
				SetPlayerWeather(playerid, TDMI[T_WEATHER][1]);
				if(TDMI[T_FREEZE])
				{
					TogglePlayerControllable(playerid, false);
					PI[playerid][P_TIMERS][0] = SetTimerEx("UnfreezePlayer", 3000, false, "d", playerid);
				}
			}
			
			return 1;
		}
		case GAME_SHOOTER:
		{
			if(ST[S_STATUS] == SHOOTER_CLOSED)
			{
				if(isnull(SHOOTER_Names[ ST[S_ID] ])) ST[S_ID] = 0;
				if(!LoadShooter( SHOOTER_Names[ ST[S_ID] ] ))
				{
					ST[S_ID] = 0;
					LoadShooter(SHOOTER_Names[ ST[S_ID] ]);
				}
				TextDrawSetString(TD_ShooterMessage, "_");
				ST[S_PLAYERS] = 0;
				ST[S_RUNNING_PLAYERS] = 0;
				ST[S_STATUS] = SHOOTER_WAIT;
				ST[S_COUNTDOWN_COUNTER] = 11;
				KillTimer(ST[S_COUNTDOWN_TIMER]);
				ST[S_COUNTDOWN_TIMER] = SetTimer("ShooterCountdown", 900, true);
				SendClientMessageToAll(-1, "{99CC00}--> [SHOOTER] will start in {"ORANGE"}10 seconds. {99CC00}use {"GREY"}/shooter {99CC00}To join.");
				new str[64]; format(str, 64, "~g~~h~%s~n~~y~Waiting_Players ", ST[S_NAME]);
				TextDrawSetString(TD_ShooterMessage, str);
		
			}
			ST[S_PLAYERS] ++;
			UpdateCountPlayersTextDraws();
			PI[playerid][P_GAMEMODE] = M_SHOOTER;
			PI[playerid][P_SHOOTER_VEHICLEID] = INVALID_VEHICLE_ID;
			PI[playerid][P_TIMERS][3] = SetTimerEx("CheckPlayerPause", 1000, true, "i", playerid);
			GameTextForPlayer(playerid, ST[S_NAME], 3000, 6);
			PI[playerid][P_SHOOTER_POSITION] = GetFreeShooterSlot();
			ST_SPAWN_POSITION_USED[ PI[playerid][P_SHOOTER_POSITION] ] = true;
			TextDrawShowForPlayer(playerid, TD_ShooterMessage);
			PI[playerid][P_SHOOTER_STATUS] = PD_NORMAL;
			if(PI[playerid][P_STATUS] == S_CLASS)
			{
				SetPlayerColor(playerid, PI[playerid][P_COLOR]);
				SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][0], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][1], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][2], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][3], 0, 0, 0, 0, 0, 0);
			}
			else if(PI[playerid][P_STATUS] == S_SPAWNED)
			{
				SetPlayerArmour(playerid, 0.0);
				SetPlayerHealth(playerid, 100.0);
				ResetPlayerWeapons(playerid);
				SetPlayerVirtualWorld(playerid, SHOOTER_VW);
				SetPlayerInterior(playerid, ST[S_INT]);
				SetPlayerTime(playerid, ST[S_WEATHER][0], 0);
				SetPlayerWeather(playerid, ST[S_WEATHER][1]);
				switch(ST[S_STATUS])
				{
					case SHOOTER_RUNNING:
					{
						PI[playerid][P_SHOOTER_STATUS] = PD_SPECTATE;
						for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
						{
							if(IsPlayerConnected(i))
							{
								if(PI[i][P_GAMEMODE] == M_SHOOTER)
								{
									if(PI[i][P_SHOOTER_STATUS] == PD_NORMAL)
									{
										PI[playerid][P_SHOOTER_SPECTATEPLAYER] = i;
										break;
									}
								}
							}
						}
						for(new x; x != sizeof TD_SHOOTER; x ++) TextDrawShowForPlayer(playerid, TD_SHOOTER[x]);
						TogglePlayerSpectatingEx(playerid, true);
						PlayerSpectateVehicle(playerid, PI[PI[playerid][P_SHOOTER_SPECTATEPLAYER]][P_SHOOTER_VEHICLEID]);
						SendClientMessage(playerid, -1, "{"ORANGE"}Press the key {"GREY"}INTRO {"ORANGE"}To change the player.");
					}
					case SHOOTER_WAIT:
					{
						
						if(IsValidVehicle(PI[playerid][P_SHOOTER_VEHICLEID]) && PI[playerid][P_SHOOTER_VEHICLEID] != INVALID_VEHICLE_ID)
						{
							DestroyVehicleEx(PI[playerid][P_SHOOTER_VEHICLEID]);
							PI[playerid][P_SHOOTER_VEHICLEID] = INVALID_VEHICLE_ID;
						}
						PI[playerid][P_SHOOTER_VEHICLEID] = CreateVehicle(ST[S_VEH_MODELID], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][0], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][1], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][2], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][3], minrand(128, 255), minrand(128, 255), 99999);
						SetVehicleVirtualWorld(PI[playerid][P_SHOOTER_VEHICLEID], SHOOTER_VW);
						LinkVehicleToInterior(PI[playerid][P_SHOOTER_VEHICLEID], ST[S_INT]);
						SetVehicleParamsEx(PI[playerid][P_SHOOTER_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
						PutPlayerInVehicleEx(playerid, PI[playerid][P_SHOOTER_VEHICLEID], 0);
						
						return 1;
					}
				}
			}
			return 1;
		}
		
		case GAME_RACE:
		{
			if(RC[R_STATUS] == RACE_CLOSED)
			{
				if(isnull(RACE_Names[ RC[R_ID] ])) RC[R_ID] = 0;
				if(!LoadRace( RACE_Names[ RC[R_ID] ] ))
				{
					RC[R_ID] = 0;
					LoadRace(RACE_Names[ RC[R_ID] ]);
				}
				TextDrawSetString(TD_RACEMessage, "_");
				RC[R_PLAYERS] = 0;
				RC[R_RUNNING_PLAYERS] = 0;
				RC[R_STATUS] = RACE_WAIT;
				RC[R_COUNTDOWN_COUNTER] = 11;
				KillTimer(RC[R_COUNTDOWN_TIMER]);
				RC[R_COUNTDOWN_TIMER] = SetTimer("RaceCountdown", 900, true);
				SendClientMessageToAll(-1, "{99CC00}--> [CAREER] will start in {"ORANGE"}10 seconds. {99CC00}use {"GREY"}/race {99CC00}To join.");
				new str[64]; format(str, 64, "~g~~h~%s~n~~y~waiting_players", RC[R_NAME]);
				TextDrawSetString(TD_RACE_Collisions[3], "With_contact:_0~n~No contact:_0~n~_");
				TextDrawSetString(TD_RACEMessage, str);
		
			}
			RC[R_PLAYERS] ++;
			UpdateCountPlayersTextDraws();
			PI[playerid][P_GAMEMODE] = M_RACE;
			PI[playerid][P_RACE_VEHICLEID] = INVALID_VEHICLE_ID;
			PI[playerid][P_TIMERS][3] = SetTimerEx("CheckPlayerPause", 1000, true, "i", playerid);
			GameTextForPlayer(playerid, RC[R_NAME], 3000, 6);
			PI[playerid][P_RACE_POSITION] = GetFreeRaceSlot();
			RC_SPAWN_POSITION_USED[ PI[playerid][P_RACE_POSITION] ] = true;
			TextDrawShowForPlayer(playerid, TD_RACEMessage);
			PI[playerid][P_RACE_STATUS] = PD_NORMAL;
			if(PI[playerid][P_STATUS] == S_CLASS)
			{
				SetPlayerColor(playerid, PI[playerid][P_COLOR]);
				SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][0], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][1], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][2] + 0.5, RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][3], 0, 0, 0, 0, 0, 0);
			}
			else if(PI[playerid][P_STATUS] == S_SPAWNED)
			{
				SetPlayerArmour(playerid, 0.0);
				SetPlayerHealth(playerid, 100.0);
				ResetPlayerWeapons(playerid);
				SetPlayerVirtualWorld(playerid, RACE_VW);
				SetPlayerInterior(playerid, RC[R_INT]);
				SetPlayerTime(playerid, RC[R_WEATHER][0], 0);
				SetPlayerWeather(playerid, RC[R_WEATHER][1]);
				switch(RC[R_STATUS])
				{
					case RACE_RUNNING:
					{
						PI[playerid][P_RACE_STATUS] = PD_SPECTATE;
						for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
						{
							if(IsPlayerConnected(i))
							{
								if(PI[i][P_GAMEMODE] == M_RACE)
								{
									if(PI[i][P_RACE_STATUS] == PD_NORMAL)
									{
										PI[playerid][P_RACE_SPECTATEPLAYER] = i;
										break;
									}
								}
							}
						}
						for(new x; x != sizeof TD_SHOOTER; x ++) TextDrawShowForPlayer(playerid, TD_RACE[x]);
						TogglePlayerSpectatingEx(playerid, true);
						PlayerSpectateVehicle(playerid, PI[PI[playerid][P_RACE_SPECTATEPLAYER]][P_RACE_VEHICLEID]);
						SendClientMessage(playerid, -1, "{"ORANGE"}Press the key {"GREY"}INTRO {"ORANGE"}To change the player.");
					}
					case RACE_WAIT:
					{
						if(IsValidVehicle(PI[playerid][P_RACE_VEHICLEID]) && PI[playerid][P_RACE_VEHICLEID] != INVALID_VEHICLE_ID)
						{
							DestroyVehicleEx(PI[playerid][P_RACE_VEHICLEID]);
							PI[playerid][P_RACE_VEHICLEID] = INVALID_VEHICLE_ID;
						}
						PI[playerid][P_RACE_VEHICLEID] = CreateVehicle(RC[R_MODELID], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][0], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][1], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][2] + 0.5, RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][3], minrand(128, 255), minrand(128, 255), 99999);
						SetVehicleVirtualWorld(PI[playerid][P_RACE_VEHICLEID], RACE_VW);
						LinkVehicleToInterior(PI[playerid][P_RACE_VEHICLEID], RC[R_INT]);
						SetVehicleParamsEx(PI[playerid][P_RACE_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
						PutPlayerInVehicleEx(playerid, PI[playerid][P_RACE_VEHICLEID], 0);
						
						for(new i = 0; i != sizeof TD_RACE_Collisions; i ++) TextDrawShowForPlayer(playerid, TD_RACE_Collisions[i]);
						if(!PI[playerid][P_RACE_VOTED]) SelectTextDraw(playerid, 0x999999FF);
						return 1;
					}
				}
			}
			return 1;
		}
		
		case GAME_DERBY:
		{
			DI[D_PLAYERS] += 1;
			PI[playerid][P_JOINDERBY] = false;
			SetPlayerArmour(playerid, 0.0);
			SetPlayerHealth(playerid, 100.0);
			ResetPlayerWeapons(playerid);
			PI[playerid][P_GAMEMODE] = M_DERBY;
			PI[playerid][P_DERBY_VEHICLEID] = INVALID_VEHICLE_ID;
			PI[playerid][P_TIMERS][3] = SetTimerEx("CheckPlayerPause", 1000, true, "i", playerid);
			
			SetPlayerVirtualWorld(playerid, playerid + TOTAL_DERBYS);
			UpdateCountPlayersTextDraws();
			PI[playerid][P_DERBY_STATUS] = PD_NORMAL;
			TextDrawShowForPlayer(playerid, TD_DerbyMessage);
			
			switch(DI[D_STATUS])
			{
				case DERBY_CLOSED: NextDerbyStatus();
				case DERBY_RUNNING: UpdatePlayerDerbyStatus(playerid);
				case DERBY_WAIT: UpdatePlayerDerbyStatus(playerid);
			}
			return 1;
		}
		case GAME_GANGWARS:
		{
			PI[playerid][P_GAMEMODE] = M_GANGWAR;
			TOTAL_PLAYERS_GANG += 1;
			UpdateCountPlayersTextDraws();
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, GANGWAR_VW);
			
			SetPlayerArmour(playerid, 0.0);
			SetPlayerHealth(playerid, 100.0);
			
			SetPlayerTime(playerid, 16, 0);
			SetPlayerWeather(playerid, 0);
			
			SetPlayerColor(playerid, TEAM_COLORS[GetPlayerTeam(playerid)]);
			
			GangZoneShowForPlayer(playerid, LS_Gang_GangZone, 0xFFFF0096);
			new r = random(sizeof(TEAM_SPAWNS[]));
			new skin = TEAM_SKINS[GetPlayerTeam(playerid)][random(sizeof(TEAM_SKINS[]))];
			
			if(!PI[playerid][P_IGNORE_TPTD])
			{
				TextDrawShowForPlayer(playerid, TD_LSR_TPINFO[0]);
				TextDrawShowForPlayer(playerid, TD_LSR_TPINFO[1]);
			}
			
			if(PI[playerid][P_STATUS] == S_CLASS) SetSpawnInfo(playerid, GetPlayerTeam(playerid), skin, TEAM_SPAWNS[GetPlayerTeam(playerid)][r][0], TEAM_SPAWNS[GetPlayerTeam(playerid)][r][1], TEAM_SPAWNS[GetPlayerTeam(playerid)][r][2], TEAM_SPAWNS[GetPlayerTeam(playerid)][r][3], TEAM_WEAPONS[GetPlayerTeam(playerid)][0], 500, TEAM_WEAPONS[GetPlayerTeam(playerid)][1], 500, TEAM_WEAPONS[GetPlayerTeam(playerid)][2], 500);
			else if(PI[playerid][P_STATUS] == S_SPAWNED)
			{
				E_SetPlayerPosEx(playerid, TEAM_SPAWNS[GetPlayerTeam(playerid)][r][0], TEAM_SPAWNS[GetPlayerTeam(playerid)][r][1], TEAM_SPAWNS[GetPlayerTeam(playerid)][r][2]);
				SetPlayerFacingAngle(playerid, TEAM_SPAWNS[GetPlayerTeam(playerid)][r][3]);
				SetPlayerSkin(playerid, skin);
				SetCameraBehindPlayer(playerid);
				ResetPlayerWeapons(playerid);
				GivePlayerWeapon(playerid, TEAM_WEAPONS[GetPlayerTeam(playerid)][0], 500);
				GivePlayerWeapon(playerid, TEAM_WEAPONS[GetPlayerTeam(playerid)][1], 500);
				GivePlayerWeapon(playerid, TEAM_WEAPONS[GetPlayerTeam(playerid)][2], 500);
			}
			return 1;
		}
		case GAME_FALL:
		{
			SetPlayerArmour(playerid, 0.0);
			SetPlayerHealth(playerid, 100.0);
			ResetPlayerWeapons(playerid);
			PI[playerid][P_GAMEMODE] = M_FALL;
			PI[playerid][P_TIMERS][3] = SetTimerEx("CheckPlayerPause", 1000, true, "i", playerid);
			
			SetPlayerVirtualWorld(playerid, FALL_VW);
			FI[F_PLAYERS] += 1;
			UpdateCountPlayersTextDraws();
			PI[playerid][P_FALL_STATUS] = PD_NORMAL;
			TextDrawShowForPlayer(playerid, TD_FallMessage);
			
			switch(FI[F_STATUS])
			{
				case FALL_CLOSED: NextFallStatus();
				case FALL_RUNNING: UpdatePlayerFallStatus(playerid);
				case FALL_WAIT: UpdatePlayerFallStatus(playerid);
			}
			return 1;
		}
		case GAME_ZOMBIE:
		{
			PI[playerid][P_GAMEMODE] = M_ZOMBIE;
			ZI[Z_PLAYERS] += 1;
			ZI[Z_TEAM_PLAYERS][PI[playerid][P_ZOMBIE_TEAM]] += 1;
			UpdateCountPlayersTextDraws();
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, ZOMBIE_WORLD);
			
			SetPlayerArmour(playerid, 0.0);
			SetPlayerHealth(playerid, 100.0);
			
			SetPlayerTime(playerid, ZOMBIE_TIME, 0);
			SetPlayerWeather(playerid, ZombieWeathers[PI[playerid][P_ZOMBIE_TEAM]]);
			
			SetPlayerColor(playerid, ZombieColor[PI[playerid][P_ZOMBIE_TEAM]]);
			SetPlayerSkin(playerid, ZombieSkins[PI[playerid][P_ZOMBIE_TEAM]][random(sizeof(ZombieSkins[]))]);
			ResetPlayerWeapons(playerid);
			
			
			new r = random(sizeof(ZombieSpawns[]));
			if(PI[playerid][P_STATUS] == S_CLASS) SetSpawnInfo(playerid, NO_TEAM, GetPlayerSkin(playerid), ZombieSpawns[PI[playerid][P_ZOMBIE_TEAM]][r][0], ZombieSpawns[PI[playerid][P_ZOMBIE_TEAM]][r][1], ZombieSpawns[PI[playerid][P_ZOMBIE_TEAM]][r][2], ZombieSpawns[PI[playerid][P_ZOMBIE_TEAM]][r][3], 0, 0, 0, 0, 0, 0);
			else if(PI[playerid][P_STATUS] == S_SPAWNED)
			{
				if(PI[playerid][P_ZOMBIE_TEAM] == TEAM_HUMANS)
				{
					GivePlayerWeapon(playerid, 5, 1);
					GivePlayerWeapon(playerid, 24, minrand(50, 150));
				}
				
				E_SetPlayerPosEx(playerid, ZombieSpawns[PI[playerid][P_ZOMBIE_TEAM]][r][0], ZombieSpawns[PI[playerid][P_ZOMBIE_TEAM]][r][1], ZombieSpawns[PI[playerid][P_ZOMBIE_TEAM]][r][2]);
				SetPlayerFacingAngle(playerid, ZombieSpawns[PI[playerid][P_ZOMBIE_TEAM]][r][3]);
				SetCameraBehindPlayer(playerid);
			}
			return 1;
		}
		case GAME_DUEL:
		{
			PI[playerid][P_GAMEMODE] = M_DUEL;
			TOTAL_PLAYERS_DUEL += 1;
			UpdateCountPlayersTextDraws();
	
			new duel_id = PI[playerid][P_DUEL_ID];
			GivePlayerMoneyEx(playerid, - DLI[duel_id][DL_BET]);
			new str[45]; format(str, 45, "~g~~h~~h~Bets: %d$", DLI[duel_id][DL_BET] * 2);
			GameTextForPlayer(playerid, str, 3000, 1);
			
			if(DLI[duel_id][DL_PLAYER_ONE] == playerid)
			{
				SetPlayerPosEx(playerid, DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_X1], DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_Y1], DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_Z1], DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_A1], DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_INTERIOR], DLI[duel_id][DL_WORLD], false, false);
				SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), 
					DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_X1], DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_Y1], DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_Z1], DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_A1], 
					DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_ID1], DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_AMMO1], 
					DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_ID2], DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_AMMO2], 
					DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_ID3], DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_AMMO3]);
			}
			else
			{
				SetPlayerPosEx(playerid, DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_X2], DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_Y2], DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_Z2], DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_A2], DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_INTERIOR], DLI[duel_id][DL_WORLD], false, false);
				SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), 
					DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_X2], DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_Y2], DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_Z2], DUEL_LIST[ DLI[duel_id][DL_DUEL_LIST_ID] ][DUEL_LIST_A2], 
					DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_ID1], DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_AMMO1], 
					DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_ID2], DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_AMMO2], 
					DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_ID3], DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_AMMO3]);
			}
			SetCameraBehindPlayer(playerid);
			ResetPlayerWeapons(playerid);
			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 0.0);
			if(PI[playerid][P_VIP]) SetPlayerArmour(playerid, 100.0);
			PlayerPlaySoundEx(playerid, 3200, 0.0, 0.0, 0.0);
			
			GivePlayerWeapon(playerid, DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_ID1], DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_AMMO1]);
			GivePlayerWeapon(playerid, DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_ID2], DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_AMMO2]);
			GivePlayerWeapon(playerid, DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_ID3], DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_AMMO3]);
			GivePlayerWeapon(playerid, DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_ID4], DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_AMMO4]);
			GivePlayerWeapon(playerid, DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_ID5], DUEL_WEAPONS[ DLI[duel_id][DL_DUEL_WEAPON_ID] ][WEAPON_AMMO5]);
			return 1;
		}
	}
	return 1;
}

ExitPlayerGameMode(playerid)
{
	HidePlayerDialog(playerid);
	if(PI[playerid][P_JOINED_EVENT])
	{
		TOTAL_PLAYERS_EVENT -= 1;
		PI[playerid][P_JOINED_EVENT] = false;
	}
	
	switch(PI[playerid][P_GAMEMODE])
	{
		case M_FREEROAM:
		{
			TextDrawHideForPlayer(playerid, TD_LSR_TPINFO[0]);
			TextDrawHideForPlayer(playerid, TD_LSR_TPINFO[1]);
			PlayerTextDrawHide(playerid, PI[playerid][PTD_MESSAGE_TD]);
			TOTAL_PLAYERS_FR --;
			
			if(PI[playerid][P_SHOPCAR]) HidePlayerCarShop(playerid);
			if(PI[playerid][P_TUNING_MENU]) HidePlayerTuningMenu(playerid);
			if(PI[playerid][P_GODMODE])
			{
				PI[playerid][P_GODMODE] = false;
				SetPlayerHealth(playerid, 100.0);
			}
			PI[playerid][P_SPAWN_PROTECTION] = false;
			PI[playerid][P_GAMEMODE] = M_NONE;
			SetPlayerInterior(playerid, 0);
			UpdateCountPlayersTextDraws();
			return 1;
		}
		case M_GANGWAR:
		{
			GangZoneHideForPlayer(playerid, LS_Gang_GangZone);
			TextDrawHideForPlayer(playerid, TD_LSR_TPINFO[0]);
			TextDrawHideForPlayer(playerid, TD_LSR_TPINFO[1]);
			if(PI[playerid][P_SAVED_SKIN] != 0) SetPlayerSkin(playerid, PI[playerid][P_SAVED_SKIN]);
			else SetPlayerSkin(playerid, FreeRoam_Skins[random(sizeof(FreeRoam_Skins))]);
			TOTAL_PLAYERS_GANG --;
			PI[playerid][P_GAMEMODE] = M_NONE;
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, NO_VW);
			UpdateCountPlayersTextDraws();
			return 1;
		}
		case M_DM:
		{
		    TOTAL_PLAYERS_DM --;
			PI[playerid][P_GAMEMODE] = M_NONE;
			
			KillTimer(PI[playerid][P_TIMERS][3]);
		    ResetPlayerWeapons(playerid);
		    SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, NO_VW);
		    TextDrawHideForPlayer(playerid, TD_DM[0]);
			TextDrawHideForPlayer(playerid, TD_DM[1]);
			TextDrawHideForPlayer(playerid, TD_DM[2]);
			TextDrawHideForPlayer(playerid, TD_DM[3]);
			TextDrawHideForPlayer(playerid, TD_DM[4]);
			TextDrawHideForPlayer(playerid, TD_DM[5]);
			
			UpdateCountPlayersTextDraws();
		    if(DM_STATUS == DM_RUNNING)
		    {
		        if(TOTAL_PLAYERS_DM == 0)
		        {
		            DM_STATUS = DM_CLOSED;
					TOTAL_PLAYERS_DM = 0;
		    	    UnLoadDM();
		        }
		    }
			return 1;
		}
		
		case M_TDM:
		{
			new team = PI[playerid][P_TEM_TEAM];
		    TDMI[T_PLAYERS] --;
			TDMI[T_TeamPLAYERS][team] --;
			SetPlayerTeam(playerid, NO_TEAM);
			PI[playerid][P_GAMEMODE] = M_NONE;
			
			KillTimer(PI[playerid][P_TIMERS][3]);
		    ResetPlayerWeapons(playerid);
		    SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, NO_VW);
		    for(new i = 0; i != sizeof TD_TDM; i ++) TextDrawHideForPlayer(playerid, TD_TDM[i]);
			
			UpdateCountPlayersTextDraws();
		    if(TDMI[T_STATUS] == TDM_RUNNING)
		    {
		        if(TDMI[T_PLAYERS] == 0)
		        {
					KillTimer(TDMI[T_TIMETIMER]);
		    	    UnLoadTDM();
		        }
		    }
			return 1;
		}
		
		case M_DERBY:
		{
			KillTimer(PI[playerid][P_TIMERS][3]);
			if( (DI[D_STATUS] == DERBY_RUNNING) && PI[playerid][P_DERBY_STATUS] == PD_NORMAL)
			{
				DI[D_RUNNINGPLAYERS] -= 1;
				if(DI[D_TIMEOUT_COUNTER] > (DI[D_RUNNINGPLAYERS]*20)) DI[D_TIMEOUT_COUNTER] = (DI[D_RUNNINGPLAYERS]*20);
			}
			DI[D_PLAYERS] -= 1;
			
			TextDrawHideForPlayer(playerid, TD_DERBY[0]);
			TextDrawHideForPlayer(playerid, TD_DERBY[1]);
			TextDrawHideForPlayer(playerid, TD_DERBY[2]);
			TextDrawHideForPlayer(playerid, TD_DERBY[3]);
			TextDrawHideForPlayer(playerid, TD_DERBY[4]);
			TextDrawHideForPlayer(playerid, TD_DERBY[5]);
			TextDrawHideForPlayer(playerid, TD_DERBY[6]);
			TextDrawHideForPlayer(playerid, TD_DERBY[7]);
			TextDrawHideForPlayer(playerid, TD_DERBY[8]);
			TextDrawHideForPlayer(playerid, TD_DerbyMessage);
	
			DERBY_SLOT_USED[PI[playerid][P_DERBY_POSITION]] = false;
			SetPlayerVirtualWorld(playerid, NO_VW);
			SetPlayerInterior(playerid, 0);
			PI[playerid][P_DERBY_POSITION] = 0;
			PI[playerid][P_DERBY_STATUS] = PD_NORMAL;
			if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) TogglePlayerSpectatingEx(playerid, false);
			if(IsValidVehicle(PI[playerid][P_DERBY_VEHICLEID]) && PI[playerid][P_DERBY_VEHICLEID] != INVALID_VEHICLE_ID)
			{
				DestroyVehicleEx(PI[playerid][P_DERBY_VEHICLEID]);
				PI[playerid][P_DERBY_VEHICLEID] = INVALID_VEHICLE_ID;
			}
			
			if(PI[playerid][P_ID] != 0)
			{
				format(DB_Query, sizeof(DB_Query), "UPDATE DERBY-PLAYERS SET LAST = CURRENT_TIMESTAMP WHERE ID-PLAYER = '%d'", PI[playerid][P_ID]);
				db_query(Database, DB_Query);
			}
			
			PI[playerid][P_GAMEMODE] = M_NONE;
			SetPlayerInterior(playerid, 0);
			CheckDerby();
			UpdateCountPlayersTextDraws();
			return 1;
		}
		
		case M_SHOOTER:
		{
			KillTimer(PI[playerid][P_TIMERS][3]);
			if( (ST[S_STATUS] == SHOOTER_RUNNING) && PI[playerid][P_SHOOTER_STATUS] == PD_NORMAL)
			{
				ST[S_RUNNING_PLAYERS] -= 1;
				if(ST[S_TIMEOUT_COUNTER] > (ST[S_RUNNING_PLAYERS]*20)) ST[S_TIMEOUT_COUNTER] = (ST[S_RUNNING_PLAYERS]*20);
			}
			ST[S_PLAYERS] -= 1;
			
			for(new i = 0; i != sizeof TD_SHOOTER; i ++) TextDrawHideForPlayer(playerid, TD_SHOOTER[i]);
			TextDrawHideForPlayer(playerid, TD_ShooterMessage);
	
			ST_SPAWN_POSITION_USED[ PI[playerid][P_SHOOTER_POSITION] ] = false;
			SetPlayerVirtualWorld(playerid, NO_VW);
			SetPlayerInterior(playerid, 0);
			PI[playerid][P_SHOOTER_POSITION] = 0;
			PI[playerid][P_SHOOTER_STATUS] = PD_NORMAL;

			if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) TogglePlayerSpectatingEx(playerid, false);
			if(IsValidVehicle(PI[playerid][P_SHOOTER_VEHICLEID]) && PI[playerid][P_SHOOTER_VEHICLEID] != INVALID_VEHICLE_ID)
			{
				DestroyVehicleEx(PI[playerid][P_SHOOTER_VEHICLEID]);
				PI[playerid][P_SHOOTER_VEHICLEID] = INVALID_VEHICLE_ID;
			}
			PI[playerid][P_GAMEMODE] = M_NONE;
			SetPlayerInterior(playerid, 0);
			CheckShooter();
			UpdateCountPlayersTextDraws();
			return 1;
		}
		
		case M_RACE:
		{
			KillTimer(PI[playerid][P_TIMERS][3]);
			if( (RC[R_STATUS] == RACE_RUNNING) && PI[playerid][P_RACE_STATUS] == PD_NORMAL)
			{
				RC[R_RUNNING_PLAYERS] -= 1;
				//if(RC[R_TIMEOUT_COUNTER] > (RC[R_RUNNING_PLAYERS]*20)) RC[R_TIMEOUT_COUNTER] = (RC[R_RUNNING_PLAYERS]*20);
			}
			RC[R_PLAYERS] -= 1;
			
			for(new i = 0; i != sizeof TD_RACE; i ++) TextDrawHideForPlayer(playerid, TD_RACE[i]);
			for(new i = 0; i != sizeof TD_RACE_Collisions; i ++) TextDrawHideForPlayer(playerid, TD_RACE_Collisions[i]);
			PlayerTextDrawHide(playerid, PTD_RACE[playerid][0]);
			PlayerTextDrawHide(playerid, PTD_RACE[playerid][1]);
			PlayerTextDrawHide(playerid, PTD_RACE[playerid][2]);
			TextDrawHideForPlayer(playerid, TD_RACEMessage);
			DisableRemoteVehicleCollisions(playerid, false);
			DisablePlayerRaceCheckpoint(playerid);
			CancelSelectTextDraw(playerid);
			RC_SPAWN_POSITION_USED[ PI[playerid][P_RACE_POSITION] ] = false;
			SetPlayerVirtualWorld(playerid, NO_VW);
			SetPlayerInterior(playerid, 0);
			PI[playerid][P_RACE_CPCOUNT] = 0;
			PI[playerid][P_RACE_POSITION] = 0;
			PI[playerid][P_RACE_STATUS] = PD_NORMAL;
			PI[playerid][P_RACE_VOTED] = false;
			if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) TogglePlayerSpectatingEx(playerid, false);
			if(IsValidVehicle(PI[playerid][P_RACE_VEHICLEID]) && PI[playerid][P_RACE_VEHICLEID] != INVALID_VEHICLE_ID)
			{
				DestroyVehicleEx(PI[playerid][P_RACE_VEHICLEID]);
				PI[playerid][P_RACE_VEHICLEID] = INVALID_VEHICLE_ID;
			}
			PI[playerid][P_GAMEMODE] = M_NONE;
			CheckRace();
			UpdateCountPlayersTextDraws();
			return 1;
		}
		
		case M_FALL:
		{
			KillTimer(PI[playerid][P_TIMERS][3]);
			if( (FI[F_STATUS] == FALL_RUNNING) && PI[playerid][P_FALL_STATUS] == PD_NORMAL) FI[F_RUNNINGPLAYERS] -= 1;
			FI[F_PLAYERS] -= 1;
			
			TextDrawHideForPlayer(playerid, TD_FALL[0]);
			TextDrawHideForPlayer(playerid, TD_FALL[1]);
			TextDrawHideForPlayer(playerid, TD_FALL[2]);
			TextDrawHideForPlayer(playerid, TD_FALL[3]);
			TextDrawHideForPlayer(playerid, TD_FALL[4]);
			TextDrawHideForPlayer(playerid, TD_FALL[5]);
			TextDrawHideForPlayer(playerid, TD_FALL[6]);
			TextDrawHideForPlayer(playerid, TD_FALL[7]);
			TextDrawHideForPlayer(playerid, TD_FALL[8]);
			TextDrawHideForPlayer(playerid, TD_FallMessage);
			
			SetPlayerVirtualWorld(playerid, NO_VW);
			SetPlayerInterior(playerid, 0);
			PI[playerid][P_FALL_STATUS] = PD_NORMAL;
			if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) TogglePlayerSpectatingEx(playerid, false);
			TogglePlayerControllable(playerid, true);
			PI[playerid][P_GAMEMODE] = M_NONE;
			SetPlayerInterior(playerid, 0);
			CheckFall();
			UpdateCountPlayersTextDraws();
			return 1;
		}
		
		case M_ZOMBIE:
		{
			ZI[Z_PLAYERS] -= 1;
			ZI[Z_TEAM_PLAYERS][PI[playerid][P_ZOMBIE_TEAM]] -= 1;
			
			PI[playerid][P_ZOMBIE_TEAM] = 0;
			PI[playerid][P_INFECTED] = false;
			SetPlayerDrunkLevel(playerid, 0);
			TextDrawHideForPlayer(playerid, TD_LSR_ZOMBIE_INFECTED);
			
			if(PI[playerid][P_SAVED_SKIN] != 0) SetPlayerSkin(playerid, PI[playerid][P_SAVED_SKIN]);
			else SetPlayerSkin(playerid, FreeRoam_Skins[random(sizeof(FreeRoam_Skins))]);
			SetPlayerTeam(playerid, NO_TEAM);
			PI[playerid][P_GAMEMODE] = M_NONE;
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, NO_VW);
			SetPlayerWeather(playerid, 0);
			SetPlayerColor(playerid, PI[playerid][P_COLOR]);
			
			UpdateCountPlayersTextDraws();
			return 1;
		}
		
		case M_EVENT:
		{
			TOTAL_PLAYERS_EVENT --;
			PI[playerid][P_GAMEMODE] = M_NONE;
			ResetPlayerWeapons(playerid);
		    SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, NO_VW);
			return 1;
		}
		
		case M_DUEL:
		{
			new duel_id = PI[playerid][P_DUEL_ID];
			if(DLI[duel_id][DL_RUNNING])
			{
				new winner;
				if(DLI[duel_id][DL_PLAYER_ONE] == playerid) winner = DLI[duel_id][DL_PLAYER_TWO];
				else winner = DLI[duel_id][DL_PLAYER_ONE];
				FinishDuel(duel_id, winner, playerid);
				SendClientMessage(winner, -1, "{CCCCCC}Info: the other player has abandoned the duel, for Exitduel Use /exitduel.");
			}
			TOTAL_PLAYERS_DUEL -= 1;
			UpdateCountPlayersTextDraws();
			PI[playerid][P_GAMEMODE] = M_NONE;
			ResetPlayerWeapons(playerid);
		    SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, NO_VW);
			return 1;
		}
	}
	return 1;
}
	
stock StripNewLine(string[]) //DracoBlue (bugfix idea by Y_Less)
{
	new len = strlen(string);
	if (string[0]==0) return ;
	if ((string[len - 1] == '\n') || (string[len - 1] == '\r')) {
		string[len - 1] = 0;
		if (string[0]==0) return ;
		if ((string[len - 2] == '\n') || (string[len - 2] == '\r')) string[len - 2] = 0;
	}
}

String_Event_Status(status)
{
	new str[24];
	switch(status)
	{
		case EVENT_CLOSED: format(str, 24, "CLOSED");
		case EVENT_JOINING: format(str, 24, "Joining players");
		case EVENT_RUNNING: format(str, 24, "IN A HURRY");
	}
	return str;
}

//FALL SYSTEM
LoadFallNames(mapname[])
{
	
	new File:Handler = fopen(mapname, io_read);
    if(!Handler) return 0;
    TOTAL_FALLS = 0;
	for(new i = 0; i != MAX_FALLS; i++) FALL_FILENAMES[i] = "";
    while(fread(Handler, File_String))
    {
		if(TOTAL_FALLS < MAX_FALLS)
		{
			StripNewLine(File_String);
			format(FALL_FILENAMES[TOTAL_FALLS], 24, "%s", File_String);
			TOTAL_FALLS ++;
		}	
	}
    fclose(Handler);
	return 1;
}

LoadFall(fallid)
{
	for(new i = 0; i != MAX_FALL_OBJECTS; i++)
	{
		if(IsValidDynamicObject(FALL_OBJECTID[i]))
		{
			DestroyDynamicObject(FALL_OBJECTID[i]);
			FALL_OBJECTID[i] = INVALID_OBJECT_ID;
		}
		if(IsValidObject(FALL_SMOKE_OBJECTID[i]))
		{
			DestroyObject(FALL_SMOKE_OBJECTID[i]);
			FALL_SMOKE_OBJECTID[i] = INVALID_OBJECT_ID;
		}
	}
	new File:Handler = fopen(FALL_FILENAMES[fallid], io_read);
    if(!Handler) return 0;
	Iter_Clear(FALL_OBJECTS);
	new Line, Count, modelid, Float:pos[6];
    while(fread(Handler, File_String))
    {
        StripNewLine(File_String);
        switch(Line)
		{
			case 0: if(sscanf(File_String, "p<,>s[24]ddf", FI[F_NAME], FI[F_HOUR], FI[F_WEATHER], FI[F_ZPOS])) return 0;
			case 1: if(sscanf(File_String, "p<,>ffffff", FI[F_DEAD_CAM][0], FI[F_DEAD_CAM][1], FI[F_DEAD_CAM][2], FI[F_DEAD_CAM][3], FI[F_DEAD_CAM][4], FI[F_DEAD_CAM][5])) return 0;
			default:
			{
				if(sscanf(File_String, "p<,>dffffff", modelid, pos[0], pos[1], pos[2], pos[3], pos[4], pos[5])) return 0;
				FALL_OBJECTID[Count]  = CreateDynamicObjectEx(modelid, pos[0], pos[1], pos[2], pos[3], pos[4], pos[5], 1000.0, 1000.0, {FALL_VW});
				Iter_Add(FALL_OBJECTS, Count);
				Count ++;
			}
		}	
		Line ++;
    }
	fclose(Handler);
	FI[F_RUNNINGPLAYERS] = 0;
	FI[F_WINNER] = NO_WINNER;
	FI[F_TICKCOUNT] = 0;
	FI[F_COUNTDOWN_COUNTER] = 11; //10 seconds
	KillTimer(FI[F_NEXTFSTATUS_TIMER]);
	KillTimer(FI[F_COUNTDOWN_TIMER]);
	KillTimer(FI[F_TIMEOUT_TIMER]);
	return 1;
}

public NextFallStatus()
{
	switch(FI[F_STATUS])
	{
		case FALL_CLOSED:
		{
			if(!LoadFall(FI[F_ID]))
			{
				FI[F_ID] = 0;
				LoadFall(FI[F_ID]);
			}
			
			new str[64]; format(str, 64, "~g~~h~%s~n~~y~waiting_players", FI[F_NAME]);
			TextDrawSetString(TD_FallMessage, str);
			
			FI[F_STATUS] = FALL_WAIT;
			FI[F_COUNTDOWN_COUNTER] = 11;
			KillTimer(FI[F_COUNTDOWN_TIMER]);
			FI[F_COUNTDOWN_TIMER] = SetTimer("FallCountdown", 900, true);
			SendClientMessageToAll(-1, "{99CC00}--> [DO NOT FALL] will start in {"ORANGE"}10 seconds. {99CC00}use {"GREY"}/fall {99CC00}To join.");
			UpdatePlayersFallStatus();
		}
		case FALL_WAIT:
		{
			TextDrawSetString(TD_FallMessage, "~r~~h~DO~p~NO~y~FALL~g~~h~;)");
			SetTimer("HideFallMessage", 2000, false);
			FI[F_COUNTDOWN_COUNTER] = 11;
			FI[F_MAX_PRIZE] = 750*FI[F_PLAYERS];
			FI[F_RUNNINGPLAYERS] = FI[F_PLAYERS];
			FI[F_TIMEOUT_COUNTER] = 180;
			KillTimer(FI[F_TIMEOUT_TIMER]);
     		FI[F_TIMEOUT_TIMER] = SetTimer("FallTimeOutCountdown", 1000, true);
			FI[F_TICKCOUNT] = gettime();
			FI[F_STATUS] = FALL_RUNNING;
			SetTimer("FallObject", 3000, false);
			UpdatePlayersFallStatus();
		}
		case FALL_RUNNING:
		{
			FI[F_ID] += 1;
			if(!LoadFall(FI[F_ID]))
			{
				FI[F_ID] = 0;
				LoadFall(FI[F_ID]);
			}
			
			TextDrawHideForAll(TD_FALL[0]);
			TextDrawHideForAll(TD_FALL[1]);
			TextDrawHideForAll(TD_FALL[2]);
			TextDrawHideForAll(TD_FALL[3]);
			TextDrawHideForAll(TD_FALL[4]);
			TextDrawHideForAll(TD_FALL[5]);
			TextDrawHideForAll(TD_FALL[6]);
			TextDrawHideForAll(TD_FALL[7]);
			TextDrawHideForAll(TD_FALL[8]);
			KillTimer(FI[F_TIMEOUT_TIMER]);
			
			FI[F_STATUS] = FALL_WAIT;
			FI[F_COUNTDOWN_COUNTER] = 11;
			KillTimer(FI[F_COUNTDOWN_TIMER]);
			FI[F_COUNTDOWN_TIMER] = SetTimer("FallCountdown", 900, true);
			SendClientMessageToAll(-1, "{99CC00}--> [Do not fall] will start in {"ORANGE"}10 seconds. {99CC00}use {"GREY"}/fall {99CC00}To join.");
			UpdatePlayersFallStatus();
		}
	}
	return 1;
}


forward FallObject();
public FallObject()
{
	if(FI[F_STATUS] != FALL_RUNNING) return 1;
	if(FI[F_WINNER] != NO_WINNER) return 1;
	if(Iter_Count(FALL_OBJECTS) <= 0) return FI[F_TIMEOUT_COUNTER] = 3;
	
	new r = Iter_Random(FALL_OBJECTS);
	new Float:p[3]; GetDynamicObjectPos(FALL_OBJECTID[r], p[0], p[1], p[2]);
	MoveDynamicObject(FALL_OBJECTID[r], p[0], p[1], p[2] - 5.0, 0.5);
	Iter_Remove(FALL_OBJECTS, r);
	SetTimerEx("SpeedUp", 1000, false, "dfff", r, p[0], p[1], p[2]);

	SetTimer("FallObject", minrand(500, 3000), false);
	return 1;
}

forward SpeedUp(index, Float:X, Float:Y, Float:Z);
public SpeedUp(index, Float:X, Float:Y, Float:Z)
{
	if(FI[F_STATUS] != FALL_RUNNING) return 1;
	if(FI[F_WINNER] != NO_WINNER) return 1;
	MoveDynamicObject(FALL_OBJECTID[index], X, Y, Z - 5.0, 5.0);
	SetTimerEx("DestroyFallObject", 500, false, "dd", index, 0);
	return 1;
}

forward DestroyFallObject(index, step);
public DestroyFallObject(index, step)
{
	if(FI[F_STATUS] != FALL_RUNNING) return 1;
	if(!step)
	{
		new Float:p[3]; GetDynamicObjectPos(FALL_OBJECTID[index], p[0], p[1], p[2]); 
		DestroyDynamicObject(FALL_OBJECTID[index]);
		FALL_OBJECTID[index] = INVALID_OBJECT_ID;
		FALL_SMOKE_OBJECTID[index] = CreateObject(18680, p[0], p[1], p[2], 0.0, 0.0, 0.0);
		SetTimerEx("DestroyFallObject", 100, false, "dd", index, 1);
	}
	else
	{
		DestroyObject(FALL_SMOKE_OBJECTID[index]);
		FALL_SMOKE_OBJECTID[index] = INVALID_OBJECT_ID;
	}
	return 1;
}

public FallTimeOutCountdown()
{
	if(FI[F_STATUS] != FALL_RUNNING) KillTimer(FI[F_TIMEOUT_TIMER]);
	
	FI[F_TIMEOUT_COUNTER] --;
	if(FI[F_TIMEOUT_COUNTER] < 0)
	{
		KillTimer(FI[F_TIMEOUT_TIMER]);
		if(FI[F_WINNER] == NO_WINNER)
		{
			for(new playerid = 0, j = GetPlayerPoolSize(); playerid <= j; playerid++) 
			{
				if(IsPlayerConnected(playerid))
				{
					if(PI[playerid][P_GAMEMODE] == M_FALL)
					{
						PlayerPlaySoundEx(playerid, 1057, 0.0, 0.0, 0.0);
						
						new str[256]; format(str, 256, "_~n~_~n~_~n~~y~Donotfall finished_~n~~g~~h~TIME:~p~_%s_minutes~n~~r~~h~The time is over", TimeConvert(gettime() - FI[F_TICKCOUNT]));
						GameTextForPlayer(playerid, str, 5000, 6);

						FI[F_RUNNINGPLAYERS] = 0;
					}
				}
			}
			KillTimer(FI[F_NEXTFSTATUS_TIMER]);
			FI[F_NEXTFSTATUS_TIMER] = SetTimer("NextFallStatus", 5000, false);
			return 1;
		}
		return 1;
	}
	
	TextDrawSetString(TD_FALL[0], TimeConvert(FI[F_TIMEOUT_COUNTER]));
	new str[10]; 
	format(str, 10, "%d", FI[F_RUNNINGPLAYERS]); TextDrawSetString(TD_FALL[3], str);
	format(str, 10, "%d", FI[F_PLAYERS]); TextDrawSetString(TD_FALL[6], str);
	return 1;
}

forward HideFallMessage();
public HideFallMessage()
{
	return TextDrawSetString(TD_FallMessage, "_");
}

public FallCountdown()
{
	if(FI[F_STATUS] == FALL_CLOSED) return KillTimer(FI[F_COUNTDOWN_TIMER]);
	if(FI[F_PLAYERS] == 0)
	{
		KillTimer(FI[F_COUNTDOWN_TIMER]);
		CloseFall();
		return 1;
	}
	if(FI[F_PLAYERS] <= 1)
	{
		FI[F_COUNTDOWN_COUNTER] = 11;
		new str[64]; format(str, 64, "~g~~h~%s~n~~y~waiting_players", FI[F_NAME]);
		TextDrawSetString(TD_FallMessage, str);
		return 1;
	}
	FI[F_COUNTDOWN_COUNTER] --;
	new str[145]; format(str, 145, "~g~~h~%s~n~_~n~~p~%d_PLAYERS~n~~y~%d_seconds to start", FI[F_NAME], FI[F_PLAYERS], FI[F_COUNTDOWN_COUNTER]);
	TextDrawSetString(TD_FallMessage, str);
	if(FI[F_COUNTDOWN_COUNTER] != 0) TextDrawSetString(TD_FallMessage, str);
	
	if(FI[F_COUNTDOWN_COUNTER] <= 0)
	{
		KillTimer(FI[F_COUNTDOWN_TIMER]);
		if(FI[F_PLAYERS] == 0)
		{
			CloseFall();
			return 1;
		}
		else if(FI[F_PLAYERS] == 1)
		{
			format(str, 64, "~g~~h~%s~n~~y~waiting_players", FI[F_NAME]);
			TextDrawSetString(TD_FallMessage, str);
			FI[F_COUNTDOWN_COUNTER] = 11;
			KillTimer(FI[F_COUNTDOWN_TIMER]);
			FI[F_COUNTDOWN_TIMER] = SetTimer("FallCountdown", 900, true);
		}
		else NextFallStatus();
	}
	return 1;
}

CloseFall()
{
	for(new i = 0; i != MAX_FALL_OBJECTS; i++)
	{
		if(IsValidDynamicObject(FALL_OBJECTID[i]))
		{
			DestroyDynamicObject(FALL_OBJECTID[i]);
			FALL_OBJECTID[i] = INVALID_OBJECT_ID;
		}
		if(IsValidObject(FALL_SMOKE_OBJECTID[i]))
		{
			DestroyObject(FALL_SMOKE_OBJECTID[i]);
			FALL_SMOKE_OBJECTID[i] = INVALID_OBJECT_ID;
		}
	}
	Iter_Clear(FALL_OBJECTS);
	KillTimer(FI[F_TIMEOUT_TIMER]);
	KillTimer(FI[F_COUNTDOWN_TIMER]);
	KillTimer(FI[F_NEXTFSTATUS_TIMER]);
	FI[F_STATUS] = FALL_CLOSED;
	FI[F_PLAYERS] = 0;
	FI[F_RUNNINGPLAYERS] = 0;
	FI[F_WINNER] = NO_WINNER;
	//FI[F_ID] = 0;
	format(FI[F_NAME], 24, "");
	FI[F_WEATHER] = 0;
	FI[F_HOUR] = 0;
	FI[F_ZPOS] = 0.0;
	FI[F_TICKCOUNT] = 0;
	FI[F_COUNTDOWN_COUNTER] = 0;
	FI[F_TIMEOUT_COUNTER] = 0;
	FI[F_MAX_PRIZE] = 0;
	TextDrawSetString(TD_FallMessage, "_");
	return 1;
}

UpdatePlayersFallStatus()
{

	switch(FI[F_STATUS])
	{
		case FALL_WAIT:
		{
			for(new players = 0, j = GetPlayerPoolSize(); players <= j; players++) 
			{
				if(IsPlayerConnected(players))
				{
					if(PI[players][P_GAMEMODE] == M_FALL)
					{
						if(GetPlayerState(players) == PLAYER_STATE_SPECTATING) TogglePlayerSpectatingEx(players, false);
						PI[players][P_FALL_STATUS] = PD_NORMAL;
						
						SetPlayerVirtualWorld(players, FALL_VW);
						TogglePlayerControllable(players, false);
						
						SetPlayerArmour(players, 0.0);
						SetPlayerHealth(players, 100.0);
						
						new r = Iter_Random(FALL_OBJECTS), Float:p[3];
						GetDynamicObjectPos(FALL_OBJECTID[r], p[0], p[1], p[2]);
						E_SetPlayerPosEx(players, p[0], p[1], p[2] + 3.0);
						SetSpawnInfo(players, GetPlayerTeam(players), GetPlayerSkin(players), p[0], p[1], p[2] + 1.5, 0.0, 0, 0, 0, 0, 0,0);
						SetCameraBehindPlayer(players);
						SetPlayerTime(players, FI[F_HOUR], 0);
						SetPlayerWeather(players, FI[F_WEATHER]);
					}
				}
			}
		}
		case FALL_RUNNING:
		{
			for(new players = 0, j = GetPlayerPoolSize(); players <= j; players++) 
			{
				if(IsPlayerConnected(players))
				{
					if(PI[players][P_GAMEMODE] == M_FALL)
					{
						PI[players][P_FALL_STATUS] = PD_NORMAL;
						TogglePlayerControllable(players, true);
						PlayerPlaySoundEx(players, 3200, 0.0, 0.0, 0.0);
						
						TextDrawShowForPlayer(players, TD_FALL[0]);
						TextDrawShowForPlayer(players, TD_FALL[1]);
						TextDrawShowForPlayer(players, TD_FALL[2]);
						TextDrawShowForPlayer(players, TD_FALL[3]);
						TextDrawShowForPlayer(players, TD_FALL[4]);
						TextDrawShowForPlayer(players, TD_FALL[5]);
						TextDrawShowForPlayer(players, TD_FALL[6]);
						TextDrawShowForPlayer(players, TD_FALL[7]);
						TextDrawShowForPlayer(players, TD_FALL[8]);
					}
				}
			}
		}
	}
	return 1;
}

UpdatePlayerFallStatus(playerid)
{

	switch(FI[F_STATUS])
	{
		case FALL_WAIT:
		{
			PI[playerid][P_FALL_STATUS] = PD_NORMAL;

			SetPlayerVirtualWorld(playerid, FALL_VW);
			TogglePlayerControllable(playerid, false);
			
			new r = Iter_Random(FALL_OBJECTS), Float:p[3];
			GetDynamicObjectPos(FALL_OBJECTID[r], p[0], p[1], p[2]);
			E_SetPlayerPosEx(playerid, p[0], p[1], p[2] + 3.0);
			SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), p[0], p[1], p[2] + 1.5, 0.0, 0, 0, 0, 0, 0,0);
			SetCameraBehindPlayer(playerid);
			SetPlayerTime(playerid, FI[F_HOUR], 0);
			SetPlayerWeather(playerid, FI[F_WEATHER]);
			return 1;
		}
		case FALL_RUNNING:
		{
			SetPlayerVirtualWorld(playerid, FALL_VW);
			PI[playerid][P_FALL_STATUS] = PD_DEAD;

			TogglePlayerSpectatingEx(playerid, true);
			InterpolateCameraPos(playerid, FI[F_DEAD_CAM][0], FI[F_DEAD_CAM][1], FI[F_DEAD_CAM][2], FI[F_DEAD_CAM][0], FI[F_DEAD_CAM][1], FI[F_DEAD_CAM][2], 500);
			InterpolateCameraLookAt(playerid, FI[F_DEAD_CAM][3], FI[F_DEAD_CAM][4], FI[F_DEAD_CAM][5], FI[F_DEAD_CAM][3], FI[F_DEAD_CAM][4], FI[F_DEAD_CAM][5], 500);
			SetPlayerTime(playerid, FI[F_HOUR], 0);
			SetPlayerWeather(playerid, FI[F_WEATHER]);
			
			TextDrawShowForPlayer(playerid, TD_FALL[0]);
			TextDrawShowForPlayer(playerid, TD_FALL[1]);
			TextDrawShowForPlayer(playerid, TD_FALL[2]);
			TextDrawShowForPlayer(playerid, TD_FALL[3]);
			TextDrawShowForPlayer(playerid, TD_FALL[4]);
			TextDrawShowForPlayer(playerid, TD_FALL[5]);
			TextDrawShowForPlayer(playerid, TD_FALL[6]);
			TextDrawShowForPlayer(playerid, TD_FALL[7]);
			TextDrawShowForPlayer(playerid, TD_FALL[8]);
		}
	}
	return 1;
}

PlayerFallDead(playerid)
{
	if(PI[playerid][P_FALL_STATUS] == PD_DEAD) return 1;
	PI[playerid][P_FALL_STATUS] = PD_DEAD;
	PlayerPlaySoundEx(playerid, 1057, 0.0, 0.0, 0.0);
	GivePlayerMoneyEx(playerid, FI[F_MAX_PRIZE]/FI[F_RUNNINGPLAYERS]);
	
	new str[128]; format(str, 128, "_~n~_~n~_~n~_~n~_~n~~y~YOU FELL_~r~~h~%d/%d~n~~r~~h~p~w~~h~Prizes:_%d~r~~h~$~n~~g~~h~TIME:~p~_%s_minutes", FI[F_RUNNINGPLAYERS], FI[F_PLAYERS], FI[F_MAX_PRIZE]/FI[F_RUNNINGPLAYERS], TimeConvert(gettime() - FI[F_TICKCOUNT]));
	GameTextForPlayer(playerid, str, 5000, 6);
	
	FI[F_RUNNINGPLAYERS] -= 1;
	
	if(FI[F_RUNNINGPLAYERS] == 1)
	{
		for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
		{
			if(IsPlayerConnected(i))
			{
				if(PI[i][P_GAMEMODE] == M_FALL)
				{
					if(PI[i][P_FALL_STATUS] == PD_NORMAL)
					{
						ApplyAnimation(i, "CASINO", "manwind", 4.1, 1, 1, 1, 1, 1, 1);
						ApplyAnimation(i, "CASINO", "manwind", 4.1, 1, 1, 1, 1, 1, 1);
						FI[F_WINNER] = i;
						GivePlayerScoreEx(i, 5);
						GivePlayerMoneyEx(i, FI[F_MAX_PRIZE]/FI[F_RUNNINGPLAYERS]);
						break;
					}
				}
			}
		}
		format(str, 128, "~g~~h~winner: ~y~%s~n~~p~+5 score~n~~g~~h~+%d$", PI[FI[F_WINNER]][P_NAME], FI[F_MAX_PRIZE]/FI[F_RUNNINGPLAYERS]);
		TextDrawSetString(TD_FallMessage, str);
			
		PlayerPlaySoundEx(FI[F_WINNER], 1057, 0.0, 0.0, 0.0);
		
		format(str, 128, "_~n~_~n~_~n~_~n~_~n~~y~winner_~r~~h~%d/%d~n~~r~~h~p~w~~h~Prizes:_%d~r~~h~$~n~~g~~h~TIME:~p~_%s_minutes", FI[F_RUNNINGPLAYERS], FI[F_PLAYERS], FI[F_MAX_PRIZE]/FI[F_RUNNINGPLAYERS], TimeConvert(gettime() - FI[F_TICKCOUNT]));
		GameTextForPlayer(FI[F_WINNER], str, 5000, 6);
		KillTimer(FI[F_NEXTFSTATUS_TIMER]);
		FI[F_NEXTFSTATUS_TIMER] = SetTimer("NextFallStatus", 5000, false);
	}
	TogglePlayerSpectatingEx(playerid, true);
	InterpolateCameraPos(playerid, FI[F_DEAD_CAM][0], FI[F_DEAD_CAM][1], FI[F_DEAD_CAM][2], FI[F_DEAD_CAM][0], FI[F_DEAD_CAM][1], FI[F_DEAD_CAM][2], 500);
	InterpolateCameraLookAt(playerid, FI[F_DEAD_CAM][3], FI[F_DEAD_CAM][4], FI[F_DEAD_CAM][5], FI[F_DEAD_CAM][3], FI[F_DEAD_CAM][4], FI[F_DEAD_CAM][5], 500);
	return 1;
}

CheckFall()
{
	if(FI[F_PLAYERS] <= 0 && FI[F_STATUS] != FALL_CLOSED) return CloseFall();
	switch(FI[F_STATUS])
	{
		case FALL_CLOSED: return 1;
		case FALL_RUNNING:
		{
			if(FI[F_RUNNINGPLAYERS] == 1)
			{
				for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
				{
					if(IsPlayerConnected(i))
					{
						if(PI[i][P_GAMEMODE] == M_FALL)
						{
							if(PI[i][P_FALL_STATUS] == PD_NORMAL)
							{
								ApplyAnimation(i, "CASINO", "manwind", 4.1, 1, 1, 1, 1, 1, 1);
								ApplyAnimation(i, "CASINO", "manwind", 4.1, 1, 1, 1, 1, 1, 1);
								FI[F_WINNER] = i;
								GivePlayerScoreEx(i, 5);
								GivePlayerMoneyEx(i, 1000);
								break;
							}
						}
					}
				}
				new str[128];
				format(str, 128, "~g~~h~winner: ~y~%s~n~~p~+5 score~n~~g~~h~+%d$", PI[FI[F_WINNER]][P_NAME], FI[F_MAX_PRIZE]/FI[F_RUNNINGPLAYERS]);
				TextDrawSetString(TD_FallMessage, str);
					
				PlayerPlaySoundEx(FI[F_WINNER], 1057, 0.0, 0.0, 0.0);
				
				format(str, 128, "_~n~_~n~_~n~_~n~_~n~~y~winner_~r~~h~%d/%d~n~~r~~h~p~w~~h~Prizes:_%d~r~~h~$~n~~g~~h~TIME:~p~_%s_minutes", FI[F_RUNNINGPLAYERS], FI[F_PLAYERS], FI[F_MAX_PRIZE]/FI[F_RUNNINGPLAYERS], TimeConvert(gettime() - FI[F_TICKCOUNT]));
				GameTextForPlayer(FI[F_WINNER], str, 5000, 6);
				
				KillTimer(FI[F_NEXTFSTATUS_TIMER]);
				FI[F_NEXTFSTATUS_TIMER] = SetTimer("NextFallStatus", 5000, false);
			}
			return 1;
		}
	}
	return 1;
}

//DERBY SYSTEM
LoadDerbyNames(mapname[])
{
	
	new File:Handler = fopen(mapname, io_read);
    if(!Handler) return 0;
    TOTAL_DERBYS = 0;
	for(new i = 0; i != MAX_DERBYS; i++) DERBY_FILENAMES[i] = "";
    while(fread(Handler, File_String))
    {
		if(TOTAL_DERBYS < MAX_DERBYS)
		{
			StripNewLine(File_String);
			format(DERBY_FILENAMES[TOTAL_DERBYS], 24, "%s", File_String);
			TOTAL_DERBYS ++;
		}	
	}
    fclose(Handler);
	return 1;
}

LoadDerby(derbyid)
{
	new File:Handler = fopen(DERBY_FILENAMES[derbyid], io_read);
    if(!Handler) return 0;
	new Count;
    while(fread(Handler, File_String))
    {
        StripNewLine(File_String);
        if(Count == 0) { if(sscanf(File_String, "p<,>s[24]dddf", DI[D_NAME], DI[D_HOUR], DI[D_WEATHER], DI[D_VEHICLE], DI[D_ZPOS])) return 0; } 
        else { if(sscanf(File_String, "p<,>ffff", DERBY_SPAWN[Count-1][0], DERBY_SPAWN[Count-1][1], DERBY_SPAWN[Count-1][2], DERBY_SPAWN[Count-1][3])) return 0; }
		Count++;
    }
	fclose(Handler);
	DI[D_RUNNINGPLAYERS] = 0;
	DI[D_WINNER] = NO_WINNER;
	DI[D_TICKCOUNT] = 0;
	DI[D_COUNTDOWN_COUNTER] = 11; //10 seconds
	KillTimer(DI[D_NEXTDSTATUS_TIMER]);
	KillTimer(DI[D_COUNTDOWN_TIMER]);
	KillTimer(DI[D_TIMEOUT_TIMER]);
	for(new i = 0; i != sizeof(DERBY_SLOT_USED); i++) DERBY_SLOT_USED[i] = false;
	return 1;
}

public NextDerbyStatus()
{
	switch(DI[D_STATUS])
	{
		case DERBY_CLOSED:
		{
			if(!LoadDerby(DI[D_ID]))
			{
				DI[D_ID] = 0;
				LoadDerby(DI[D_ID]);
			}
			
			new str[64]; format(str, 64, "~g~~h~%s~n~~y~waiting_players", DI[D_NAME]);
			TextDrawSetString(TD_DerbyMessage, str);
			DI[D_STATUS] = DERBY_WAIT;
			DI[D_COUNTDOWN_COUNTER] = 11;
			KillTimer(DI[D_COUNTDOWN_TIMER]);
			DI[D_COUNTDOWN_TIMER] = SetTimer("DerbyCountdown", 900, true);
			SendClientMessageToAll(-1, "{99CC00}--> [DERBY] will start in {"ORANGE"}10 seconds. {99CC00}use {"GREY"}/derby {99CC00}To join.");
			UpdatePlayersDerbyStatus();
		}
		case DERBY_RUNNING:
		{
			DI[D_ID] += 1;
			if(!LoadDerby(DI[D_ID]))
			{
				DI[D_ID] = 0;
				LoadDerby(DI[D_ID]);
			}
			
			TextDrawHideForAll(TD_DERBY[0]);
			TextDrawHideForAll(TD_DERBY[1]);
			TextDrawHideForAll(TD_DERBY[2]);
			TextDrawHideForAll(TD_DERBY[3]);
			TextDrawHideForAll(TD_DERBY[4]);
			TextDrawHideForAll(TD_DERBY[5]);
			TextDrawHideForAll(TD_DERBY[6]);
			TextDrawHideForAll(TD_DERBY[7]);
			TextDrawHideForAll(TD_DERBY[8]);
			
			KillTimer(DI[D_TIMEOUT_TIMER]);
			DI[D_STATUS] = DERBY_WAIT;
			DI[D_COUNTDOWN_COUNTER] = 11;
			KillTimer(DI[D_COUNTDOWN_TIMER]);
			DI[D_COUNTDOWN_TIMER] = SetTimer("DerbyCountdown", 900, true);
			SendClientMessageToAll(-1, "{999900}--> [Derby] will start in {"ORANGE"}10 seconds. {999900}use {"GREY"}/derby {999900}To join.");
			UpdatePlayersDerbyStatus();
		}
		case DERBY_WAIT:
		{
			TextDrawSetString(TD_DerbyMessage, "~y~go! ~r~go! ~p~go!");
			SetTimer("HideDerbyMessage", 2000, false);
			DI[D_COUNTDOWN_COUNTER] = 11;
			DI[D_MAX_PRIZE] = 750*DI[D_PLAYERS];
			DI[D_RUNNINGPLAYERS] = DI[D_PLAYERS];
			DI[D_TIMEOUT_COUNTER] = (DI[D_RUNNINGPLAYERS]*20);
			KillTimer(DI[D_TIMEOUT_TIMER]);
     		DI[D_TIMEOUT_TIMER] = SetTimer("DerbyTimeOutCountdown", 1000, true);
			DI[D_TICKCOUNT] = gettime();
			DI[D_STATUS] = DERBY_RUNNING;
			UpdatePlayersDerbyStatus();
		}
	}
	return 1;
}

public DerbyTimeOutCountdown()
{
	if(DI[D_STATUS] != DERBY_RUNNING) KillTimer(DI[D_TIMEOUT_TIMER]);
	
	DI[D_TIMEOUT_COUNTER] --;
	if(DI[D_TIMEOUT_COUNTER] < 0)
	{
		KillTimer(DI[D_TIMEOUT_TIMER]);
		if(DI[D_WINNER] == NO_WINNER)
		{
			for(new playerid = 0, j = GetPlayerPoolSize(); playerid <= j; playerid++) 
			{
				if(IsPlayerConnected(playerid))
				{
				
					if(PI[playerid][P_GAMEMODE] == M_DERBY && PI[playerid][P_DERBY_STATUS] == PD_NORMAL)
					{
						PlayerPlaySoundEx(playerid, 1057, 0.0, 0.0, 0.0);
						GivePlayerMoneyEx(playerid, DI[D_MAX_PRIZE]/DI[D_RUNNINGPLAYERS]);
						
						if(PI[playerid][P_ID] != 0)
						{
							format(DB_Query, sizeof(DB_Query), "UPDATE DERBY-PLAYERS SET MWIN = MWIN + %d, LAST = CURRENT_TIMESTAMP WHERE ID-PLAYER = '%d'", DI[D_MAX_PRIZE]/DI[D_RUNNINGPLAYERS], PI[playerid][P_ID]);
							db_query(Database, DB_Query);
						}
	
						new str[256]; format(str, 256, "_~n~_~n~_~n~~y~Derby finished_~n~~r~~h~p~w~~h~Prizes:_%d~r~~h~$~n~~g~~h~TIME:~p~_%s_minutes~n~~r~~h~The time is over", DI[D_MAX_PRIZE]/DI[D_RUNNINGPLAYERS], TimeConvert(gettime() - DI[D_TICKCOUNT]));
						GameTextForPlayer(playerid, str, 5000, 6);
					}
				}
			}
			DI[D_RUNNINGPLAYERS] = 0;
			KillTimer(DI[D_NEXTDSTATUS_TIMER]);
			DI[D_NEXTDSTATUS_TIMER] = SetTimer("NextDerbyStatus", 5000, false);
			return 1;
		}
		return 1;
	}
	
	TextDrawSetString(TD_DERBY[0], TimeConvert(DI[D_TIMEOUT_COUNTER]));
	new str[10]; 
	format(str, 10, "%d", DI[D_RUNNINGPLAYERS]); TextDrawSetString(TD_DERBY[3], str);
	format(str, 10, "%d", DI[D_PLAYERS]); TextDrawSetString(TD_DERBY[6], str);
	return 1;
}

forward HideDerbyMessage();
public HideDerbyMessage()
{
	return TextDrawSetString(TD_DerbyMessage, "_");
}

public DerbyCountdown()
{
	if(DI[D_STATUS] == DERBY_CLOSED) return KillTimer(DI[D_COUNTDOWN_TIMER]);
	if(DI[D_PLAYERS] == 0)
	{
		KillTimer(DI[D_COUNTDOWN_TIMER]);
		CloseDerby();
		return 1;
	}
	if(DI[D_PLAYERS] <= 1)
	{
		DI[D_COUNTDOWN_COUNTER] = 11;
		new str[64]; format(str, 64, "~g~~h~%s~n~~y~waiting_players", DI[D_NAME]);
		TextDrawSetString(TD_DerbyMessage, str);
		return 1;
	}
	DI[D_COUNTDOWN_COUNTER] --;
	new str[145]; format(str, 145, "~g~~h~%s~n~_~n~~p~%d/%d_PLAYERS~n~~y~%d_seconds to start", DI[D_NAME], DI[D_PLAYERS], MAX_DERBY_PLAYERS, DI[D_COUNTDOWN_COUNTER]);
	TextDrawSetString(TD_DerbyMessage, str);
	if(DI[D_COUNTDOWN_COUNTER] != 0) TextDrawSetString(TD_DerbyMessage, str);
	
	if(DI[D_COUNTDOWN_COUNTER] <= 0)
	{
		KillTimer(DI[D_COUNTDOWN_TIMER]);
		if(DI[D_PLAYERS] == 0)
		{
			CloseDerby();
			return 1;
		}
		else if(DI[D_PLAYERS] == 1)
		{
			format(str, 64, "~g~~h~%s~n~~y~waiting_players", DI[D_NAME]);
			TextDrawSetString(TD_DerbyMessage, str);
			DI[D_COUNTDOWN_COUNTER] = 11;
			KillTimer(DI[D_COUNTDOWN_TIMER]);
			DI[D_COUNTDOWN_TIMER] = SetTimer("DerbyCountdown", 900, true);
		}
		else NextDerbyStatus();
	}
	return 1;
}

PlayerDerbyDead(playerid)
{
	if(PI[playerid][P_DERBY_STATUS] == PD_DEAD) return 1;
	PI[playerid][P_DERBY_STATUS] = PD_DEAD;
	if(IsValidVehicle(PI[playerid][P_DERBY_VEHICLEID]) && PI[playerid][P_DERBY_VEHICLEID] != INVALID_VEHICLE_ID)
	{
		DestroyVehicleEx(PI[playerid][P_DERBY_VEHICLEID]);
		PI[playerid][P_DERBY_VEHICLEID] = INVALID_VEHICLE_ID;
	}
	PlayerPlaySoundEx(playerid, 1057, 0.0, 0.0, 0.0);
	GivePlayerMoneyEx(playerid, DI[D_MAX_PRIZE]/DI[D_RUNNINGPLAYERS]);
	
	if(PI[playerid][P_ID] != 0)
	{
		format(DB_Query, sizeof(DB_Query), "UPDATE DERBY-PLAYERS SET DLOSE = DLOSE - 1, MWIN = MWIN + %d, LAST = CURRENT_TIMESTAMP WHERE ID-PLAYER = '%d'", DI[D_MAX_PRIZE]/DI[D_RUNNINGPLAYERS], PI[playerid][P_ID]);
		db_query(Database, DB_Query);
	}
						
	new str[128]; format(str, 128, "_~n~_~n~_~n~_~n~_~n~~y~Derby finished_~r~~h~%d/%d~n~~r~~h~p~w~~h~Prizes:_%d~r~~h~$~n~~g~~h~TIME:~p~_%s_minutes", DI[D_RUNNINGPLAYERS], DI[D_PLAYERS], DI[D_MAX_PRIZE]/DI[D_RUNNINGPLAYERS], TimeConvert(gettime() - DI[D_TICKCOUNT]));
	GameTextForPlayer(playerid, str, 5000, 6);
	
	DI[D_RUNNINGPLAYERS] -= 1;
	if(DI[D_TIMEOUT_COUNTER] > (DI[D_RUNNINGPLAYERS]*20)) DI[D_TIMEOUT_COUNTER] = (DI[D_RUNNINGPLAYERS]*20);
	
	if(DI[D_RUNNINGPLAYERS] == 1)
	{
		for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
		{
			if(IsPlayerConnected(i))
			{
				if(PI[i][P_GAMEMODE] == M_DERBY)
				{
					if(PI[i][P_DERBY_STATUS] == PD_NORMAL)
					{
						DI[D_WINNER] = i;
						
						new money = DI[D_MAX_PRIZE]/DI[D_RUNNINGPLAYERS];
						GivePlayerScoreEx(i, 5);
						GivePlayerMoneyEx(i, money);
						
						if(PI[i][P_ID] != 0)
						{
							format(DB_Query, sizeof(DB_Query), "UPDATE DERBY-PLAYERS SET DWIN = DWIN + 1, MWIN = MWIN + %d, SWIN = SWIN + %d, LAST = CURRENT_TIMESTAMP WHERE ID-PLAYER = '%d'", money, 5, PI[i][P_ID]);
							db_query(Database, DB_Query);
						}
						break;
					}
				}
			}
		}
		format(str, 128, "~g~~h~ganador: ~y~%s~n~~p~+5 score~n~~g~~h~+%d$", PI[DI[D_WINNER]][P_NAME], DI[D_MAX_PRIZE]/DI[D_RUNNINGPLAYERS]);
		TextDrawSetString(TD_DerbyMessage, str);
			
		PlayerPlaySoundEx(DI[D_WINNER], 1057, 0.0, 0.0, 0.0);
		
		format(str, 128, "_~n~_~n~_~n~_~n~_~n~~y~Derby finished_~r~~h~%d/%d~n~~r~~h~p~w~~h~Prizes:_%d~r~~h~$~n~~g~~h~TIME:~p~_%s_minutes", DI[D_RUNNINGPLAYERS], DI[D_PLAYERS], DI[D_MAX_PRIZE]/DI[D_RUNNINGPLAYERS], TimeConvert(gettime() - DI[D_TICKCOUNT]));
		GameTextForPlayer(DI[D_WINNER], str, 5000, 6);
		
		TogglePlayerSpectatingEx(playerid, true);
		PlayerSpectateVehicle(playerid, PI[DI[D_WINNER]][P_DERBY_VEHICLEID]);
		KillTimer(DI[D_NEXTDSTATUS_TIMER]);
		DI[D_NEXTDSTATUS_TIMER] = SetTimer("NextDerbyStatus", 5000, false);
		return 1;
	}
	else
	{
		PI[playerid][P_DERBY_STATUS] = PD_SPECTATE;
		for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
		{
			if(IsPlayerConnected(i))
			{
				if(PI[i][P_GAMEMODE] == M_DERBY)
				{
					if(PI[i][P_DERBY_STATUS] == PD_NORMAL)
					{
						PI[playerid][P_DERBY_SPECTATEPLAYER] = i;
						break;
					}
				}
			}
		}
		TogglePlayerSpectatingEx(playerid, true);
		PlayerSpectateVehicle(playerid, PI[PI[playerid][P_DERBY_SPECTATEPLAYER]][P_DERBY_VEHICLEID]);
		SendClientMessage(playerid, -1, "{"ORANGE"}Press the key {"GREY"}Intro {"ORANGE"}To change the player.");
	}
	return 1;
}

UpdatePlayersDerbyStatus()
{

	switch(DI[D_STATUS])
	{
		case DERBY_WAIT:
		{
			for(new players = 0, j = GetPlayerPoolSize(); players <= j; players++) 
			{
				if(IsPlayerConnected(players))
				{
					if(PI[players][P_GAMEMODE] == M_DERBY)
					{
						if(GetPlayerState(players) == PLAYER_STATE_SPECTATING) TogglePlayerSpectatingEx(players, false);
						PI[players][P_DERBY_STATUS] = PD_NORMAL;
						PI[players][P_DERBY_POSITION] = GetFreeDerbySlot();
						DERBY_SLOT_USED[PI[players][P_DERBY_POSITION]] = true;
						
						SetPlayerArmour(players, 0.0);
						SetPlayerHealth(players, 100.0);
						
						PI[players][P_DERBY_STATUS] = PD_NORMAL;
						SetPlayerVirtualWorld(players, DI[D_ID]+50);
						TogglePlayerControllable(players, true);
						SpawnDerbyCarForPlayer(players, DERBY_SPAWN[PI[players][P_DERBY_POSITION]][0], DERBY_SPAWN[PI[players][P_DERBY_POSITION]][1], DERBY_SPAWN[PI[players][P_DERBY_POSITION]][2]+2.0, DERBY_SPAWN[PI[players][P_DERBY_POSITION]][3], DI[D_VEHICLE]);
						SetVehicleParamsEx(PI[players][P_DERBY_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
						SetPlayerTime(players, DI[D_HOUR], 0);
						SetPlayerWeather(players, DI[D_WEATHER]);
					}
				}
			}
		}
		case DERBY_RUNNING:
		{
			for(new players = 0, j = GetPlayerPoolSize(); players <= j; players++) 
			{
				if(IsPlayerConnected(players))
				{
					if(PI[players][P_GAMEMODE] == M_DERBY)
					{
						PI[players][P_DERBY_STATUS] = PD_NORMAL;
						RepairVehicle(PI[players][P_DERBY_VEHICLEID]);
						if(GetPlayerVehicleID(players) != PI[players][P_DERBY_VEHICLEID]) PutPlayerInVehicleEx(players, PI[players][P_DERBY_VEHICLEID], 0);
						new Float:p[3]; GetVehiclePos(PI[players][P_DERBY_VEHICLEID], p[0], p[1], p[2]);
						if(p[2] <= (DERBY_SPAWN[PI[players][P_DERBY_POSITION]][2]-0.5))
						{
							SetVehiclePos(PI[players][P_DERBY_VEHICLEID], DERBY_SPAWN[PI[players][P_DERBY_POSITION]][0], DERBY_SPAWN[PI[players][P_DERBY_POSITION]][1], DERBY_SPAWN[PI[players][P_DERBY_POSITION]][2]);
							SetVehicleZAngle(PI[players][P_DERBY_VEHICLEID], DERBY_SPAWN[PI[players][P_DERBY_POSITION]][3]);
						}
						SetVehicleParamsEx(PI[players][P_DERBY_VEHICLEID], VEHICLE_PARAMS_ON, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
						PlayerPlaySoundEx(players, 3200, 0.0, 0.0, 0.0);
						ApplyAnimation(players, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
						TextDrawShowForPlayer(players, TD_DERBY[0]);
						TextDrawShowForPlayer(players, TD_DERBY[1]);
						TextDrawShowForPlayer(players, TD_DERBY[2]);
						TextDrawShowForPlayer(players, TD_DERBY[3]);
						TextDrawShowForPlayer(players, TD_DERBY[4]);
						TextDrawShowForPlayer(players, TD_DERBY[5]);
						TextDrawShowForPlayer(players, TD_DERBY[6]);
						TextDrawShowForPlayer(players, TD_DERBY[7]);
						TextDrawShowForPlayer(players, TD_DERBY[8]);
						
						if(PI[players][P_ID] != 0)
						{
							format(DB_Query, sizeof(DB_Query), "UPDATE DERBY-PLAYERS SET DPLAYS = DPLAYS + 1, LAST = CURRENT_TIMESTAMP WHERE ID-PLAYER = '%d'", PI[players][P_ID]);
							db_query(Database, DB_Query);
						}
					}
				}
			}
		}
	}
	return 1;
}

UpdatePlayerDerbyStatus(playerid)
{
	switch(DI[D_STATUS])
	{
		case DERBY_WAIT:
		{
			PI[playerid][P_DERBY_STATUS] = PD_NORMAL;
			PI[playerid][P_DERBY_POSITION] = GetFreeDerbySlot();
			DERBY_SLOT_USED[PI[playerid][P_DERBY_POSITION]] = true;
			PI[playerid][P_DERBY_STATUS] = PD_NORMAL;
			SetPlayerVirtualWorld(playerid, DI[D_ID]+50);
			TogglePlayerControllable(playerid, true);
			SpawnDerbyCarForPlayer(playerid, DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][0], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][1], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][2]+2.0, DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][3], DI[D_VEHICLE]);
			SetVehicleParamsEx(PI[playerid][P_DERBY_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
			SetPlayerTime(playerid, DI[D_HOUR], 0);
			SetPlayerWeather(playerid, DI[D_WEATHER]);
		}
		case DERBY_RUNNING:
		{		
			SetPlayerVirtualWorld(playerid, DI[D_ID]+50);
			PI[playerid][P_DERBY_STATUS] = PD_SPECTATE;
			for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
			{
				if(IsPlayerConnected(i))
				{
					if(PI[i][P_GAMEMODE] == M_DERBY)
					{
						if(PI[i][P_DERBY_STATUS] == PD_NORMAL)
						{
							PI[playerid][P_DERBY_SPECTATEPLAYER] = i;
							break;
						}
					}
				}
			}
			TogglePlayerSpectatingEx(playerid, true);
			PlayerSpectateVehicle(playerid, PI[PI[playerid][P_DERBY_SPECTATEPLAYER]][P_DERBY_VEHICLEID]);
			SendClientMessage(playerid, -1, "{"ORANGE"}Press the key {"GREY"}Intro {"ORANGE"}To change the player.");
			SetPlayerTime(playerid, DI[D_HOUR], 0);
			SetPlayerWeather(playerid, DI[D_WEATHER]);
			
			TextDrawShowForPlayer(playerid, TD_DERBY[0]);
			TextDrawShowForPlayer(playerid, TD_DERBY[1]);
			TextDrawShowForPlayer(playerid, TD_DERBY[2]);
			TextDrawShowForPlayer(playerid, TD_DERBY[3]);
			TextDrawShowForPlayer(playerid, TD_DERBY[4]);
			TextDrawShowForPlayer(playerid, TD_DERBY[5]);
			TextDrawShowForPlayer(playerid, TD_DERBY[6]);
			TextDrawShowForPlayer(playerid, TD_DERBY[7]);
			TextDrawShowForPlayer(playerid, TD_DERBY[8]);
		
		}
	}
	return 1;
}

GetFreeDerbySlot()
{
	for(new i = 0; i != sizeof(DERBY_SLOT_USED); i++)
	{
		if(!DERBY_SLOT_USED[i])
		{
			return i;
		}
	}
	return -1;
}

CloseDerby()
{
	KillTimer(DI[D_TIMEOUT_TIMER]);
	KillTimer(DI[D_COUNTDOWN_TIMER]);
	KillTimer(DI[D_NEXTDSTATUS_TIMER]);
	DI[D_STATUS] = DERBY_CLOSED;
	DI[D_PLAYERS] = 0;
	DI[D_RUNNINGPLAYERS] = 0;
	DI[D_WINNER] = NO_WINNER;
	//DI[D_ID] = 0;
	format(DI[D_NAME], 24, "");
	DI[D_WEATHER] = 0;
	DI[D_HOUR] = 0;
	DI[D_VEHICLE] = 0;
	DI[D_ZPOS] = 0.0;
	DI[D_TICKCOUNT] = 0;
	DI[D_COUNTDOWN_COUNTER] = 0;
	DI[D_MAX_PRIZE] = 0;
	DI[D_TIMEOUT_COUNTER] = 0;
	KillTimer(DI[D_TIMEOUT_TIMER]);
	TextDrawSetString(TD_DerbyMessage, "_");
	return 1;
}

SpawnDerbyCarForPlayer(playerid, Float:X, Float:Y, Float:Z, Float:Angle, vehicleid)
{
	if(IsValidVehicle(PI[playerid][P_DERBY_VEHICLEID]) && PI[playerid][P_DERBY_VEHICLEID] != INVALID_VEHICLE_ID)
	{
		DestroyVehicleEx(PI[playerid][P_DERBY_VEHICLEID]);
		PI[playerid][P_DERBY_VEHICLEID] = INVALID_VEHICLE_ID;
	}
	PI[playerid][P_DERBY_VEHICLEID] = CreateVehicle(vehicleid, X, Y, Z, Angle, minrand(128, 255), minrand(128, 255), 99999, false);
    SetVehicleVirtualWorld(PI[playerid][P_DERBY_VEHICLEID], GetPlayerVirtualWorld(playerid));
	PutPlayerInVehicleEx(playerid, PI[playerid][P_DERBY_VEHICLEID], 0);
	return PI[playerid][P_DERBY_VEHICLEID];
}

CheckDerby()
{
	if(DI[D_PLAYERS] <= 0 && DI[D_STATUS] != DERBY_CLOSED) return CloseDerby();
	switch(DI[D_STATUS])
	{
		case DERBY_CLOSED: return 1;
		case DERBY_RUNNING:
		{
			if(DI[D_RUNNINGPLAYERS] == 1)
			{
				for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
				{
					if(IsPlayerConnected(i))
					{
						if(PI[i][P_GAMEMODE] == M_DERBY)
						{
							if(PI[i][P_DERBY_STATUS] == PD_NORMAL)
							{
								DI[D_WINNER] = i;
								GivePlayerScoreEx(i, 5);
								GivePlayerMoneyEx(i, DI[D_MAX_PRIZE]/DI[D_RUNNINGPLAYERS]);
								
								if(PI[i][P_ID] != 0)
								{
									format(DB_Query, sizeof(DB_Query), "UPDATE DERBY-PLAYERS SET DWIN = DWIN + 1, MWIN = MWIN + %d, SWIN = SWIN + %d, LAST = CURRENT_TIMESTAMP WHERE ID-PLAYER = '%d'", DI[D_MAX_PRIZE]/DI[D_RUNNINGPLAYERS], 5, PI[i][P_ID]);
									db_query(Database, DB_Query);
								}
								break;
							}
						}
					}
				}
				new str[128];
				format(str, 128, "~g~~h~winner: ~y~%s~n~~p~+5 score~n~~g~~h~+%d$", PI[DI[D_WINNER]][P_NAME], DI[D_MAX_PRIZE]/DI[D_RUNNINGPLAYERS]);
				TextDrawSetString(TD_DerbyMessage, str);
				
				PlayerPlaySoundEx(DI[D_WINNER], 1057, 0.0, 0.0, 0.0);
				
				format(str, 128, "_~n~_~n~_~n~_~n~_~n~~y~Derby finished_~r~~h~%d/%d~n~~r~~h~p~w~~h~Prizes:_%d~r~~h~$~n~~g~~h~TIME:~p~_%s_minutes", DI[D_RUNNINGPLAYERS], DI[D_PLAYERS], DI[D_MAX_PRIZE]/DI[D_RUNNINGPLAYERS], TimeConvert(gettime() - DI[D_TICKCOUNT]));
				GameTextForPlayer(DI[D_WINNER], str, 5000, 6);
				KillTimer(DI[D_NEXTDSTATUS_TIMER]);
				DI[D_NEXTDSTATUS_TIMER] = SetTimer("NextDerbyStatus", 5000, false);
			}
			return 1;
		}
	}
	return 1;
}

public OnPlayerUpdate(playerid)
{
	if(PI[playerid][P_GAMEMODE] != M_FREEROAM && PI[playerid][P_GAMEMODE] != M_NONE) PI[playerid][P_CHECKAFK] = gettime();
    if(PI[playerid][P_GAMEMODE] == M_DERBY)
	{
		if(PI[playerid][P_STATUS] == S_SPAWNED && PI[playerid][P_DERBY_STATUS] == PD_NORMAL && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(DI[D_STATUS] == DERBY_RUNNING && DI[D_RUNNINGPLAYERS] > 1)
			{
				new Float:p[3];
				GetVehiclePos(PI[playerid][P_DERBY_VEHICLEID], p[0], p[1], p[2]);
				if(p[2] <= DI[D_ZPOS]) PlayerDerbyDead(playerid);
			}
			else if(DI[D_STATUS] == DERBY_WAIT)
			{
				
				if(!IsValidVehicle(PI[playerid][P_DERBY_VEHICLEID]) && PI[playerid][P_DERBY_VEHICLEID] != INVALID_VEHICLE_ID) SpawnDerbyCarForPlayer(playerid, DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][0], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][1], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][2]+2.0, DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][3], DI[D_VEHICLE]);
				if(GetPlayerVehicleID(playerid) != PI[playerid][P_DERBY_VEHICLEID])
				{
					SetVehicleVirtualWorld(PI[playerid][P_DERBY_VEHICLEID], GetPlayerVirtualWorld(playerid));
					SetVehiclePos(PI[playerid][P_DERBY_VEHICLEID], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][0], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][1], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][2]+2.0);
					SetVehicleZAngle(PI[playerid][P_DERBY_VEHICLEID], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][3]);
					PutPlayerInVehicleEx(playerid, PI[playerid][P_DERBY_VEHICLEID], 0);
					return 1;
				}
				new Float:p[3];
				GetVehiclePos(PI[playerid][P_DERBY_VEHICLEID], p[0], p[1], p[2]);
				if(p[2] <= (DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][2]-0.5))
				{
					SetVehiclePos(PI[playerid][P_DERBY_VEHICLEID], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][0], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][1], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][2]+2.0);
					SetVehicleZAngle(PI[playerid][P_DERBY_VEHICLEID], DERBY_SPAWN[PI[playerid][P_DERBY_POSITION]][3]);
				}
			}
		}
	}
	else if(PI[playerid][P_GAMEMODE] == M_SHOOTER)
	{
		if(PI[playerid][P_STATUS] == S_SPAWNED && PI[playerid][P_SHOOTER_STATUS] == PD_NORMAL && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(ST[S_STATUS] == SHOOTER_WAIT)
			{
				
				if(!IsValidVehicle(PI[playerid][P_SHOOTER_VEHICLEID]) && PI[playerid][P_SHOOTER_VEHICLEID] != INVALID_VEHICLE_ID)
				{
					if(IsValidVehicle(PI[playerid][P_SHOOTER_VEHICLEID]) && PI[playerid][P_SHOOTER_VEHICLEID] != INVALID_VEHICLE_ID)
					{
						DestroyVehicleEx(PI[playerid][P_SHOOTER_VEHICLEID]);
						PI[playerid][P_SHOOTER_VEHICLEID] = INVALID_VEHICLE_ID;
					}
					PI[playerid][P_SHOOTER_VEHICLEID] = CreateVehicle(ST[S_VEH_MODELID], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][0], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][1], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][2], ST_SPAWN_POSITIONS[ PI[playerid][P_SHOOTER_POSITION] ][3], minrand(128, 255), minrand(128, 255), 99999);
					SetVehicleVirtualWorld(PI[playerid][P_SHOOTER_VEHICLEID], SHOOTER_VW);
					LinkVehicleToInterior(PI[playerid][P_SHOOTER_VEHICLEID], ST[S_INT]);
					SetVehicleParamsEx(PI[playerid][P_SHOOTER_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
					PutPlayerInVehicleEx(playerid, PI[playerid][P_SHOOTER_VEHICLEID], 0);
					return 1;
				}
				if(GetPlayerVehicleID(playerid) != PI[playerid][P_SHOOTER_VEHICLEID])
				{
					SetVehicleVirtualWorld(PI[playerid][P_SHOOTER_VEHICLEID], GetPlayerVirtualWorld(playerid));
					SetVehiclePos(PI[playerid][P_SHOOTER_VEHICLEID], ST_SPAWN_POSITIONS[PI[playerid][P_SHOOTER_POSITION]][0], ST_SPAWN_POSITIONS[PI[playerid][P_SHOOTER_POSITION]][1], ST_SPAWN_POSITIONS[PI[playerid][P_SHOOTER_POSITION]][2] + 2.0);
					SetVehicleZAngle(PI[playerid][P_SHOOTER_VEHICLEID], ST_SPAWN_POSITIONS[PI[playerid][P_SHOOTER_POSITION]][3]);
					PutPlayerInVehicleEx(playerid, PI[playerid][P_SHOOTER_VEHICLEID], 0);
					return 1;
				}
				if(ST[S_FREEZE])
				{
					new Float:p[3];
					GetVehiclePos(PI[playerid][P_SHOOTER_VEHICLEID], p[0], p[1], p[2]);
					if(p[2] <= (ST_SPAWN_POSITIONS[PI[playerid][P_SHOOTER_POSITION]][2] - 0.5))
					{
						SetVehiclePos(PI[playerid][P_SHOOTER_VEHICLEID], ST_SPAWN_POSITIONS[PI[playerid][P_SHOOTER_POSITION]][0], ST_SPAWN_POSITIONS[PI[playerid][P_SHOOTER_POSITION]][1], ST_SPAWN_POSITIONS[PI[playerid][P_SHOOTER_POSITION]][2] + 2.0);
						SetVehicleZAngle(PI[playerid][P_SHOOTER_VEHICLEID], ST_SPAWN_POSITIONS[PI[playerid][P_SHOOTER_POSITION]][3]);
					}
				}
			}
		}
	}
	else if(PI[playerid][P_GAMEMODE] == M_RACE)
	{
		if(PI[playerid][P_STATUS] == S_SPAWNED && PI[playerid][P_RACE_STATUS] == PD_NORMAL && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(RC[R_STATUS] == RACE_WAIT)
			{
				
				if(!IsValidVehicle(PI[playerid][P_RACE_VEHICLEID]) && PI[playerid][P_RACE_VEHICLEID] != INVALID_VEHICLE_ID)
				{
					if(IsValidVehicle(PI[playerid][P_RACE_VEHICLEID]) && PI[playerid][P_RACE_VEHICLEID] != INVALID_VEHICLE_ID)
					{
						DestroyVehicleEx(PI[playerid][P_RACE_VEHICLEID]);
						PI[playerid][P_RACE_VEHICLEID] = INVALID_VEHICLE_ID;
					}
					PI[playerid][P_RACE_VEHICLEID] = CreateVehicle(RC[R_MODELID], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][0], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][1], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][2] + 0.5, RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][3], minrand(128, 255), minrand(128, 255), 99999);
					SetVehicleVirtualWorld(PI[playerid][P_RACE_VEHICLEID], RACE_VW);
					LinkVehicleToInterior(PI[playerid][P_RACE_VEHICLEID], RC[R_INT]);
					SetVehicleParamsEx(PI[playerid][P_RACE_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0); 
					PutPlayerInVehicleEx(playerid, PI[playerid][P_RACE_VEHICLEID], 0);
					return 1;
				}
				if(GetPlayerVehicleID(playerid) != PI[playerid][P_RACE_VEHICLEID])
				{
					SetVehicleVirtualWorld(PI[playerid][P_RACE_VEHICLEID], GetPlayerVirtualWorld(playerid));
					SetVehiclePos(PI[playerid][P_RACE_VEHICLEID], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][0], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][1], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][2] + 0.5);
					SetVehicleZAngle(PI[playerid][P_RACE_VEHICLEID], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][3]);
					PutPlayerInVehicleEx(playerid, PI[playerid][P_RACE_VEHICLEID], 0);
					return 1;
				}
				if(RC[R_FREEZE])
				{
					new Float:p[3];
					GetVehiclePos(PI[playerid][P_RACE_VEHICLEID], p[0], p[1], p[2]);
					if(p[2] <= (RC_SPAWN_POSITIONS[PI[playerid][P_RACE_POSITION]][2] - 0.5))
					{
						SetVehiclePos(PI[playerid][P_RACE_VEHICLEID], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][0], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][1], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][2] + 0.5);
						SetVehicleZAngle(PI[playerid][P_RACE_VEHICLEID], RC_SPAWN_POSITIONS[ PI[playerid][P_RACE_POSITION] ][3]);
					}
				}
			}
		}
	}
	else if(PI[playerid][P_GAMEMODE] == M_FALL)
	{
		if(PI[playerid][P_STATUS] == S_SPAWNED && PI[playerid][P_FALL_STATUS] == PD_NORMAL && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			if(FI[F_STATUS] == FALL_RUNNING && FI[F_RUNNINGPLAYERS] > 1)
			{
				new Float:p[3];
				GetPlayerPos(playerid, p[0], p[1], p[2]);
				if(p[2] <= FI[F_ZPOS]) PlayerFallDead(playerid);
			}
		}
	}
	return 1;
}

public CheckPlayerPause(playerid)
{
	if(PI[playerid][P_STATUS] != S_SPAWNED || PI[playerid][P_GAMEMODE] == M_FREEROAM || PI[playerid][P_GAMEMODE] == M_NONE) return 1;
    if( (gettime() >= PI[playerid][P_CHECKAFK]+5) )
    {
        ExitPlayerGameMode(playerid);
		JoinPlayerGameMode(playerid, GAME_FREEROAM);
		SendClientMessage(playerid, -1, "{"ORANGE"}You were expelled from the game for being {"GREY"}idle. ");
    }
	return 1;
}

stock minrand(min, max) //By Alex "Y_Less" Cole
{
	return random(max - min) + min;
}

CreateDialogsStrings()
{
	format(DIALOG_ACMDS_String, sizeof DIALOG_ACMDS_String, "");
	strcat(DIALOG_ACMDS_String, "\n{009900}ADMIN CMDS\n\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/admins {"GREY"}- Online administrators list.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/kick {"GREY"}- Kick player.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/ban {"GREY"}- Permanent ban.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/tban {"GREY"}- TEMPORARY BAN.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/unban {"GREY"}- Dissend player.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/say {"GREY"}- Message for all as administrator.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/spec {"GREY"}- Spy on a player.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/adoff {"GREY"}- Finish spying on a player.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/go {"GREY"}- Go to a player.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/tarik {"GREY"}- Bring a player.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/slap {"GREY"}- Launch a player from the air.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/explode {"GREY"}- Exploit a player.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/event {"GREY"}- Event organizer.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/world {"GREY"}- Change the world.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/spos {"GREY"}- Go to coordinates.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/agivemoney {"GREY"}- Give money to a player.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/agivescore {"GREY"}- Score a player.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/ann {"GREY"}- Ads for everyone on the screen.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/song {"GREY"}- Play a song for everyone.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/war {"GREY"}- War of weapons for players in Freeroam.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/rac {"GREY"}- Respawn all vehicles.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/info {"GREY"}- Players connected info.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/clean {"GREY"}- Delete chat.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/adv {"GREY"}- Warn a player.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/pstats {"GREY"}- See the statistics of a player.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/asetscore {"GREY"}- Change a player score.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/setmoney {"GREY"}- Change a player money.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/respawnveh {"GREY"}- Respawn to Vehicle.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/ayt {"GREY"}-Play YouTube song for all.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/id {"GREY"}- A player's info.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/kroom {"GREY"}- Return a player to Mode Freeroam.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/aplay {"GREY"}- Play songs from /music for all.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}/premove {"GREY"}- Elimit a song from /music.\n");
	strcat(DIALOG_ACMDS_String, "{"ORANGE"}- To speak for the admin chat {"GREY"}# {"ORANGE"}followed by the text.\n");
	strcat(DIALOG_ACMDS_String, "\n{99CC00}  "SERVER_NAME" \n\n");
	
	format(DIALOG_CREDITS_String, sizeof DIALOG_CREDITS_String, "");
	strcat(DIALOG_CREDITS_String, "\n{009900}PROGRAMMER\n");
	strcat(DIALOG_CREDITS_String, "{CC9900}- JEY\n");
	strcat(DIALOG_CREDITS_String, "\n{009900}THANKS\n");
	strcat(DIALOG_CREDITS_String, "{CC9900}- Ride2day\n");
	strcat(DIALOG_CREDITS_String, "{CC9900}- Administration LSR\n");
	strcat(DIALOG_CREDITS_String, "\n{009900}OTROS\n");
	strcat(DIALOG_CREDITS_String, "{CC9900}- Incognito by streamer.\n");
	strcat(DIALOG_CREDITS_String, "{CC9900}- Y_LS by Y_IERATE AND SSCANF2.\n");
	strcat(DIALOG_CREDITS_String, "{CC9900}- Zeex by ZCMD.\n");
	strcat(DIALOG_CREDITS_String, "{CC9900}- The maps of "SERVER_NAME"\n They were taken from various Internet pages.\n");
	strcat(DIALOG_CREDITS_String, "{CC9900}- SA-MP Wiki.\n");
	strcat(DIALOG_CREDITS_String, "\n\n{99CC00}  "SERVER_NAME" - "VERSION_DATE_1"\n\n");
	
	format(DIALOG_COMMANDS_String, sizeof DIALOG_COMMANDS_String, "");
	strcat(DIALOG_COMMANDS_String, "\n{009900}COMMANDS\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/register {"GREY"}- Record the account.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/pass {"GREY"}- Change your password.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/stats {"GREY"}- Look at your statistics.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/panel {"GREY"}- Various options.\n");
	strcat(DIALOG_COMMANDS_String, "\n\n{009900}General\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/mode {"GREY"}-Change game mode.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/rules {"GREY"}- server rules.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/help {"GREY"}- help general.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/report {"GREY"}- Report to a player.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/tele {"GREY"}- List of all teleports.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/mode {"GREY"}- Change game mode.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/pm {"GREY"}- Send private messages.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/tops {"GREY"}- See the 10 highlights.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/credit {"GREY"}- Server creators.\n");
	strcat(DIALOG_COMMANDS_String, "\n\n{009900}PLAYER\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/animlist {"GREY"}-Animation list.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/v {"GREY"}- Vehicle list.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/w {"GREY"}- Weapons list.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/godmode {"GREY"}- Active/deactivates THE MODE GOD.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/givemoney {"GREY"}- Give money to another player.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/givescore {"GREY"}- Give score to another player.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/fightstyle {"GREY"}- Change your Fightstyle fighting.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/music {"GREY"}- Play a song.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/radio {"GREY"}- Play a radio.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/stop {"GREY"}- For any audio.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/kill {"GREY"}- Commit suicide.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/items {"GREY"}- Objects to dress.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/remove {"GREY"}- Eliminate attachment.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/ww /ww2 /rw /rw2 {"GREY"}- Weapons.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/jetpack {"GREY"}- You get a jetpack.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/yt {"GREY"}- Play YouTube song.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/daethmatch {"GREY"}- DeathMatch.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/color {"GREY"}- Change your color.\n");
	strcat(DIALOG_COMMANDS_String, "{"ORANGE"}/duel {"GREY"}- Duels.\n");
	strcat(DIALOG_COMMANDS_String, "\n\n{99CC00}  "SERVER_NAME" \n\n");
	
	format(DIALOG_RULES_String, sizeof DIALOG_RULES_String, "");
	strcat(DIALOG_RULES_String, "\n{009900}rules\n");
	strcat(DIALOG_RULES_String, "{"ORANGE"}- Mods Hacks are not allowed.\n");
	strcat(DIALOG_RULES_String, "{"ORANGE"}- The harmless mods are allowed.\n");
	strcat(DIALOG_RULES_String, "{"ORANGE"}- Parkour mods are only allowed in the free mode (fr).\n");
	strcat(DIALOG_RULES_String, "{"ORANGE"}- Avoid conflicting issues between users.\n");
	strcat(DIALOG_RULES_String, "{"ORANGE"}- Respect all players.\n");
	strcat(DIALOG_RULES_String, "{"ORANGE"}- The administration is not responsible for alleged\n  Purchase/SCORE SALE ESCORE on the server.\n");
	strcat(DIALOG_RULES_String, "{"ORANGE"}- The server is not a place to ask for administrative level.\n");
	strcat(DIALOG_RULES_String, "\n\n{99CC00}  "SERVER_NAME" \n\n");
	
	format(DIALOG_HELP1_String, sizeof DIALOG_HELP1_String, "");
	strcat(DIALOG_HELP1_String, "\n{009900}GENERAL\n");
	strcat(DIALOG_HELP1_String, "{CC9900}- Use the command {C6D855}/vipinfo {CC9900}For information about VIP membership.\n");
	strcat(DIALOG_HELP1_String, "{CC9900}- Usa {999999}/command {CC9900}To see the list of all the available Command.\n");
	strcat(DIALOG_HELP1_String, "{CC9900}- Use the command {CC0000}/report {CC9900}para report to someone who cheats.\n");
	strcat(DIALOG_HELP1_String, "{CC9900}- To change Mode uses the command {999999}/m {CC9900} y choose\n Among several modes.\n");
	strcat(DIALOG_HELP1_String, "{CC9900}- If you are not registered, you must do it for UPDATEDATA\n  Your data with the command {999999}/register.\n");
	strcat(DIALOG_HELP1_String, "{CC9900}- To change Skin, you can do it by clicking {999999}F4 {CC9900}and subsequently {999999}/kill.\n");
	strcat(DIALOG_HELP1_String, "{CC9900}- You will be able to see floating texts on each map with your command\n  for teleporthouseing to l in the future.\n");
	strcat(DIALOG_HELP1_String, "\n\n{009900}VEHICLES FREEROAM\n");
	strcat(DIALOG_HELP1_String, "{CC9900}- To prevent the vehicle from suffering damage while you are doing\n  acrobatics, keep the {999999}/godmode.\n");
	strcat(DIALOG_HELP1_String, "{CC9900}- Use the key {999999}ALT DER / LEFT CLICK {CC9900}For legacy speed.\n");
	strcat(DIALOG_HELP1_String, "{CC9900}- Use the key {999999}Y {CC9900}To jump with the vehicle.\n");
	strcat(DIALOG_HELP1_String, "{CC9900}- Use the key {999999}H / Block mays {cc9900} to put the straight vehicle.\n");
	strcat(DIALOG_HELP1_String, "\n\n{99CC00}  "SERVER_NAME" \n\n");
	
	format(DIALOG_HELP2_String, sizeof DIALOG_HELP2_String, "");
	strcat(DIALOG_HELP2_String, "\n{009900}PROPERTIES\n");
	strcat(DIALOG_HELP2_String, "{CC9900}- Normal users can have up to {999999} 2 houses, {CC9900}while\n  VIP users can have up to {99999} 5 houses. {C6D855}(/vipinfo)\n");
	strcat(DIALOG_HELP2_String, "{CC9900}- There are houses throughout San Andreas, take a walk and you can see {999999} pickups\n  {CC9900}Where can you buy the houses.\n");
	strcat(DIALOG_HELP2_String, "{CC9900}- The houses are lost if you carry {99999} 7 days {cc9900} without connecting you.\n");
	strcat(DIALOG_HELP2_String, "{CC9900}- To open/close the door or sell your House USA {999999}/house {cc9900} inside\n  From your house at the door.\n");
	strcat(DIALOG_HELP2_String, "\n\n{009900}Personal vehicles\n");
	strcat(DIALOG_HELP2_String, "{CC9900}-Normal users can have up to {999999} 2 vehicles, {cc9900} while\n  VIP users can have up to {99999} 5 vehicles. {C6D855}(/vipinfo)\n");
	strcat(DIALOG_HELP2_String, "{CC9900}- To buy a vehicle you can go to {C6D855}/cardealer {CC9900}and see the buvehicle.\n");
	strcat(DIALOG_HELP2_String, "{CC9900}- To take out or UPDATE DATA YOUR VEHICLES USA{C6D855}/vv.\n");
	strcat(DIALOG_HELP2_String, "{CC9900}- To control your USA {C6D855}/veh {CC9900}inside or near the vehicle.\n");
	strcat(DIALOG_HELP2_String, "{CC9900}- You can tune your vehicle in San Andreas Tuning garages.\n");
	strcat(DIALOG_HELP2_String, "{CC9900}- Users {C6D855} VIPS {CC 9900} can modify your vehicle\n  With more options (neons, custom plate, sirens).\n");
	strcat(DIALOG_HELP2_String, "\n\n{99CC00}  "SERVER_NAME" \n\n");
	
	format(DIALOG_HELP3_String, sizeof DIALOG_HELP3_String, "");
	strcat(DIALOG_HELP3_String, "\n{009900}CREWS\n");
	strcat(DIALOG_HELP3_String, "{CC9900}- To create a CREW use the commander {FF7A45}/createcrew, {CC9900}has\n  a cost of {90c3d4} 1,000 score and 500.000$.\n");
	strcat(DIALOG_HELP3_String, "{CC9900}- Use {FF7A45}/invite {CC9900}To invite a player to your crew.\n- {CC9900}Lider ranges can invite and expel CREW players.\n");
	strcat(DIALOG_HELP3_String, "{CC9900}- Use the command {FF7A45}/manage {CC9900}for the CREW remove or modify it.\n");
	strcat(DIALOG_HELP3_String, "{CC9900}- Use {ff7a45}! Text {cc9900} to speak for the CREW chat.\n  For example: {ff7a45}! Hello, this is my crew.");
	strcat(DIALOG_HELP3_String, "\n\n{99CC00}  "SERVER_NAME" \n\n");
	
	format(DIALOG_ANIMS_String, sizeof DIALOG_ANIMS_String, "");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/surrender\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/blowjob\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/roll\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/drunk\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/bomb\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/aim\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/laugh\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/threaten\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/straw\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/injured\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/crossing\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/lean\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/cover\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/vomit\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/eat\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/dismiss\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/nalgada\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/agonize\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/besar\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/crack\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/piss\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/feel\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/fucku\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/call\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/taichi\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/todrink\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/boxer\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/greet\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/cure\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/cry\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/sleep\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/rap\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/astrip\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/dance\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/encourage\n");
	strcat(DIALOG_ANIMS_String, "{CC9900}>> {C6D855}/talk\n");	
	
	format(DIALOG_ITEMS_String, sizeof DIALOG_ITEMS_String, "");
	strcat(DIALOG_ITEMS_String, "{CC9900} /FIREFIGHTER: {CCCCCC}Firefighter helmet\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /POLICECAP: {CCCCCC}Police cap\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /HATMJ: {CCCCCC}Jackson hat\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /OBRERO: {CCCCCC}Worker's helmet\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /GORRA: {CCCCCC}Hat back\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /HAT: {CCCCCC}Classic Straw hat\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /HATMG: {CCCCCC}Classic magician hat\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /BOLSA: {CCCCCC}Bag, kidnapped\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /DJ: {CCCCCC}Headphones/helmets\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /DLORO: {CCCCCC}Parrot costume\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /LORO: {CCCCCC}Loro to shouLeader\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /PARCHE: {CCCCCC}Pirate patch\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /DILDO: {CCCCCC}Dildo\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /CHICKEN: {CCCCCC}Chicken head\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /DCHICKEN: {CCCCCC}Chicken costume\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /CIERVO: {CCCCCC}Deer\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /CUERNOS1: {CCCCCC}Type horns 1\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /CUERNOS2: {CCCCCC}Type horns 2\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /DCALABAZA: {CCCCCC}Pumpkin costume\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /CABEZON: {CCCCCC}Cabezn\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /DELFIN: {CCCCCC}Dolphin\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /TIBURON: {CCCCCC}Shark\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /TURTLE: {CCCCCC}Tortoise\n");
	strcat(DIALOG_ITEMS_String, "{CC9900} /VACA: {CCCCCC}Cow\n");
	strcat(DIALOG_ITEMS_String, "{CC0000} /REMOVE: {CCCCCC}Eliminates The Current item\n");
	
	format(DIALOG_VIPINFO_String, sizeof DIALOG_VIPINFO_String, "");
	strcat(DIALOG_VIPINFO_String, "\n{009900}GENERAL\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- You can acquire VIP membership for 30 days with {C6D855}/buyvip {CC9900}It costs 1000 Score.\n  {CC9900}If you buy VIP being VIP the 30 days are added to the previous ones.\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- Use the {999999}/VIPS {cc9900} command to see connected VIP users.\n");
	strcat(DIALOG_VIPINFO_String, "\n\n{009900}BENEFITS\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- Be indicated with a text above the player who is {FFCC00}User VIP.\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- Possibility of having even {C6D855}5 Properties and 5 vehicles.\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- You can customize your personal vehicles with {c6d855} lsr tuning (/tuning) {CC9900}which consists of\n A tunnel of {C6D855} new paint colors, neons, sirens, and customize plaque.\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- Repair any vehicle in Mode Freeroam with the key {999999}2.\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- Chat just for Vips using {c6d855}@ {cc9900} followed by the text.\n  For example: {C6D855}@Hola!\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- Change the color in the chat (To highlight) with the command {C6D855}/chatcolor.\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- Appear with vest to 100% In the mode FREEROAM.\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- They can use {C6D855} nitro {cc9900} in the mode derby.\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- You can clean your own chat with {C6D855}/clearc.\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- Fill life and armor with the command {C6D855}/hesoyam {CC9900}Every 10 minutes.\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- You can start counting with the command {C6D855}/counting.\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- They can go to a player with the command {C6D855}/goto.\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- They can be invisible in the mode freroam with the command {C6D855}/invisible.\n");
	strcat(DIALOG_VIPINFO_String, "{CC9900}- In the zombie mode, just be infected if a zombie kills him and not if he bites/attacks him.\n");
	strcat(DIALOG_VIPINFO_String, "\n\n{99CC00}  "SERVER_NAME" \n\n");
	
	format(DIALOG_SELECT_COLOR_String, sizeof DIALOG_SELECT_COLOR_String, "");
	new a_line[20];
	for(new i = 0; i != sizeof(RandomColors); i++)
	{
		format(a_line, sizeof(a_line), "{%06x}color %d\n", RandomColors[i] >>> 8, i + 1);
		strcat(DIALOG_SELECT_COLOR_String, a_line);
	}
	
	new b_line[35];
	format(DIALOG_DUEL_String, sizeof DIALOG_DUEL_String, "");
	for(new i = 0; i != sizeof(DUEL_LIST); i++)
	{
		format(b_line, sizeof(b_line), "{99CC00}%s\n", DUEL_LIST[i][DUEL_LIST_NAME]);
		strcat(DIALOG_DUEL_String, b_line);
	}
	
	new c_line[64];
	format(DIALOG_DUEL_WEAPONS_String, sizeof DIALOG_DUEL_WEAPONS_String, "");
	for(new i = 0; i != sizeof(DUEL_WEAPONS); i++)
	{
		format(c_line, sizeof(c_line), "{99CC00}%s\n", DUEL_WEAPONS[i][WEAPON_PACKNAME]);
		strcat(DIALOG_DUEL_WEAPONS_String, c_line);
	}
	return 1;
}

UpdateCountPlayersTextDraws()
{
	new str[24];
	
	format(str, sizeof str, "%d", TOTAL_PLAYERS_FR); TextDrawSetString(TD_LSR_SELECTMODE[TD_COUNTER_FR], str);
	format(str, sizeof str, "%d", TOTAL_PLAYERS_GANG); TextDrawSetString(TD_LSR_SELECTMODE[TD_COUNTER_GANG], str);
	format(str, sizeof str, "%d", DI[D_PLAYERS]); TextDrawSetString(TD_LSR_SELECTMODE[TD_COUNTER_DERBY], str);
	format(str, sizeof str, "%d", TOTAL_PLAYERS_DM); TextDrawSetString(TD_LSR_SELECTMODE[TD_COUNTER_DM], str);
	format(str, sizeof str, "%d", FI[F_PLAYERS]); TextDrawSetString(TD_LSR_SELECTMODE[TD_COUNTER_FALL], str);
	format(str, sizeof str, "%d", ZI[Z_PLAYERS]); TextDrawSetString(TD_LSR_SELECTMODE[TD_COUNTER_ZOMBIE], str);
	format(str, sizeof str, "%d", TOTAL_PLAYERS); TextDrawSetString(TD_LSR_SELECTMODE[TD_COUNTER_LSR], str);
	format(str, sizeof str, "%d", TDMI[T_PLAYERS]); TextDrawSetString(TD_LSR_SELECTMODE[TD_COUNTER_TDM], str);
	format(str, sizeof str, "%d", ST[S_PLAYERS]); TextDrawSetString(TD_LSR_SELECTMODE[TD_COUNTER_SHOOTER], str);
	format(str, sizeof str, "%d", RC[R_PLAYERS]); TextDrawSetString(TD_LSR_SELECTMODE[TD_COUNTER_RACES], str);
	
	format(str, sizeof str, "~g~~h~Humanos_(%d)", ZI[Z_TEAM_PLAYERS][0]); TextDrawSetString(TD_LSR_ZOMBIE_EDITION[2], str);
	format(str, sizeof str, "~r~Zombies_(%d)", ZI[Z_TEAM_PLAYERS][1]); TextDrawSetString(TD_LSR_ZOMBIE_EDITION[3], str);
	
	new info[400], sum = TOTAL_PLAYERS_FR + TOTAL_PLAYERS_DM + TOTAL_PLAYERS_GANG + TOTAL_PLAYERS_EVENT + DI[D_PLAYERS] + FI[F_PLAYERS] + ZI[Z_PLAYERS] + TOTAL_PLAYERS_DUEL
	+ TDMI[T_PLAYERS] + ST[S_PLAYERS] + RC[R_PLAYERS];
	format
	(
		info, sizeof info, "TOTAL_PLAYERS:_%d~n~--------------------------------~n~TOTAL_PLAYERS_FR:_%d~n~TOTAL_PLAYERS_DM:_%d~n~TOTAL_PLAYERS_GANG:_%d~n~TOTAL_PLAYER_EVENT:_%d~n~DI[D_PLAYERS]:_%d~n~FI[F_PLAYERS]:_%d~n~ZI[Z_PLAYERS]:_%d~n~TOTAL_PLAYERS_DUEL:_%d~n~TDMI[T_PLAYERS]:_%d~n~ST[S_PLAYERS]:_%d~n~RC[R_PLAYERS]:_%d~n~--------------------------------~n~SUM:_%d~n~", 
		TOTAL_PLAYERS, 
		TOTAL_PLAYERS_FR, 
		TOTAL_PLAYERS_DM, 
		TOTAL_PLAYERS_GANG, 
		TOTAL_PLAYERS_EVENT, 
		DI[D_PLAYERS], 
		FI[F_PLAYERS], 
		ZI[Z_PLAYERS], 
		TOTAL_PLAYERS_DUEL, 
		TDMI[T_PLAYERS],
		ST[S_PLAYERS],
		RC[R_PLAYERS],
		sum
	);
	TextDrawSetString(TD_LSR_SERVER_INFO, info);
	return 1;
}

CreatePlayerTextDraws(playerid)
{	
	PI[playerid][PTD_MESSAGE_TD] = CreatePlayerTextDraw(playerid, 85.000000, 300.000000, "_");
	PlayerTextDrawLetterSize(playerid, PI[playerid][PTD_MESSAGE_TD], 0.297666, 1.392591);
	PlayerTextDrawAlignment(playerid, PI[playerid][PTD_MESSAGE_TD], 2);
	PlayerTextDrawColor(playerid, PI[playerid][PTD_MESSAGE_TD], -1);
	PlayerTextDrawSetShadow(playerid, PI[playerid][PTD_MESSAGE_TD], 0);
	PlayerTextDrawSetOutline(playerid, PI[playerid][PTD_MESSAGE_TD], 1);
	PlayerTextDrawBackgroundColor(playerid, PI[playerid][PTD_MESSAGE_TD], 255);
	PlayerTextDrawFont(playerid, PI[playerid][PTD_MESSAGE_TD], 1);
	PlayerTextDrawSetProportional(playerid, PI[playerid][PTD_MESSAGE_TD], 1);
	PlayerTextDrawSetShadow(playerid, PI[playerid][PTD_MESSAGE_TD], 0);

	PTD_LSR_KICKED[playerid][0] = CreatePlayerTextDraw(playerid, 320.000000, 180.000000, "box");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_KICKED[playerid][0], 0.000000, 10.000000);
	PlayerTextDrawTextSize(playerid, PTD_LSR_KICKED[playerid][0], 0.000000, 350.000000);
	PlayerTextDrawAlignment(playerid, PTD_LSR_KICKED[playerid][0], 2);
	PlayerTextDrawColor(playerid, PTD_LSR_KICKED[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, PTD_LSR_KICKED[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, PTD_LSR_KICKED[playerid][0], 140);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_KICKED[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_KICKED[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_KICKED[playerid][0], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_KICKED[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_KICKED[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_KICKED[playerid][0], 0);

	PTD_LSR_KICKED[playerid][1] = CreatePlayerTextDraw(playerid, 320.000000, 195.000000, "You have been expelled from the server.");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_KICKED[playerid][1], 0.324333, 1.458963);
	PlayerTextDrawAlignment(playerid, PTD_LSR_KICKED[playerid][1], 2);
	PlayerTextDrawColor(playerid, PTD_LSR_KICKED[playerid][1], -46);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_KICKED[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_KICKED[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_KICKED[playerid][1], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_KICKED[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_KICKED[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_KICKED[playerid][1], 0);

	PTD_LSR_KICKED[playerid][2] = CreatePlayerTextDraw(playerid, 320.000000, 207.000000, "REASON:_~r~_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_KICKED[playerid][2], 0.324333, 1.458963);
	PlayerTextDrawAlignment(playerid, PTD_LSR_KICKED[playerid][2], 2);
	PlayerTextDrawColor(playerid, PTD_LSR_KICKED[playerid][2], -46);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_KICKED[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_KICKED[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_KICKED[playerid][2], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_KICKED[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_KICKED[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_KICKED[playerid][2], 0);

	PTD_LSR_KICKED[playerid][3] = CreatePlayerTextDraw(playerid, 320.000000, 231.000000, "Date on which you will be readmitted:_~g~_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_KICKED[playerid][3], 0.324333, 1.458963);
	PlayerTextDrawAlignment(playerid, PTD_LSR_KICKED[playerid][3], 2);
	PlayerTextDrawColor(playerid, PTD_LSR_KICKED[playerid][3], -46);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_KICKED[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_KICKED[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_KICKED[playerid][3], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_KICKED[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_KICKED[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_KICKED[playerid][3], 0);

	PTD_LSR_KICKED[playerid][4] = CreatePlayerTextDraw(playerid, 320.000000, 250.000000, "Legacy_freeroam_"SERVER_VERSION"");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_KICKED[playerid][4], 0.201000, 0.886518);
	PlayerTextDrawAlignment(playerid, PTD_LSR_KICKED[playerid][4], 2);
	PlayerTextDrawColor(playerid, PTD_LSR_KICKED[playerid][4], -221);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_KICKED[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_KICKED[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_KICKED[playerid][4], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_KICKED[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_KICKED[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_KICKED[playerid][4], 0);
	
	//TD cons
	PTD_CarShop[playerid][0] = CreatePlayerTextDraw(playerid, 124.000000, 135.000000, "");
	PlayerTextDrawLetterSize(playerid, PTD_CarShop[playerid][0], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_CarShop[playerid][0], 90.000000, 100.000000);
	PlayerTextDrawAlignment(playerid, PTD_CarShop[playerid][0], 1);
	PlayerTextDrawColor(playerid, PTD_CarShop[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, PTD_CarShop[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PTD_CarShop[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_CarShop[playerid][0], 1844182884);
	PlayerTextDrawFont(playerid, PTD_CarShop[playerid][0], 5);
	PlayerTextDrawSetProportional(playerid, PTD_CarShop[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, PTD_CarShop[playerid][0], 0);
	PlayerTextDrawSetPreviewModel(playerid, PTD_CarShop[playerid][0], 400);
	PlayerTextDrawSetPreviewRot(playerid, PTD_CarShop[playerid][0], 340.000000, 0.000000, 318.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, PTD_CarShop[playerid][0], -1, -1);

	PTD_CarShop[playerid][1] = CreatePlayerTextDraw(playerid, 169.000000, 276.000000, "0$~n~0_Score");
	PlayerTextDrawLetterSize(playerid, PTD_CarShop[playerid][1], 0.272333, 1.496296);
	PlayerTextDrawAlignment(playerid, PTD_CarShop[playerid][1], 2);
	PlayerTextDrawColor(playerid, PTD_CarShop[playerid][1], -9109505);
	PlayerTextDrawSetShadow(playerid, PTD_CarShop[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PTD_CarShop[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_CarShop[playerid][1], 255);
	PlayerTextDrawFont(playerid, PTD_CarShop[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, PTD_CarShop[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, PTD_CarShop[playerid][1], 0);

	PTD_CarShop[playerid][2] = CreatePlayerTextDraw(playerid, 169.000000, 218.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_CarShop[playerid][2], 0.285666, 1.276445);
	PlayerTextDrawAlignment(playerid, PTD_CarShop[playerid][2], 2);
	PlayerTextDrawColor(playerid, PTD_CarShop[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, PTD_CarShop[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PTD_CarShop[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_CarShop[playerid][2], 255);
	PlayerTextDrawFont(playerid, PTD_CarShop[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, PTD_CarShop[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, PTD_CarShop[playerid][2], 0);
	
	//LSR TUNING
	PTD_LSR_TUNING[playerid][0] = CreatePlayerTextDraw(playerid, 107.000000, 113.000000, "Neons");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][0], 0.276665, 1.168591);
	PlayerTextDrawTextSize(playerid, PTD_LSR_TUNING[playerid][0], 10.000000, 50.000000);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][0], 2);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][0], -116);
	PlayerTextDrawUseBox(playerid, PTD_LSR_TUNING[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, PTD_LSR_TUNING[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][0], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][0], 0);
	PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][0], true);

	PTD_LSR_TUNING[playerid][1] = CreatePlayerTextDraw(playerid, 157.000000, 113.000000, "Siren");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][1], 0.276665, 1.168591);
	PlayerTextDrawTextSize(playerid, PTD_LSR_TUNING[playerid][1], 10.000000, 50.000000);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][1], 2);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][1], -116);
	PlayerTextDrawUseBox(playerid, PTD_LSR_TUNING[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid, PTD_LSR_TUNING[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][1], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][1], 0);
	PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][1], true);

	PTD_LSR_TUNING[playerid][2] = CreatePlayerTextDraw(playerid, 207.000000, 113.000000, "Paint");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][2], 0.276665, 1.168591);
	PlayerTextDrawTextSize(playerid, PTD_LSR_TUNING[playerid][2], 10.000000, 50.000000);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][2], 2);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][2], -116);
	PlayerTextDrawUseBox(playerid, PTD_LSR_TUNING[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid, PTD_LSR_TUNING[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][2], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][2], 0);
	PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][2], true);

	PTD_LSR_TUNING[playerid][3] = CreatePlayerTextDraw(playerid, 257.000000, 113.000000, "Plate");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][3], 0.276665, 1.168591);
	PlayerTextDrawTextSize(playerid, PTD_LSR_TUNING[playerid][3], 10.000000, 50.000000);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][3], 2);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][3], -116);
	PlayerTextDrawUseBox(playerid, PTD_LSR_TUNING[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid, PTD_LSR_TUNING[playerid][3], 0);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][3], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][3], 0);
	PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][3], true);

	PTD_LSR_TUNING[playerid][4] = CreatePlayerTextDraw(playerid, 84.000000, 136.000000, "Article");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][4], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][4], 1);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][4], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][4], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][4], 0);

	PTD_LSR_TUNING[playerid][5] = CreatePlayerTextDraw(playerid, 175.000000, 136.000000, "Price");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][5], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][5], 3);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][5], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][5], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][5], 0);

	PTD_LSR_TUNING[playerid][6] = CreatePlayerTextDraw(playerid, 84.000000, 157.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][6], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][6], 1);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][6], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][6], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][6], 0);
	PlayerTextDrawTextSize(playerid, PTD_LSR_TUNING[playerid][6], 134.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][6], false);

	PTD_LSR_TUNING[playerid][7] = CreatePlayerTextDraw(playerid, 175.000000, 157.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][7], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][7], 3);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][7], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][7], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][7], 0);

	PTD_LSR_TUNING[playerid][8] = CreatePlayerTextDraw(playerid, 84.000000, 172.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][8], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][8], 1);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][8], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][8], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][8], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][8], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][8], 0);
	PlayerTextDrawTextSize(playerid, PTD_LSR_TUNING[playerid][8], 134.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][8], false);

	PTD_LSR_TUNING[playerid][9] = CreatePlayerTextDraw(playerid, 175.000000, 172.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][9], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][9], 3);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][9], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][9], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][9], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][9], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][9], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][9], 0);

	PTD_LSR_TUNING[playerid][10] = CreatePlayerTextDraw(playerid, 84.000000, 187.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][10], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][10], 1);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][10], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][10], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][10], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][10], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][10], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][10], 0);
	PlayerTextDrawTextSize(playerid, PTD_LSR_TUNING[playerid][10], 134.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][10], false);

	PTD_LSR_TUNING[playerid][11] = CreatePlayerTextDraw(playerid, 175.000000, 187.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][11], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][11], 3);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][11], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][11], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][11], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][11], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][11], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][11], 0);

	PTD_LSR_TUNING[playerid][12] = CreatePlayerTextDraw(playerid, 84.000000, 202.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][12], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][12], 1);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][12], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][12], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][12], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][12], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][12], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][12], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][12], 0);
	PlayerTextDrawTextSize(playerid, PTD_LSR_TUNING[playerid][12], 134.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][12], false);

	PTD_LSR_TUNING[playerid][13] = CreatePlayerTextDraw(playerid, 175.000000, 202.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][13], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][13], 3);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][13], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][13], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][13], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][13], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][13], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][13], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][13], 0);

	PTD_LSR_TUNING[playerid][14] = CreatePlayerTextDraw(playerid, 84.000000, 217.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][14], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][14], 1);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][14], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][14], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][14], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][14], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][14], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][14], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][14], 0);
	PlayerTextDrawTextSize(playerid, PTD_LSR_TUNING[playerid][14], 134.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][14], false);

	PTD_LSR_TUNING[playerid][15] = CreatePlayerTextDraw(playerid, 175.000000, 217.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][15], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][15], 3);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][15], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][15], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][15], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][15], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][15], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][15], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][15], 0);

	PTD_LSR_TUNING[playerid][16] = CreatePlayerTextDraw(playerid, 84.000000, 232.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][16], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][16], 1);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][16], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][16], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][16], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][16], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][16], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][16], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][16], 0);
	PlayerTextDrawTextSize(playerid, PTD_LSR_TUNING[playerid][16], 134.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][16], false);

	PTD_LSR_TUNING[playerid][17] = CreatePlayerTextDraw(playerid, 175.000000, 232.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][17], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][17], 3);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][17], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][17], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][17], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][17], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][17], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][17], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][17], 0);

	PTD_LSR_TUNING[playerid][18] = CreatePlayerTextDraw(playerid, 84.000000, 247.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][18], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][18], 1);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][18], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][18], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][18], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][18], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][18], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][18], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][18], 0);
	PlayerTextDrawTextSize(playerid, PTD_LSR_TUNING[playerid][18], 134.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][18], false);

	PTD_LSR_TUNING[playerid][19] = CreatePlayerTextDraw(playerid, 175.000000, 247.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][19], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][19], 3);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][19], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][19], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][19], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][19], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][19], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][19], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][19], 0);

	PTD_LSR_TUNING[playerid][20] = CreatePlayerTextDraw(playerid, 84.000000, 262.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][20], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][20], 1);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][20], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][20], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][20], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][20], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][20], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][20], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][20], 0);
	PlayerTextDrawTextSize(playerid, PTD_LSR_TUNING[playerid][20], 134.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][20], false);

	PTD_LSR_TUNING[playerid][21] = CreatePlayerTextDraw(playerid, 175.000000, 262.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][21], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][21], 3);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][21], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][21], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][21], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][21], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][21], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][21], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][21], 0);

	PTD_LSR_TUNING[playerid][22] = CreatePlayerTextDraw(playerid, 84.000000, 277.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][22], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][22], 1);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][22], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][22], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][22], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][22], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][22], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][22], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][22], 0);
	PlayerTextDrawTextSize(playerid, PTD_LSR_TUNING[playerid][22], 134.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][22], false);

	PTD_LSR_TUNING[playerid][23] = CreatePlayerTextDraw(playerid, 175.000000, 277.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][23], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][23], 3);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][23], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][23], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][23], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][23], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][23], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][23], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][23], 0);

	PTD_LSR_TUNING[playerid][24] = CreatePlayerTextDraw(playerid, 84.000000, 292.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][24], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][24], 1);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][24], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][24], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][24], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][24], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][24], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][24], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][24], 0);
	PlayerTextDrawTextSize(playerid, PTD_LSR_TUNING[playerid][24], 134.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][24], false);

	PTD_LSR_TUNING[playerid][25] = CreatePlayerTextDraw(playerid, 175.000000, 292.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][25], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][25], 3);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][25], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][25], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][25], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][25], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][25], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][25], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][25], 0);

	PTD_LSR_TUNING[playerid][26] = CreatePlayerTextDraw(playerid, 84.000000, 307.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][26], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][26], 1);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][26], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][26], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][26], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][26], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][26], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][26], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][26], 0);
	PlayerTextDrawTextSize(playerid, PTD_LSR_TUNING[playerid][26], 134.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][26], false);

	PTD_LSR_TUNING[playerid][27] = CreatePlayerTextDraw(playerid, 175.000000, 307.000000, "_");
	PlayerTextDrawLetterSize(playerid, PTD_LSR_TUNING[playerid][27], 0.276665, 1.168591);
	PlayerTextDrawAlignment(playerid, PTD_LSR_TUNING[playerid][27], 3);
	PlayerTextDrawColor(playerid, PTD_LSR_TUNING[playerid][27], -116);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][27], 0);
	PlayerTextDrawSetOutline(playerid, PTD_LSR_TUNING[playerid][27], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_LSR_TUNING[playerid][27], 255);
	PlayerTextDrawFont(playerid, PTD_LSR_TUNING[playerid][27], 1);
	PlayerTextDrawSetProportional(playerid, PTD_LSR_TUNING[playerid][27], 1);
	PlayerTextDrawSetShadow(playerid, PTD_LSR_TUNING[playerid][27], 0);
	
	
	//RACE
	PTD_RACE[playerid][0] = CreatePlayerTextDraw(playerid, 613.000488, (402.375091)-51.0, "1/1");
	PlayerTextDrawLetterSize(playerid, PTD_RACE[playerid][0], 0.284999, 1.280626);
	PlayerTextDrawAlignment(playerid, PTD_RACE[playerid][0], 3);
	PlayerTextDrawColor(playerid, PTD_RACE[playerid][0], -116);
	PlayerTextDrawSetShadow(playerid, PTD_RACE[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PTD_RACE[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_RACE[playerid][0], 255);
	PlayerTextDrawFont(playerid, PTD_RACE[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, PTD_RACE[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, PTD_RACE[playerid][0], 0);

	PTD_RACE[playerid][1] = CreatePlayerTextDraw(playerid, 581.700622, (403.974700)-51.0, "POSITION");
	PlayerTextDrawLetterSize(playerid, PTD_RACE[playerid][1], 0.205000, 1.000626);
	PlayerTextDrawAlignment(playerid, PTD_RACE[playerid][1], 3);
	PlayerTextDrawColor(playerid, PTD_RACE[playerid][1], -116);
	PlayerTextDrawSetShadow(playerid, PTD_RACE[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PTD_RACE[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_RACE[playerid][1], 255);
	PlayerTextDrawFont(playerid, PTD_RACE[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, PTD_RACE[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, PTD_RACE[playerid][1], 0);

	PTD_RACE[playerid][2] = CreatePlayerTextDraw(playerid, 537.500000, (403.062500)-51.0, "_");
	PlayerTextDrawLetterSize(playerid, PTD_RACE[playerid][2], 0.390500, 1.315626);
	PlayerTextDrawTextSize(playerid, PTD_RACE[playerid][2], 614.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, PTD_RACE[playerid][2], 1);
	PlayerTextDrawColor(playerid, PTD_RACE[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, PTD_RACE[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid, PTD_RACE[playerid][2], 90);
	PlayerTextDrawSetShadow(playerid, PTD_RACE[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PTD_RACE[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_RACE[playerid][2], 255);
	PlayerTextDrawFont(playerid, PTD_RACE[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, PTD_RACE[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, PTD_RACE[playerid][2], 0);
	return 1;
}

DestroyPlayerTextDraws(playerid)
{
	PlayerTextDrawDestroy(playerid, PTD_LSR_KICKED[playerid][0]);
	PlayerTextDrawDestroy(playerid, PTD_LSR_KICKED[playerid][1]);
	PlayerTextDrawDestroy(playerid, PTD_LSR_KICKED[playerid][2]);
	PlayerTextDrawDestroy(playerid, PTD_LSR_KICKED[playerid][3]);
	PlayerTextDrawDestroy(playerid, PTD_LSR_KICKED[playerid][4]);
	PlayerTextDrawDestroy(playerid, PTD_CarShop[playerid][0]);
	PlayerTextDrawDestroy(playerid, PTD_CarShop[playerid][1]);
	PlayerTextDrawDestroy(playerid, PTD_CarShop[playerid][2]);
	PlayerTextDrawDestroy(playerid, PTD_RACE[playerid][0]);
	PlayerTextDrawDestroy(playerid, PTD_RACE[playerid][1]);
	PlayerTextDrawDestroy(playerid, PTD_RACE[playerid][2]);
	for(new i = 0; i != sizeof(PTD_LSR_TUNING[]); i++) PlayerTextDrawDestroy(playerid, PTD_LSR_TUNING[playerid][i]);
	return 1;
}

new monthdays[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
sumdays(days, &y, &m, &d)
{
	if(days > 20) return 1; 
	
	getdate(y, m, d);
	d += days;
	if(d > monthdays[m-1])
	{
		d = d-monthdays[m-1];
		m += 1;
		if(m > 12)
		{
			m = 1; 
			y += 1;
		}
	}
	return 1;
}


FuckPlayer(playerid, reason[], ban = 0, days = 0)
{
	PlayerTextDrawSetString(playerid, PTD_LSR_KICKED[playerid][1], "You have been expelled from the server.");
	new STR_message[145]; format(STR_message, 145, "REASON:_~r~%s", reason);
	PlayerTextDrawSetString(playerid, PTD_LSR_KICKED[playerid][2], STR_message);
	if(!ban)
	{
		PlayerTextDrawSetString(playerid, PTD_LSR_KICKED[playerid][3], "This is just a warning. You can play again whenever you want.");
		PI[playerid][P_TIMERS][4] = SetTimerEx("KickExPlayer", 500, false, "dd", playerid, false);
	}
	else 
	{
		if(!days)
		{
			//RemovePlayerHouses(playerid);
			PI[playerid][P_BANNED] = true;
			PlayerTextDrawSetString(playerid, PTD_LSR_KICKED[playerid][3], "Date on which you will be readmitted:_~r~_NUNCA");
			BlockIpAddress(PI[playerid][P_IP], 0);
			PI[playerid][P_TIMERS][4] = SetTimerEx("KickExPlayer", 500, false, "dd", playerid, true);
		}
		else
		{
			PI[playerid][P_TEMPBAN] = (gettime() + (86400*days));
			new year, month, day;
			sumdays(days, year, month, day); format(STR_message, 145, "Date on which you will be readmitted:_~g~_%02d/%02d/%d", day, month, year);
			PlayerTextDrawSetString(playerid, PTD_LSR_KICKED[playerid][3], STR_message);
			SendClientMessage(playerid, -1, "{"GREY"}Srs readmitted on the date indicated at the same time of expulsion, not from 00:00 hours.");
			PI[playerid][P_TIMERS][4] = SetTimerEx("KickExPlayer", 500, false, "dd", playerid, false);
		}
	}
	PlayerTextDrawShow(playerid, PTD_LSR_KICKED[playerid][0]);
	PlayerTextDrawShow(playerid, PTD_LSR_KICKED[playerid][1]);
	PlayerTextDrawShow(playerid, PTD_LSR_KICKED[playerid][2]);
	PlayerTextDrawShow(playerid, PTD_LSR_KICKED[playerid][3]);
	PlayerTextDrawShow(playerid, PTD_LSR_KICKED[playerid][4]);
	PlayerPlaySoundEx(playerid, 5203, 0.0, 0.0, 0.0);
	return 1;
}

forward KickExPlayer(playerid, ban);
public KickExPlayer(playerid, ban)
{
	if(ban)
	{
		new str[64]; format(str, 64, "banip %s", PI[playerid][P_IP]); SendRconCommand(str);
		Ban(playerid);
	}
	else Kick(playerid);
	return 1;
}

ShowPlayerMessage(playerid, time, message1[], message2[], message3[])
{
	KillTimer(PI[playerid][P_TIMERS][5]);
	PlayerTextDrawSetString(playerid, PTD_LSR_KICKED[playerid][1], message1);
	new STR_message[145]; format(STR_message, 145, "REASON:_~r~%s", message2);
	PlayerTextDrawSetString(playerid, PTD_LSR_KICKED[playerid][2], STR_message);		
	PlayerTextDrawSetString(playerid, PTD_LSR_KICKED[playerid][3], message3);
			
	PlayerTextDrawShow(playerid, PTD_LSR_KICKED[playerid][0]);
	PlayerTextDrawShow(playerid, PTD_LSR_KICKED[playerid][1]);
	PlayerTextDrawShow(playerid, PTD_LSR_KICKED[playerid][2]);
	PlayerTextDrawShow(playerid, PTD_LSR_KICKED[playerid][3]);
	PlayerTextDrawShow(playerid, PTD_LSR_KICKED[playerid][4]);
	PlayerPlaySoundEx(playerid, 5203, 0.0, 0.0, 0.0);
	
	PI[playerid][P_TIMERS][5] = SetTimerEx("HidePlayerMessage", time, false, "d", playerid);
	return 1;
}

forward HidePlayerMessage(playerid);
public HidePlayerMessage(playerid)
{
	PlayerTextDrawHide(playerid, PTD_LSR_KICKED[playerid][0]);
	PlayerTextDrawHide(playerid, PTD_LSR_KICKED[playerid][1]);
	PlayerTextDrawHide(playerid, PTD_LSR_KICKED[playerid][2]);
	PlayerTextDrawHide(playerid, PTD_LSR_KICKED[playerid][3]);
	PlayerTextDrawHide(playerid, PTD_LSR_KICKED[playerid][4]);
	return 1;
}

stock GetVehicleDriver(vehicleid)
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicleid)
		{
			return i;
		}
	}
	return -1;
}

LoadHouses()
{
	for(new x; x < sizeof(HI); x++)
	{
		for(new i; i < sizeof(HI[]); i++)
		{
			if(HI[x][H_VALID])
			{
				DestroyPickup(HI[x][H_PICKUP]);
				Delete3DTextLabel(HI[x][H_LABEL]);
			}
			HI[x][HINFO: i] = 0;
		}
	}
	HOUSES_LOADED = 0;
	HOUSES_SOLD = 0;
		
	new DBResult:Result;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM HOUSES");
	Result = db_query(Database, DB_Query);

	for(new i; i < db_num_rows(Result); i++ )
	{
		HI[HOUSES_LOADED][H_ID] = db_get_field_int(Result, 0);
		HI[HOUSES_LOADED][H_PRICE][0] = db_get_field_int(Result, 1);
		HI[HOUSES_LOADED][H_PRICE][1] = db_get_field_int(Result, 2);
		HI[HOUSES_LOADED][H_OWNERID] = db_get_field_int(Result, 3);
		db_get_field(Result, 4, HI[HOUSES_LOADED][H_OWNER], 24);
		HI[HOUSES_LOADED][H_SOLD] = db_get_field_int(Result, 5);
		HI[HOUSES_LOADED][H_extPos][0] = db_get_field_float(Result, 6); 
		HI[HOUSES_LOADED][H_extPos][1] = db_get_field_float(Result, 7);
		HI[HOUSES_LOADED][H_extPos][2] = db_get_field_float(Result, 8);
		HI[HOUSES_LOADED][H_extPos][3] = db_get_field_float(Result, 9);
		HI[HOUSES_LOADED][H_intPos][0] = db_get_field_float(Result, 10);
		HI[HOUSES_LOADED][H_intPos][1] = db_get_field_float(Result, 11);
		HI[HOUSES_LOADED][H_intPos][2] = db_get_field_float(Result, 12);
		HI[HOUSES_LOADED][H_intPos][3] = db_get_field_float(Result, 13);
		HI[HOUSES_LOADED][H_INTERIOR] = db_get_field_int(Result, 14);
		HI[HOUSES_LOADED][H_FREEZE] = db_get_field_int(Result, 15);
		HI[HOUSES_LOADED][H_WORLD] = db_get_field_int(Result, 16);
		HI[HOUSES_LOADED][H_VALID] = true;
	
		new Label_STR[145];
		if(HI[HOUSES_LOADED][H_SOLD])
		{
			HOUSES_SOLD += 1;
			HI[HOUSES_LOADED][H_PICKUP] = CreatePickup(1272, 1, HI[HOUSES_LOADED][H_extPos][0], HI[HOUSES_LOADED][H_extPos][1], HI[HOUSES_LOADED][H_extPos][2], FREEROAM_VW);
			format(Label_STR, 145, "{EAAA00}Property private\n{99A4AE}Hard: {C6D855}%s\n{99A4AE}Press {C6D855}~k~~VEHICLE_ENTER_EXIT~ {99A4AE}get in.", HI[HOUSES_LOADED][H_OWNER]);
			HI[HOUSES_LOADED][H_LABEL] = Create3DTextLabel(Label_STR, -1, HI[HOUSES_LOADED][H_extPos][0], HI[HOUSES_LOADED][H_extPos][1], HI[HOUSES_LOADED][H_extPos][2] + 0.1, 5.0, FREEROAM_VW, 0);
		}
		else
		{
			HI[HOUSES_LOADED][H_PICKUP] = CreatePickup(1273, 1, HI[HOUSES_LOADED][H_extPos][0], HI[HOUSES_LOADED][H_extPos][1], HI[HOUSES_LOADED][H_extPos][2], FREEROAM_VW);
			format(Label_STR, 145, "{2BCD03}Property for sale\n\n{99A4AE}Cost\n{"ORANGE"}%d$\n%d SCORE\n\n{99A4AE}use {"ORANGE"}/buyhouse {99A4AE}To share.", HI[HOUSES_LOADED][H_PRICE][0], HI[HOUSES_LOADED][H_PRICE][1]);
			HI[HOUSES_LOADED][H_LABEL] = Create3DTextLabel(Label_STR, -1, HI[HOUSES_LOADED][H_extPos][0], HI[HOUSES_LOADED][H_extPos][1], HI[HOUSES_LOADED][H_extPos][2] + 0.1, 5.0, FREEROAM_VW, 0);
		}

	
		HOUSES_LOADED += 1;
		db_next_row(Result);
	}
	db_free_result(Result);
	sendmessage();
	return 1;
}

stock CreateHouse(mprice, sprice, Float:eX, Float:eY, Float:eZ, Float:eA, Float:iX, Float:iY, Float:iZ, Float:iA, interiorid, freeze = 0, worldid = FREEROAM_VW)
{
	new str[64];
    format(DB_Query, sizeof(DB_Query), "");
	strcat(DB_Query, "INSERT INTO HOUSES (MPRICE, SPRICE, EXTX, EXTY, EXTZ, EXTA, INTX, INTY, INTZ, INTA, INTID, FREEZE, WORLD) VALUES ");
    format(str, 64, "('%d','%d',", mprice, sprice); strcat(DB_Query, str);
	format(str, 64, "'%f','%f','%f','%f',", eX, eY, eZ, eA); strcat(DB_Query, str);
	format(str, 64, "'%f','%f','%f','%f',", iX, iY, iZ, iA); strcat(DB_Query, str);
	format(str, 64, "'%d','%d','%d')", interiorid, freeze, worldid); strcat(DB_Query, str);
	print(DB_Query);
	db_query(Database, DB_Query);
	return 1;
}

UpdateHouse(id)
{
	if(!HI[id][H_VALID]) return 0;

	DestroyPickup(HI[id][H_PICKUP]);
	Delete3DTextLabel(HI[id][H_LABEL]);

	new str[64];
	format(DB_Query, sizeof(DB_Query), "");
	strcat(DB_Query, "UPDATE HOUSES SET ");
	format(str, 64, "OWNERID = '%d',", HI[id][H_OWNERID]); strcat(DB_Query, str);
	format(str, 64, "OWNER = '%s',", HI[id][H_OWNER]); strcat(DB_Query, str);
	format(str, 64, "SOLD = '%d'", HI[id][H_SOLD]); strcat(DB_Query, str);
	format(str, 64, " WHERE ID = '%d'", HI[id][H_ID]); strcat(DB_Query, str);
	db_query(Database, DB_Query);
	
	new Label_STR[256];
	if(HI[id][H_SOLD])
	{
		HI[id][H_PICKUP] = CreatePickup(1272, 1, HI[id][H_extPos][0], HI[id][H_extPos][1], HI[id][H_extPos][2], FREEROAM_VW);
		format(Label_STR, 256, "{EAAA00}Private property\n{99A4AE}Hard: {C6D855}%s\n{99A4AE}Press {C6D855}~k~~VEHICLE_ENTER_EXIT~ {99A4AE}get in.\n\n{22AD10}Liberation in {8CFF7D}%dd, 0h, 0m, 0s {22AD10}If the owner does not connect.", HI[id][H_OWNER], MAX_HOUSE_DAYS);
		HI[id][H_LABEL] = Create3DTextLabel(Label_STR, -1, HI[id][H_extPos][0], HI[id][H_extPos][1], HI[id][H_extPos][2] + 0.1, 5.0, FREEROAM_VW, 0);
	}
	else
	{
		HI[id][H_PICKUP] = CreatePickup(1273, 1, HI[id][H_extPos][0], HI[id][H_extPos][1], HI[id][H_extPos][2], FREEROAM_VW);
		format(Label_STR, 256, "{2BCD03}Property for sale\n\n{99A4AE}Cost\n{"ORANGE"}%d$\n%d SCORE\n\n{99A4AE}use {"ORANGE"}/buyhouse {99A4AE}To share.", HI[id][H_PRICE][0], HI[id][H_PRICE][1]);
		HI[id][H_LABEL] = Create3DTextLabel(Label_STR, -1, HI[id][H_extPos][0], HI[id][H_extPos][1], HI[id][H_extPos][2] + 0.1, 5.0, FREEROAM_VW, 0);
	}
	return 1;
}
 /*
RemovePlayerHouses(playerid)
{
	if(PI[playerid][P_HOUSES] > 0)
	{
		for(new i = 0; i != PI[playerid][P_HOUSES]; i++)
		{
			new index = GetPlayerHouseIndex(PI[playerid][P_ID]);
			if(index != -1)
			{
				format(HI[index][H_OWNER], 24, "");
				HI[index][H_OWNERID] = 0;
				HI[index][H_SOLD] = false;
				UpdateHouse(index);
			}
		}
		PI[playerid][P_HOUSES] = 0;
	}
	return 1;
}

GetPlayerHouseIndex(dbid)
{
	for(new i = 0; i != HOUSES_LOADED; i++)
	{
		if(HI[i][H_VALID] && HI[i][H_SOLD])
		{
			if(HI[i][H_OWNERID] == dbid) return i;
		}
	}
	return -1;
}
*/

GetHouseIndexFromID(id)
{
	for(new i = 0; i != HOUSES_LOADED; i++)
	{
		if(HI[i][H_VALID] && HI[i][H_SOLD])
		{
			if(HI[i][H_ID] == id) return i;
		}
	}
	return -1;
}

stock CreateHouses()
{
	/*CreateHouse(350000, 500, 2013.95, 650.41, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 48);
	CreateHouse(350000, 500, 2011.52, 695.18, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 50);
	CreateHouse(350000, 500, 2043.16, 651.31, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 51);
	CreateHouse(350000, 500, 2040.69, 696.09, 11.45, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 49);
	CreateHouse(350000, 500, 2065.68, 649.86, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 50);
	CreateHouse(350000, 500, 2068.91, 696.62, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 52);
	CreateHouse(350000, 500, 2094.18, 650.40, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 53);
	CreateHouse(350000, 500, 2091.30, 695.18, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 51);
	CreateHouse(350000, 500, 2123.15, 651.31, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 52);
	CreateHouse(350000, 500, 2120.60, 696.09, 11.45, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 54);
	CreateHouse(350000, 500, 2013.92, 775.19, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 55);
	CreateHouse(350000, 500, 2013.24, 730.36, 11.45, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 56);
	CreateHouse(350000, 500, 2042.44, 731.27, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 53);
	CreateHouse(350000, 500, 2043.25, 776.10, 11.45, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 54);
	CreateHouse(350000, 500, 2065.16, 729.82, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 57);
	CreateHouse(350000, 500, 2071.56, 776.63, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 58);
	CreateHouse(350000, 500, 2093.24, 730.35, 11.45, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 55);
	CreateHouse(350000, 500, 2094.23, 775.14, 11.45, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 56);
	CreateHouse(350000, 500, 2122.47, 731.26, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 59);
	CreateHouse(350000, 500, 2123.21, 776.10, 11.44, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 60);
	CreateHouse(350000, 500, 2177.99, 655.98, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 57);
	CreateHouse(350000, 500, 2206.49, 656.62, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 61);
	CreateHouse(350000, 500, 2228.78, 655.18, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 58);
	CreateHouse(350000, 500, 2258.15, 655.97, 11.45, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 62);
	CreateHouse(350000, 500, 2177.19, 690.35, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 59);
	CreateHouse(350000, 500, 2177.56, 736.10, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 60);
	CreateHouse(350000, 500, 2206.37, 691.25, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 63);
	CreateHouse(350000, 500, 2205.82, 736.63, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 64);
	CreateHouse(350000, 500, 2228.59, 689.81, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 61);
	CreateHouse(350000, 500, 2228.34, 735.19, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 62);
	CreateHouse(350000, 500, 2256.95, 690.34, 11.45, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 65);
	CreateHouse(350000, 500, 2257.55, 736.11, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 66);
	CreateHouse(350000, 500, 2317.94, 656.10, 11.45, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 63);
	CreateHouse(350000, 500, 2346.13, 656.63, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 67);
	CreateHouse(350000, 500, 2368.41, 655.21, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 64);
	CreateHouse(350000, 500, 2397.66, 656.11, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 68);
	CreateHouse(350000, 500, 2317.06, 690.35, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 69);
	CreateHouse(350000, 500, 2346.17, 691.25, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 65);
	CreateHouse(350000, 500, 2368.57, 689.80, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 70);
	CreateHouse(350000, 500, 2396.68, 690.34, 11.45, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 66);
	CreateHouse(350000, 500, 2346.52, 736.62, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 67);
	CreateHouse(350000, 500, 2369.11, 735.18, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 68);
	CreateHouse(350000, 500, 2398.30, 736.09, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 71);
	CreateHouse(350000, 500, 2450.27, 742.70, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 69);
	CreateHouse(350000, 500, 2450.80, 714.29, 11.46, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 70);
	CreateHouse(350000, 500, 2449.22, 689.60, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 72);
	CreateHouse(350000, 500, 2450.27, 662.53, 11.46, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 73);
	CreateHouse(600000, 500, 2056.51, 2665.18, 10.82, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 17);
	CreateHouse(600000, 500, 2037.24, 2664.50, 10.82, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 20);
	CreateHouse(600000, 500, 2017.99, 2664.66, 11.29, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 18);
	CreateHouse(600000, 500, 1989.16, 2665.19, 10.82, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 21);
	CreateHouse(600000, 500, 1969.63, 2664.50, 10.82, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 19);
	CreateHouse(600000, 500, 1950.59, 2664.66, 11.29, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 22);
	CreateHouse(600000, 500, 1921.78, 2665.19, 10.82, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 20);
	CreateHouse(600000, 500, 1931.32, 2721.25, 10.82, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 23);
	CreateHouse(600000, 500, 1950.68, 2721.94, 10.82, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 21);
	CreateHouse(600000, 500, 1969.85, 2721.77, 11.29, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 22);
	CreateHouse(600000, 500, 1998.55, 2721.26, 10.82, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 24);
	CreateHouse(600000, 500, 2018.15, 2721.94, 10.82, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 23);
	CreateHouse(600000, 500, 2066.13, 2721.26, 10.82, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 25);
	CreateHouse(850000, 500, 1929.85, 2774.25, 10.82, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 37);
	CreateHouse(850000, 500, 1967.49, 2766.54, 10.82, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 38);
	CreateHouse(850000, 500, 1992.57, 2764.62, 10.82, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 39);
	CreateHouse(850000, 500, 2018.66, 2766.54, 10.82, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 40);
	CreateHouse(850000, 500, 2039.44, 2766.54, 10.82, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 41);
	CreateHouse(850000, 500, 2049.67, 2764.28, 10.82, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 42);
	
	//ASD
	CreateHouse(250000, 500, 2514.36, -1691.54, 14.04, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 0);
	CreateHouse(350000, 500, 2523.26, -1679.22, 15.49, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 0);
	CreateHouse(250000, 500, 2524.70, -1658.68, 15.82, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 1);
	CreateHouse(250000, 500, 2513.58, -1650.11, 14.35, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 2);
	CreateHouse(250000, 500, 2498.58, -1642.25, 14.11, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 3);
	CreateHouse(550000, 500, 2486.52, -1644.53, 14.07, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 0);
	CreateHouse(350000, 500, 2469.58, -1646.34, 13.78, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 1);
	CreateHouse(250000, 500, 2452.06, -1641.41, 14.06, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 4);
	CreateHouse(350000, 500, 2459.30, -1691.65, 13.54, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 2);
	CreateHouse(350000, 500, 2413.84, -1646.78, 14.01, 0.00, 2466.91, -1698.28, 1013.50, 0.00, 2, false, 0);
	CreateHouse(250000, 500, 2408.96, -1674.14, 13.60, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 5);
	CreateHouse(350000, 500, 2393.26, -1646.03, 13.90, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 0);
	CreateHouse(250000, 500, 2384.60, -1675.83, 15.24, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 6);
	CreateHouse(250000, 500, 2362.95, -1644.01, 13.53, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 7);
	CreateHouse(350000, 500, 2368.34, -1675.34, 14.16, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 3);
	CreateHouse(350000, 500, 2091.68, -1184.29, 27.05, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 1);
	CreateHouse(550000, 500, 2092.24, -1166.55, 26.58, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 1);
	CreateHouse(550000, 500, 2095.36, -1145.26, 26.59, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 2);
	CreateHouse(250000, 500, 2094.13, -1122.67, 27.68, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 8);
	CreateHouse(350000, 500, 2045.38, -1116.64, 26.36, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 2);
	CreateHouse(650000, 500, 2023.05, -1120.26, 26.42, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 0);
	CreateHouse(650000, 500, 2000.14, -1114.05, 27.12, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 1);
	CreateHouse(250000, 500, 1955.12, -1115.39, 27.83, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 9);
	CreateHouse(550000, 500, 1939.11, -1114.48, 27.45, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 3);
	CreateHouse(250000, 500, 1921.30, -1115.14, 27.08, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 10);
	CreateHouse(550000, 500, 1906.04, -1112.94, 26.66, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 4);
	CreateHouse(350000, 500, 1885.88, -1113.53, 26.27, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 3);
	CreateHouse(350000, 500, 1667.45, -2106.94, 14.07, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 4);
	CreateHouse(350000, 500, 1673.59, -2122.37, 14.14, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 4);
	CreateHouse(350000, 500, 1684.79, -2098.15, 13.83, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 5);
	CreateHouse(250000, 500, 1711.66, -2101.23, 14.02, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 11);
	CreateHouse(350000, 500, 1715.17, -2125.45, 14.05, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 5);
	CreateHouse(250000, 500, 1734.12, -2097.98, 14.03, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 12);
	CreateHouse(250000, 500, 1734.60, -2130.35, 14.02, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 13);
	CreateHouse(350000, 500, 1762.42, -2101.98, 13.85, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 6);
	CreateHouse(350000, 500, 1761.07, -2125.45, 14.05, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 7);
	CreateHouse(350000, 500, 1781.52, -2101.26, 14.05, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 8);
	CreateHouse(250000, 500, 1781.96, -2126.50, 14.06, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 13);
	CreateHouse(250000, 500, 1801.90, -2098.93, 14.02, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 14);
	CreateHouse(350000, 500, 1804.27, -2124.89, 13.94, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 7);
	CreateHouse(350000, 500, 1851.78, -2070.45, 15.48, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 8);
	CreateHouse(350000, 500, 1873.50, -2070.75, 15.49, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 9);
	CreateHouse(350000, 500, 1895.42, -2068.91, 15.66, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 9);
	CreateHouse(350000, 500, 2433.60, -1274.81, 24.75, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 10);
	CreateHouse(350000, 500, 2469.17, -1278.46, 30.36, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 10);
	CreateHouse(450000, 500, 2470.37, -1295.37, 30.23, 0.00, 2466.91, -1698.28, 1013.50, 0.00, 2, false, 1);
	CreateHouse(350000, 500, 2434.80, -1289.29, 25.34, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 11);
	CreateHouse(550000, 500, 2433.93, -1303.38, 25.32, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 5);
	CreateHouse(550000, 500, 2433.93, -1320.63, 25.32, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 6);
	CreateHouse(650000, 500, 2439.59, -1338.70, 24.10, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 2);
	CreateHouse(650000, 500, 2439.59, -1357.22, 24.10, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 3);
	CreateHouse(350000, 500, 2472.87, -1238.12, 32.56, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 12);
	CreateHouse(350000, 500, 2492.16, -1239.01, 37.90, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 11);
	CreateHouse(650000, 500, 2514.57, -1240.45, 39.34, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 4);
	CreateHouse(450000, 500, 2529.63, -1243.31, 43.97, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 7);
	CreateHouse(250000, 500, 2551.02, -1233.79, 49.33, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 15);
	CreateHouse(250000, 500, 2263.82, -1469.33, 24.37, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 16);
	CreateHouse(250000, 500, 2247.69, -1469.33, 24.48, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 17);
	CreateHouse(250000, 500, 2232.62, -1469.33, 24.58, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 18);
	CreateHouse(250000, 500, 2230.55, -1397.24, 24.57, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 19);
	CreateHouse(250000, 500, 2243.39, -1397.24, 24.57, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 20);
	CreateHouse(250000, 500, 2256.60, -1397.24, 24.57, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 21);
	CreateHouse(350000, 500, 2196.22, -1404.14, 25.94, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 13);
	CreateHouse(250000, 500, 2188.54, -1419.20, 26.15, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 22);
	CreateHouse(350000, 500, 2194.35, -1442.84, 26.07, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 12);
	CreateHouse(250000, 500, 2191.11, -1455.76, 26.00, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 23);
	CreateHouse(250000, 500, 2190.44, -1470.36, 25.91, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 24);
	CreateHouse(350000, 500, 2190.32, -1487.70, 26.10, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 14);
	CreateHouse(650000, 500, -2477.88, 1338.20, 8.50, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 5);
	CreateHouse(650000, 500, -2433.07, 1337.99, 8.50, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 6);
	CreateHouse(450000, 500, -2433.75, 1318.45, 13.86, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 8);
	CreateHouse(450000, 500, -2477.20, 1318.61, 13.85, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 9);
	CreateHouse(450000, 500, -2476.94, 1311.45, 15.41, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 10);
	CreateHouse(450000, 500, -2434.02, 1311.19, 15.41, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 11);
	CreateHouse(650000, 500, -2433.05, 1301.18, 18.38, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 7);
	CreateHouse(650000, 500, -2477.90, 1301.19, 18.37, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 8);
	CreateHouse(550000, 500, -2433.73, 1281.56, 23.74, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 12);
	CreateHouse(550000, 500, -2433.99, 1273.84, 25.31, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 13);
	CreateHouse(550000, 500, -2477.22, 1281.57, 23.72, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 14);
	CreateHouse(550000, 500, -2476.96, 1274.17, 25.30, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 15);
	CreateHouse(650000, 500, -2433.03, 1264.21, 28.25, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 9);
	CreateHouse(650000, 500, -2477.92, 1264.05, 28.25, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 10);
	CreateHouse(450000, 500, -2433.70, 1244.40, 33.61, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 16);
	CreateHouse(450000, 500, -2477.24, 1244.63, 33.60, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 17);
	CreateHouse(850000, 500, -2724.67, -191.20, 4.33, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 11);
	CreateHouse(550000, 500, -2686.81, -188.20, 7.20, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 18);
	CreateHouse(550000, 500, -2687.88, -175.17, 4.34, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 19);
	CreateHouse(650000, 500, -2723.14, -179.07, 7.20, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 0);
	CreateHouse(450000, 500, -2723.32, -166.42, 5.00, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 20);
	CreateHouse(850000, 500, -2689.48, -167.29, 7.20, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 1);
	CreateHouse(550000, 500, -2690.52, -159.96, 4.75, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 21);
	CreateHouse(450000, 500, -2724.24, -162.65, 4.34, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 22);
	CreateHouse(450000, 500, -2721.78, -146.70, 4.33, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 23);
	CreateHouse(550000, 500, -2689.23, -152.76, 5.00, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 24);
	CreateHouse(950000, 500, -2689.53, -141.28, 7.20, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 2);
	CreateHouse(850000, 500, -2723.21, -139.39, 7.20, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 3);
	CreateHouse(450000, 500, -2690.79, -134.12, 4.33, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 26);
	CreateHouse(550000, 500, -2723.33, -127.87, 5.00, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 25);
	CreateHouse(550000, 500, -2722.07, -120.75, 4.77, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 27);
	CreateHouse(450000, 500, -2687.89, -118.05, 4.34, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 28);
	CreateHouse(450000, 500, -2689.24, -114.44, 5.00, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 29);
	CreateHouse(950000, 500, -2689.51, -101.60, 7.20, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 4);
	CreateHouse(850000, 500, -2723.04, -113.38, 7.20, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 5);
	CreateHouse(550000, 500, -2724.67, -105.47, 4.34, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 30);
	CreateHouse(750000, 500, -2725.75, -92.46, 7.20, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 12);
	CreateHouse(750000, 500, -2687.90, -89.48, 4.33, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 13);
	CreateHouse(550000, 500, -2623.42, -99.30, 7.20, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 31);
	CreateHouse(450000, 500, -2622.36, -112.34, 4.34, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 32);
	CreateHouse(850000, 500, -2620.75, -120.21, 7.20, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 6);
	CreateHouse(550000, 500, -2619.75, -127.64, 4.77, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 33);
	CreateHouse(550000, 500, -2621.01, -134.78, 5.00, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 34);
	CreateHouse(750000, 500, -2620.92, -146.21, 7.20, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 7);
	CreateHouse(450000, 500, -2619.45, -153.49, 4.33, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 35);
	CreateHouse(450000, 500, -2622.36, -169.44, 4.34, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 36);
	CreateHouse(550000, 500, -2621.00, -173.15, 5.00, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 37);
	CreateHouse(750000, 500, -2620.85, -185.89, 7.20, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 8);
	CreateHouse(1000000, 500, -2622.35, -197.96, 4.33, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 14);
	CreateHouse(800000, 500, -2720.86, 923.81, 67.59, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 9);
	CreateHouse(900000, 500, -2665.04, 916.76, 79.67, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 15);
	CreateHouse(900000, 500, -2641.01, 935.71, 71.95, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 16);
	CreateHouse(900000, 500, -2655.32, 985.78, 64.99, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 17);
	CreateHouse(300000, 500, -2737.55, 866.20, 64.63, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 38);
	CreateHouse(900000, 500, -2736.87, 846.46, 59.27, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 18);
	CreateHouse(400000, 500, -2737.84, 836.87, 56.25, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 39);
	CreateHouse(300000, 500, -2737.25, 822.99, 53.73, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 40);
	CreateHouse(300000, 500, -2726.85, 822.99, 53.73, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 41);
	CreateHouse(300000, 500, -2717.90, 824.23, 51.37, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 42);
	CreateHouse(900000, 500, -2711.98, 865.55, 70.70, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 19);
	CreateHouse(700000, 500, -2662.12, 876.33, 79.77, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 9);
	CreateHouse(350000, 500, -2634.90, 239.62, 4.56, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 17);
	CreateHouse(650000, 500, -2630.92, 252.74, 7.18, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 10);
	CreateHouse(450000, 500, -2634.61, 261.12, 4.75, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 43);
	CreateHouse(450000, 500, -2632.00, 274.47, 4.33, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 44);
	CreateHouse(450000, 500, -2654.08, 200.24, 5.00, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 45);
	CreateHouse(750000, 500, -2660.73, 200.43, 7.19, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 11);
	CreateHouse(350000, 500, -2672.25, 200.23, 5.00, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 46);
	CreateHouse(850000, 500, -2678.15, 200.31, 7.19, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 12);
	CreateHouse(850000, 500, -2689.28, 197.82, 7.20, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 13);
	CreateHouse(850000, 500, 1421.60, -886.22, 50.68, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 14);
	CreateHouse(850000, 500, 1468.60, -906.18, 54.83, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 15);
	CreateHouse(350000, 500, 1535.66, -885.19, 57.65, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 13);
	CreateHouse(450000, 500, 1540.46, -851.52, 64.33, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 47);
	CreateHouse(350000, 500, 1535.03, -800.19, 72.84, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 15);
	CreateHouse(350000, 500, 1527.83, -772.60, 80.57, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 16);
	CreateHouse(2000000, 500, 1496.95, -687.89, 95.56, 0.00, 1298.97, -795.96, 1084.00, 0.00, 5, false, 0);
	CreateHouse(600000, 500, 1442.66, -628.83, 95.71, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 0);
	CreateHouse(600000, 500, 1332.06, -633.51, 109.13, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 1);
	CreateHouse(5000000, 500, 1298.62, -797.98, 84.14, 0.00, 1298.97, -795.96, 1084.00, 0.00, 5, false, 1);
	CreateHouse(1000000, 500, 1093.90, -807.13, 107.41, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 2);
	CreateHouse(550000, 500, 1034.81, -813.17, 101.85, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 3);
	CreateHouse(550000, 500, 1016.89, -763.36, 112.56, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 18);
	CreateHouse(550000, 500, 989.89, -828.60, 95.46, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 4);
	CreateHouse(550000, 500, 977.30, -771.71, 112.20, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 19);
	CreateHouse(550000, 500, 937.88, -848.70, 93.57, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 5);
	CreateHouse(450000, 500, 923.90, -853.40, 93.45, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 6);
	CreateHouse(450000, 500, 910.29, -817.60, 103.12, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 20);
	CreateHouse(850000, 500, 858.74, -845.04, 77.38, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 20);
	CreateHouse(550000, 500, 827.88, -857.96, 70.33, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 7);
	CreateHouse(950000, 500, 835.96, -894.85, 68.76, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 21);
	CreateHouse(450000, 500, 785.94, -828.58, 70.28, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 21);
	CreateHouse(550000, 500, 785.96, -760.01, 73.56, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 22);
	CreateHouse(550000, 500, 848.00, -745.51, 94.96, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 23);
	CreateHouse(850000, 500, 878.27, -725.66, 106.44, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 16);
	CreateHouse(950000, 500, 891.16, -783.16, 101.31, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 16);
	CreateHouse(7000000, 500, 980.45, -677.27, 121.97, 0.00, 1298.97, -795.96, 1084.00, 0.00, 5, false, 2);
	CreateHouse(800000, 500, 1045.09, -642.94, 120.11, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 22);
	CreateHouse(800000, 500, 1095.21, -647.91, 113.64, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 23);
	CreateHouse(550000, 500, 1112.64, -742.01, 100.13, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 24);
	CreateHouse(750000, 500, 724.82, -999.44, 52.73, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 18);
	CreateHouse(450000, 500, 673.22, -1019.98, 55.75, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 8);
	CreateHouse(650000, 500, 700.18, -1060.45, 49.42, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 9);
	CreateHouse(550000, 500, 648.41, -1058.59, 52.57, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 10);
	CreateHouse(950000, 500, 612.10, -1085.96, 58.82, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 24);
	CreateHouse(650000, 500, 645.99, -1117.41, 44.20, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 11);
	CreateHouse(850000, 500, 559.05, -1076.44, 72.92, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 25);
	CreateHouse(950000, 500, 567.41, -1129.59, 50.68, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 26);
	CreateHouse(450000, 500, 558.71, -1161.11, 54.42, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 12);
	CreateHouse(850000, 500, 497.41, -1095.07, 82.35, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 26);
	CreateHouse(850000, 500, 470.87, -1163.53, 67.21, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 27);
	CreateHouse(550000, 500, 416.71, -1154.08, 76.68, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 25);
	CreateHouse(5000000, 500, 300.28, -1154.50, 81.38, 0.00, 1298.97, -795.96, 1084.00, 0.00, 5, false, 3);
	CreateHouse(650000, 500, 352.31, -1198.01, 76.51, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 13);
	CreateHouse(850000, 500, 251.59, -1220.10, 76.10, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 28);
	CreateHouse(3000000, 500, 253.14, -1270.04, 74.42, 0.00, 1298.97, -795.96, 1084.00, 0.00, 5, false, 4);
	CreateHouse(950000, 500, 219.07, -1249.91, 78.33, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 29);
	CreateHouse(8000000, 500, 189.63, -1307.95, 70.24, 0.00, 1298.97, -795.96, 1084.00, 0.00, 5, false, 5);
	CreateHouse(450000, 500, 142.57, -1470.32, 25.21, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 26);
	CreateHouse(850000, 500, 227.92, -1405.41, 51.60, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 30);
	CreateHouse(950000, 500, 254.41, -1367.16, 53.10, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 31);
	CreateHouse(950000, 500, 298.85, -1338.49, 53.44, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 32);
	CreateHouse(450000, 500, 354.98, -1281.23, 53.70, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 27);
	CreateHouse(750000, 500, 398.02, -1271.41, 50.01, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 14);
	CreateHouse(750000, 500, 432.10, -1253.94, 51.58, 0.00, 2365.35, -1134.28, 1050.87, 0.00, 8, false, 15);
	CreateHouse(850000, 500, 552.84, -1200.31, 44.83, 0.00, 2269.45, -1210.45, 1047.56, 0.00, 10, false, 19);
	CreateHouse(450000, 500, 2522.77, -2018.97, 14.07, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 18);
	CreateHouse(450000, 500, 2524.41, -1998.38, 14.11, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 14);
	CreateHouse(450000, 500, 2508.29, -1998.37, 13.90, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 15);
	CreateHouse(350000, 500, 2483.25, -1995.34, 13.83, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 16);
	CreateHouse(350000, 500, 2507.90, -2021.04, 14.21, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 19);
	CreateHouse(450000, 500, 2486.46, -2021.54, 13.99, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 20);
	CreateHouse(350000, 500, 2465.21, -2020.79, 14.12, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 17);
	CreateHouse(350000, 500, 2464.96, -1995.75, 14.01, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 21);
	CreateHouse(450000, 500, 2437.94, -2020.84, 13.90, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 22);
	CreateHouse(450000, 500, 2650.69, -2021.88, 14.17, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 23);
	CreateHouse(350000, 500, 2652.99, -1989.42, 13.99, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 24);
	CreateHouse(450000, 500, 2696.31, -1990.35, 14.22, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 25);
	CreateHouse(450000, 500, 2695.32, -2020.55, 14.02, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 18);
	CreateHouse(350000, 500, 2673.31, -2020.28, 14.16, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 19);
	CreateHouse(250000, 500, 2635.51, -2012.77, 14.14, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 45);
	CreateHouse(250000, 500, 2672.74, -1989.47, 14.32, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 47);
	CreateHouse(450000, 500, 2847.02, -1309.83, 14.68, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 28);
	CreateHouse(450000, 500, 2842.14, -1334.78, 14.74, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 29);
	CreateHouse(850000, 500, 2807.92, -1190.88, 25.34, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 19);
	CreateHouse(850000, 500, 2808.25, -1175.91, 25.37, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 20);
	CreateHouse(250000, 500, 2583.07, -952.99, 81.38, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 48);
	CreateHouse(250000, 500, 2581.51, -969.33, 81.36, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 49);
	CreateHouse(250000, 500, 2552.01, -958.19, 82.62, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 50);
	CreateHouse(350000, 500, 2531.16, -965.35, 82.32, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 20);
	CreateHouse(250000, 500, 2517.86, -965.49, 82.32, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 51);
	CreateHouse(250000, 500, 2492.09, -965.88, 82.54, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 52);
	CreateHouse(250000, 500, 2499.70, -947.00, 82.47, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 53);
	CreateHouse(250000, 500, 2472.34, -962.04, 80.52, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 54);
	CreateHouse(250000, 500, 2454.42, -964.98, 80.07, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 55);
	CreateHouse(350000, 500, 2459.49, -947.70, 80.08, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 26);
	CreateHouse(450000, 500, 2628.09, -1067.86, 69.71, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 30);
	CreateHouse(450000, 500, 2627.64, -1085.25, 69.71, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 31);
	CreateHouse(450000, 500, 2625.93, -1098.57, 69.37, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 32);
	CreateHouse(450000, 500, 2625.94, -1112.70, 67.99, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 33);
	CreateHouse(350000, 500, 2576.68, -1070.64, 69.83, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 37);
	CreateHouse(350000, 500, 2572.18, -1091.96, 67.22, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 38);
	CreateHouse(350000, 500, 2579.74, -1033.20, 69.57, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 21);
	CreateHouse(250000, 500, 2562.10, -1034.53, 69.86, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 55);
	CreateHouse(250000, 500, 2549.19, -1032.04, 69.57, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 56);
	CreateHouse(250000, 500, 2534.48, -1063.43, 69.56, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 57);
	CreateHouse(250000, 500, 2526.08, -1060.39, 69.97, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 58);
	CreateHouse(250000, 500, 2526.77, -1033.52, 69.57, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 59);
	CreateHouse(250000, 500, 2499.74, -1065.63, 70.23, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 60);
	CreateHouse(250000, 500, 2479.64, -1064.09, 66.99, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 61);
	CreateHouse(250000, 500, 2491.40, -1012.20, 65.39, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 62);
	CreateHouse(350000, 500, 2512.95, -1027.17, 70.08, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 22);
	CreateHouse(250000, 500, 2462.24, -1011.10, 60.11, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 63);
	CreateHouse(250000, 500, 2457.76, -1054.56, 59.95, 0.00, 235.39, 1187.69, 1080.25, 0.00, 1, false, 64);
	CreateHouse(250000, 500, 2439.87, -1010.77, 54.34, 0.00, 235.39, 1187.69, 1080.25, 0.00, 1, false, 65);
	CreateHouse(250000, 500, 2440.66, -1057.33, 54.73, 0.00, 235.39, 1187.69, 1080.25, 0.00, 1, false, 66);
	CreateHouse(250000, 500, 2389.38, -1036.92, 53.54, 0.00, 235.39, 1187.69, 1080.25, 0.00, 1, false, 67);
	CreateHouse(250000, 500, 2370.41, -1034.55, 54.41, 0.00, 235.39, 1187.69, 1080.25, 0.00, 1, false, 68);
	CreateHouse(250000, 500, 2362.66, -1046.42, 54.27, 0.00, 235.39, 1187.69, 1080.25, 0.00, 1, false, 69);
	CreateHouse(250000, 500, 2355.53, -1038.58, 54.33, 0.00, 235.39, 1187.69, 1080.25, 0.00, 1, false, 70);
	CreateHouse(250000, 500, 2335.00, -1046.01, 52.55, 0.00, 235.39, 1187.69, 1080.25, 0.00, 1, false, 71);
	CreateHouse(250000, 500, 2297.62, -1053.03, 49.93, 0.00, 235.39, 1187.69, 1080.25, 0.00, 1, false, 72);
	CreateHouse(250000, 500, 2284.26, -1046.13, 49.88, 0.00, 235.39, 1187.69, 1080.25, 0.00, 1, false, 73);
	CreateHouse(450000, 500, 2259.68, -1018.81, 59.29, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 33);
	CreateHouse(350000, 500, 2218.70, -1031.67, 60.26, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 23);
	CreateHouse(350000, 500, 2207.87, -1026.48, 61.34, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 29);
	CreateHouse(350000, 500, 2139.62, -1008.38, 61.98, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 30);
	CreateHouse(250000, 500, 2154.13, -979.81, 63.29, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 74);
	CreateHouse(250000, 500, 2142.71, -978.05, 61.37, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 75);
	CreateHouse(250000, 500, 2131.91, -974.11, 59.78, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 76);
	CreateHouse(250000, 500, 2122.08, -970.20, 58.20, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 77);
	CreateHouse(450000, 500, 2089.47, -996.23, 53.06, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 34);
	CreateHouse(350000, 500, 2090.34, -972.53, 51.81, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 31);
	CreateHouse(450000, 500, 2073.86, -965.26, 49.39, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 35);
	CreateHouse(350000, 500, 2065.99, -993.15, 48.79, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 24);
	CreateHouse(350000, 500, 2049.35, -987.27, 44.97, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 25);
	CreateHouse(250000, 500, 2044.58, -991.33, 43.20, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 78);
	CreateHouse(350000, 500, 2045.18, -965.99, 44.55, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 32);
	CreateHouse(350000, 500, 2015.79, -977.44, 36.95, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 33);
	CreateHouse(250000, 500, 2007.50, -984.44, 34.46, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 79);
	CreateHouse(250000, 500, 2000.30, -991.54, 32.13, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 80);
	CreateHouse(9000000, 500, 1122.71, -2037.03, 69.89, 0.00, 1298.97, -795.96, 1084.00, 0.00, 5, false, 6);
	CreateHouse(250000, 500, 305.33, -1749.51, 4.54, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 81);
	CreateHouse(550000, 500, 315.76, -1769.43, 4.62, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 36);
	CreateHouse(250000, 500, 295.34, -1764.12, 4.86, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 82);
	CreateHouse(650000, 500, 281.00, -1767.06, 4.54, 0.00, 2466.91, -1698.28, 1013.50, 0.00, 2, false, 3);
	CreateHouse(350000, 500, 207.05, -1769.00, 4.37, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 37);
	CreateHouse(250000, 500, 192.87, -1769.39, 4.32, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 83);
	CreateHouse(650000, 500, 192.62, -1747.75, 4.30, 0.00, 295.28, 1473.01, 1080.25, 0.00, 15, false, 0);
	CreateHouse(450000, 500, 653.59, -1714.19, 14.76, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 38);
	CreateHouse(450000, 500, 652.66, -1694.09, 14.55, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 39);
	CreateHouse(750000, 500, 694.77, -1690.73, 4.34, 0.00, 295.28, 1473.01, 1080.25, 0.00, 15, false, 1);
	CreateHouse(450000, 500, 693.54, -1705.67, 3.81, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 40);
	CreateHouse(450000, 500, 693.76, -1645.78, 4.09, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 41);
	CreateHouse(450000, 500, 697.28, -1626.96, 3.74, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 42);
	CreateHouse(450000, 500, 692.85, -1602.77, 15.04, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 43);
	CreateHouse(450000, 500, 657.22, -1652.69, 15.40, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 44);
	CreateHouse(650000, 500, 655.84, -1635.86, 15.86, 0.00, 295.28, 1473.01, 1080.25, 0.00, 15, false, 2);
	CreateHouse(550000, 500, 653.19, -1619.87, 15.00, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 45);
	CreateHouse(550000, 500, 660.55, -1599.85, 15.00, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 46);
	CreateHouse(550000, 500, 769.22, -1745.87, 13.07, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 47);
	CreateHouse(750000, 500, 769.18, -1726.23, 13.43, 0.00, 295.28, 1473.01, 1080.25, 0.00, 15, false, 3);
	CreateHouse(450000, 500, 769.22, -1696.68, 5.15, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 48);
	CreateHouse(550000, 500, 768.07, -1655.99, 5.60, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 49);
	CreateHouse(450000, 500, 766.92, -1605.91, 13.80, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 50);
	CreateHouse(450000, 500, 790.99, -1661.14, 13.48, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 51);
	CreateHouse(650000, 500, 794.96, -1692.09, 14.46, 0.00, 295.28, 1473.01, 1080.25, 0.00, 15, false, 4);
	CreateHouse(550000, 500, 793.97, -1707.34, 14.03, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 52);
	CreateHouse(550000, 500, 797.23, -1729.20, 13.54, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 53);
	CreateHouse(550000, 500, 791.46, -1753.20, 13.46, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 54);
	CreateHouse(350000, 500, 2385.37, -1711.65, 14.24, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 34);
	CreateHouse(250000, 500, 2326.69, -1716.70, 14.23, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 84);
	CreateHouse(250000, 500, 2309.01, -1714.33, 14.98, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 85);
	CreateHouse(350000, 500, 2326.88, -1681.84, 14.92, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 26);
	CreateHouse(250000, 500, 2307.07, -1679.19, 14.33, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 86);
	CreateHouse(250000, 500, 2282.28, -1641.21, 15.88, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 87);
	CreateHouse(250000, 500, 2257.17, -1643.95, 15.80, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 88);
	CreateHouse(250000, 500, 2244.59, -1637.66, 16.23, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 89);
	CreateHouse(250000, 500, 2067.05, -1731.36, 14.20, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 90);
	CreateHouse(250000, 500, 2066.25, -1717.15, 14.13, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 91);
	CreateHouse(250000, 500, 2065.10, -1703.52, 14.14, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 36);
	CreateHouse(250000, 500, 2067.56, -1643.76, 14.13, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 93);
	CreateHouse(250000, 500, 2066.87, -1656.54, 14.13, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 92);
	CreateHouse(350000, 500, 2067.69, -1628.95, 14.20, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 27);
	CreateHouse(250000, 500, 2018.05, -1629.94, 14.04, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 94);
	CreateHouse(350000, 500, 2016.53, -1641.52, 14.11, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 37);
	CreateHouse(250000, 500, 2013.57, -1656.42, 14.13, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 95);
	CreateHouse(350000, 500, 2018.24, -1703.44, 14.23, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 28);
	CreateHouse(250000, 500, 2016.20, -1717.06, 14.12, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 96);
	CreateHouse(350000, 500, 2015.34, -1732.53, 14.23, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 29);
	CreateHouse(750000, 500, 2148.93, -1484.91, 26.62, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 34);
	CreateHouse(250000, 500, 2146.79, -1470.57, 26.04, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 97);
	CreateHouse(350000, 500, 2152.21, -1446.50, 26.10, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 38);
	CreateHouse(250000, 500, 2149.84, -1433.72, 26.07, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 98);
	CreateHouse(250000, 500, 2150.92, -1419.08, 25.92, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 99);
	CreateHouse(350000, 500, 2151.18, -1400.60, 26.12, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 30);
	CreateHouse(250000, 500, 2202.71, -1363.67, 26.19, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 100);
	CreateHouse(350000, 500, 2185.13, -1363.70, 26.15, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 39);
	CreateHouse(250000, 500, 2129.68, -1361.68, 26.13, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 101);
	CreateHouse(350000, 500, 2147.60, -1366.12, 25.97, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 31);
	CreateHouse(350000, 500, 2100.85, -1321.87, 25.95, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 40);
	CreateHouse(750000, 500, 2126.56, -1320.85, 26.62, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 35);
	CreateHouse(350000, 500, 2148.55, -1320.08, 26.07, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 32);
	CreateHouse(350000, 500, 2090.99, -1277.83, 26.17, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 33);
	CreateHouse(250000, 500, 2111.34, -1278.97, 25.83, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 102);
	CreateHouse(350000, 500, 2132.26, -1280.04, 25.89, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 34);
	CreateHouse(350000, 500, 2150.18, -1285.04, 24.52, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 35);
	CreateHouse(350000, 500, 2191.47, -1275.60, 25.15, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 36);
	CreateHouse(250000, 500, 2207.92, -1280.82, 25.12, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 103);
	CreateHouse(250000, 500, 2230.02, -1280.06, 25.62, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 104);
	CreateHouse(350000, 500, 2250.30, -1280.04, 25.47, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 41);
	CreateHouse(350000, 500, 2090.74, -1235.17, 26.01, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 42);
	CreateHouse(350000, 500, 2110.96, -1244.39, 25.85, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 37);
	CreateHouse(350000, 500, 2133.31, -1232.99, 24.42, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 38);
	CreateHouse(350000, 500, 2153.70, -1243.80, 25.36, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 39);
	CreateHouse(250000, 500, 2191.86, -1239.23, 24.48, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 105);
	CreateHouse(250000, 500, 2209.78, -1240.24, 24.48, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 106);
	CreateHouse(350000, 500, 2229.45, -1241.60, 25.65, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 10);
	CreateHouse(350000, 500, 2249.92, -1238.90, 25.89, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 43);
	CreateHouse(750000, 500, 2140.67, -1082.54, 25.03, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 57);
	CreateHouse(750000, 500, 2145.35, -1084.71, 25.03, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 58);
	CreateHouse(350000, 500, 2101.63, -1075.87, 25.92, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 45);
	CreateHouse(250000, 500, 2105.38, -1055.93, 27.18, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 107);
	CreateHouse(250000, 500, 2099.86, -1051.77, 28.81, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 108);
	CreateHouse(350000, 500, 2091.50, -1068.13, 28.08, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 46);
	CreateHouse(350000, 500, 2077.30, -1056.99, 31.34, 0.00, 225.88, 1240.02, 1082.14, 0.00, 2, false, 47);
	CreateHouse(250000, 500, 2093.79, -1047.34, 30.09, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 109);
	CreateHouse(250000, 500, 2083.13, -1039.72, 32.20, 0.00, 223.34, 1287.80, 1082.14, 0.00, 1, false, 110);
	CreateHouse(350000, 500, 1959.60, -1069.99, 24.79, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 41);
	CreateHouse(350000, 500, 1954.49, -1075.00, 24.79, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 42);
	CreateHouse(350000, 500, 1939.25, -1066.54, 24.41, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 43);
	CreateHouse(350000, 500, 1934.06, -1071.35, 24.41, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 44);
	CreateHouse(350000, 500, 1916.89, -1064.67, 24.12, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 45);
	CreateHouse(350000, 500, 1912.61, -1070.42, 24.23, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 46);
	CreateHouse(350000, 500, 1896.04, -1064.90, 23.93, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 47);
	CreateHouse(350000, 500, 1891.77, -1070.44, 23.93, 0.00, 318.56, 1115.59, 1083.88, 0.00, 5, false, 48);
	CreateHouse(600000, 500, -2905.10, 1178.78, 13.66, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 59);
	CreateHouse(600000, 500, -2905.26, 1171.69, 13.66, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 60);
	CreateHouse(600000, 500, -2905.16, 1165.01, 13.66, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 61);
	CreateHouse(600000, 500, -2905.18, 1154.84, 13.66, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 62);
	CreateHouse(600000, 500, -2904.70, 1118.75, 27.07, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 63);
	CreateHouse(600000, 500, -2904.80, 1111.58, 27.07, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 64);
	CreateHouse(600000, 500, -2904.47, 1101.05, 27.07, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 65);
	CreateHouse(600000, 500, -2900.71, 1080.95, 32.13, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 66);
	CreateHouse(600000, 500, -2900.72, 1073.59, 32.13, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 67);
	CreateHouse(600000, 500, -2900.71, 1066.97, 32.13, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 68);
	CreateHouse(600000, 500, -2900.46, 1056.81, 32.13, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 69);
	CreateHouse(600000, 500, -2901.68, 1033.68, 36.82, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 70);
	CreateHouse(600000, 500, -2899.20, 1026.89, 36.82, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 71);
	CreateHouse(600000, 500, -2895.53, 1016.79, 36.82, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 72);
	CreateHouse(600000, 500, -2888.12, 1001.93, 40.71, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 73);
	CreateHouse(600000, 500, -2884.61, 995.85, 40.71, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 74);
	CreateHouse(600000, 500, -2881.09, 989.74, 40.71, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 75);
	CreateHouse(600000, 500, -2876.04, 980.99, 40.72, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 76);
	CreateHouse(600000, 500, -2860.64, 963.38, 44.05, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 77);
	CreateHouse(600000, 500, -2857.62, 956.95, 44.05, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 78);
	CreateHouse(600000, 500, -2853.25, 947.60, 44.05, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 79);
	CreateHouse(600000, 500, -2845.31, 928.48, 44.05, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 80);
	CreateHouse(600000, 500, -2844.70, 921.49, 44.05, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 81);
	CreateHouse(600000, 500, -2844.09, 914.50, 44.05, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 82);
	CreateHouse(600000, 500, -2843.20, 904.38, 44.05, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 83);
	CreateHouse(600000, 500, -2840.22, 884.42, 44.05, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 84);
	CreateHouse(600000, 500, -2840.22, 877.48, 44.05, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 85);
	CreateHouse(600000, 500, -2840.22, 866.99, 44.05, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 86);
	CreateHouse(600000, 500, -2856.66, 841.91, 39.65, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 87);
	CreateHouse(600000, 500, -2860.26, 835.66, 39.61, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 88);
	CreateHouse(600000, 500, -2863.71, 829.70, 39.54, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 89);
	CreateHouse(600000, 500, -2868.67, 821.07, 39.45, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 90);
	CreateHouse(600000, 500, -2880.75, 797.36, 35.14, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 91);
	CreateHouse(600000, 500, -2881.34, 790.51, 35.12, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 92);
	CreateHouse(600000, 500, -2882.27, 779.90, 35.08, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 93);
	CreateHouse(600000, 500, -2884.79, 750.72, 29.20, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 94);
	CreateHouse(600000, 500, -2884.16, 743.47, 29.21, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 95);
	CreateHouse(600000, 500, -2883.58, 736.91, 29.21, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 96);
	CreateHouse(600000, 500, -2882.34, 726.68, 29.19, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 97);
	CreateHouse(600000, 500, -2872.54, 697.69, 23.45, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 98);
	CreateHouse(600000, 500, -2869.40, 690.96, 23.46, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 99);
	CreateHouse(600000, 500, -2864.87, 681.28, 23.46, 0.00, 235.39, 1187.69, 1080.25, 0.00, 3, false, 100);
	CreateHouse(850000, 500, 784.40, -1435.99, 13.54, 0.00, 225.63, 1022.47, 1084.01, 0.00, 7, false, 36);
	CreateHouse(10000000, 10000, 1509.796997, -1060.510375, 25.062500, 0.00, 1513.118652, -1102.144165, 129.585952, 270.0, 0, true, 666);*/
	return 1;
}


NewPersonalCar(playerid, modelid, color1, color2)
{
	new slot = GetFreeVehicleSlot(playerid);
	if(slot == -1) return 1;
	
	new str[256], key = random(9999);
    format(DB_Query, sizeof(DB_Query), "");
	strcat(DB_Query, "INSERT INTO VEHICLES (OWNERID, OWNER, KEY, MODELID, COL1, COL2, PAINTJOB) VALUES ");
    format(str, 256, "('%d','%s','%d',", PI[playerid][P_ID], PI[playerid][P_NAME], key); strcat(DB_Query, str);
	format(str, 256, "'%d', '%d','%d','3')", modelid, color1, color2); strcat(DB_Query, str);
	db_query(Database, DB_Query);
	
	new DBResult:Result;
	new VehicleSqlId;
	format(DB_Query, sizeof(DB_Query), "SELECT ID FROM VEHICLES WHERE OWNERID = '%d' AND KEY = '%d'", PI[playerid][P_ID], key);
	Result = db_query(Database, DB_Query);
	if(db_num_rows(Result))
	{
		VehicleSqlId = db_get_field_int(Result, 0);
	}
	db_free_result(Result);
	
	PI[playerid][P_VEHICLES_MODEL][slot] = modelid;
	PI[playerid][P_VEHICLES_SQL_ID][slot] = VehicleSqlId;
	PI[playerid][P_VEHICLES_VEH_ID][slot] = 0;

	PI[playerid][P_VEHICLES] += 1;
	return 1;
}


PreLoadPlayerCars(playerid)
{
	PI[playerid][P_VEHICLES] = 0;
	
	new DBResult:Result;
	format(DB_Query, sizeof(DB_Query), "SELECT ID, MODELID FROM VEHICLES WHERE OWNERID = '%d'", PI[playerid][P_ID]);
	Result = db_query(Database, DB_Query);
 
	for(new i; i < db_num_rows(Result); i++ )
	{
		PI[playerid][P_VEHICLES_SQL_ID][PI[playerid][P_VEHICLES]] = db_get_field_int(Result, 0);
		PI[playerid][P_VEHICLES_MODEL][PI[playerid][P_VEHICLES]] = db_get_field_int(Result, 1);
		PI[playerid][P_VEHICLES_VEH_ID][PI[playerid][P_VEHICLES]] = 0;
		PI[playerid][P_VEHICLES] += 1;
		db_next_row(Result);
	}
	db_free_result(Result);
	
	return 1;
}

CreatePlayerHouseIcons(playerid, updatelabel = 0)
{
	new DBResult:Result;
	format(DB_Query, sizeof(DB_Query), "SELECT EXTX, EXTY, EXTZ, ID FROM HOUSES WHERE OWNERID = '%d'", PI[playerid][P_ID]);
	Result = db_query(Database, DB_Query);

    new Float:pos[3];
	for(new i = 0; i < db_num_rows(Result); i++ )
	{
		pos[0] = db_get_field_float(Result, 0);
		pos[1] = db_get_field_float(Result, 1);
		pos[2] = db_get_field_float(Result, 2);
		PI[playerid][P_HOUSEICONS][i] = CreateDynamicMapIcon(pos[0], pos[1], pos[2], 31, -1, FREEROAM_VW, .playerid = playerid, .streamdistance = 1000.0, .style = MAPICON_GLOBAL);
		
		if(updatelabel)
		{
			new houseid = db_get_field_int(Result, 3);
			new index = GetHouseIndexFromID(houseid);
			new Label_STR[256];
			format(Label_STR, 256, "{EAAA00}Private property\n{99A4AE}Hard: {C6D855}%s\n{99A4AE}Press {C6D855}~k~~VEHICLE_ENTER_EXIT~ {99A4AE}get in.\n\n{22AD10}Liberation in {8CFF7D}%dd, 0h, 0m, 0s {22AD10}If the owner does not connect.", HI[index][H_OWNER], MAX_HOUSE_DAYS);
			Update3DTextLabelText(HI[index][H_LABEL], -1, Label_STR);
		}
		db_next_row(Result);
	}
	db_free_result(Result);
	
	return 1;
}


UpdatePlayerVehicle(vehicleid, destroy = 0)
{

	new str[64];
	format(DB_Query, sizeof(DB_Query), "");
	strcat(DB_Query, "UPDATE VEHICLES SET ");
	format(str, 64, "LOCKED = '%d',", VI[vehicleid][V_LOCKED]); strcat(DB_Query, str);
	format(str, 64, "NEON = '%d',", VI[vehicleid][V_NEON]); strcat(DB_Query, str);
	format(str, 64, "SIREN = '%d',", VI[vehicleid][V_SIREN]); strcat(DB_Query, str);
	format(str, 64, "PLATE = '%s',", VI[vehicleid][V_PLATE]); strcat(DB_Query, str);
	format(str, 64, "COL1 = '%d',", VI[vehicleid][V_COLOR][0]); strcat(DB_Query, str);
	format(str, 64, "COL2 = '%d',", VI[vehicleid][V_COLOR][1]); strcat(DB_Query, str);
	format(str, 64, "PAINTJOB = '%d',", VI[vehicleid][V_PAINTJOB]); strcat(DB_Query, str);
	format(str, 64, "MOD1 = '%d',", VI[vehicleid][V_MOD][0]); strcat(DB_Query, str);
	format(str, 64, "MOD2 = '%d',", VI[vehicleid][V_MOD][1]); strcat(DB_Query, str);
	format(str, 64, "MOD3 = '%d',", VI[vehicleid][V_MOD][2]); strcat(DB_Query, str);
	format(str, 64, "MOD4 = '%d',", VI[vehicleid][V_MOD][3]); strcat(DB_Query, str);
	format(str, 64, "MOD5 = '%d',", VI[vehicleid][V_MOD][4]); strcat(DB_Query, str);
	format(str, 64, "MOD6 = '%d',", VI[vehicleid][V_MOD][5]); strcat(DB_Query, str);
	format(str, 64, "MOD7 = '%d',", VI[vehicleid][V_MOD][6]); strcat(DB_Query, str);
	format(str, 64, "MOD8 = '%d',", VI[vehicleid][V_MOD][7]); strcat(DB_Query, str);
	format(str, 64, "MOD9 = '%d',", VI[vehicleid][V_MOD][8]); strcat(DB_Query, str);
	format(str, 64, "MOD10 = '%d',", VI[vehicleid][V_MOD][9]); strcat(DB_Query, str);
	format(str, 64, "MOD11 = '%d',", VI[vehicleid][V_MOD][10]); strcat(DB_Query, str);
	format(str, 64, "MOD12 = '%d',", VI[vehicleid][V_MOD][11]); strcat(DB_Query, str);
	format(str, 64, "MOD13 = '%d',", VI[vehicleid][V_MOD][12]); strcat(DB_Query, str);
	format(str, 64, "MOD14 = '%d',", VI[vehicleid][V_MOD][13]); strcat(DB_Query, str);
	format(str, 64, "MOD15 = '%d',", VI[vehicleid][V_MOD][14]); strcat(DB_Query, str);
	format(str, 64, "MOD16 = '%d',", VI[vehicleid][V_MOD][15]); strcat(DB_Query, str);
	format(str, 64, "MOD17 = '%d'", VI[vehicleid][V_MOD][16]); strcat(DB_Query, str);
	format(str, 64, " WHERE ID = '%d'", VI[vehicleid][V_ID]); strcat(DB_Query, str);
	
	if(destroy)
	{
		DestroyVehicleEx(vehicleid);
		for(new x; x < sizeof(VI[]); x++) VI[vehicleid][VINFO: x] = 0;
	}
	db_query(Database, DB_Query);

	
	return 1;
}

SpawnPersonalCar(playerid, slot, id)
{
	
	new DBResult:Result;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM VEHICLES WHERE ID = '%d'", id);
	Result = db_query(Database, DB_Query);
	
	new Float:pos[4]; GetPlayerPos(playerid, pos[0], pos[1], pos[2]); GetPlayerFacingAngle(playerid, pos[3]);
	
	new V_TEMP_MODELID, V_TEMP_COLOR[2], V_TEMP_LOCKED, V_TEMP_SIREN;
	if(db_num_rows(Result))
	{
		V_TEMP_MODELID = db_get_field_int(Result, 4);
		V_TEMP_COLOR[0] = db_get_field_int(Result, 9);
		V_TEMP_COLOR[1] = db_get_field_int(Result, 10);
		V_TEMP_LOCKED = db_get_field_int(Result, 5);
		V_TEMP_SIREN = db_get_field_int(Result, 7);
		
		new index = CreateVehicle(V_TEMP_MODELID, pos[0], pos[1], pos[2], pos[3], V_TEMP_COLOR[0], V_TEMP_COLOR[1], -1, V_TEMP_SIREN);
		SetVehicleParamsEx(index, true, false, false, V_TEMP_LOCKED, false, false, false);
		PI[playerid][P_VEHICLES_VEH_ID][slot] = index;
		
		VI[index][V_ID] = db_get_field_int(Result, 0);
		VI[index][V_OWNERID] = db_get_field_int(Result, 1);
		db_get_field(Result, 2, VI[index][V_OWNER], 24);
		VI[index][V_KEY] = db_get_field_int(Result, 3);
		VI[index][V_MODELID] = db_get_field_int(Result, 4);
		VI[index][V_LOCKED] = db_get_field_int(Result, 5);
		VI[index][V_NEON] = db_get_field_int(Result, 6);
		VI[index][V_SIREN] = db_get_field_int(Result, 7);
		db_get_field(Result, 8, VI[index][V_PLATE], 32);
		VI[index][V_COLOR][0] = db_get_field_int(Result, 9);
		VI[index][V_COLOR][1] = db_get_field_int(Result, 10);
		VI[index][V_PAINTJOB] = db_get_field_int(Result, 11);
		VI[index][V_MOD][0] = db_get_field_int(Result, 12);
		VI[index][V_MOD][1] = db_get_field_int(Result, 13);
		VI[index][V_MOD][2] = db_get_field_int(Result, 14);
		VI[index][V_MOD][3] = db_get_field_int(Result, 15);
		VI[index][V_MOD][4] = db_get_field_int(Result, 16);
		VI[index][V_MOD][5] = db_get_field_int(Result, 17);
		VI[index][V_MOD][6] = db_get_field_int(Result, 18);
		VI[index][V_MOD][7] = db_get_field_int(Result, 19);
		VI[index][V_MOD][8] = db_get_field_int(Result, 20);
		VI[index][V_MOD][9] = db_get_field_int(Result, 21);
		VI[index][V_MOD][10] = db_get_field_int(Result, 22);
		VI[index][V_MOD][11] = db_get_field_int(Result, 23);
		VI[index][V_MOD][12] = db_get_field_int(Result, 24);
		VI[index][V_MOD][13] = db_get_field_int(Result, 25);
		VI[index][V_MOD][14] = db_get_field_int(Result, 26);
		VI[index][V_MOD][15] = db_get_field_int(Result, 27);
		VI[index][V_MOD][16] = db_get_field_int(Result, 28);
		VI[index][V_VALID] = true;
		
		ModVehicle(index, playerid);
		
		PutPlayerInVehicleEx(playerid, index, 0);
	}
	
	db_free_result(Result);
	
	
	return 1;
}

HousePlayerVehicle(playerid, slot)
{
	UpdatePlayerVehicle(PI[playerid][P_VEHICLES_VEH_ID][slot], true);
	PI[playerid][P_VEHICLES_VEH_ID][slot] = 0;
	return 1;
}

ModVehicle(vehicleid, playerid = INVALID_PLAYER_ID)
{
	for(new i = 0; i != 17; i++)
	{
		if(VI[vehicleid][V_MOD][i] != 0) AddVehicleComponent(vehicleid, VI[vehicleid][V_MOD][i]);
	}
	ChangeVehiclePaintjob(vehicleid, VI[vehicleid][V_PAINTJOB]);
	ChangeVehicleColor(vehicleid, VI[vehicleid][V_COLOR][0], VI[vehicleid][V_COLOR][1]);
	
	if(playerid != INVALID_PLAYER_ID)
	{
		if(PI[playerid][P_VIP])
		{
			if(VI[vehicleid][V_NEON] != 0) SetVehicleNeonLights(vehicleid, true, VI[vehicleid][V_NEON]);
			if(!isnull(VI[vehicleid][V_PLATE]))
			{
				SetVehicleNumberPlate(vehicleid, VI[vehicleid][V_PLATE]);
				SetVehicleToRespawn(vehicleid);
			}
			if(VI[vehicleid][V_SIREN])
			{
				if(IsValidDynamicObject(VEHICLE_SIREN[vehicleid]))
				{
					DestroyDynamicObject(VEHICLE_SIREN[vehicleid]);
					VEHICLE_SIREN[vehicleid] = INVALID_OBJECT_ID;
				}
				VEHICLE_SIREN[vehicleid] = CreateDynamicObject(19420, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
				AttachDynamicObjectToVehicle(VEHICLE_SIREN[vehicleid], vehicleid, var_siren[VI[vehicleid][V_MODELID] - 400][0], var_siren[VI[vehicleid][V_MODELID] - 400][1], var_siren[VI[vehicleid][V_MODELID] - 400][2], 0.0, 0.0, 0.0);
			}
		}
	}
	SetVehicleParamsEx(vehicleid, true, false, false, VI[vehicleid][V_LOCKED], false, false, false);
	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	if(!ac_IsCompatible(GetVehicleModel(vehicleid), componentid))
	{
		new message[145]; format(message, 145, "{FF7A45}Notice: The %S player has been expelled for possible use of Crash Invalid Tuning.", PI[playerid][P_NAME]);
		SendMessageToAdmins(-1, message);
		
		new log[145]; format(log, 145, "Player%S (%D) [%S] kickeado for possible use of Crash Invalid Tuning ", PI[playerid][P_NAME], PI[playerid][P_ID], PI[playerid][P_IP]);
		AntiCheatLog(log);
		
		Kick(playerid);
		return 1;
	}
	
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(VI[vehicleid][V_VALID])
	    {
			if(VI[vehicleid][V_OWNERID] == PI[playerid][P_ID])
			{
                SaveComponent(playerid, vehicleid, componentid);
                return 1;
			}
		}	
	}
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(!(-1 < paintjobid < 3) && paintjobid != 255)
	{
		new message[145]; format(message, 145, "{FF7A45}Notice: The %S player has been expelled for possible use of Crash Invalid Tuning.", PI[playerid][P_NAME]);
		SendMessageToAdmins(-1, message);
		
		new log[145]; format(log, 145, "JUGADOR%S (%D) [%S] Kickeado for possible use of Crash Invalid Tuning ", PI[playerid][P_NAME], PI[playerid][P_ID], PI[playerid][P_IP]);
		AntiCheatLog(log);
		
		Kick(playerid);
		return 1;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(VI[vehicleid][V_VALID])
	    {
			if(VI[vehicleid][V_OWNERID] == PI[playerid][P_ID])
			{
                VI[vehicleid][V_PAINTJOB] = paintjobid;
                return 1;
			}
		}
	}
	return 1;
}

new ac_vMods[][] =
{
	{0b00000011001111000010011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000110100010011111111010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001110110010011110000101, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010101111000100011100000011, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011101110100010011110001010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010100011100000011110001010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001100010000011101000100, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001010000000011100111010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010101111010100011100000001, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001110100010011110000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001010000000011101111010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010011110100010011111001010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010100000100010011110001010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001111100000011111000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011011100000011011100110000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011000111010010011101110101, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010101111100100011110001000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000010000011101110001, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010100110100000111111001110, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000001100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011001110000010011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001111111000011110010101, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010100111110000011110001100, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010100101100010011111101010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001101101100011110000010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010100111100001111111001010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b11111100000000000000010000110111, 0b00000000000000000000000000000000, 0b00000010000111000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000011111111100110000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000001101110000111, 0b00000000000000000000000000000001, 0b00000001111000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011100111100000011111010010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001111001100011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000110000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011100011100000011111010110, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010001111010000011100001001, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000001100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010100111100001111110001010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010100111000000011101111010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010101111010000011101101100, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b11111111111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000111111000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111111111110, 0b00000000000000000000000000000111, 0b11000000000000000000000000000000, 0b00000000000000000010000000000111},
	{0b11111110000000000000011100000000, 0b00000000000000000000000000000011, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000011110000000000, 0b00000000000000000000011000000000},
	{0b11001110000000000000011100000000, 0b11111111100000000000000000000000, 0b00000000111111111111111000000001, 0b00000000000000000000000000000111, 0b00111100000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000001111111100, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000001111000000000000000000, 0b00000000000000000001100000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000011111111110000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000011110000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000001000111, 0b00000000000000000000000000111110, 0b00111100000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000001110000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000001111, 0b00000000000000000000000000000000, 0b00000000000000111100000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000001111000000, 0b11000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010100101100000011111000010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011000101110010011111110001, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000110000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010010101100010011111110000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011100111100000011111000010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000}
};

ac_IsCompatible(modelid, componentid)
{
	if(modelid)
	{
		switch(componentid)
		{
			case 1000..1191:
			{
				componentid -= 1000;
				if(ac_vMods[modelid - 400][componentid >>> 5] & (1 << (componentid & 0b00011111))) return 1;
			}
			case 1192, 1193:
			{
				if(modelid == 576) return 1;
			}
		}
	}
	return 0;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	new ac_i = GetVehicleModel(vehicleid) - 417;
	if(ac_i == -417)
	{
		new message[145]; format(message, 145, "{FF7A45}NOTICE: The %S player has been expelled for possible use of Crash Invalid Vehicle Seat.", PI[playerid][P_NAME]);
		SendMessageToAdmins(-1, message);
		
		new log[145]; format(log, 145, "Player%S (%D) [%S] Kickeado for possible use of Crash Invalid Vehicle Seat ", PI[playerid][P_NAME], PI[playerid][P_ID], PI[playerid][P_IP]);
		AntiCheatLog(log);
		
		Kick(playerid);
		return 1;
	}
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	if(383 < modelid < 394)
	{
		new message[145]; format(message, 145, "{FF7A45} Notice: The player %S has been expelled for possible use of Crash Invalid Attached Objects.", PI[playerid][P_NAME]);
		SendMessageToAdmins(-1, message);
		
		new log[145]; format(log, 145, "Player%S (%D) [%S] Kickeado for possible use of Crash Invalid Attached Objects ", PI[playerid][P_NAME], PI[playerid][P_ID], PI[playerid][P_IP]);
		AntiCheatLog(log);
		
		Kick(playerid);
		return 1;
	}
	return 1;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if(PI[playerid][P_GAMEMODE] == M_DERBY || PI[playerid][P_GAMEMODE] == M_FALL) return ResetPlayerWeapons(playerid);
	/*new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);

	//Desync weapon IDs that don't fire bullets
	if (weaponid < 22 || weaponid > 38)
			return 0;              
   
	//Desync shots with Z pos out of bounds
	if(!(-20000.0 <= z <= 20000.0))
			return 0;    
		
	if(!(-1 < hittype < 5) || hittype == 1 && !IsPlayerConnected(hitid) ||
	hittype == 2 && !GetVehicleModel(hitid) || hittype == 3 && !IsValidObject(hitid) ||
	hittype == 4 && !IsValidPlayerObject(playerid, hitid))
	{
		new message[145]; format(message, 145, "{FF7A45}AVISO: El jugador %s ha sido expulsado por posible uso de Weapon crasher.", PI[playerid][P_NAME]);
		SendMessageToAdmins(-1, message);
		
		new log[145]; format(log, 145, "Jugador %s (%d) [%s] kickeado por posible uso de Weapon Crasher ", PI[playerid][P_NAME], PI[playerid][P_ID], PI[playerid][P_IP]);
		AntiCheatLog(log);
					
		Kick(playerid);
		return 1;
	}*/
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{

	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(VI[vehicleid][V_VALID])
	    {
			if(VI[vehicleid][V_OWNERID] == PI[playerid][P_ID])
			{
                VI[vehicleid][V_COLOR][0] = color1;
		    	VI[vehicleid][V_COLOR][1] = color2;
		        return 1;
			}
		}
	}
	return 1;
}

SaveComponent(playerid, vehicleid, componentid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{

		for(new s=0; s<20; s++) {
			if(componentid == spoiler[s][0]) {
				VI[vehicleid][V_MOD][0] = componentid;
    		}
		}
		for(new s=0; s<3; s++) {
			if(componentid == nitro[s][0]) {
				VI[vehicleid][V_MOD][1] = componentid;
    		}
		}
		for(new s=0; s<23; s++) {
			if(componentid == fbumper[s][0]) {
				VI[vehicleid][V_MOD][2] = componentid;
    		}
		}
		for(new s=0; s<22; s++) {
			if(componentid == rbumper[s][0]) {
				VI[vehicleid][V_MOD][3] = componentid;
    		}
		}
		for(new s=0; s<28; s++) {
			if(componentid == exhaust[s][0]) {
				VI[vehicleid][V_MOD][4] = componentid;
    		}
		}
		for(new s=0; s<2; s++) {
			if(componentid == bventr[s][0]) {
				VI[vehicleid][V_MOD][5] = componentid;
    		}
		}
		for(new s=0; s<2; s++) {
			if(componentid == bventl[s][0]) {
				VI[vehicleid][V_MOD][6] = componentid;
    		}
		}
		for(new s=0; s<4; s++) {
			if(componentid == bscoop[s][0]) {
				VI[vehicleid][V_MOD][7] = componentid;
    		}
		}
		for(new s=0; s<17; s++) {
			if(componentid == rscoop[s][0]) {
				VI[vehicleid][V_MOD][8] = componentid;
    		}
		}
		for(new s=0; s<21; s++) {
			if(componentid == lskirt[s][0]) {
				VI[vehicleid][V_MOD][9] = componentid;
    		}
		}
		for(new s=0; s<21; s++) {
			if(componentid == rskirt[s][0]) {
				VI[vehicleid][V_MOD][11] = componentid;
    		}
		}
		for(new s=0; s<1; s++) {
			if(componentid == hydraulics[s][0]) {
				VI[vehicleid][V_MOD][11] = componentid;
    		}
		}
		for(new s=0; s<1; s++) {
			if(componentid == vbase[s][0]) {
				VI[vehicleid][V_MOD][12] = componentid;
    		}
		}
		for(new s=0; s<4; s++) {
			if(componentid == rbbars[s][0]) {
				VI[vehicleid][V_MOD][13] = componentid;
    		}
		}
		for(new s=0; s<2; s++) {
			if(componentid == fbbars[s][0]) {
				VI[vehicleid][V_MOD][14] = componentid;
    		}
		}
		for(new s=0; s<17; s++) {
			if(componentid == wheels[s][0]) {
				VI[vehicleid][V_MOD][15] = componentid;
    		}
		}
		for(new s=0; s<2; s++) {
			if(componentid == lights[s][0]) {
				VI[vehicleid][V_MOD][16] = componentid;
    		}
		}
	}
	return 0;
}

GetFreeVehicleSlot(playerid)
{
	for(new i = 0; i != MAX_VEHICLES_PER_PLAYER; i++)
	{
	    if(PI[playerid][P_VEHICLES_MODEL][i] == 0)
	    {
            return i;
	    }
	}
	return -1;
}

RemovePlayerVehicle(playerid, slot)
{
	new vehicleid = PI[playerid][P_VEHICLES_VEH_ID][slot];
	DestroyVehicleEx(vehicleid);
	for(new x; x < sizeof(VI[]); x++) VI[vehicleid][VINFO: x] = 0;

	
	format(DB_Query, sizeof DB_Query, "DELETE FROM VEHICLES WHERE ID = '%d'", PI[playerid][P_VEHICLES_SQL_ID][slot]);
	db_query(Database, DB_Query);
	
	PI[playerid][P_VEHICLES_MODEL][slot] = 0;
	PI[playerid][P_VEHICLES_SQL_ID][slot] = 0;
	PI[playerid][P_VEHICLES_VEH_ID][slot] = 0;
	PI[playerid][P_VEHICLES] -= 1;
	return 1;
}

SetTimers()
{
	SetTimer("sendmessage", 300000, true);
	SetTimer("FreeroamTime", 300000/2, true);
	SetTimer("UpdateVariables", 1000, true);
	return 1;
}

new RandomSERVERMesages[][] =
{
	"     {EAFF63} Information    {C1FF63}Do you get bored? Try one of our games, use the command {FFCC00}/m {99CC00}And play.",
	"     {EAFF63} Information    {C1FF63}You need money? Kill or try to play our games, use {FFCC00}/m.",
	"     {EAFF63} Information    {C1FF63}Buy a fantastic house! Find many by San Andreas.",
	"     {EAFF63} Information    {C1FF63}Add to favorites (IP: 139.99.36.33:7783) to always play!",
	"     {EAFF63} Information    {C1FF63}You need Help? {FFCC00}/help.",
	"     {EAFF63} Information    {C1FF63}Legacy Freeroam continues in development, you can leave your suggestions in the Discord.",
	"     {EAFF63} Information    {C1FF63}Visit our official Discord Server {C6D855}("SERVER_WEB")",
	"     {EAFF63} Information    {C1FF63}Remember that you can tune your vehicles and updatedatalos!",
	"     {EAFF63} Information    {C1FF63}To buy a vehicle sees {C6D855}/cardealer.",
	"     {EAFF63} Information    {C1FF63}Create your own CREW / clan with {FF7A45}/createcrew.",
	"     {EAFF63} Information    {C1FF63}Recommend us to your friends!",
	"     {EAFF63} Information    {C1FF63}Do you want to be VIP? Look like with /vipinfo."
};

forward sendmessage();
public sendmessage()
{
	new DBResult:Result;
	Result = db_query(Database, "SELECT HOUSES.ID, HOUSES.OWNERID, USERS.CONNECTED, USERS.LCONNECT FROM HOUSES INNER JOIN USERS ON HOUSES.OWNERID = USERS.ID");
	for(new i; i < db_num_rows(Result); i++ )
	{
		new houseid = db_get_field_int(Result, 0),
			ownerid = db_get_field_int(Result, 1),
			connected = db_get_field_int(Result, 2),
			lconnection = db_get_field_int(Result, 3);
		
		if(!connected)
		{
			new index = GetHouseIndexFromID(houseid);
			if( gettime() > lconnection + (86400 * MAX_HOUSE_DAYS) )
			{
				format(DB_Query, sizeof DB_Query, "UPDATE USERS SET HOUSES = HOUSES - 1 WHERE ID = '%d'", ownerid);
				db_query(Database, DB_Query);
				format(HI[index][H_OWNER], 24, "");
				HI[index][H_OWNERID] = 0;
				HI[index][H_SOLD] = false;
				UpdateHouse(index);
			}
			else
			{
				new d, h, m, s;
				TimeConvertEx(( (lconnection + (86400 * MAX_HOUSE_DAYS) ) - gettime() ), d, h, m, s);
				
				new Label_STR[256];
				format(Label_STR, 256, "{EAAA00}Private property\n{99A4AE}Hard: {C6D855}%s\n{99A4AE}Press {C6D855}~k~~VEHICLE_ENTER_EXIT~ {99A4AE}get in.\n\n{22AD10}Liberation in {8CFF7D}%dd, %dh, %dm, %ds {22AD10}If the owner does not connect.", HI[index][H_OWNER], d, h, m, s);
				Update3DTextLabelText(HI[index][H_LABEL], -1, Label_STR);
			}
		}
		
		db_next_row(Result);
	}
	db_free_result(Result);
	
	/*new DBResult:Result;
	Result = db_query(Database, "SELECT ID, OWNERID FROM HOUSES WHERE SOLD = '1'");
	for(new i; i < db_num_rows(Result); i++ )
	{
		new ownerid = db_get_field_int(Result, 1);
		new DBResult:Result2; format(DB_Query, sizeof(DB_Query), "SELECT LCONNECT FROM USERS WHERE ID = '%d' AND CONNECTED = '0'", ownerid);
		new houseid = db_get_field_int(Result, 0);
		Result2 = db_query(Database, DB_Query);
		if(db_num_rows(Result2))
		{
			new lconnection = db_get_field_int(Result2, 0), d, h, m, s;
			new index = GetHouseIndexFromID(houseid);
			if( gettime() > lconnection + (86400 * MAX_HOUSE_DAYS) )
			{
				format(DB_Query, sizeof DB_Query, "UPDATE USERS SET HOUSES = HOUSES - 1 WHERE ID = '%d'", ownerid);
				db_query(Database, DB_Query);
				format(HI[index][H_OWNER], 24, "");
				HI[index][H_OWNERID] = 0;
				HI[index][H_SOLD] = false;
				UpdateHouse(index);
			}
			else
			{
				TimeConvertEx(( (lconnection + (86400 * MAX_HOUSE_DAYS) ) - gettime() ), d, h, m, s);
				
				new Label_STR[256];
				format(Label_STR, 256, "{C6D855}Propiedad privada\n\n{99A4AE}Dueo: {C6D855}%s\n\n{99A4AE}Press {C6D855}~k~~VEHICLE_ENTER_EXIT~ {99A4AE}entrar.\n\n{22AD10}Liberacin en {8CFF7D}%dd, %dh, %dm, %ds {22AD10}si el dueo no se conecta.", HI[index][H_OWNER], d, h, m, s);
				Update3DTextLabelText(HI[index][H_LABEL], -1, Label_STR);
			}
			
		}
		db_free_result(Result2);
		db_next_row(Result);
	}
	db_free_result(Result);*/
	
	
	
	SendClientMessageToAll(-1, RandomSERVERMesages[random(sizeof(RandomSERVERMesages))]);
	return 1;
}


ShowPlayerCarShop(playerid)
{
	for(new i = 0; i != sizeof TD_CarShop; i++) TextDrawShowForPlayer(playerid, TD_CarShop[i]);
	PlayerTextDrawSetPreviewModel(playerid, PTD_CarShop[playerid][0], Vehiclescons[PI[playerid][P_SHOPCARINDEX]][0]);
	
	new str[128]; format(str, 128, "%d$~n~%d_Score", Vehiclescons[PI[playerid][P_SHOPCARINDEX]][1], Vehiclescons[PI[playerid][P_SHOPCARINDEX]][2]);
	PlayerTextDrawSetString(playerid, PTD_CarShop[playerid][1], str);
	PlayerTextDrawShow(playerid, PTD_CarShop[playerid][0]);
	PlayerTextDrawShow(playerid, PTD_CarShop[playerid][1]);
	
	PlayerTextDrawSetString(playerid, PTD_CarShop[playerid][2], VehicleNames[ Vehiclescons[PI[playerid][P_SHOPCARINDEX]][0] - 400]);
	PlayerTextDrawShow(playerid, PTD_CarShop[playerid][2]);
	PI[playerid][P_SHOPCAR] = true;
	SelectTextDraw(playerid, 0xC6D855FF);
	return 1;
}

HidePlayerCarShop(playerid)
{
	for(new i = 0; i != sizeof TD_CarShop; i++) TextDrawHideForPlayer(playerid, TD_CarShop[i]);
	PlayerTextDrawHide(playerid, PTD_CarShop[playerid][0]);
	PlayerTextDrawHide(playerid, PTD_CarShop[playerid][1]);
	PlayerTextDrawHide(playerid, PTD_CarShop[playerid][2]);
	PI[playerid][P_SHOPCAR] = false;
	CancelSelectTextDraw(playerid);
	return 1;
}

forward HumanPlayerInfected(playerid);
public HumanPlayerInfected(playerid)
{
	if(PI[playerid][P_GAMEMODE] != M_ZOMBIE || !PI[playerid][P_INFECTED] || PI[playerid][P_STATUS] != S_SPAWNED || PI[playerid][P_ZOMBIE_TEAM] != TEAM_HUMANS) return 1;
	
	new Float:h; GetPlayerHealth(playerid, h);
	SetPlayerHealth(playerid, h - 5.0);
	SendClientMessage(playerid, -1, "{C6D855}Is infected, but you can't heal yourself! {"ORANGE"}Go to a Shelter and buy an antototus.");
	
	if(h < 10.0)
	{
		if(IsPlayerInAnyVehicle(playerid)) RemovePlayerFromVehicleEx(playerid);
		ApplyAnimation(playerid, "PED", "KO_shot_stom", 4.1, 0, 0, 0, true, 0);
	}
	SetTimerEx("HumanPlayerInfected", 10000, false, "i", playerid);
	return 1;
}

RemovePlayerBuildings(playerid)
{
	//AEROLV
	RemoveBuildingForPlayer(playerid, 7979, 1477.3984, 1172.4453, 12.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 7981, 1292.0391, 1502.6875, 14.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 8240, 1586.2578, 1189.5938, 23.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 8241, 1586.2578, 1189.5938, 23.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 8299, 1339.4297, 1650.1953, 11.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 8376, 1325.2188, 1538.5469, 11.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 8378, 1586.2578, 1222.7031, 19.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 8379, 1586.2578, 1222.7031, 19.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 1682, 1294.8906, 1502.5469, 26.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 7980, 1325.2188, 1538.5469, 11.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 8375, 1339.4297, 1650.1953, 11.8984, 0.25);

	
	//DRIFT1
	RemoveBuildingForPlayer(playerid, 16616, -326.6953, 1541.3906, 74.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 16138, -326.6953, 1541.3906, 74.5547, 0.25);

	//FERRISWHEEL
	RemoveBuildingForPlayer(playerid, 3778, 289.2266, -1875.0000, 3.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3615, 289.2266, -1875.0000, 3.2031, 0.25);

	return 1;
}

UsersLog(alog[])
{
	new File:handle = fopen("userslog.txt", io_append);

	new Hour, Minute, Second, Year, Month, Day;
	gettime(Hour, Minute, Second);
	getdate(Year, Month, Day);
	if(handle)
	{
		new line[145]; format(line, 145, "[%02d:%02d:%02d - %02d/%02d/%04d] %s\r\n", Hour, Minute, Second, Day, Month, Year, alog);
		fwrite(handle, line);
		fclose(handle);
	}
	return 1;
}

AdminLog(alog[])
{
	new File:handle = fopen("adminlog.txt", io_append);

	new Hour, Minute, Second, Year, Month, Day;
	gettime(Hour, Minute, Second);
	getdate(Year, Month, Day);
	if(handle)
	{
		new line[145]; format(line, 145, "[%02d:%02d:%02d - %02d/%02d/%04d] %s\r\n", Hour, Minute, Second, Day, Month, Year, alog);
		fwrite(handle, line);
		fclose(handle);
	}
	return 1;
}

AntiCheatLog(alog[])
{
	new File:handle = fopen("anticheatlog.txt", io_append);

	if(handle)
	{
		new line[145]; format(line, 145, "%s\r\n", alog);
		fwrite(handle, line);
		fclose(handle);
	}
	return 1;
}

stock PrintCmdTeleports()
{
	new cmdname[16];
	for(new i = 0; i != sizeof(TI); i++)
	{
		print(" ");
		format(cmdname, 16, "%s", TI[i][TP_Command]);
		strdel(cmdname, 0, 1);
		printf("CMD:%s(playerid, params[])", cmdname);
		print("{");
		print("\tif(PI[playerid][P_GAMEMODE] != M_FREEROAM) return SendClientMessage(playerid, -1, \"{\"GREY\"}Now you can't use this command.\");");
		printf("\tSetPlayerPosEx(playerid, %.4f, %.4f, %.4f, %.4f, %d, %d, %d, %d, %d);", TI[i][TP_X], TI[i][TP_Y], TI[i][TP_Z], TI[i][TP_Angle], TI[i][TP_Interior], TI[i][TP_VirtualWorld], TI[i][TP_Freeze], TI[i][TP_AllowCarTP], TI[i][TP_CarModelid]);
		print("\tSetCameraBehindPlayer(playerid);");
		printf("\tGameTextForPlayer(playerid, \"%s\", 3000, 6);", TI[i][TP_Name]);
		print(" ");
		printf("\tnew str[80]; format(str, sizeof str, \"~n~~g~~h~_%%s~b~~h~_fue_a~p~_%s~n~_\", PI[playerid][P_NAME]);", TI[i][TP_Command]);
		print("\tShowTextDrawInfo(3000, str);");
		print("\treturn 1;");
		print("}");
	}
	return 1;
}

stock TimeConvertEx(sec, &days, &hours, &minutes, &seconds)
{
	days = floatround(sec / 86400);
	hours = floatround((sec - (days * 86400)) / 3600);
	minutes = floatround((sec - (days * 86400) - (hours * 3600)) / 60);
	seconds = sec % 60;
   	return 1;
}


HidePlayerTuningMenu(playerid)
{
	TextDrawHideForPlayer(playerid, TD_LSR_TUNING[0]);
	TextDrawHideForPlayer(playerid, TD_LSR_TUNING[1]);
	TextDrawHideForPlayer(playerid, TD_LSR_TUNING[2]);
	for(new i = 0; i != sizeof(PTD_LSR_TUNING[]); i++) PlayerTextDrawHide(playerid, PTD_LSR_TUNING[playerid][i]);
	
	PI[playerid][P_TUNING_MENU] = false;
	PI[playerid][P_TUNING_PAGE] = TUNING_NEONS;
	CancelSelectTextDraw(playerid);
	return 1;
}

UpdatePlayerTuningMenu(playerid)
{
	PlayerTextDrawSetString(playerid, PTD_LSR_TUNING[playerid][0], "Neones");
	PlayerTextDrawSetString(playerid, PTD_LSR_TUNING[playerid][1], "Sirena");
	PlayerTextDrawSetString(playerid, PTD_LSR_TUNING[playerid][2], "Pintura");
	PlayerTextDrawSetString(playerid, PTD_LSR_TUNING[playerid][3], "Placa");
	
	for(new i = 6; i != sizeof(PTD_LSR_TUNING[]); i++)
	{
		PlayerTextDrawSetString(playerid, PTD_LSR_TUNING[playerid][i], "_");
		PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][i], false);
	}
	
	switch(PI[playerid][P_TUNING_PAGE])
	{
		case TUNING_NEONS:
		{
			PlayerTextDrawSetString(playerid, PTD_LSR_TUNING[playerid][0], "~y~~h~Neons");
			
			new counting, price_str[24];
			for(new i = 0; i != sizeof LSR_TUNING_NEONS; i++)
			{
				PlayerTextDrawSetString(playerid, PTD_LSR_TUNING[playerid][counting + 6], LSR_TUNING_NEONS[i][0]);
				PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][counting + 6], true);
				PlayerTextDrawShow(playerid, PTD_LSR_TUNING[playerid][counting + 6]);
				format(price_str, 24, "%d$", LSR_TUNING_NEONS[i][1]);
				PlayerTextDrawSetString(playerid, PTD_LSR_TUNING[playerid][counting + 7], price_str);
				counting += 2;
			}
		}
		case TUNING_LIGHT:
		{
			PlayerTextDrawSetString(playerid, PTD_LSR_TUNING[playerid][1], "~y~~h~Siren");
			
			PlayerTextDrawSetString(playerid, PTD_LSR_TUNING[playerid][6], "No");
			PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][6], true);
			PlayerTextDrawShow(playerid, PTD_LSR_TUNING[playerid][6]);
			PlayerTextDrawSetString(playerid, PTD_LSR_TUNING[playerid][7], "0$");
			
			PlayerTextDrawSetString(playerid, PTD_LSR_TUNING[playerid][8], "Siren");
			PlayerTextDrawSetSelectable(playerid, PTD_LSR_TUNING[playerid][8], true);
			PlayerTextDrawShow(playerid, PTD_LSR_TUNING[playerid][8]);
			PlayerTextDrawSetString(playerid, PTD_LSR_TUNING[playerid][9], "3000$");
			
		}
	}
	return 1;
}

SetVehicleNeonLights(vehicleid, bool:enable = true, color = RED_NEON)
{
    new idx = GetVehicleModel(vehicleid) - 400;
   
    if(0 <= idx <= 211)
    {
		new idx2 = vehicleid - 1;
		
        for(new x = 0; x < 2; x++)
        {
            if(IsValidDynamicObject(VEHICLE_NEON[idx2][x]))
            {
                DestroyDynamicObject(VEHICLE_NEON[idx2][x]);
				VEHICLE_NEON[idx2][x] = INVALID_OBJECT_ID;
            }
        }
		
        if(18647 <= color <= 18652)
        {
            if(enable)
            {
           
                VEHICLE_NEON[idx2][0] = CreateDynamicObject(color, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
                VEHICLE_NEON[idx2][1] = CreateDynamicObject(color, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
 
                AttachDynamicObjectToVehicle(VEHICLE_NEON[idx2][0], vehicleid, g_anltv_VehicleData[idx][0], g_anltv_VehicleData[idx][1], g_anltv_VehicleData[idx][2], 0.0, 0.0, 0.0);
                AttachDynamicObjectToVehicle(VEHICLE_NEON[idx2][1], vehicleid, -g_anltv_VehicleData[idx][0], g_anltv_VehicleData[idx][1], g_anltv_VehicleData[idx][2], 0.0, 0.0, 0.0);
			
            }
            return 1;
        }
    }
    return 0;
}

VehicleSupportsNeonLights(modelid)
{
    new idx = modelid - 400;
 
    if(0 <= idx <= 211)
    {
        if(g_anltv_VehicleData[idx][0] == 0.0 && g_anltv_VehicleData[idx][1] == 0.0 && g_anltv_VehicleData[idx][2] == 0.0)
        {
            return 0;
        }
       
        return 1;
    }
    return 0;
}

DestroyVehicleEx(vehicleid)
{
	if(1 <= vehicleid <= MAX_VEHICLES)
	{
		SetVehicleNeonLights(vehicleid, false);
		if(IsValidDynamicObject(VEHICLE_SIREN[vehicleid]))
		{
			DestroyDynamicObject(VEHICLE_SIREN[vehicleid]);
			VEHICLE_SIREN[vehicleid] = INVALID_OBJECT_ID;
		}
		DestroyVehicle(vehicleid);
		return 1;
	}
	return 0;
}

SetVehicleNumberPlateEx(vid, plate[], playerid = INVALID_PLAYER_ID)
{
	new Float:p[4]; GetVehiclePos(vid, p[0], p[1], p[2]); GetVehicleZAngle(vid, p[3]);
	new vw = GetVehicleVirtualWorld(vid);
	SetVehicleNumberPlate(vid, plate);
	SetVehicleToRespawn(vid);
	SetVehiclePos(vid, p[0], p[1], p[2]);
	SetVehicleVirtualWorld(vid, vw);
	PutPlayerInVehicleEx(playerid, vid, 0);
	SetVehicleZAngle(vid, p[3]);
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
    if(VI[vehicleid][V_VALID]) ModVehicle(vehicleid);
	else SetVehicleNeonLights(vehicleid, false);
	UpdateVehicleSiren(vehicleid);
    return 1;
}

forward FreeroamTime();
public FreeroamTime()
{
	FREEROAM_MINUTE += 30;
	if(FREEROAM_MINUTE >= 60)
	{
		FREEROAM_MINUTE = 0;
		FREEROAM_TIME += 1;
		if(FREEROAM_TIME >= 21) FREEROAM_TIME = 0;
	}
	
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PI[i][P_GAMEMODE] == M_FREEROAM || PI[i][P_GAMEMODE] == M_GANGWAR && GetPlayerVirtualWorld(i) != 48) //48 = racer 
	        {
	            SetPlayerTime(i, FREEROAM_TIME, FREEROAM_MINUTE);
	        }
	    }
	}
	return 1;
}

forward UpdateVariables();
public UpdateVariables()
{
	new count[11], count2[8];
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
	    if(IsPlayerConnected(i))
	    {
	        switch(PI[i][P_GAMEMODE])
	        {
	            case M_FREEROAM: count[0] ++;
				case M_GANGWAR: count[7] ++;
				case M_DERBY:
				{
					count[1] ++;
					if(PI[i][P_DERBY_STATUS] == PD_NORMAL) count2[0] ++;
				}
				case M_DM: count[2] ++;
				//case M_EVENT: count[3] ++;
				case M_FALL:
				{
					count[4] ++;
					if(PI[i][P_FALL_STATUS] == PD_NORMAL) count2[1] ++;
				}
				case M_ZOMBIE:
				{
					count[5] ++;
					if(PI[i][P_ZOMBIE_TEAM] == TEAM_HUMANS) count2[2] ++;
					else if(PI[i][P_ZOMBIE_TEAM] == TEAM_ZOMBIE) count2[3] ++;
				}
				case M_TDM:
				{
					count[8] ++;
					if(PI[i][P_TEM_TEAM] == 0) count2[4] ++;
					else if(PI[i][P_TEM_TEAM] == 1) count2[5] ++;
				}
				case M_SHOOTER:
				{
					count[9] ++;
					if(PI[i][P_SHOOTER_STATUS] == PD_NORMAL) count2[6] ++;
				}
				case M_RACE:
				{
					count[10] ++;
					if(PI[i][P_RACE_STATUS] == PD_NORMAL) count2[7] ++;
				}
				case M_DUEL: count[6] ++;
	        }
			if(PI[i][P_GAMEMODE] == M_EVENT || PI[i][P_JOINED_EVENT]) count[3] ++;
	    }
	}
	
	TOTAL_PLAYERS_FR = count[0];
	TOTAL_PLAYERS_GANG = count[7];
	DI[D_PLAYERS] = count[1];
	DI[D_RUNNINGPLAYERS] = count2[0];
	TOTAL_PLAYERS_DM = count[2];
	TOTAL_PLAYERS_EVENT = count[3];
	FI[F_PLAYERS] = count[4];
	FI[F_RUNNINGPLAYERS] = count2[1];
	ZI[Z_PLAYERS] = count[5];
	ZI[Z_TEAM_PLAYERS][0] = count2[2];
	ZI[Z_TEAM_PLAYERS][1] = count2[3];
	TDMI[T_PLAYERS] = count[8];
	TDMI[T_TeamPLAYERS][0] = count2[4];
	TDMI[T_TeamPLAYERS][1] = count2[5];
	TOTAL_PLAYERS_DUEL = count[6];
	ST[S_PLAYERS] = count[9];
	ST[S_RUNNING_PLAYERS] = count2[6];
	RC[R_PLAYERS] = count[10];
	RC[R_RUNNING_PLAYERS] = count2[7];
	return 1;
}

GetFreeCrewSlot()
{
	for(new i = 0; i != MAX_CREWS; i++)
	{
	    if(!CI[i][C_VALID])
	    {
            return i;
	    }
	}
	return -1;
}

LoadCrews()
{
	for(new x; x < sizeof(CI); x++)
	{
		for(new i; i < sizeof(CI[]); i++)
		{
			CI[x][CINFO: i] = 0;
		}
	}
		
	new DBResult:Result;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM CREWS");
	Result = db_query(Database, DB_Query);

	for(new i; i < db_num_rows(Result); i++ )
	{
		CI[Total_Crews][C_ID] = db_get_field_int(Result, 0);
		db_get_field(Result, 1, CI[Total_Crews][C_NAME], 10);
		CI[Total_Crews][C_MEMBERS] = db_get_field_int(Result, 2);
		CI[Total_Crews][C_COLOR] = db_get_field_int(Result, 3);
		CI[Total_Crews][C_VALID] = true;
		Total_Crews += 1;
		db_next_row(Result);
	}
	db_free_result(Result);
	return 1;
}

GetCrewSlotById(crewid)
{
	for(new x; x < sizeof(CI); x++)
	{
		if(CI[x][C_VALID] && CI[x][C_ID] == crewid)
	    {
            return x;
	    }
	}
	return -1;
}

SendMessageToCrew(crewid, color, message[])
{
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PI[i][P_CREW_ID] == crewid)
	        {
	            SendClientMessage(i, color, message);
	        }
	    }
	}
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
    if(!success)
    {
        BlockIpAddress(ip, 60000);
    }
    return 1;
}

UpdateCrewDatabase(crewid, record[], value)
{
	new str[64];
    format(DB_Query, sizeof(DB_Query), "");
	strcat(DB_Query, "UPDATE CREWS SET ");
	format(str, 64, "%s = '%d'", record, value); strcat(DB_Query, str);
    format(str, 64, " WHERE ID = '%d'", crewid); strcat(DB_Query, str);
	db_query(Database, DB_Query);
	return 1;
}

ChangePlayerCrewRank(id, rank)
{
	if(id <= 0) return 0;
	new str[64];
    format(DB_Query, sizeof(DB_Query), "");
	strcat(DB_Query, "UPDATE USERS SET CREWR =");
    format(str, 64, " '%d' WHERE ID = '%d'", rank, id); strcat(DB_Query, str);
	db_query(Database, DB_Query);
	
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PI[i][P_ID] == id)
	        {
				PI[i][P_CREW_RANK] = rank;
				SendClientMessageEx(i, -1, "Your range at CREW is now {%x}%s.", CI[PI[i][P_CREW_SLOT]][C_COLOR], Crew_Ranks[PI[i][P_CREW_RANK]]);
				break;
			}
		}
	}
	return 1;
}

DeletePlayerCrew(id)
{
	if(id <= 0) return 0;
	new str[64];
    format(DB_Query, sizeof(DB_Query), "");
	strcat(DB_Query, "UPDATE USERS SET CREWI = '0', CREWR = '0'");
    format(str, 64, " WHERE ID = '%d'", id); strcat(DB_Query, str);
	db_query(Database, DB_Query);
	
	
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PI[i][P_ID] == id)
	        {
				SendClientMessage(i, -1, "{999999}They have expelled you from the CREW.");
				if(IsValidDynamic3DTextLabel(PI[i][P_CREW_LABEL])) DestroyDynamic3DTextLabel(PI[i][P_CREW_LABEL]);
				PI[i][P_CREW_ID] = 0;
				PI[i][P_CREW_SLOT] = -1;
				PI[i][P_CREW_RANK] = RANK_NOOB;
				break;
			}
		}
	}
	return 1;
}

DeleteCrew(crewid)
{
	new str[64];
	format(DB_Query, sizeof(DB_Query), "");
	strcat(DB_Query, "DELETE FROM CREWS");
	format(str, 64, " WHERE ID = '%d'", crewid); strcat(DB_Query, str);
	db_query(Database, DB_Query);
	
	new DBResult:Result;
	format(DB_Query, sizeof(DB_Query), "SELECT ID FROM USERS WHERE CREWI = '%d'", crewid);
	Result = db_query(Database, DB_Query);
	for(new i; i < db_num_rows(Result); i++ )
	{
		format(DB_Query, sizeof(DB_Query), "");
		strcat(DB_Query, "UPDATE USERS SET CREWI = '0', CREWR = '0'");
		format(str, 64, " WHERE ID = '%d'", db_get_field_int(Result, 0)); strcat(DB_Query, str);
		db_query(Database, DB_Query);
		db_next_row(Result);
	}
	db_free_result(Result);
	
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++) 
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PI[i][P_CREW_ID] == crewid)
	        {
				SendClientMessage(i, -1, "{999999}The founder has dissolved the CREW.");
				if(IsValidDynamic3DTextLabel(PI[i][P_CREW_LABEL])) DestroyDynamic3DTextLabel(PI[i][P_CREW_LABEL]);
				PI[i][P_CREW_ID] = 0;
				PI[i][P_CREW_SLOT] = -1;
				PI[i][P_CREW_RANK] = RANK_NOOB;
			}
		}
	}
	return 1;
}

E_SetPlayerPosEx(playerid, Float:X, Float:Y, Float:Z)
{
	PI[playerid][P_ANTICARTROLL_TIME] += 221;
	return SetPlayerPos(playerid, X, Y, Z);
}

PutPlayerInVehicleEx(playerid, vehicleid, seatid)
{
	PI[playerid][P_ANTICARTROLL_TIME] += 221;
	return PutPlayerInVehicle(playerid, vehicleid, seatid);
}

RemovePlayerFromVehicleEx(playerid)
{
	PI[playerid][P_ANTICARTROLL_TIME] += 221;
	return RemovePlayerFromVehicle(playerid);
}

TogglePlayerSpectatingEx(playerid, toggle)
{
	PI[playerid][P_ANTICARTROLL_TIME] += 221;
	return TogglePlayerSpectating(playerid, toggle);
}

GetTopsPages()
{
    new DBResult:pages;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM USERS");
	pages = db_query(Database, DB_Query);
	new Float:tpages = floatdiv(floatround(db_num_rows(pages)), 20.0);
	db_free_result(pages);
	return floatround(tpages, floatround_ceil);
}

GetAdminPages()
{
    new DBResult:pages;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM USERS WHERE MOD > '0'");
	pages = db_query(Database, DB_Query);
	new Float:tpages = floatdiv(floatround(db_num_rows(pages)), 19.0);
	db_free_result(pages);
	return floatround(tpages, floatround_ceil);
}

UpdateUserDataField(playerid, field[], value)
{
	if(PI[playerid][P_USEREXIT])
	{
		new str[80];
		format(str, sizeof(str), "UPDATE USERS SET %s = '%d' WHERE NAME = '%s'", field, value, PI[playerid][P_NAME]);
		db_query(Database, str);
		return 1;
	}
	return 0;
}

PlaySocialSong(playerid, id)
{
	new DBResult:Result;
	format(DB_Query, sizeof(DB_Query), "SELECT TITLE, URL FROM MUSIC WHERE ID = '%d'", id);
	Result = db_query(Database, DB_Query);
	new song_title[32], url[128];
	if(db_num_rows(Result))
	{
		db_get_field(Result, 0, song_title, 32);
		db_get_field(Result, 1, url, 128);
		PlayAudioStreamForPlayer(playerid, url);
		SendClientMessageEx(playerid, -1, "{CCCCCC}Reproducing {90C3D4}'%s' {CCCCCC}use {CCFF00}/play %d {CCCCCC}To reproduce this song.", song_title, id);
		
		if(gettime() > PI[playerid][P_MUSIC_ANTIFLOOD] + 30)
		{
			PI[playerid][P_MUSIC_ANTIFLOOD] = gettime();
			new str[80];
			format(str, sizeof(str), "UPDATE MUSIC SET PLAYS = PLAYS + 1 WHERE ID = '%d'", id);
			db_query(Database, str);
		}
	}
	else SendClientMessage(playerid, -1, "{CCCCCC}Song not found.");
	db_free_result(Result);
	return 1;
}

DeleteSocialSong(id)
{
	format(DB_Query, sizeof(DB_Query), "DELETE FROM MUSIC WHERE ID = '%d'", id);
	db_query(Database, DB_Query);
	
	format(DB_Query, sizeof(DB_Query), "DELETE FROM LIKES WHERE ID_SONG = '%d'", id);
	db_query(Database, DB_Query);
	return 1;
}

GetUserMusicPages(playerid)
{
	if(PI[playerid][P_ID] == 0) return 1;
    new DBResult:pages;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM MUSIC WHERE OWNERID = '%d'", PI[playerid][P_ID]);
	pages = db_query(Database, DB_Query);
	new Float:tpages = floatdiv(floatround(db_num_rows(pages)), 10.0);
	db_free_result(pages);
	return floatround(tpages, floatround_ceil);
}

GetMusicPages()
{
    new DBResult:pages;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM MUSIC WHERE PRIVATE = '0'");
	pages = db_query(Database, DB_Query);
	new Float:tpages = floatdiv(floatround(db_num_rows(pages)), 10.0);
	db_free_result(pages);
	return floatround(tpages, floatround_ceil);
}

GetPlayerFavMusicPages(playerid)
{
	if(PI[playerid][P_ID] == 0) return 1;
    new DBResult:pages;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM MUSIC WHERE EXISTS(SELECT LIKES.ID_SONG FROM LIKES WHERE LIKES.ID_USUARIO = '%d' AND LIKES.ID_SONG = MUSIC.ID)", PI[playerid][P_ID]);
	pages = db_query(Database, DB_Query);
	new Float:tpages = floatdiv(floatround(db_num_rows(pages)), 10.0);
	db_free_result(pages);
	return floatround(tpages, floatround_ceil);
}


stock AddSongs()
{
	new title[32], url[128];
	for(new i = 0; i != sizeof RandomMusic; i++)
	{
		format(title, 32, "%s", RandomMusic[i][0]);
		format(url, 128, "%s", RandomMusic[i][1]);
		AddSong(title, url);
	}
	return 1;
}

stock AddSong(title[], url[])
{
	format(DB_Query, sizeof(DB_Query), "INSERT INTO MUSIC (TITLE, URL, OWNERID, OWNER) VALUES ('%s','%s','-1','Legacy Freeroam')", title, url);
	db_query(Database, DB_Query);
	return 1;
}

GetUserCrewPages(playerid, max = 20)
{
	new DBResult:pages;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM USERS WHERE CREWI = '%d'", PI[playerid][P_CREW_ID]);
	pages = db_query(Database, DB_Query);
	new Float:tpages = floatdiv(floatround(db_num_rows(pages)), max);
	db_free_result(pages);
	return floatround(tpages, floatround_ceil); 
}

IsValidVehicleModel(model)
{
	if(model >= 400 && model <= 611)
	{
		return true;
	}
	return false;
}

PlayAudioStreamForPlayerEx(playerid, url[], Float:X = 0.0, Float:Y = 0.0, Float:Z = 0.0, Float:distance = 0.0, usepos = 0)
{
	if(!PI[playerid][P_IGNORE_MUSIC]) return PlayAudioStreamForPlayer(playerid, url, X, Y, Z, distance, usepos);
	return 0;
}

PlayerPlaySoundEx(playerid, id, Float:X, Float:Y, Float:Z)
{
	if(!PI[playerid][P_IGNORE_SOUNDS]) return PlayerPlaySound(playerid, id, X, Y, Z);
	return 0;
}

/* FERRISWHEEL */

UpdateWheelTarget()
{
    gCurrentTargetYAngle += 36.0;
    if(gCurrentTargetYAngle >= 360.0) {
		gCurrentTargetYAngle = 0.0;
    }
	if(gWheelTransAlternate) gWheelTransAlternate = 0;
	else gWheelTransAlternate = 1;
}

RotateFerrisWheel()
{
    UpdateWheelTarget();

    new Float:fModifyWheelZPos = 0.0;
    if(gWheelTransAlternate) fModifyWheelZPos = 0.05;

    MoveObject( Ferriswheel_Base, 288.5600, -1870.6224, 30.5+fModifyWheelZPos,
				FERRIS_SPEED, 0.0, gCurrentTargetYAngle, 180.0 );
}

public OnObjectMoved(objectid)
{
    if(objectid == Ferriswheel_Base) RotateFerrisWheel();
    return 1;
}

stock CreatePartyTruck(Float:X, Float:Y, Float:Z, Float:Angle)
{
	new veh = CreateVehicle(578, X, Y, Z, Angle, -1, -1, 600);
	new Obj[31];
	Obj[0] = CreateDynamicObject(19128, -11.22240, -2.28324, 3.41254,   0.00000, 0.00000, 90.00000, FREEROAM_VW);
	Obj[1] = CreateDynamicObject(19128, -11.22240, -6.28320, 3.41250,   0.00000, 0.00000, 90.00000, FREEROAM_VW);
	Obj[2] = CreateDynamicObject(19420, -11.11920, -0.27869, 4.12812,   90.00000, 0.00000, 0.00000, FREEROAM_VW);
	Obj[3] = CreateDynamicObject(19143, -12.42198, -0.35391, 4.86045,   0.00000, 0.00000, 180.00000, FREEROAM_VW);
	Obj[4] = CreateDynamicObject(19144, -11.92200, -0.35390, 4.86050,   0.00000, 0.00000, 180.00000, FREEROAM_VW);
	Obj[5] = CreateDynamicObject(19145, -11.42200, -0.35390, 4.86050,   0.00000, 0.00000, 180.00000, FREEROAM_VW);
	Obj[6] = CreateDynamicObject(19146, -10.92200, -0.35390, 4.86050,   0.00000, 0.00000, 180.00000, FREEROAM_VW);
	Obj[7] = CreateDynamicObject(19147, -10.42200, -0.35390, 4.86050,   0.00000, 0.00000, 180.00000, FREEROAM_VW);
	Obj[8] = CreateDynamicObject(19148, -9.92200, -0.35390, 4.86050,   0.00000, 0.00000, 180.00000, FREEROAM_VW);
	Obj[9] = CreateDynamicObject(19127, -13.07974, -8.11392, 4.01979,   0.00000, 0.00000, 0.00000, FREEROAM_VW);
	Obj[10] = CreateDynamicObject(19127, -9.41040, -8.11390, 4.01980,   0.00000, 0.00000, 0.00000, FREEROAM_VW);
	Obj[11] = CreateDynamicObject(19127, -9.41040, -0.61390, 4.01980,   0.00000, 0.00000, 0.00000, FREEROAM_VW);
	Obj[12] = CreateDynamicObject(19127, -13.07970, -0.61390, 4.01980,   0.00000, 0.00000, 0.00000, FREEROAM_VW);
	Obj[13] = CreateDynamicObject(18655, -9.37927, -0.61893, 3.46325,   0.00000, 0.00000, 56.00000, FREEROAM_VW);
	Obj[14] = CreateDynamicObject(18655, -13.07000, -8.09340, 3.46330,   0.00000, 0.00000, -136.00000, FREEROAM_VW);
	Obj[15] = CreateDynamicObject(1723, -10.22017, -7.53540, 3.39441,   0.00000, 0.00000, 180.00000, FREEROAM_VW);
	Obj[16] = CreateDynamicObject(18651, -9.84851, 0.75535, 3.35982,   0.00000, 0.00000, 0.00000, FREEROAM_VW);
	Obj[17] = CreateDynamicObject(18651, -12.41032, 0.73555, 3.35980,   0.00000, 0.00000, 0.00000, FREEROAM_VW);
	Obj[18] = CreateDynamicObject(2232, -9.87104, -1.44249, 4.04030,   0.00000, 0.00000, -20.00000, FREEROAM_VW);
	Obj[19] = CreateDynamicObject(2232, -12.45320, -1.37381, 4.04030,   0.00000, 0.00000, 20.00000, FREEROAM_VW);
	Obj[20] = CreateDynamicObject(19087, -9.42067, -8.12922, 4.42657,   90.00000, 0.00000, 0.00000, FREEROAM_VW);
	Obj[21] = CreateDynamicObject(19087, -9.42070, -6.1968, 4.42660,   90.00000, 0.00000, 0.00000, FREEROAM_VW);
	Obj[22] = CreateDynamicObject(19087, -9.42070, -4.1968, 4.42660,   90.00000, 0.00000, 0.00000, FREEROAM_VW);
	Obj[23] = CreateDynamicObject(19087, -9.42070, -3.1968, 4.42660,   90.00000, 0.00000, 0.00000, FREEROAM_VW);
	Obj[24] = CreateDynamicObject(19087, -13.07330, -8.1968, 4.42660,   90.00000, 0.00000, 0.00000, FREEROAM_VW);
	Obj[25] = CreateDynamicObject(19087, -13.07330, -6.1968, 4.42660,   90.00000, 0.00000, 0.00000, FREEROAM_VW);
	Obj[26] = CreateDynamicObject(19087, -13.07330, -4.1968, 4.42660,   90.00000, 0.00000, 0.00000, FREEROAM_VW);
	Obj[27] = CreateDynamicObject(19087, -13.07330, -3.1968, 4.42660,   90.00000, 0.00000, 0.00000, FREEROAM_VW);
	Obj[28] = CreateDynamicObject(19087, -9.48827, -8.10955, 4.42660,   90.00000, 0.00000, 90.00000, FREEROAM_VW);
	Obj[29] = CreateDynamicObject(19087, -10.48830, -8.10950, 4.42660,   90.00000, 0.00000, 90.00000, FREEROAM_VW);
	Obj[30] = CreateDynamicObject(642, -12.10328, -6.22676, 4.83699,   0.00000, 0.00000, 0.00000, FREEROAM_VW);
	
	AttachDynamicObjectToVehicle(Obj[0], veh, -0.064399, 0.324759, -0.206860,  0.000000, 0.000000, 90.000000);
	AttachDynamicObjectToVehicle(Obj[1], veh, -0.064399, -3.675199, -0.206900,  0.000000, 0.000000, 90.000000);
	AttachDynamicObjectToVehicle(Obj[2], veh, 0.038800, 2.329309, 0.508719,  90.000000, 0.000000, 0.000000);
	AttachDynamicObjectToVehicle(Obj[3], veh, -1.263979, 2.254090, 1.241049,  0.000000, 0.000000, 180.000000);
	AttachDynamicObjectToVehicle(Obj[4], veh, -0.763999, 2.254100, 1.241099,  0.000000, 0.000000, 180.000000);
	AttachDynamicObjectToVehicle(Obj[5], veh, -0.263999, 2.254100, 1.241099,  0.000000, 0.000000, 180.000000);
	AttachDynamicObjectToVehicle(Obj[6], veh, 0.236000, 2.254100, 1.241099,  0.000000, 0.000000, 180.000000);
	AttachDynamicObjectToVehicle(Obj[7], veh, 0.736000, 2.254100, 1.241099,  0.000000, 0.000000, 180.000000);
	AttachDynamicObjectToVehicle(Obj[8], veh, 1.236000, 2.254100, 1.241099,  0.000000, 0.000000, 180.000000);
	AttachDynamicObjectToVehicle(Obj[9], veh, -1.921739, -5.505920, 0.400390,  0.000000, 0.000000, 0.000000);
	AttachDynamicObjectToVehicle(Obj[10], veh, 1.747599, -5.505900, 0.400400,  0.000000, 0.000000, 0.000000);
	AttachDynamicObjectToVehicle(Obj[11], veh, 1.747599, 1.994100, 0.400400,  0.000000, 0.000000, 0.000000);
	AttachDynamicObjectToVehicle(Obj[12], veh, -1.921700, 1.994100, 0.400400,  0.000000, 0.000000, 0.000000);
	AttachDynamicObjectToVehicle(Obj[13], veh, 1.778730, 1.989070, -0.156150,  0.000000, 0.000000, 56.000000);
	AttachDynamicObjectToVehicle(Obj[14], veh, -1.911999, -5.485400, -0.156100,  0.000000, 0.000000, -136.000000);
	AttachDynamicObjectToVehicle(Obj[15], veh, 0.937829, -4.927399, -0.224990,  0.000000, 0.000000, 180.000000);
	AttachDynamicObjectToVehicle(Obj[16], veh, 1.309490, 3.363349, -0.259580,  0.000000, 0.000000, 0.000000);
	AttachDynamicObjectToVehicle(Obj[17], veh, -1.252320, 3.343549, -0.259599,  0.000000, 0.000000, 0.000000);
	AttachDynamicObjectToVehicle(Obj[18], veh, 1.286959, 1.165510, 0.420899,  0.000000, 0.000000, -20.000000);
	AttachDynamicObjectToVehicle(Obj[19], veh, -1.295200, 1.234189, 0.420899,  0.000000, 0.000000, 20.000000);
	AttachDynamicObjectToVehicle(Obj[20], veh, 1.737330, -5.521220, 0.807169,  90.000000, 0.000000, 0.000000);
	AttachDynamicObjectToVehicle(Obj[21], veh, 1.737299, -3.521199, 0.807199,  90.000000, 0.000000, 0.000000);
	AttachDynamicObjectToVehicle(Obj[22], veh, 1.737299, -1.521199, 0.807199,  90.000000, 0.000000, 0.000000);
	AttachDynamicObjectToVehicle(Obj[23], veh, 1.737299, -0.521199, 0.807199,  90.000000, 0.000000, 0.000000);
	AttachDynamicObjectToVehicle(Obj[24], veh, -1.915300, -5.521200, 0.807199,  90.000000, 0.000000, 0.000000);
	AttachDynamicObjectToVehicle(Obj[25], veh, -1.915300, -3.521199, 0.807199,  90.000000, 0.000000, 0.000000);
	AttachDynamicObjectToVehicle(Obj[26], veh, -1.915300, -1.521199, 0.807199,  90.000000, 0.000000, 0.000000);
	AttachDynamicObjectToVehicle(Obj[27], veh, -1.915300, -0.521199, 0.807199,  90.000000, 0.000000, 0.000000);
	AttachDynamicObjectToVehicle(Obj[28], veh, 1.669730, -5.501550, 0.807199,  90.000000, 0.000000, 90.000000);
	AttachDynamicObjectToVehicle(Obj[29], veh, 0.669699, -5.501500, 0.807199,  90.000000, 0.000000, 90.000000);
	AttachDynamicObjectToVehicle(Obj[30], veh, -0.945280, -3.618759, 1.217589,  0.000000, 0.000000, 0.000000);
	return veh;
}


GetTotalUsers()
{
    new DBResult:pages;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM USERS");
	pages = db_query(Database, DB_Query);
	return db_num_rows(pages);
}

GetTotalVehicles()
{
    new DBResult:pages;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM VEHICLES");
	pages = db_query(Database, DB_Query);
	return db_num_rows(pages);
}

GetTotalSongs()
{
    new DBResult:pages;
	format(DB_Query, sizeof(DB_Query), "SELECT * FROM MUSIC");
	pages = db_query(Database, DB_Query);
	return db_num_rows(pages);
}


ShowSelectMode(playerid, page)
{
	switch(page)
	{
		case 0:
		{
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[6]); //FREEROAM
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[7]); //FREEROAM
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[16]); //FREEROAM
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[10]); //DERBY
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[11]); //DERBY
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[18]); //DERBY
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[12]); //DM
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[13]); //DM
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[19]); //DM
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[31]); //RACES
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[32]); //RACES
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[33]); //RACES
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[25]); //TDM
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[26]); //TDM
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[27]); //TDM
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[28]); //SHOOTER
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[29]); //SHOOTER
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[30]); //SHOOTER
			
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[24]); //TOTAL_PLAYERS LSR
		}
		case 1:
		{
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[8]); //GANGWARS
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[9]); //GANGWARS
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[17]); //GANGWARS
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[21]); //ZOMBIE
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[22]); //ZOMBIE
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[23]); //ZOMBIE
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[14]); //FALL
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[15]); //FALL
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[20]); //FALL
			
			TextDrawShowForPlayer(playerid, TD_LSR_SELECTMODE[24]); //TOTAL_PLAYERS LSR
		}
	}
	return 1;
}

valor_contrario_booleano(val)
{
	if(val) return false;
	return true;
}

givePrize(mode, team, money, score = 0)
{
	for(new x = 0, j = GetPlayerPoolSize(); x <= j; x++) 
	{
		if(IsPlayerConnected(x)) 
		{
		    if(PI[x][P_GAMEMODE] == mode && GetPlayerTeam(x) == team)
			{
				GivePlayerMoneyEx(x, money);
				GivePlayerScoreEx(x, score);
			}
		}
	}
	return 1;
}

TextDrawMessageForPlayer(playerid, message[], time)
{
	PlayerTextDrawSetString(playerid, PI[playerid][PTD_MESSAGE_TD], message);
	PlayerTextDrawShow(playerid, PI[playerid][PTD_MESSAGE_TD]);
	KillTimer(PI[playerid][P_TIMERS][6]);
	PI[playerid][P_TIMERS][6] = SetTimerEx("HidePlayerTextDrawMessage", time, false, "i", playerid);
	return 1;
}

forward HidePlayerTextDrawMessage(playerid);
public HidePlayerTextDrawMessage(playerid)
{
	PlayerTextDrawSetString(playerid, PI[playerid][PTD_MESSAGE_TD], "_");
	PlayerTextDrawHide(playerid, PI[playerid][PTD_MESSAGE_TD]);
	return 1;
}

AddStaticVehicleEx_VW(world, modelid, Float:X, Float:Y, Float:Z, Float:Angle, col1, col2, respawn_time, addsiren = 0)
{
	new id = AddStaticVehicleEx(modelid, X, Y, Z, Angle, col1, col2, respawn_time, addsiren);
	SetVehicleVirtualWorld(id, world);
	return id;
}

UpdateVehicleSiren(vehicleid)
{
	new modelid = GetVehicleModel(vehicleid), siren = GetVehicleParamsSirenState(vehicleid);
	if(IsValidDynamicObject(VEHICLE_SIREN[vehicleid]))
	{
		DestroyDynamicObject(VEHICLE_SIREN[vehicleid]);
		VEHICLE_SIREN[vehicleid] = INVALID_OBJECT_ID;
	}
	if(siren == -1 || var_siren[modelid - 400][2] == 0.0) return 0;
	
	if(siren == 0)
	{
		VEHICLE_SIREN[vehicleid] = CreateDynamicObject(19420, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		AttachDynamicObjectToVehicle(VEHICLE_SIREN[vehicleid], vehicleid, var_siren[modelid - 400][0], var_siren[modelid - 400][1], var_siren[modelid - 400][2], 0.0, 0.0, 0.0);
	}
	else if(siren == 1)
	{
		VEHICLE_SIREN[vehicleid] = CreateDynamicObject(19419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		AttachDynamicObjectToVehicle(VEHICLE_SIREN[vehicleid], vehicleid, var_siren[modelid - 400][0], var_siren[modelid - 400][1], var_siren[modelid - 400][2], 0.0, 0.0, 0.0);
	}
	return 1;
}

public OnVehicleSirenStateChange(playerid, vehicleid, newstate)
{
	new modelid = GetVehicleModel(vehicleid);
    if(newstate)
	{
		if(IsValidDynamicObject(VEHICLE_SIREN[vehicleid]))
		{
			DestroyDynamicObject(VEHICLE_SIREN[vehicleid]);
			VEHICLE_SIREN[vehicleid] = INVALID_OBJECT_ID;
		}
		if(var_siren[modelid - 400][2] == 0.0) return 0;
		VEHICLE_SIREN[vehicleid] = CreateDynamicObject(19419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		AttachDynamicObjectToVehicle(VEHICLE_SIREN[vehicleid], vehicleid, var_siren[modelid - 400][0], var_siren[modelid - 400][1], var_siren[modelid - 400][2], 0.0, 0.0, 0.0);
		Streamer_Update(playerid);
	}
    else
	{
		if(IsValidDynamicObject(VEHICLE_SIREN[vehicleid]))
		{
			DestroyDynamicObject(VEHICLE_SIREN[vehicleid]);
			VEHICLE_SIREN[vehicleid] = INVALID_OBJECT_ID;
		}
		if(var_siren[modelid - 400][2] == 0.0) return 0;
		VEHICLE_SIREN[vehicleid] = CreateDynamicObject(19420, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		AttachDynamicObjectToVehicle(VEHICLE_SIREN[vehicleid], vehicleid, var_siren[modelid - 400][0], var_siren[modelid - 400][1], var_siren[modelid - 400][2], 0.0, 0.0, 0.0);
		Streamer_Update(playerid);
	}
    return 1;
}



//-------------------------------------------------- STYLOCK --------------------------------------------------
conversion(Float:or_pos_x, Float:or_pos_y, Float:or_pos_z, Float:or_rot_x, Float:or_rot_y, Float:or_rot_z, Float:off_x, Float:off_y, Float:off_z, Float:rot_x, Float:rot_y, Float:rot_z, &Float:X, &Float:Y, &Float:Z, &Float:RX, &Float:RY, &Float:RZ) // By Stylock - http://forum.sa-mp.com/member.php?u=114165
{
	static
		Float:sin[3],
		Float:cos[3],
		Float:pos[3],
		Float:rot[3];
		
	pos[0] = or_pos_x;
	pos[1] = or_pos_y;
	pos[2] = or_pos_z;
	rot[0] = or_rot_x;
	rot[1] = or_rot_y;
	rot[2] = or_rot_z;
	
	EDIT_FloatEulerFix(rot[0], rot[1], rot[2]);
	cos[0] = floatcos(rot[0], degrees); cos[1] = floatcos(rot[1], degrees); cos[2] = floatcos(rot[2], degrees); sin[0] = floatsin(rot[0], degrees); sin[1] = floatsin(rot[1], degrees); sin[2] = floatsin(rot[2], degrees);
	pos[0] = pos[0] + off_x * cos[1] * cos[2] - off_x * sin[0] * sin[1] * sin[2] - off_y * cos[0] * sin[2] + off_z * sin[1] * cos[2] + off_z * sin[0] * cos[1] * sin[2];
	pos[1] = pos[1] + off_x * cos[1] * sin[2] + off_x * sin[0] * sin[1] * cos[2] + off_y * cos[0] * cos[2] + off_z * sin[1] * sin[2] - off_z * sin[0] * cos[1] * cos[2];
	pos[2] = pos[2] - off_x * cos[0] * sin[1] + off_y * sin[0] + off_z * cos[0] * cos[1];
	rot[0] = asin(cos[0] * cos[1]); rot[1] = atan2(sin[0], cos[0] * sin[1]) + rot_z; rot[2] = atan2(cos[1] * cos[2] * sin[0] - sin[1] * sin[2], cos[2] * sin[1] - cos[1] * sin[0] * -sin[2]);
	cos[0] = floatcos(rot[0], degrees); cos[1] = floatcos(rot[1], degrees); cos[2] = floatcos(rot[2], degrees); sin[0] = floatsin(rot[0], degrees); sin[1] = floatsin(rot[1], degrees); sin[2] = floatsin(rot[2], degrees);
	rot[0] = asin(cos[0] * sin[1]); rot[1] = atan2(cos[0] * cos[1], sin[0]); rot[2] = atan2(cos[2] * sin[0] * sin[1] - cos[1] * sin[2], cos[1] * cos[2] + sin[0] * sin[1] * sin[2]);
	cos[0] = floatcos(rot[0], degrees); cos[1] = floatcos(rot[1], degrees); cos[2] = floatcos(rot[2], degrees); sin[0] = floatsin(rot[0], degrees); sin[1] = floatsin(rot[1], degrees); sin[2] = floatsin(rot[2], degrees);
	rot[0] = atan2(sin[0], cos[0] * cos[1]) + rot_x; rot[1] = asin(cos[0] * sin[1]); rot[2] = atan2(cos[2] * sin[0] * sin[1] + cos[1] * sin[2], cos[1] * cos[2] - sin[0] * sin[1] * sin[2]);
	cos[0] = floatcos(rot[0], degrees); cos[1] = floatcos(rot[1], degrees); cos[2] = floatcos(rot[2], degrees); sin[0] = floatsin(rot[0], degrees); sin[1] = floatsin(rot[1], degrees); sin[2] = floatsin(rot[2], degrees);
	rot[0] = asin(cos[1] * sin[0]); rot[1] = atan2(sin[1], cos[0] * cos[1]) + rot_y; rot[2] = atan2(cos[0] * sin[2] - cos[2] * sin[0] * sin[1], cos[0] * cos[2] + sin[0] * sin[1] * sin[2]);
	X = pos[0];
	Y = pos[1];
	Z = pos[2];
	RX = rot[0];
	RY = rot[1];
 	RZ = rot[2];
}


EDIT_FloatEulerFix(&Float:rot_x, &Float:rot_y, &Float:rot_z)
{
    EDIT_FloatGetRemainder(rot_x, rot_y, rot_z);
    if((!floatcmp(rot_x, 0.0) || !floatcmp(rot_x, 360.0))
    && (!floatcmp(rot_y, 0.0) || !floatcmp(rot_y, 360.0)))
    {
        rot_y = 0.0000002;
    }
    return 1;
}

EDIT_FloatGetRemainder(&Float:rot_x, &Float:rot_y, &Float:rot_z)
{
    EDIT_FloatRemainder(rot_x, 360.0);
    EDIT_FloatRemainder(rot_y, 360.0);
    EDIT_FloatRemainder(rot_z, 360.0);
    return 1;
}

EDIT_FloatRemainder(&Float:remainder, Float:value)
{
    if(remainder >= value)
    {
        while(remainder >= value)
        {
            remainder = remainder - value;
        }
    }
    else if(remainder < 0.0)
    {
        while(remainder < 0.0)
        {
            remainder = remainder + value;
        }
    }
    return 1;
}
//-------------------------------------------------- STYLOCK --------------------------------------------------

//GetVehicleRotation Created by IllidanS4
stock GetVehicleRotation(vehicleid,&Float:rx,&Float:ry,&Float:rz){
	new Float:qw,Float:qx,Float:qy,Float:qz;
	GetVehicleRotationQuat(vehicleid,qw,qx,qy,qz);
	rx = asin(2*qy*qz-2*qx*qw);
	ry = -atan2(qx*qz+qy*qw,0.5-qx*qx-qy*qy);
	rz = -atan2(qx*qy+qz*qw,0.5-qx*qx-qz*qz);
}

forward LSR_youtube(index, response_code, data[]);
public LSR_youtube(index, response_code, data[])
{
	TextDrawHideForPlayer(index, TD_MUSIC_YT[0]);
	TextDrawHideForPlayer(index, TD_MUSIC_YT[1]);
	
	if(response_code == 200)
	{
		if(data[0] == '|' && data[1] == '[')
		{
			new start_song_pos = -1, end_song_pos = -1, delimiter_pos_info = -1, counter, tmp[yt_result];
			for(new i = 0; i != sizeof YouTube; i ++) YouTube[i] = tmp;
			
			start_song_pos = strfind(data, "|[");
			while(start_song_pos != -1)
			{
				start_song_pos = strfind(data, "|[");
				if(start_song_pos == -1) break;
				delimiter_pos_info = strfind(data, "||");
				strmid(YouTube[counter][videoID], data, start_song_pos + 2, delimiter_pos_info, 11 + 1);
				
				end_song_pos = strfind(data, "]|");
				strmid(YouTube[counter][yt_title], data, delimiter_pos_info + 2, end_song_pos, 100 + 1);
				strdel(data, 0, end_song_pos + 2);
				counter ++;
			}
			
			if(counter == 0) return SendClientMessage(index, -1, "{CCCCCC}No results were found for your search.");
			
			new dialog_title[50], dialog[120 * MAX_RESULTS], dialog_counter;
			
			for(new i = 0; i != counter; i ++)
			{
				if(isnull(YouTube[i][yt_title])) continue;
				format(playerdialog_video[index][dialog_counter][videoID], 11 + 1, "%s", YouTube[i][videoID]);
				format(playerdialog_video[index][dialog_counter][yt_title], 100 + 1, "%s", YouTube[i][yt_title]);
				format(dialog, sizeof dialog, "%s{CCCCCC}%d. %s\n", dialog, dialog_counter + 1, YouTube[i][yt_title]);
				dialog_counter ++;
			}
			format(dialog_title, sizeof dialog_title, "{CCCCCC}'%Of' results have been found", dialog_counter);
			ShowPlayerDialog(index, DIALOG_MUSIC_RESULTS, DIALOG_STYLE_LIST, dialog_title, dialog, ">>", "Cancle");
		}
		else SendClientMessage(index, -1, "{CCCCCC}The result obtained cannot be understood.");
	}
	else SendClientMessage(index, -1, "{CCCCCC}The search fails, try again or contact an administrator if the problem persists.");
	return 1;
}


SpaceFix(text[])
{
	new str[100 + 1]; format(str, sizeof str, "%s", text);
    for(new i = 0; i < strlen(str); i++) 
	{
		if(str[i] == ' ') str[i] = '+';
	}
	return str;
}

/*

	Legacy Freeroam
	adri1
	
*/

